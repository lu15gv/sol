/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void HexagonInstPrinter::printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O) {
  static const char AsmStrs[] = {
  /* 0 */ '.', 'e', 'r', 'r', 'o', 'r', 32, '"', 's', 'h', 'o', 'u', 'l', 'd', 32, 'n', 'o', 't', 32, 'e', 'm', 'i', 't', '"', 32, 0,
  /* 26 */ 'i', 'f', 32, '(', '!', 'p', '0', ')', 32, 0,
  /* 36 */ 'i', 'f', 32, '(', 'p', '0', ')', 32, 0,
  /* 45 */ 'i', 'f', 32, '(', '!', 'p', '0', '.', 'n', 'e', 'w', ')', 32, 0,
  /* 59 */ 'i', 'f', 32, '(', 'p', '0', '.', 'n', 'e', 'w', ')', 32, 0,
  /* 72 */ 'c', 'a', 'l', 'l', 32, 0,
  /* 78 */ 'j', 'u', 'm', 'p', 32, 0,
  /* 84 */ 'c', 'a', 'l', 'l', 'r', 32, 0,
  /* 91 */ 'j', 'u', 'm', 'p', 'r', 32, 0,
  /* 98 */ 'i', 'f', 32, '(', '!', 0,
  /* 104 */ '.', 'e', 'r', 'r', 'o', 'r', 32, '"', 's', 'h', 'o', 'u', 'l', 'd', 32, 'n', 'o', 't', 32, 'e', 'm', 'i', 't', '"', 0,
  /* 129 */ 't', 'r', 'a', 'p', '0', '(', '#', 0,
  /* 137 */ 't', 'r', 'a', 'p', '1', '(', '#', 0,
  /* 145 */ 'v', 'w', 'h', 'i', 's', 't', '1', '2', '8', '(', '#', 0,
  /* 157 */ 'm', 'e', 'm', 'b', '(', '#', 0,
  /* 164 */ 'm', 'e', 'm', 'd', '(', '#', 0,
  /* 171 */ 'a', 'l', 'l', 'o', 'c', 'f', 'r', 'a', 'm', 'e', '(', '#', 0,
  /* 184 */ 'p', 'a', 'u', 's', 'e', '(', '#', 0,
  /* 192 */ 'm', 'e', 'm', 'h', '(', '#', 0,
  /* 199 */ 'i', 'm', 'm', 'e', 'x', 't', '(', '#', 0,
  /* 208 */ 'm', 'e', 'm', 'w', '(', '#', 0,
  /* 215 */ 'm', 'e', 'm', 'd', '(', 'r', '2', '9', '+', '#', 0,
  /* 226 */ 'm', 'e', 'm', 'w', '(', 'r', '2', '9', '+', '#', 0,
  /* 237 */ 'm', 'e', 'm', 'b', '(', 'g', 'p', '+', '#', 0,
  /* 247 */ 'm', 'e', 'm', 'd', '(', 'g', 'p', '+', '#', 0,
  /* 257 */ 'm', 'e', 'm', 'h', '(', 'g', 'p', '+', '#', 0,
  /* 267 */ 'm', 'e', 'm', 'w', '(', 'g', 'p', '+', '#', 0,
  /* 277 */ 'i', 'f', 32, '(', 0,
  /* 282 */ 'p', '3', 32, '=', 32, 's', 'p', '1', 'l', 'o', 'o', 'p', '0', '(', 0,
  /* 297 */ 'p', '3', 32, '=', 32, 's', 'p', '2', 'l', 'o', 'o', 'p', '0', '(', 0,
  /* 312 */ 'p', '3', 32, '=', 32, 's', 'p', '3', 'l', 'o', 'o', 'p', '0', '(', 0,
  /* 327 */ 't', 'r', 'a', 'p', '1', '(', 0,
  /* 334 */ 'l', 'o', 'o', 'p', '1', '(', 0,
  /* 341 */ 'v', 't', 'r', 'a', 'n', 's', '2', 'x', '2', '(', 0,
  /* 352 */ 'v', 'w', 'h', 'i', 's', 't', '2', '5', '6', '(', 0,
  /* 363 */ 'v', 'w', 'h', 'i', 's', 't', '1', '2', '8', '(', 0,
  /* 374 */ 'd', 'c', 'c', 'l', 'e', 'a', 'n', 'a', '(', 0,
  /* 384 */ 'd', 'c', 'z', 'e', 'r', 'o', 'a', '(', 0,
  /* 393 */ 'd', 'c', 'i', 'n', 'v', 'a', '(', 0,
  /* 401 */ 'i', 'c', 'i', 'n', 'v', 'a', '(', 0,
  /* 409 */ 'd', 'c', 'c', 'l', 'e', 'a', 'n', 'i', 'n', 'v', 'a', '(', 0,
  /* 422 */ 'm', 'e', 'm', 'b', '(', 0,
  /* 428 */ 'm', 'e', 'm', 'd', '_', 'l', 'o', 'c', 'k', 'e', 'd', '(', 0,
  /* 441 */ 'm', 'e', 'm', 'w', '_', 'l', 'o', 'c', 'k', 'e', 'd', '(', 0,
  /* 454 */ 'm', 'e', 'm', 'd', '(', 0,
  /* 460 */ 't', 'r', 'a', 'c', 'e', '(', 0,
  /* 467 */ 'a', 'l', 'l', 'o', 'c', 'f', 'r', 'a', 'm', 'e', '(', 0,
  /* 479 */ 'v', 's', 'h', 'u', 'f', 'f', '(', 0,
  /* 487 */ 'l', '2', 'f', 'e', 't', 'c', 'h', '(', 0,
  /* 496 */ 'd', 'c', 'f', 'e', 't', 'c', 'h', '(', 0,
  /* 505 */ 'm', 'e', 'm', 'h', '(', 0,
  /* 511 */ 'v', 'd', 'e', 'a', 'l', '(', 0,
  /* 518 */ 'z', 32, '=', 32, 'v', 'm', 'e', 'm', '(', 0,
  /* 528 */ 'p', '0', 32, '=', 32, 'c', 'm', 'p', '.', 'e', 'q', '(', 0,
  /* 541 */ 'p', '1', 32, '=', 32, 'c', 'm', 'p', '.', 'e', 'q', '(', 0,
  /* 554 */ 'i', 'f', 32, '(', '!', 'c', 'm', 'p', '.', 'e', 'q', '(', 0,
  /* 567 */ 'i', 'f', 32, '(', 'c', 'm', 'p', '.', 'e', 'q', '(', 0,
  /* 579 */ 'v', 't', 'm', 'p', '.', 'h', 32, '=', 32, 'v', 'g', 'a', 't', 'h', 'e', 'r', '(', 0,
  /* 597 */ 'v', 't', 'm', 'p', '.', 'w', 32, '=', 32, 'v', 'g', 'a', 't', 'h', 'e', 'r', '(', 0,
  /* 615 */ 'v', 's', 'c', 'a', 't', 't', 'e', 'r', '(', 0,
  /* 625 */ 'h', 'i', 'n', 't', 'j', 'r', '(', 0,
  /* 633 */ 'p', '0', 32, '=', 32, 'c', 'm', 'p', '.', 'g', 't', '(', 0,
  /* 646 */ 'p', '1', 32, '=', 32, 'c', 'm', 'p', '.', 'g', 't', '(', 0,
  /* 659 */ 'i', 'f', 32, '(', '!', 'c', 'm', 'p', '.', 'g', 't', '(', 0,
  /* 672 */ 'i', 'f', 32, '(', 'c', 'm', 'p', '.', 'g', 't', '(', 0,
  /* 684 */ 'w', 'a', 'i', 't', '(', 0,
  /* 690 */ 'p', '0', 32, '=', 32, 't', 's', 't', 'b', 'i', 't', '(', 0,
  /* 703 */ 'p', '1', 32, '=', 32, 't', 's', 't', 'b', 'i', 't', '(', 0,
  /* 716 */ 'i', 'f', 32, '(', '!', 't', 's', 't', 'b', 'i', 't', '(', 0,
  /* 729 */ 'i', 'f', 32, '(', 't', 's', 't', 'b', 'i', 't', '(', 0,
  /* 741 */ 'v', 'h', 'i', 's', 't', '(', 0,
  /* 748 */ 'v', 'm', 'e', 'm', 'u', '(', 0,
  /* 755 */ 'p', '0', 32, '=', 32, 'c', 'm', 'p', '.', 'g', 't', 'u', '(', 0,
  /* 769 */ 'p', '1', 32, '=', 32, 'c', 'm', 'p', '.', 'g', 't', 'u', '(', 0,
  /* 783 */ 'i', 'f', 32, '(', '!', 'c', 'm', 'p', '.', 'g', 't', 'u', '(', 0,
  /* 797 */ 'i', 'f', 32, '(', 'c', 'm', 'p', '.', 'g', 't', 'u', '(', 0,
  /* 810 */ 'm', 'e', 'm', 'w', '(', 0,
  /* 816 */ 'm', 'e', 'm', 'c', 'p', 'y', '(', 0,
  /* 824 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'P', 'a', 't', 'c', 'h', 'a', 'b', 'l', 'e', 32, 'R', 'E', 'T', '.', 0,
  /* 855 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'y', 'p', 'e', 'd', 32, 'E', 'v', 'e', 'n', 't', 32, 'L', 'o', 'g', '.', 0,
  /* 879 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'C', 'u', 's', 't', 'o', 'm', 32, 'E', 'v', 'e', 'n', 't', 32, 'L', 'o', 'g', '.', 0,
  /* 904 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'n', 't', 'e', 'r', '.', 0,
  /* 927 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'a', 'i', 'l', 32, 'C', 'a', 'l', 'l', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 950 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 972 */ ':', 'e', 'n', 'd', 'l', 'o', 'o', 'p', '0', 0,
  /* 982 */ ':', 'e', 'n', 'd', 'l', 'o', 'o', 'p', '0', '1', 0,
  /* 993 */ 'i', 'f', 32, '(', '!', 'p', '0', ')', 32, 'j', 'u', 'm', 'p', 'r', 32, 'r', '3', '1', 0,
  /* 1012 */ 'i', 'f', 32, '(', 'p', '0', ')', 32, 'j', 'u', 'm', 'p', 'r', 32, 'r', '3', '1', 0,
  /* 1030 */ 'i', 'f', 32, '(', '!', 'p', '0', '.', 'n', 'e', 'w', ')', 32, 'j', 'u', 'm', 'p', 'r', ':', 'n', 't', 32, 'r', '3', '1', 0,
  /* 1056 */ 'i', 'f', 32, '(', 'p', '0', '.', 'n', 'e', 'w', ')', 32, 'j', 'u', 'm', 'p', 'r', ':', 'n', 't', 32, 'r', '3', '1', 0,
  /* 1081 */ ':', 'e', 'n', 'd', 'l', 'o', 'o', 'p', '1', 0,
  /* 1091 */ 'v', 'w', 'h', 'i', 's', 't', '2', '5', '6', 0,
  /* 1101 */ 'v', 'w', 'h', 'i', 's', 't', '1', '2', '8', 0,
  /* 1111 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 1124 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 1131 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 1141 */ 'D', 'B', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1151 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 1166 */ 'D', 'U', 'P', 'L', 'E', 'X', 0,
  /* 1173 */ 'i', 's', 'y', 'n', 'c', 0,
  /* 1179 */ 'd', 'e', 'a', 'l', 'l', 'o', 'c', 'f', 'r', 'a', 'm', 'e', 0,
  /* 1192 */ '#', 32, 'F', 'E', 'n', 't', 'r', 'y', 32, 'c', 'a', 'l', 'l', 0,
  /* 1206 */ 'i', 'f', 32, '(', '!', 'p', '0', ')', 32, 'd', 'e', 'a', 'l', 'l', 'o', 'c', '_', 'r', 'e', 't', 'u', 'r', 'n', 0,
  /* 1230 */ 'i', 'f', 32, '(', 'p', '0', ')', 32, 'd', 'e', 'a', 'l', 'l', 'o', 'c', '_', 'r', 'e', 't', 'u', 'r', 'n', 0,
  /* 1253 */ 'n', 'o', 'p', 0,
  /* 1257 */ 'b', 'a', 'r', 'r', 'i', 'e', 'r', 0,
  /* 1265 */ 'v', 'w', 'h', 'i', 's', 't', '2', '5', '6', ':', 's', 'a', 't', 0,
  /* 1279 */ 's', 'y', 'n', 'c', 'h', 't', 0,
  /* 1286 */ 'i', 'f', 32, '(', '!', 'p', '0', '.', 'n', 'e', 'w', ')', 32, 'd', 'e', 'a', 'l', 'l', 'o', 'c', '_', 'r', 'e', 't', 'u', 'r', 'n', ':', 'n', 't', 0,
  /* 1317 */ 'i', 'f', 32, '(', 'p', '0', '.', 'n', 'e', 'w', ')', 32, 'd', 'e', 'a', 'l', 'l', 'o', 'c', '_', 'r', 'e', 't', 'u', 'r', 'n', ':', 'n', 't', 0,
  /* 1347 */ 'b', 'r', 'k', 'p', 't', 0,
  /* 1353 */ 'v', 'h', 'i', 's', 't', 0,
  };

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    1132U,	// DBG_VALUE
    1142U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    1125U,	// BUNDLE
    1152U,	// LIFETIME_START
    1112U,	// LIFETIME_END
    0U,	// STACKMAP
    1193U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    905U,	// PATCHABLE_FUNCTION_ENTER
    825U,	// PATCHABLE_RET
    951U,	// PATCHABLE_FUNCTION_EXIT
    928U,	// PATCHABLE_TAIL_CALL
    880U,	// PATCHABLE_EVENT_CALL
    856U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTR_MASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    2074U,	// A2_addsp
    18458U,	// A2_iconst
    16812058U,	// A2_neg
    51226U,	// A2_not
    33624163U,	// A2_tfrf
    33640547U,	// A2_tfrfnew
    50432026U,	// A2_tfrp
    33624163U,	// A2_tfrpf
    33640547U,	// A2_tfrpfnew
    50448410U,	// A2_tfrpi
    33624342U,	// A2_tfrpt
    33640726U,	// A2_tfrptnew
    33624342U,	// A2_tfrt
    33640726U,	// A2_tfrtnew
    16910362U,	// A2_vaddb_map
    16926746U,	// A2_vsubb_map
    165914U,	// A2_zxtb
    16959514U,	// A4_boundscheck
    1U,	// ADJCALLSTACKDOWN
    1U,	// ADJCALLSTACKUP
    198682U,	// C2_cmpgei
    215066U,	// C2_cmpgeui
    231450U,	// C2_cmplt
    247834U,	// C2_cmpltu
    50432026U,	// C2_pxfer_map
    1167U,	// DUPLEX_Pseudo
    973U,	// ENDLOOP0
    983U,	// ENDLOOP01
    1082U,	// ENDLOOP1
    974U,	// J2_endloop0
    984U,	// J2_endloop01
    1083U,	// J2_endloop1
    264291U,	// J2_jumpf_nopred_map
    280675U,	// J2_jumprf_nopred_map
    280854U,	// J2_jumprt_nopred_map
    264470U,	// J2_jumpt_nopred_map
    297098U,	// J2_trap1_noregmap
    67422234U,	// L2_loadalignb_zomap
    67438618U,	// L2_loadalignh_zomap
    17123354U,	// L2_loadbsw2_zomap
    17123354U,	// L2_loadbsw4_zomap
    17139738U,	// L2_loadbzw2_zomap
    17139738U,	// L2_loadbzw4_zomap
    17156122U,	// L2_loadrb_zomap
    17172506U,	// L2_loadrd_zomap
    17188890U,	// L2_loadrh_zomap
    17205274U,	// L2_loadri_zomap
    17221658U,	// L2_loadrub_zomap
    17238042U,	// L2_loadruh_zomap
    83955811U,	// L2_ploadrbf_zomap
    83972195U,	// L2_ploadrbfnew_zomap
    83955990U,	// L2_ploadrbt_zomap
    83972374U,	// L2_ploadrbtnew_zomap
    100733027U,	// L2_ploadrdf_zomap
    100749411U,	// L2_ploadrdfnew_zomap
    100733206U,	// L2_ploadrdt_zomap
    100749590U,	// L2_ploadrdtnew_zomap
    117510243U,	// L2_ploadrhf_zomap
    117526627U,	// L2_ploadrhfnew_zomap
    117510422U,	// L2_ploadrht_zomap
    117526806U,	// L2_ploadrhtnew_zomap
    134287459U,	// L2_ploadrif_zomap
    134303843U,	// L2_ploadrifnew_zomap
    134287638U,	// L2_ploadrit_zomap
    134304022U,	// L2_ploadritnew_zomap
    151064675U,	// L2_ploadrubf_zomap
    151081059U,	// L2_ploadrubfnew_zomap
    151064854U,	// L2_ploadrubt_zomap
    151081238U,	// L2_ploadrubtnew_zomap
    167841891U,	// L2_ploadruhf_zomap
    167858275U,	// L2_ploadruhfnew_zomap
    167842070U,	// L2_ploadruht_zomap
    167858454U,	// L2_ploadruhtnew_zomap
    477607U,	// L4_add_memopb_zomap
    477690U,	// L4_add_memoph_zomap
    477995U,	// L4_add_memopw_zomap
    493991U,	// L4_and_memopb_zomap
    494074U,	// L4_and_memoph_zomap
    494379U,	// L4_and_memopw_zomap
    510375U,	// L4_iadd_memopb_zomap
    510458U,	// L4_iadd_memoph_zomap
    510763U,	// L4_iadd_memopw_zomap
    526759U,	// L4_iand_memopb_zomap
    526842U,	// L4_iand_memoph_zomap
    527147U,	// L4_iand_memopw_zomap
    543143U,	// L4_ior_memopb_zomap
    543226U,	// L4_ior_memoph_zomap
    543531U,	// L4_ior_memopw_zomap
    559527U,	// L4_isub_memopb_zomap
    559610U,	// L4_isub_memoph_zomap
    559915U,	// L4_isub_memopw_zomap
    575911U,	// L4_or_memopb_zomap
    575994U,	// L4_or_memoph_zomap
    576299U,	// L4_or_memopw_zomap
    591971U,	// L4_return_map_to_raw_f
    608355U,	// L4_return_map_to_raw_fnew_pnt
    624739U,	// L4_return_map_to_raw_fnew_pt
    592150U,	// L4_return_map_to_raw_t
    608534U,	// L4_return_map_to_raw_tnew_pnt
    624918U,	// L4_return_map_to_raw_tnew_pt
    641447U,	// L4_sub_memopb_zomap
    641530U,	// L4_sub_memoph_zomap
    641835U,	// L4_sub_memopw_zomap
    1180U,	// L6_deallocframe_map_to_raw
    1216U,	// L6_return_map_to_raw
    105U,	// LDriw_ctr
    105U,	// LDriw_pred
    185206810U,	// M2_mpysmi
    673818U,	// M2_mpyui
    202016794U,	// M2_vrcmpys_acc_s1
    202033178U,	// M2_vrcmpys_s1
    218810394U,	// M2_vrcmpys_s1rp
    0U,	// PS_aligna
    0U,	// PS_alloca
    0U,	// PS_call_nr
    0U,	// PS_crash
    0U,	// PS_false
    0U,	// PS_fi
    0U,	// PS_fia
    1U,	// PS_loadrb_pci
    1U,	// PS_loadrb_pcr
    1U,	// PS_loadrd_pci
    1U,	// PS_loadrd_pcr
    1U,	// PS_loadrh_pci
    1U,	// PS_loadrh_pcr
    1U,	// PS_loadri_pci
    1U,	// PS_loadri_pcr
    1U,	// PS_loadrub_pci
    1U,	// PS_loadrub_pcr
    1U,	// PS_loadruh_pci
    1U,	// PS_loadruh_pcr
    1U,	// PS_pselect
    0U,	// PS_qfalse
    0U,	// PS_qtrue
    1U,	// PS_storerb_pci
    1U,	// PS_storerb_pcr
    1U,	// PS_storerd_pci
    1U,	// PS_storerd_pcr
    1U,	// PS_storerf_pci
    1U,	// PS_storerf_pcr
    1U,	// PS_storerh_pci
    1U,	// PS_storerh_pcr
    1U,	// PS_storeri_pci
    1U,	// PS_storeri_pcr
    0U,	// PS_tailcall_i
    723036U,	// PS_tailcall_r
    0U,	// PS_true
    0U,	// PS_vdd0
    0U,	// PS_vloadrq_ai
    0U,	// PS_vloadrv_ai
    0U,	// PS_vloadrv_nt_ai
    0U,	// PS_vloadrw_ai
    0U,	// PS_vloadrw_nt_ai
    0U,	// PS_vmulw
    0U,	// PS_vmulw_acc
    0U,	// PS_vselect
    0U,	// PS_vstorerq_ai
    0U,	// PS_vstorerv_ai
    0U,	// PS_vstorerv_nt_ai
    0U,	// PS_vstorerw_ai
    0U,	// PS_vstorerw_nt_ai
    0U,	// PS_wselect
    739354U,	// S2_asr_i_p_rnd_goodsyntax
    739354U,	// S2_asr_i_r_rnd_goodsyntax
    755811U,	// S2_pstorerbf_zomap
    755811U,	// S2_pstorerbnewf_zomap
    755990U,	// S2_pstorerbnewt_zomap
    755990U,	// S2_pstorerbt_zomap
    772195U,	// S2_pstorerdf_zomap
    772374U,	// S2_pstorerdt_zomap
    788579U,	// S2_pstorerff_zomap
    788758U,	// S2_pstorerft_zomap
    788579U,	// S2_pstorerhf_zomap
    788579U,	// S2_pstorerhnewf_zomap
    788758U,	// S2_pstorerhnewt_zomap
    788758U,	// S2_pstorerht_zomap
    804963U,	// S2_pstorerif_zomap
    804963U,	// S2_pstorerinewf_zomap
    805142U,	// S2_pstorerinewt_zomap
    805142U,	// S2_pstorerit_zomap
    51153319U,	// S2_storerb_zomap
    235702695U,	// S2_storerbnew_zomap
    51153351U,	// S2_storerd_zomap
    252479994U,	// S2_storerf_zomap
    51153402U,	// S2_storerh_zomap
    235702778U,	// S2_storerhnew_zomap
    51153707U,	// S2_storeri_zomap
    235703083U,	// S2_storerinew_zomap
    17614874U,	// S2_tableidxb_goodsyntax
    17631258U,	// S2_tableidxd_goodsyntax
    17647642U,	// S2_tableidxh_goodsyntax
    17664026U,	// S2_tableidxw_goodsyntax
    903267U,	// S4_pstorerbfnew_zomap
    903267U,	// S4_pstorerbnewfnew_zomap
    903446U,	// S4_pstorerbnewtnew_zomap
    903446U,	// S4_pstorerbtnew_zomap
    919651U,	// S4_pstorerdfnew_zomap
    919830U,	// S4_pstorerdtnew_zomap
    936035U,	// S4_pstorerffnew_zomap
    936214U,	// S4_pstorerftnew_zomap
    936035U,	// S4_pstorerhfnew_zomap
    936035U,	// S4_pstorerhnewfnew_zomap
    936214U,	// S4_pstorerhnewtnew_zomap
    936214U,	// S4_pstorerhtnew_zomap
    952419U,	// S4_pstorerifnew_zomap
    952419U,	// S4_pstorerinewfnew_zomap
    952598U,	// S4_pstorerinewtnew_zomap
    952598U,	// S4_pstoreritnew_zomap
    969127U,	// S4_storeirb_zomap
    755811U,	// S4_storeirbf_zomap
    903267U,	// S4_storeirbfnew_zomap
    755990U,	// S4_storeirbt_zomap
    903446U,	// S4_storeirbtnew_zomap
    969210U,	// S4_storeirh_zomap
    788579U,	// S4_storeirhf_zomap
    936035U,	// S4_storeirhfnew_zomap
    788758U,	// S4_storeirht_zomap
    936214U,	// S4_storeirhtnew_zomap
    969515U,	// S4_storeiri_zomap
    804963U,	// S4_storeirif_zomap
    952419U,	// S4_storeirifnew_zomap
    805142U,	// S4_storeirit_zomap
    952598U,	// S4_storeiritnew_zomap
    185534490U,	// S5_asrhub_rnd_sat_goodsyntax
    185550874U,	// S5_vasrhrnd_goodsyntax
    297132U,	// S6_allocframe_to_raw
    105U,	// STriw_ctr
    105U,	// STriw_pred
    269453338U,	// V6_MAP_equb
    269469722U,	// V6_MAP_equb_and
    269486106U,	// V6_MAP_equb_ior
    269502490U,	// V6_MAP_equb_xor
    286230554U,	// V6_MAP_equh
    286246938U,	// V6_MAP_equh_and
    286263322U,	// V6_MAP_equh_ior
    286279706U,	// V6_MAP_equh_xor
    303007770U,	// V6_MAP_equw
    303024154U,	// V6_MAP_equw_and
    303040538U,	// V6_MAP_equw_ior
    303056922U,	// V6_MAP_equw_xor
    1083418U,	// V6_extractw_alt
    1099802U,	// V6_hi
    17893402U,	// V6_ld0
    318836835U,	// V6_ldcnp0
    318836835U,	// V6_ldcnpnt0
    318837014U,	// V6_ldcp0
    318837014U,	// V6_ldcpnt0
    335614051U,	// V6_ldnp0
    335614051U,	// V6_ldnpnt0
    353437722U,	// V6_ldnt0
    353437722U,	// V6_ldntnt0
    335614230U,	// V6_ldp0
    335614230U,	// V6_ldpnt0
    369168483U,	// V6_ldtnp0
    369168483U,	// V6_ldtnpnt0
    369168662U,	// V6_ldtp0
    369168662U,	// V6_ldtpnt0
    17909786U,	// V6_ldu0
    1148954U,	// V6_lo
    51153419U,	// V6_st0
    235702795U,	// V6_stn0
    236046859U,	// V6_stnnt0
    1181795U,	// V6_stnp0
    1181795U,	// V6_stnpnt0
    1181795U,	// V6_stnq0
    1181795U,	// V6_stnqnt0
    51497483U,	// V6_stnt0
    1181974U,	// V6_stp0
    1181974U,	// V6_stpnt0
    1181974U,	// V6_stq0
    1181974U,	// V6_stqnt0
    51153645U,	// V6_stu0
    1198179U,	// V6_stunp0
    1198358U,	// V6_stup0
    17991706U,	// V6_vabsb_alt
    387090458U,	// V6_vabsb_sat_alt
    1230874U,	// V6_vabsdiffh_alt
    1247258U,	// V6_vabsdiffub_alt
    1263642U,	// V6_vabsdiffuh_alt
    1280026U,	// V6_vabsdiffw_alt
    18073626U,	// V6_vabsh_alt
    387172378U,	// V6_vabsh_sat_alt
    1312794U,	// V6_vabsub_alt
    1329178U,	// V6_vabsuh_alt
    1345562U,	// V6_vabsuw_alt
    18139162U,	// V6_vabsw_alt
    387237914U,	// V6_vabsw_sat_alt
    16910362U,	// V6_vaddb_alt
    16910362U,	// V6_vaddb_dv_alt
    404033635U,	// V6_vaddbnq_alt
    404033814U,	// V6_vaddbq_alt
    386009114U,	// V6_vaddbsat_alt
    386009114U,	// V6_vaddbsat_dv_alt
    18171930U,	// V6_vaddh_alt
    18171930U,	// V6_vaddh_dv_alt
    420843619U,	// V6_vaddhnq_alt
    420843798U,	// V6_vaddhq_alt
    387270682U,	// V6_vaddhsat_alt
    387270682U,	// V6_vaddhsat_dv_alt
    1427482U,	// V6_vaddhw_acc_alt
    18171930U,	// V6_vaddhw_alt
    1443866U,	// V6_vaddubh_acc_alt
    18237466U,	// V6_vaddubh_alt
    387336218U,	// V6_vaddubsat_alt
    387336218U,	// V6_vaddubsat_dv_alt
    387352602U,	// V6_vadduhsat_alt
    387352602U,	// V6_vadduhsat_dv_alt
    1493018U,	// V6_vadduhw_acc_alt
    18253850U,	// V6_vadduhw_alt
    1509402U,	// V6_vadduwsat_alt
    1509402U,	// V6_vadduwsat_dv_alt
    18303002U,	// V6_vaddw_alt
    18303002U,	// V6_vaddw_dv_alt
    437751907U,	// V6_vaddwnq_alt
    437752086U,	// V6_vaddwq_alt
    387401754U,	// V6_vaddwsat_alt
    387401754U,	// V6_vaddwsat_dv_alt
    1558554U,	// V6_vandnqrt_acc_alt
    1574938U,	// V6_vandnqrt_alt
    1591322U,	// V6_vandqrt_acc_alt
    1607706U,	// V6_vandqrt_alt
    1591322U,	// V6_vandvrt_acc_alt
    1607706U,	// V6_vandvrt_alt
    1624090U,	// V6_vaslh_acc_alt
    454625306U,	// V6_vaslh_alt
    454625306U,	// V6_vaslhv_alt
    1656858U,	// V6_vaslw_acc_alt
    454658074U,	// V6_vaslw_alt
    454658074U,	// V6_vaslwv_alt
    1689626U,	// V6_vasr_into_alt
    1706010U,	// V6_vasrh_acc_alt
    453986330U,	// V6_vasrh_alt
    1722394U,	// V6_vasrhbrndsat_alt
    453969946U,	// V6_vasrhubrndsat_alt
    453969946U,	// V6_vasrhubsat_alt
    453986330U,	// V6_vasrhv_alt
    1738778U,	// V6_vasrw_acc_alt
    454739994U,	// V6_vasrw_alt
    18548762U,	// V6_vasrwh_alt
    471533594U,	// V6_vasrwhrndsat_alt
    387647514U,	// V6_vasrwhsat_alt
    1787930U,	// V6_vasrwuhsat_alt
    454739994U,	// V6_vasrwv_alt
    50432026U,	// V6_vassignp
    18581530U,	// V6_vavgb_alt
    488343578U,	// V6_vavgbrnd_alt
    18597914U,	// V6_vavgh_alt
    488359962U,	// V6_vavghrnd_alt
    18614298U,	// V6_vavgub_alt
    488376346U,	// V6_vavgubrnd_alt
    18630682U,	// V6_vavguh_alt
    488392730U,	// V6_vavguhrnd_alt
    18647066U,	// V6_vavguw_alt
    488409114U,	// V6_vavguwrnd_alt
    18663450U,	// V6_vavgw_alt
    488425498U,	// V6_vavgwrnd_alt
    1902618U,	// V6_vcl0h_alt
    1919002U,	// V6_vcl0w_alt
    1935386U,	// V6_vd0
    1935386U,	// V6_vdd0
    1951770U,	// V6_vdealb4w_alt
    1968154U,	// V6_vdealb_alt
    1984538U,	// V6_vdealh_alt
    2000922U,	// V6_vdmpybus_acc_alt
    2017306U,	// V6_vdmpybus_alt
    2000922U,	// V6_vdmpybus_dv_acc_alt
    2017306U,	// V6_vdmpybus_dv_alt
    2033690U,	// V6_vdmpyhb_acc_alt
    2050074U,	// V6_vdmpyhb_alt
    2033690U,	// V6_vdmpyhb_dv_acc_alt
    2050074U,	// V6_vdmpyhb_dv_alt
    2066458U,	// V6_vdmpyhisat_acc_alt
    2082842U,	// V6_vdmpyhisat_alt
    2066458U,	// V6_vdmpyhsat_acc_alt
    2082842U,	// V6_vdmpyhsat_alt
    505415706U,	// V6_vdmpyhsuisat_acc_alt
    505432090U,	// V6_vdmpyhsuisat_alt
    387975194U,	// V6_vdmpyhsusat_acc_alt
    387991578U,	// V6_vdmpyhsusat_alt
    2066458U,	// V6_vdmpyhvsat_acc_alt
    2082842U,	// V6_vdmpyhvsat_alt
    2131994U,	// V6_vdsaduh_acc_alt
    2148378U,	// V6_vdsaduh_alt
    1U,	// V6_vgathermh_pseudo
    1U,	// V6_vgathermhq_pseudo
    1U,	// V6_vgathermhw_pseudo
    1U,	// V6_vgathermhwq_pseudo
    1U,	// V6_vgathermw_pseudo
    1U,	// V6_vgathermwq_pseudo
    455149594U,	// V6_vlsrh_alt
    455149594U,	// V6_vlsrhv_alt
    455165978U,	// V6_vlsrw_alt
    455165978U,	// V6_vlsrwv_alt
    2197530U,	// V6_vmaxb_alt
    2213914U,	// V6_vmaxh_alt
    2230298U,	// V6_vmaxub_alt
    2246682U,	// V6_vmaxuh_alt
    2263066U,	// V6_vmaxw_alt
    2279450U,	// V6_vminb_alt
    2295834U,	// V6_vminh_alt
    2312218U,	// V6_vminub_alt
    2328602U,	// V6_vminuh_alt
    2344986U,	// V6_vminw_alt
    2361370U,	// V6_vmpabus_acc_alt
    2377754U,	// V6_vmpabus_alt
    2377754U,	// V6_vmpabusv_alt
    2394138U,	// V6_vmpabuu_acc_alt
    2410522U,	// V6_vmpabuu_alt
    2410522U,	// V6_vmpabuuv_alt
    2426906U,	// V6_vmpahb_acc_alt
    2443290U,	// V6_vmpahb_alt
    2459674U,	// V6_vmpauhb_acc_alt
    2476058U,	// V6_vmpauhb_alt
    2492442U,	// V6_vmpybus_acc_alt
    2508826U,	// V6_vmpybus_alt
    2492442U,	// V6_vmpybusv_acc_alt
    2508826U,	// V6_vmpybusv_alt
    2525210U,	// V6_vmpybv_acc_alt
    2541594U,	// V6_vmpybv_alt
    2557978U,	// V6_vmpyewuh_alt
    19351578U,	// V6_vmpyh_acc_alt
    19367962U,	// V6_vmpyh_alt
    388450330U,	// V6_vmpyhsat_acc_alt
    220694554U,	// V6_vmpyhsrs_alt
    203917338U,	// V6_vmpyhss_alt
    2607130U,	// V6_vmpyhus_acc_alt
    2623514U,	// V6_vmpyhus_alt
    19351578U,	// V6_vmpyhv_acc_alt
    19367962U,	// V6_vmpyhv_alt
    220694554U,	// V6_vmpyhvsrs_alt
    2639898U,	// V6_vmpyiewh_acc_alt
    2656282U,	// V6_vmpyiewuh_acc_alt
    2672666U,	// V6_vmpyiewuh_alt
    2689050U,	// V6_vmpyih_acc_alt
    2705434U,	// V6_vmpyih_alt
    2721818U,	// V6_vmpyihb_acc_alt
    2738202U,	// V6_vmpyihb_alt
    2754586U,	// V6_vmpyiowh_alt
    2770970U,	// V6_vmpyiwb_acc_alt
    2787354U,	// V6_vmpyiwb_alt
    2803738U,	// V6_vmpyiwh_acc_alt
    2820122U,	// V6_vmpyiwh_alt
    2836506U,	// V6_vmpyiwub_acc_alt
    2852890U,	// V6_vmpyiwub_alt
    204195866U,	// V6_vmpyowh_alt
    220973082U,	// V6_vmpyowh_rnd_alt
    522979354U,	// V6_vmpyowh_rnd_sacc_alt
    539756570U,	// V6_vmpyowh_sacc_alt
    2902042U,	// V6_vmpyub_acc_alt
    2918426U,	// V6_vmpyub_alt
    2902042U,	// V6_vmpyubv_acc_alt
    2918426U,	// V6_vmpyubv_alt
    2934810U,	// V6_vmpyuh_acc_alt
    2951194U,	// V6_vmpyuh_alt
    2934810U,	// V6_vmpyuhv_acc_alt
    2951194U,	// V6_vmpyuhv_alt
    2967578U,	// V6_vnavgb_alt
    19761178U,	// V6_vnavgh_alt
    3000346U,	// V6_vnavgub_alt
    19793946U,	// V6_vnavgw_alt
    3033114U,	// V6_vnormamth_alt
    3049498U,	// V6_vnormamtw_alt
    3065882U,	// V6_vpackeb_alt
    3082266U,	// V6_vpackeh_alt
    3098650U,	// V6_vpackhb_sat_alt
    3115034U,	// V6_vpackhub_sat_alt
    3131418U,	// V6_vpackob_alt
    3147802U,	// V6_vpackoh_alt
    3164186U,	// V6_vpackwh_sat_alt
    3180570U,	// V6_vpackwuh_sat_alt
    3196954U,	// V6_vpopcounth_alt
    556861466U,	// V6_vrmpybub_rtt_acc_alt
    556877850U,	// V6_vrmpybub_rtt_alt
    20023322U,	// V6_vrmpybus_acc_alt
    20039706U,	// V6_vrmpybus_alt
    187795482U,	// V6_vrmpybusi_acc_alt
    187811866U,	// V6_vrmpybusi_alt
    20023322U,	// V6_vrmpybusv_acc_alt
    20039706U,	// V6_vrmpybusv_alt
    3278874U,	// V6_vrmpybv_acc_alt
    3295258U,	// V6_vrmpybv_alt
    20088858U,	// V6_vrmpyub_acc_alt
    20105242U,	// V6_vrmpyub_alt
    573769754U,	// V6_vrmpyub_rtt_acc_alt
    573786138U,	// V6_vrmpyub_rtt_alt
    187861018U,	// V6_vrmpyubi_acc_alt
    187877402U,	// V6_vrmpyubi_alt
    20088858U,	// V6_vrmpyubv_acc_alt
    20105242U,	// V6_vrmpyubv_alt
    3377178U,	// V6_vrotr_alt
    3393562U,	// V6_vroundhb_alt
    3409946U,	// V6_vroundhub_alt
    3426330U,	// V6_vrounduhub_alt
    3442714U,	// V6_vrounduwuh_alt
    3459098U,	// V6_vroundwh_alt
    3475482U,	// V6_vroundwuh_alt
    188041242U,	// V6_vrsadubi_acc_alt
    188057626U,	// V6_vrsadubi_alt
    456509466U,	// V6_vsathub_alt
    3541018U,	// V6_vsatuwuh_alt
    456542234U,	// V6_vsatwh_alt
    3573786U,	// V6_vsb_alt
    3590760U,	// V6_vscattermh_add_alt
    3590760U,	// V6_vscattermh_alt
    590809366U,	// V6_vscattermhq_alt
    3590760U,	// V6_vscattermw_add_alt
    3590760U,	// V6_vscattermw_alt
    3590760U,	// V6_vscattermwh_add_alt
    3590760U,	// V6_vscattermwh_alt
    607586582U,	// V6_vscattermwhq_alt
    607586582U,	// V6_vscattermwq_alt
    3622938U,	// V6_vsh_alt
    3639322U,	// V6_vshufeh_alt
    3655706U,	// V6_vshuffb_alt
    3672090U,	// V6_vshuffeb_alt
    3688474U,	// V6_vshuffh_alt
    3704858U,	// V6_vshuffob_alt
    3721242U,	// V6_vshufoeb_alt
    3737626U,	// V6_vshufoeh_alt
    3754010U,	// V6_vshufoh_alt
    16926746U,	// V6_vsubb_alt
    16926746U,	// V6_vsubb_dv_alt
    622137443U,	// V6_vsubbnq_alt
    622137622U,	// V6_vsubbq_alt
    386025498U,	// V6_vsubbsat_alt
    386025498U,	// V6_vsubbsat_dv_alt
    20547610U,	// V6_vsubh_alt
    20547610U,	// V6_vsubh_dv_alt
    638947427U,	// V6_vsubhnq_alt
    638947606U,	// V6_vsubhq_alt
    389646362U,	// V6_vsubhsat_alt
    389646362U,	// V6_vsubhsat_dv_alt
    20547610U,	// V6_vsubhw_alt
    20563994U,	// V6_vsububh_alt
    389662746U,	// V6_vsububsat_alt
    389662746U,	// V6_vsububsat_dv_alt
    389679130U,	// V6_vsubuhsat_alt
    389679130U,	// V6_vsubuhsat_dv_alt
    20580378U,	// V6_vsubuhw_alt
    3819546U,	// V6_vsubuwsat_alt
    3819546U,	// V6_vsubuwsat_dv_alt
    20613146U,	// V6_vsubw_alt
    20613146U,	// V6_vsubw_dv_alt
    655855715U,	// V6_vsubwnq_alt
    655855894U,	// V6_vsubwq_alt
    389711898U,	// V6_vsubwsat_alt
    389711898U,	// V6_vsubwsat_dv_alt
    3852314U,	// V6_vtmpyb_acc_alt
    3868698U,	// V6_vtmpyb_alt
    3885082U,	// V6_vtmpybus_acc_alt
    3901466U,	// V6_vtmpybus_alt
    3917850U,	// V6_vtmpyhb_acc_alt
    3934234U,	// V6_vtmpyhb_alt
    3590486U,	// V6_vtran2x2_map
    3950618U,	// V6_vunpackb_alt
    3967002U,	// V6_vunpackh_alt
    3983386U,	// V6_vunpackob_alt
    3999770U,	// V6_vunpackoh_alt
    4016154U,	// V6_vunpackub_alt
    4032538U,	// V6_vunpackuh_alt
    4048922U,	// V6_vzb_alt
    4065306U,	// V6_vzh_alt
    297479U,	// V6_zld0
    4081942U,	// V6_zldp0
    297457U,	// Y2_dcfetch
    20875290U,	// A2_abs
    20875290U,	// A2_absp
    389974042U,	// A2_abssat
    2074U,	// A2_add
    2074U,	// A2_addh_h16_hh
    2074U,	// A2_addh_h16_hl
    2074U,	// A2_addh_h16_lh
    2074U,	// A2_addh_h16_ll
    2074U,	// A2_addh_h16_sat_hh
    2074U,	// A2_addh_h16_sat_hl
    2074U,	// A2_addh_h16_sat_lh
    2074U,	// A2_addh_h16_sat_ll
    2074U,	// A2_addh_l16_hl
    2074U,	// A2_addh_l16_ll
    2074U,	// A2_addh_l16_sat_hl
    2074U,	// A2_addh_l16_sat_ll
    2074U,	// A2_addi
    2074U,	// A2_addp
    2074U,	// A2_addpsat
    2074U,	// A2_addsat
    2074U,	// A2_addsph
    2074U,	// A2_addspl
    457099290U,	// A2_and
    188663834U,	// A2_andir
    457099290U,	// A2_andp
    4130842U,	// A2_aslh
    4147226U,	// A2_asrh
    675252250U,	// A2_combine_hh
    675252250U,	// A2_combine_hl
    692029466U,	// A2_combine_lh
    692029466U,	// A2_combine_ll
    188729370U,	// A2_combineii
    457148442U,	// A2_combinew
    4196378U,	// A2_max
    4196378U,	// A2_maxp
    4212762U,	// A2_maxu
    4212762U,	// A2_maxup
    4229146U,	// A2_min
    4229146U,	// A2_minp
    4245530U,	// A2_minu
    4245530U,	// A2_minup
    16812058U,	// A2_negp
    385910810U,	// A2_negsat
    1254U,	// A2_nop
    51226U,	// A2_notp
    457246746U,	// A2_or
    188811290U,	// A2_orir
    457246746U,	// A2_orp
    704712803U,	// A2_paddf
    704729187U,	// A2_paddfnew
    704712803U,	// A2_paddif
    704729187U,	// A2_paddifnew
    704712982U,	// A2_paddit
    704729366U,	// A2_padditnew
    704712982U,	// A2_paddt
    704729366U,	// A2_paddtnew
    721490019U,	// A2_pandf
    721506403U,	// A2_pandfnew
    721490198U,	// A2_pandt
    721506582U,	// A2_pandtnew
    738267235U,	// A2_porf
    738283619U,	// A2_porfnew
    738267414U,	// A2_port
    738283798U,	// A2_portnew
    755044451U,	// A2_psubf
    755060835U,	// A2_psubfnew
    755044630U,	// A2_psubt
    755061014U,	// A2_psubtnew
    771821667U,	// A2_pxorf
    771838051U,	// A2_pxorfnew
    771821846U,	// A2_pxort
    771838230U,	// A2_pxortnew
    390154266U,	// A2_roundsat
    4294682U,	// A2_sat
    4311066U,	// A2_satb
    4327450U,	// A2_sath
    4343834U,	// A2_satub
    4360218U,	// A2_satuh
    4376602U,	// A2_sub
    4376602U,	// A2_subh_h16_hh
    4376602U,	// A2_subh_h16_hl
    4376602U,	// A2_subh_h16_lh
    4376602U,	// A2_subh_h16_ll
    4376602U,	// A2_subh_h16_sat_hh
    4376602U,	// A2_subh_h16_sat_hl
    4376602U,	// A2_subh_h16_sat_lh
    4376602U,	// A2_subh_h16_sat_ll
    4376602U,	// A2_subh_l16_hl
    4376602U,	// A2_subh_l16_ll
    4376602U,	// A2_subh_l16_sat_hl
    4376602U,	// A2_subh_l16_sat_ll
    4376602U,	// A2_subp
    457377818U,	// A2_subri
    4376602U,	// A2_subsat
    18171930U,	// A2_svaddh
    387270682U,	// A2_svaddhs
    387352602U,	// A2_svadduhs
    18597914U,	// A2_svavgh
    488359962U,	// A2_svavghs
    19761178U,	// A2_svnavgh
    20547610U,	// A2_svsubh
    389646362U,	// A2_svsubhs
    389679130U,	// A2_svsubuhs
    4409370U,	// A2_swiz
    4425754U,	// A2_sxtb
    4442138U,	// A2_sxth
    4458522U,	// A2_sxtw
    50432026U,	// A2_tfr
    50432026U,	// A2_tfrcrr
    71583770U,	// A2_tfrih
    71600154U,	// A2_tfril
    50432026U,	// A2_tfrrcr
    50448410U,	// A2_tfrsi
    18073626U,	// A2_vabsh
    387172378U,	// A2_vabshsat
    18139162U,	// A2_vabsw
    387237914U,	// A2_vabswsat
    18171930U,	// A2_vaddh
    387270682U,	// A2_vaddhs
    18237466U,	// A2_vaddub
    387336218U,	// A2_vaddubs
    387352602U,	// A2_vadduhs
    18303002U,	// A2_vaddw
    387401754U,	// A2_vaddws
    18597914U,	// A2_vavgh
    790349850U,	// A2_vavghcr
    488359962U,	// A2_vavghr
    18614298U,	// A2_vavgub
    488376346U,	// A2_vavgubr
    18630682U,	// A2_vavguh
    488392730U,	// A2_vavguhr
    18647066U,	// A2_vavguw
    488409114U,	// A2_vavguwr
    18663450U,	// A2_vavgw
    790415386U,	// A2_vavgwcr
    488425498U,	// A2_vavgwr
    457492506U,	// A2_vcmpbeq
    457508890U,	// A2_vcmpbgtu
    457525274U,	// A2_vcmpheq
    457541658U,	// A2_vcmphgt
    457558042U,	// A2_vcmphgtu
    457574426U,	// A2_vcmpweq
    457590810U,	// A2_vcmpwgt
    457607194U,	// A2_vcmpwgtu
    4638746U,	// A2_vconj
    2197530U,	// A2_vmaxb
    2213914U,	// A2_vmaxh
    2230298U,	// A2_vmaxub
    2246682U,	// A2_vmaxuh
    4655130U,	// A2_vmaxuw
    2263066U,	// A2_vmaxw
    2279450U,	// A2_vminb
    2295834U,	// A2_vminh
    2312218U,	// A2_vminub
    2328602U,	// A2_vminuh
    4671514U,	// A2_vminuw
    2344986U,	// A2_vminw
    19761178U,	// A2_vnavgh
    808290330U,	// A2_vnavghcr
    472746010U,	// A2_vnavghr
    19793946U,	// A2_vnavgw
    808323098U,	// A2_vnavgwcr
    472778778U,	// A2_vnavgwr
    4687898U,	// A2_vraddub
    4704282U,	// A2_vraddub_acc
    20285466U,	// A2_vrsadub
    20269082U,	// A2_vrsadub_acc
    20547610U,	// A2_vsubh
    389646362U,	// A2_vsubhs
    20563994U,	// A2_vsubub
    389662746U,	// A2_vsububs
    389679130U,	// A2_vsubuhs
    20613146U,	// A2_vsubw
    389711898U,	// A2_vsubws
    4720666U,	// A2_xor
    4720666U,	// A2_xorp
    4737050U,	// A2_zxth
    67110938U,	// A4_addp_c
    826198042U,	// A4_andn
    826198042U,	// A4_andnp
    457738266U,	// A4_bitsplit
    189302810U,	// A4_bitspliti
    839043098U,	// A4_boundscheck_hi
    855820314U,	// A4_boundscheck_lo
    457754650U,	// A4_cmpbeq
    189319194U,	// A4_cmpbeqi
    457771034U,	// A4_cmpbgt
    189335578U,	// A4_cmpbgti
    457787418U,	// A4_cmpbgtu
    189351962U,	// A4_cmpbgtui
    457803802U,	// A4_cmpheq
    189368346U,	// A4_cmpheqi
    457820186U,	// A4_cmphgt
    189384730U,	// A4_cmphgti
    457836570U,	// A4_cmphgtu
    189401114U,	// A4_cmphgtui
    188729370U,	// A4_combineii
    457164826U,	// A4_combineir
    188712986U,	// A4_combineri
    189417498U,	// A4_cround_ri
    457852954U,	// A4_cround_rr
    297160U,	// A4_ext
    4884506U,	// A4_modwrapu
    826345498U,	// A4_orn
    826345498U,	// A4_ornp
    872484963U,	// A4_paslhf
    872501347U,	// A4_paslhfnew
    872485142U,	// A4_paslht
    872501526U,	// A4_paslhtnew
    889262179U,	// A4_pasrhf
    889278563U,	// A4_pasrhfnew
    889262358U,	// A4_pasrht
    889278742U,	// A4_pasrhtnew
    906039395U,	// A4_psxtbf
    906055779U,	// A4_psxtbfnew
    906039574U,	// A4_psxtbt
    906055958U,	// A4_psxtbtnew
    922816611U,	// A4_psxthf
    922832995U,	// A4_psxthfnew
    922816790U,	// A4_psxtht
    922833174U,	// A4_psxthtnew
    939593827U,	// A4_pzxtbf
    939610211U,	// A4_pzxtbfnew
    939594006U,	// A4_pzxtbt
    939610390U,	// A4_pzxtbtnew
    956371043U,	// A4_pzxthf
    956387427U,	// A4_pzxthfnew
    956371222U,	// A4_pzxtht
    956387606U,	// A4_pzxthtnew
    457885722U,	// A4_rcmpeq
    189450266U,	// A4_rcmpeqi
    457902106U,	// A4_rcmpneq
    189466650U,	// A4_rcmpneqi
    188827674U,	// A4_round_ri
    188827674U,	// A4_round_ri_sat
    457263130U,	// A4_round_rr
    457263130U,	// A4_round_rr_sat
    71485466U,	// A4_subp_c
    50432026U,	// A4_tfrcpp
    50432026U,	// A4_tfrpcp
    4933658U,	// A4_tlbmatch
    4950042U,	// A4_vcmpbeq_any
    189057050U,	// A4_vcmpbeqi
    457951258U,	// A4_vcmpbgt
    189515802U,	// A4_vcmpbgti
    189073434U,	// A4_vcmpbgtui
    189089818U,	// A4_vcmpheqi
    189106202U,	// A4_vcmphgti
    189122586U,	// A4_vcmphgtui
    189138970U,	// A4_vcmpweqi
    189155354U,	// A4_vcmpwgti
    189171738U,	// A4_vcmpwgtui
    4982810U,	// A4_vrmaxh
    4999194U,	// A4_vrmaxuh
    5015578U,	// A4_vrmaxuw
    5031962U,	// A4_vrmaxw
    5048346U,	// A4_vrminh
    5064730U,	// A4_vrminuh
    5081114U,	// A4_vrminuw
    5097498U,	// A4_vrminw
    3590170U,	// A5_ACS
    5113882U,	// A5_vaddhubs
    5130266U,	// A6_vcmpbeq_notany
    3590170U,	// A6_vminub_RdP
    5146650U,	// C2_all8
    457099290U,	// C2_and
    977192986U,	// C2_andn
    5163034U,	// C2_any8
    458164250U,	// C2_bitsclr
    189728794U,	// C2_bitsclri
    5195802U,	// C2_bitsset
    989925475U,	// C2_ccombinewf
    989941859U,	// C2_ccombinewnewf
    989942038U,	// C2_ccombinewnewt
    989925654U,	// C2_ccombinewt
    1006702691U,	// C2_cmoveif
    1006702870U,	// C2_cmoveit
    1006719075U,	// C2_cmovenewif
    1006719254U,	// C2_cmovenewit
    457885722U,	// C2_cmpeq
    189450266U,	// C2_cmpeqi
    457885722U,	// C2_cmpeqp
    458197018U,	// C2_cmpgt
    189761562U,	// C2_cmpgti
    458197018U,	// C2_cmpgtp
    458213402U,	// C2_cmpgtu
    189777946U,	// C2_cmpgtui
    458213402U,	// C2_cmpgtup
    5244954U,	// C2_mask
    458246170U,	// C2_mux
    189810714U,	// C2_muxii
    458246170U,	// C2_muxir
    189810714U,	// C2_muxri
    51226U,	// C2_not
    457246746U,	// C2_or
    977340442U,	// C2_orn
    50432026U,	// C2_tfrpr
    50432026U,	// C2_tfrrp
    5277722U,	// C2_vitpack
    5294106U,	// C2_vmux
    4720666U,	// C2_xor
    5310490U,	// C4_addipc
    1027524634U,	// C4_and_and
    1027524634U,	// C4_and_andn
    1044301850U,	// C4_and_or
    1044301850U,	// C4_and_orn
    458311706U,	// C4_cmplte
    189876250U,	// C4_cmpltei
    458328090U,	// C4_cmplteu
    189892634U,	// C4_cmplteui
    457902106U,	// C4_cmpneq
    189466650U,	// C4_cmpneqi
    5359642U,	// C4_fastcorner9
    5376026U,	// C4_fastcorner9_not
    458377242U,	// C4_nbitsclr
    189941786U,	// C4_nbitsclri
    5408794U,	// C4_nbitsset
    1027672090U,	// C4_or_and
    1027672090U,	// C4_or_andn
    1044449306U,	// C4_or_or
    1044449306U,	// C4_or_orn
    727113U,	// CALLProfile
    5425178U,	// CONST32
    5441562U,	// CONST64
    0U,	// DuplexIClass0
    0U,	// DuplexIClass1
    0U,	// DuplexIClass2
    0U,	// DuplexIClass3
    0U,	// DuplexIClass4
    0U,	// DuplexIClass5
    0U,	// DuplexIClass6
    0U,	// DuplexIClass7
    0U,	// DuplexIClass8
    0U,	// DuplexIClass9
    0U,	// DuplexIClassA
    0U,	// DuplexIClassB
    0U,	// DuplexIClassC
    0U,	// DuplexIClassD
    0U,	// DuplexIClassE
    0U,	// DuplexIClassF
    723036U,	// EH_RETURN_JMPR
    5457946U,	// F2_conv_d2df
    5474330U,	// F2_conv_d2sf
    22267930U,	// F2_conv_df2d
    1062455322U,	// F2_conv_df2d_chop
    5507098U,	// F2_conv_df2sf
    22300698U,	// F2_conv_df2ud
    1062488090U,	// F2_conv_df2ud_chop
    22317082U,	// F2_conv_df2uw
    1062504474U,	// F2_conv_df2uw_chop
    22333466U,	// F2_conv_df2w
    1062520858U,	// F2_conv_df2w_chop
    22349850U,	// F2_conv_sf2d
    1062537242U,	// F2_conv_sf2d_chop
    5589018U,	// F2_conv_sf2df
    22382618U,	// F2_conv_sf2ud
    1062570010U,	// F2_conv_sf2ud_chop
    22399002U,	// F2_conv_sf2uw
    1062586394U,	// F2_conv_sf2uw_chop
    22415386U,	// F2_conv_sf2w
    1062602778U,	// F2_conv_sf2w_chop
    5654554U,	// F2_conv_ud2df
    5670938U,	// F2_conv_ud2sf
    5687322U,	// F2_conv_uw2df
    5703706U,	// F2_conv_uw2sf
    5720090U,	// F2_conv_w2df
    5736474U,	// F2_conv_w2sf
    5752858U,	// F2_dfadd
    5769242U,	// F2_dfclass
    5785626U,	// F2_dfcmpeq
    5802010U,	// F2_dfcmpge
    5818394U,	// F2_dfcmpgt
    5834778U,	// F2_dfcmpuo
    1079592986U,	// F2_dfimm_n
    1096370202U,	// F2_dfimm_p
    5867546U,	// F2_dfsub
    5883930U,	// F2_sfadd
    5900314U,	// F2_sfclass
    5916698U,	// F2_sfcmpeq
    5933082U,	// F2_sfcmpge
    5949466U,	// F2_sfcmpgt
    5965850U,	// F2_sfcmpuo
    5982234U,	// F2_sffixupd
    5998618U,	// F2_sffixupn
    6015002U,	// F2_sffixupr
    22808602U,	// F2_sffma
    1113327642U,	// F2_sffma_lib
    459016218U,	// F2_sffma_sc
    22824986U,	// F2_sffms
    1113344026U,	// F2_sffms_lib
    1079805978U,	// F2_sfimm_n
    1096583194U,	// F2_sfimm_p
    3590170U,	// F2_sfinvsqrta
    6080538U,	// F2_sfmax
    6096922U,	// F2_sfmin
    6113306U,	// F2_sfmpy
    3590170U,	// F2_sfrecipa
    6129690U,	// F2_sfsub
    50432026U,	// G4_tfrgcpp
    50432026U,	// G4_tfrgcrr
    50432026U,	// G4_tfrgpcp
    50432026U,	// G4_tfrgrcr
    4474906U,	// HI
    727113U,	// J2_call
    6146147U,	// J2_callf
    723029U,	// J2_callr
    6162531U,	// J2_callrf
    6162710U,	// J2_callrt
    6146326U,	// J2_callt
    727119U,	// J2_jump
    6178915U,	// J2_jumpf
    6195299U,	// J2_jumpfnew
    6211683U,	// J2_jumpfnewpt
    6228067U,	// J2_jumpfpt
    723036U,	// J2_jumpr
    6244451U,	// J2_jumprf
    6260835U,	// J2_jumprfnew
    6277219U,	// J2_jumprfnewpt
    6293603U,	// J2_jumprfpt
    6310166U,	// J2_jumprgtez
    6326550U,	// J2_jumprgtezpt
    6342934U,	// J2_jumprltez
    6359318U,	// J2_jumprltezpt
    6375702U,	// J2_jumprnz
    6392086U,	// J2_jumprnzpt
    6244630U,	// J2_jumprt
    6261014U,	// J2_jumprtnew
    6277398U,	// J2_jumprtnewpt
    6293782U,	// J2_jumprtpt
    6408470U,	// J2_jumprz
    6424854U,	// J2_jumprzpt
    6179094U,	// J2_jumpt
    6195478U,	// J2_jumptnew
    6211862U,	// J2_jumptnewpt
    6228246U,	// J2_jumptpt
    6445347U,	// J2_loop0i
    6445347U,	// J2_loop0iext
    3594531U,	// J2_loop0r
    3594531U,	// J2_loop0rext
    6445391U,	// J2_loop1i
    6445391U,	// J2_loop1iext
    3594575U,	// J2_loop1r
    3594575U,	// J2_loop1rext
    297145U,	// J2_pause
    6445339U,	// J2_ploop1si
    3594523U,	// J2_ploop1sr
    6445354U,	// J2_ploop2si
    3594538U,	// J2_ploop2sr
    6445369U,	// J2_ploop3si
    3594553U,	// J2_ploop3sr
    297090U,	// J2_trap0
    73550152U,	// J2_trap1
    1130531371U,	// J4_cmpeq_f_jumpnv_nt
    1147308587U,	// J4_cmpeq_f_jumpnv_t
    3590673U,	// J4_cmpeq_fp0_jump_nt
    3590673U,	// J4_cmpeq_fp0_jump_t
    3590686U,	// J4_cmpeq_fp1_jump_nt
    3590686U,	// J4_cmpeq_fp1_jump_t
    1130531384U,	// J4_cmpeq_t_jumpnv_nt
    1147308600U,	// J4_cmpeq_t_jumpnv_t
    3590673U,	// J4_cmpeq_tp0_jump_nt
    3590673U,	// J4_cmpeq_tp0_jump_t
    3590686U,	// J4_cmpeq_tp1_jump_nt
    3590686U,	// J4_cmpeq_tp1_jump_t
    1130547755U,	// J4_cmpeqi_f_jumpnv_nt
    1147324971U,	// J4_cmpeqi_f_jumpnv_t
    6441489U,	// J4_cmpeqi_fp0_jump_nt
    6441489U,	// J4_cmpeqi_fp0_jump_t
    6441502U,	// J4_cmpeqi_fp1_jump_nt
    6441502U,	// J4_cmpeqi_fp1_jump_t
    1130547768U,	// J4_cmpeqi_t_jumpnv_nt
    1147324984U,	// J4_cmpeqi_t_jumpnv_t
    6441489U,	// J4_cmpeqi_tp0_jump_nt
    6441489U,	// J4_cmpeqi_tp0_jump_t
    6441502U,	// J4_cmpeqi_tp1_jump_nt
    6441502U,	// J4_cmpeqi_tp1_jump_t
    1130547755U,	// J4_cmpeqn1_f_jumpnv_nt
    1147324971U,	// J4_cmpeqn1_f_jumpnv_t
    6441489U,	// J4_cmpeqn1_fp0_jump_nt
    6441489U,	// J4_cmpeqn1_fp0_jump_t
    6441502U,	// J4_cmpeqn1_fp1_jump_nt
    6441502U,	// J4_cmpeqn1_fp1_jump_t
    1130547768U,	// J4_cmpeqn1_t_jumpnv_nt
    1147324984U,	// J4_cmpeqn1_t_jumpnv_t
    6441489U,	// J4_cmpeqn1_tp0_jump_nt
    6441489U,	// J4_cmpeqn1_tp0_jump_t
    6441502U,	// J4_cmpeqn1_tp1_jump_nt
    6441502U,	// J4_cmpeqn1_tp1_jump_t
    1130531476U,	// J4_cmpgt_f_jumpnv_nt
    1147308692U,	// J4_cmpgt_f_jumpnv_t
    3590778U,	// J4_cmpgt_fp0_jump_nt
    3590778U,	// J4_cmpgt_fp0_jump_t
    3590791U,	// J4_cmpgt_fp1_jump_nt
    3590791U,	// J4_cmpgt_fp1_jump_t
    1130531489U,	// J4_cmpgt_t_jumpnv_nt
    1147308705U,	// J4_cmpgt_t_jumpnv_t
    3590778U,	// J4_cmpgt_tp0_jump_nt
    3590778U,	// J4_cmpgt_tp0_jump_t
    3590791U,	// J4_cmpgt_tp1_jump_nt
    3590791U,	// J4_cmpgt_tp1_jump_t
    1130547860U,	// J4_cmpgti_f_jumpnv_nt
    1147325076U,	// J4_cmpgti_f_jumpnv_t
    6441594U,	// J4_cmpgti_fp0_jump_nt
    6441594U,	// J4_cmpgti_fp0_jump_t
    6441607U,	// J4_cmpgti_fp1_jump_nt
    6441607U,	// J4_cmpgti_fp1_jump_t
    1130547873U,	// J4_cmpgti_t_jumpnv_nt
    1147325089U,	// J4_cmpgti_t_jumpnv_t
    6441594U,	// J4_cmpgti_tp0_jump_nt
    6441594U,	// J4_cmpgti_tp0_jump_t
    6441607U,	// J4_cmpgti_tp1_jump_nt
    6441607U,	// J4_cmpgti_tp1_jump_t
    1130547860U,	// J4_cmpgtn1_f_jumpnv_nt
    1147325076U,	// J4_cmpgtn1_f_jumpnv_t
    6441594U,	// J4_cmpgtn1_fp0_jump_nt
    6441594U,	// J4_cmpgtn1_fp0_jump_t
    6441607U,	// J4_cmpgtn1_fp1_jump_nt
    6441607U,	// J4_cmpgtn1_fp1_jump_t
    1130547873U,	// J4_cmpgtn1_t_jumpnv_nt
    1147325089U,	// J4_cmpgtn1_t_jumpnv_t
    6441594U,	// J4_cmpgtn1_tp0_jump_nt
    6441594U,	// J4_cmpgtn1_tp0_jump_t
    6441607U,	// J4_cmpgtn1_tp1_jump_nt
    6441607U,	// J4_cmpgtn1_tp1_jump_t
    1130531600U,	// J4_cmpgtu_f_jumpnv_nt
    1147308816U,	// J4_cmpgtu_f_jumpnv_t
    3590900U,	// J4_cmpgtu_fp0_jump_nt
    3590900U,	// J4_cmpgtu_fp0_jump_t
    3590914U,	// J4_cmpgtu_fp1_jump_nt
    3590914U,	// J4_cmpgtu_fp1_jump_t
    1130531614U,	// J4_cmpgtu_t_jumpnv_nt
    1147308830U,	// J4_cmpgtu_t_jumpnv_t
    3590900U,	// J4_cmpgtu_tp0_jump_nt
    3590900U,	// J4_cmpgtu_tp0_jump_t
    3590914U,	// J4_cmpgtu_tp1_jump_nt
    3590914U,	// J4_cmpgtu_tp1_jump_t
    1130547984U,	// J4_cmpgtui_f_jumpnv_nt
    1147325200U,	// J4_cmpgtui_f_jumpnv_t
    6441716U,	// J4_cmpgtui_fp0_jump_nt
    6441716U,	// J4_cmpgtui_fp0_jump_t
    6441730U,	// J4_cmpgtui_fp1_jump_nt
    6441730U,	// J4_cmpgtui_fp1_jump_t
    1130547998U,	// J4_cmpgtui_t_jumpnv_nt
    1147325214U,	// J4_cmpgtui_t_jumpnv_t
    6441716U,	// J4_cmpgtui_tp0_jump_nt
    6441716U,	// J4_cmpgtui_tp0_jump_t
    6441730U,	// J4_cmpgtui_tp1_jump_nt
    6441730U,	// J4_cmpgtui_tp1_jump_t
    3590804U,	// J4_cmplt_f_jumpnv_nt
    3590804U,	// J4_cmplt_f_jumpnv_t
    3590817U,	// J4_cmplt_t_jumpnv_nt
    3590817U,	// J4_cmplt_t_jumpnv_t
    3590928U,	// J4_cmpltu_f_jumpnv_nt
    3590928U,	// J4_cmpltu_f_jumpnv_t
    3590942U,	// J4_cmpltu_t_jumpnv_nt
    3590942U,	// J4_cmpltu_t_jumpnv_t
    297586U,	// J4_hintjumpr
    1157744666U,	// J4_jumpseti
    1157728282U,	// J4_jumpsetr
    6490829U,	// J4_tstbit0_f_jumpnv_nt
    6507213U,	// J4_tstbit0_f_jumpnv_t
    6523571U,	// J4_tstbit0_fp0_jump_nt
    6539955U,	// J4_tstbit0_fp0_jump_t
    6556352U,	// J4_tstbit0_fp1_jump_nt
    6572736U,	// J4_tstbit0_fp1_jump_t
    6490842U,	// J4_tstbit0_t_jumpnv_nt
    6507226U,	// J4_tstbit0_t_jumpnv_t
    6589107U,	// J4_tstbit0_tp0_jump_nt
    6605491U,	// J4_tstbit0_tp0_jump_t
    6621888U,	// J4_tstbit0_tp1_jump_nt
    6638272U,	// J4_tstbit0_tp1_jump_t
    6653978U,	// L2_deallocframe
    67422234U,	// L2_loadalignb_io
    313370U,	// L2_loadalignb_pbr
    313370U,	// L2_loadalignb_pci
    313370U,	// L2_loadalignb_pcr
    313370U,	// L2_loadalignb_pi
    313370U,	// L2_loadalignb_pr
    67438618U,	// L2_loadalignh_io
    329754U,	// L2_loadalignh_pbr
    329754U,	// L2_loadalignh_pci
    329754U,	// L2_loadalignh_pcr
    329754U,	// L2_loadalignh_pi
    329754U,	// L2_loadalignh_pr
    1174751258U,	// L2_loadbsw2_io
    1191528474U,	// L2_loadbsw2_pbr
    1208305690U,	// L2_loadbsw2_pci
    1225082906U,	// L2_loadbsw2_pcr
    1208305690U,	// L2_loadbsw2_pi
    1191528474U,	// L2_loadbsw2_pr
    1174751258U,	// L2_loadbsw4_io
    1191528474U,	// L2_loadbsw4_pbr
    1208305690U,	// L2_loadbsw4_pci
    1225082906U,	// L2_loadbsw4_pcr
    1208305690U,	// L2_loadbsw4_pi
    1191528474U,	// L2_loadbsw4_pr
    1174767642U,	// L2_loadbzw2_io
    1191544858U,	// L2_loadbzw2_pbr
    1208322074U,	// L2_loadbzw2_pci
    1225099290U,	// L2_loadbzw2_pcr
    1208322074U,	// L2_loadbzw2_pi
    1191544858U,	// L2_loadbzw2_pr
    1174767642U,	// L2_loadbzw4_io
    1191544858U,	// L2_loadbzw4_pbr
    1208322074U,	// L2_loadbzw4_pci
    1225099290U,	// L2_loadbzw4_pcr
    1208322074U,	// L2_loadbzw4_pi
    1191544858U,	// L2_loadbzw4_pr
    1174784026U,	// L2_loadrb_io
    1191561242U,	// L2_loadrb_pbr
    1208338458U,	// L2_loadrb_pci
    1225115674U,	// L2_loadrb_pcr
    1208338458U,	// L2_loadrb_pi
    1191561242U,	// L2_loadrb_pr
    6670362U,	// L2_loadrbgp
    1174800410U,	// L2_loadrd_io
    1191577626U,	// L2_loadrd_pbr
    1208354842U,	// L2_loadrd_pci
    1225132058U,	// L2_loadrd_pcr
    1208354842U,	// L2_loadrd_pi
    1191577626U,	// L2_loadrd_pr
    6686746U,	// L2_loadrdgp
    1174816794U,	// L2_loadrh_io
    1191594010U,	// L2_loadrh_pbr
    1208371226U,	// L2_loadrh_pci
    1225148442U,	// L2_loadrh_pcr
    1208371226U,	// L2_loadrh_pi
    1191594010U,	// L2_loadrh_pr
    6703130U,	// L2_loadrhgp
    1174833178U,	// L2_loadri_io
    1191610394U,	// L2_loadri_pbr
    1208387610U,	// L2_loadri_pci
    1225164826U,	// L2_loadri_pcr
    1208387610U,	// L2_loadri_pi
    1191610394U,	// L2_loadri_pr
    6719514U,	// L2_loadrigp
    1174849562U,	// L2_loadrub_io
    1191626778U,	// L2_loadrub_pbr
    1208403994U,	// L2_loadrub_pci
    1225181210U,	// L2_loadrub_pcr
    1208403994U,	// L2_loadrub_pi
    1191626778U,	// L2_loadrub_pr
    6735898U,	// L2_loadrubgp
    1174865946U,	// L2_loadruh_io
    1191643162U,	// L2_loadruh_pbr
    1208420378U,	// L2_loadruh_pci
    1225197594U,	// L2_loadruh_pcr
    1208420378U,	// L2_loadruh_pi
    1191643162U,	// L2_loadruh_pr
    6752282U,	// L2_loadruhgp
    6768666U,	// L2_loadw_locked
    83955811U,	// L2_ploadrbf_io
    83959907U,	// L2_ploadrbf_pi
    83972195U,	// L2_ploadrbfnew_io
    83976291U,	// L2_ploadrbfnew_pi
    83955990U,	// L2_ploadrbt_io
    83960086U,	// L2_ploadrbt_pi
    83972374U,	// L2_ploadrbtnew_io
    83976470U,	// L2_ploadrbtnew_pi
    100733027U,	// L2_ploadrdf_io
    100737123U,	// L2_ploadrdf_pi
    100749411U,	// L2_ploadrdfnew_io
    100753507U,	// L2_ploadrdfnew_pi
    100733206U,	// L2_ploadrdt_io
    100737302U,	// L2_ploadrdt_pi
    100749590U,	// L2_ploadrdtnew_io
    100753686U,	// L2_ploadrdtnew_pi
    117510243U,	// L2_ploadrhf_io
    117514339U,	// L2_ploadrhf_pi
    117526627U,	// L2_ploadrhfnew_io
    117530723U,	// L2_ploadrhfnew_pi
    117510422U,	// L2_ploadrht_io
    117514518U,	// L2_ploadrht_pi
    117526806U,	// L2_ploadrhtnew_io
    117530902U,	// L2_ploadrhtnew_pi
    134287459U,	// L2_ploadrif_io
    134291555U,	// L2_ploadrif_pi
    134303843U,	// L2_ploadrifnew_io
    134307939U,	// L2_ploadrifnew_pi
    134287638U,	// L2_ploadrit_io
    134291734U,	// L2_ploadrit_pi
    134304022U,	// L2_ploadritnew_io
    134308118U,	// L2_ploadritnew_pi
    151064675U,	// L2_ploadrubf_io
    151068771U,	// L2_ploadrubf_pi
    151081059U,	// L2_ploadrubfnew_io
    151085155U,	// L2_ploadrubfnew_pi
    151064854U,	// L2_ploadrubt_io
    151068950U,	// L2_ploadrubt_pi
    151081238U,	// L2_ploadrubtnew_io
    151085334U,	// L2_ploadrubtnew_pi
    167841891U,	// L2_ploadruhf_io
    167845987U,	// L2_ploadruhf_pi
    167858275U,	// L2_ploadruhfnew_io
    167862371U,	// L2_ploadruhfnew_pi
    167842070U,	// L2_ploadruht_io
    167846166U,	// L2_ploadruht_pi
    167858454U,	// L2_ploadruhtnew_io
    167862550U,	// L2_ploadruhtnew_pi
    1248299431U,	// L4_add_memopb_io
    1248299514U,	// L4_add_memoph_io
    1248299819U,	// L4_add_memopw_io
    1265076647U,	// L4_and_memopb_io
    1265076730U,	// L4_and_memoph_io
    1265077035U,	// L4_and_memopw_io
    1281853863U,	// L4_iadd_memopb_io
    1281853946U,	// L4_iadd_memoph_io
    1281854251U,	// L4_iadd_memopw_io
    1298631079U,	// L4_iand_memopb_io
    1298631162U,	// L4_iand_memoph_io
    1298631467U,	// L4_iand_memopw_io
    1315408295U,	// L4_ior_memopb_io
    1315408378U,	// L4_ior_memoph_io
    1315408683U,	// L4_ior_memopw_io
    1332185511U,	// L4_isub_memopb_io
    1332185594U,	// L4_isub_memoph_io
    1332185899U,	// L4_isub_memopw_io
    313370U,	// L4_loadalignb_ap
    67422234U,	// L4_loadalignb_ur
    329754U,	// L4_loadalignh_ap
    67438618U,	// L4_loadalignh_ur
    1342523418U,	// L4_loadbsw2_ap
    1359300634U,	// L4_loadbsw2_ur
    1342523418U,	// L4_loadbsw4_ap
    1359300634U,	// L4_loadbsw4_ur
    1342539802U,	// L4_loadbzw2_ap
    1359317018U,	// L4_loadbzw2_ur
    1342539802U,	// L4_loadbzw4_ap
    1359317018U,	// L4_loadbzw4_ur
    6801434U,	// L4_loadd_locked
    1342556186U,	// L4_loadrb_ap
    1376110618U,	// L4_loadrb_rr
    1359333402U,	// L4_loadrb_ur
    1342572570U,	// L4_loadrd_ap
    1376127002U,	// L4_loadrd_rr
    1359349786U,	// L4_loadrd_ur
    1342588954U,	// L4_loadrh_ap
    1376143386U,	// L4_loadrh_rr
    1359366170U,	// L4_loadrh_ur
    1342605338U,	// L4_loadri_ap
    1376159770U,	// L4_loadri_rr
    1359382554U,	// L4_loadri_ur
    1342621722U,	// L4_loadrub_ap
    1376176154U,	// L4_loadrub_rr
    1359398938U,	// L4_loadrub_ur
    1342638106U,	// L4_loadruh_ap
    1376192538U,	// L4_loadruh_rr
    1359415322U,	// L4_loadruh_ur
    1399294375U,	// L4_or_memopb_io
    1399294458U,	// L4_or_memoph_io
    1399294763U,	// L4_or_memopw_io
    1409355875U,	// L4_ploadrbf_abs
    83955811U,	// L4_ploadrbf_rr
    1409372259U,	// L4_ploadrbfnew_abs
    83972195U,	// L4_ploadrbfnew_rr
    1409356054U,	// L4_ploadrbt_abs
    83955990U,	// L4_ploadrbt_rr
    1409372438U,	// L4_ploadrbtnew_abs
    83972374U,	// L4_ploadrbtnew_rr
    1426133091U,	// L4_ploadrdf_abs
    100733027U,	// L4_ploadrdf_rr
    1426149475U,	// L4_ploadrdfnew_abs
    100749411U,	// L4_ploadrdfnew_rr
    1426133270U,	// L4_ploadrdt_abs
    100733206U,	// L4_ploadrdt_rr
    1426149654U,	// L4_ploadrdtnew_abs
    100749590U,	// L4_ploadrdtnew_rr
    1442910307U,	// L4_ploadrhf_abs
    117510243U,	// L4_ploadrhf_rr
    1442926691U,	// L4_ploadrhfnew_abs
    117526627U,	// L4_ploadrhfnew_rr
    1442910486U,	// L4_ploadrht_abs
    117510422U,	// L4_ploadrht_rr
    1442926870U,	// L4_ploadrhtnew_abs
    117526806U,	// L4_ploadrhtnew_rr
    1459687523U,	// L4_ploadrif_abs
    134287459U,	// L4_ploadrif_rr
    1459703907U,	// L4_ploadrifnew_abs
    134303843U,	// L4_ploadrifnew_rr
    1459687702U,	// L4_ploadrit_abs
    134287638U,	// L4_ploadrit_rr
    1459704086U,	// L4_ploadritnew_abs
    134304022U,	// L4_ploadritnew_rr
    1476464739U,	// L4_ploadrubf_abs
    151064675U,	// L4_ploadrubf_rr
    1476481123U,	// L4_ploadrubfnew_abs
    151081059U,	// L4_ploadrubfnew_rr
    1476464918U,	// L4_ploadrubt_abs
    151064854U,	// L4_ploadrubt_rr
    1476481302U,	// L4_ploadrubtnew_abs
    151081238U,	// L4_ploadrubtnew_rr
    1493241955U,	// L4_ploadruhf_abs
    167841891U,	// L4_ploadruhf_rr
    1493258339U,	// L4_ploadruhfnew_abs
    167858275U,	// L4_ploadruhfnew_rr
    1493242134U,	// L4_ploadruht_abs
    167842070U,	// L4_ploadruht_rr
    1493258518U,	// L4_ploadruhtnew_abs
    167858454U,	// L4_ploadruhtnew_rr
    6817818U,	// L4_return
    1510019171U,	// L4_return_f
    1510035555U,	// L4_return_fnew_pnt
    1510035555U,	// L4_return_fnew_pt
    1510019350U,	// L4_return_t
    1510035734U,	// L4_return_tnew_pnt
    1510035734U,	// L4_return_tnew_pt
    1533512103U,	// L4_sub_memopb_io
    1533512186U,	// L4_sub_memoph_io
    1533512491U,	// L4_sub_memopw_io
    3590961U,	// L6_memcpy
    4491290U,	// LO
    459819034U,	// M2_acci
    191383578U,	// M2_accii
    6850586U,	// M2_cmaci_s0
    6866970U,	// M2_cmacr_s0
    392759322U,	// M2_cmacs_s0
    208209946U,	// M2_cmacs_s1
    1550387226U,	// M2_cmacsc_s0
    1567164442U,	// M2_cmacsc_s1
    6899738U,	// M2_cmpyi_s0
    6916122U,	// M2_cmpyr_s0
    476694554U,	// M2_cmpyrs_s0
    225036314U,	// M2_cmpyrs_s1
    1583990810U,	// M2_cmpyrsc_s0
    1600768026U,	// M2_cmpyrsc_s1
    392808474U,	// M2_cmpys_s0
    208259098U,	// M2_cmpys_s1
    1550436378U,	// M2_cmpysc_s0
    1567213594U,	// M2_cmpysc_s1
    392824858U,	// M2_cnacs_s0
    208275482U,	// M2_cnacs_s1
    1550452762U,	// M2_cnacsc_s0
    1567229978U,	// M2_cnacsc_s1
    459950106U,	// M2_dpmpyss_acc_s0
    459966490U,	// M2_dpmpyss_nac_s0
    459982874U,	// M2_dpmpyss_rnd_s0
    459982874U,	// M2_dpmpyss_s0
    459999258U,	// M2_dpmpyuu_acc_s0
    460015642U,	// M2_dpmpyuu_nac_s0
    460032026U,	// M2_dpmpyuu_s0
    459982874U,	// M2_hmmpyh_rs1
    459982874U,	// M2_hmmpyh_s1
    459982874U,	// M2_hmmpyl_rs1
    459982874U,	// M2_hmmpyl_s1
    460048410U,	// M2_maci
    191629338U,	// M2_macsin
    191612954U,	// M2_macsip
    476858394U,	// M2_mmachs_rs0
    225200154U,	// M2_mmachs_rs1
    392972314U,	// M2_mmachs_s0
    208422938U,	// M2_mmachs_s1
    476874778U,	// M2_mmacls_rs0
    225216538U,	// M2_mmacls_rs1
    392988698U,	// M2_mmacls_s0
    208439322U,	// M2_mmacls_s1
    476891162U,	// M2_mmacuhs_rs0
    225232922U,	// M2_mmacuhs_rs1
    393005082U,	// M2_mmacuhs_s0
    208455706U,	// M2_mmacuhs_s1
    476907546U,	// M2_mmaculs_rs0
    225249306U,	// M2_mmaculs_rs1
    393021466U,	// M2_mmaculs_s0
    208472090U,	// M2_mmaculs_s1
    476923930U,	// M2_mmpyh_rs0
    225265690U,	// M2_mmpyh_rs1
    393037850U,	// M2_mmpyh_s0
    208488474U,	// M2_mmpyh_s1
    476940314U,	// M2_mmpyl_rs0
    225282074U,	// M2_mmpyl_rs1
    393054234U,	// M2_mmpyl_s0
    208504858U,	// M2_mmpyl_s1
    476956698U,	// M2_mmpyuh_rs0
    225298458U,	// M2_mmpyuh_rs1
    393070618U,	// M2_mmpyuh_s0
    208521242U,	// M2_mmpyuh_s1
    476973082U,	// M2_mmpyul_rs0
    225314842U,	// M2_mmpyul_rs1
    393087002U,	// M2_mmpyul_s0
    208537626U,	// M2_mmpyul_s1
    460064794U,	// M2_mnaci
    678053914U,	// M2_mpy_acc_hh_s0
    678053914U,	// M2_mpy_acc_hh_s1
    678053914U,	// M2_mpy_acc_hl_s0
    678053914U,	// M2_mpy_acc_hl_s1
    694831130U,	// M2_mpy_acc_lh_s0
    694831130U,	// M2_mpy_acc_lh_s1
    694831130U,	// M2_mpy_acc_ll_s0
    694831130U,	// M2_mpy_acc_ll_s1
    678053914U,	// M2_mpy_acc_sat_hh_s0
    678053914U,	// M2_mpy_acc_sat_hh_s1
    678053914U,	// M2_mpy_acc_sat_hl_s0
    678053914U,	// M2_mpy_acc_sat_hl_s1
    694831130U,	// M2_mpy_acc_sat_lh_s0
    694831130U,	// M2_mpy_acc_sat_lh_s1
    694831130U,	// M2_mpy_acc_sat_ll_s0
    694831130U,	// M2_mpy_acc_sat_ll_s1
    678086682U,	// M2_mpy_hh_s0
    678086682U,	// M2_mpy_hh_s1
    678086682U,	// M2_mpy_hl_s0
    678086682U,	// M2_mpy_hl_s1
    694863898U,	// M2_mpy_lh_s0
    694863898U,	// M2_mpy_lh_s1
    694863898U,	// M2_mpy_ll_s0
    694863898U,	// M2_mpy_ll_s1
    678070298U,	// M2_mpy_nac_hh_s0
    678070298U,	// M2_mpy_nac_hh_s1
    678070298U,	// M2_mpy_nac_hl_s0
    678070298U,	// M2_mpy_nac_hl_s1
    694847514U,	// M2_mpy_nac_lh_s0
    694847514U,	// M2_mpy_nac_lh_s1
    694847514U,	// M2_mpy_nac_ll_s0
    694847514U,	// M2_mpy_nac_ll_s1
    678070298U,	// M2_mpy_nac_sat_hh_s0
    678070298U,	// M2_mpy_nac_sat_hh_s1
    678070298U,	// M2_mpy_nac_sat_hl_s0
    678070298U,	// M2_mpy_nac_sat_hl_s1
    694847514U,	// M2_mpy_nac_sat_lh_s0
    694847514U,	// M2_mpy_nac_sat_lh_s1
    694847514U,	// M2_mpy_nac_sat_ll_s0
    694847514U,	// M2_mpy_nac_sat_ll_s1
    678086682U,	// M2_mpy_rnd_hh_s0
    678086682U,	// M2_mpy_rnd_hh_s1
    678086682U,	// M2_mpy_rnd_hl_s0
    678086682U,	// M2_mpy_rnd_hl_s1
    694863898U,	// M2_mpy_rnd_lh_s0
    694863898U,	// M2_mpy_rnd_lh_s1
    694863898U,	// M2_mpy_rnd_ll_s0
    694863898U,	// M2_mpy_rnd_ll_s1
    678086682U,	// M2_mpy_sat_hh_s0
    678086682U,	// M2_mpy_sat_hh_s1
    678086682U,	// M2_mpy_sat_hl_s0
    678086682U,	// M2_mpy_sat_hl_s1
    694863898U,	// M2_mpy_sat_lh_s0
    694863898U,	// M2_mpy_sat_lh_s1
    694863898U,	// M2_mpy_sat_ll_s0
    694863898U,	// M2_mpy_sat_ll_s1
    678086682U,	// M2_mpy_sat_rnd_hh_s0
    678086682U,	// M2_mpy_sat_rnd_hh_s1
    678086682U,	// M2_mpy_sat_rnd_hl_s0
    678086682U,	// M2_mpy_sat_rnd_hl_s1
    694863898U,	// M2_mpy_sat_rnd_lh_s0
    694863898U,	// M2_mpy_sat_rnd_lh_s1
    694863898U,	// M2_mpy_sat_rnd_ll_s0
    694863898U,	// M2_mpy_sat_rnd_ll_s1
    459982874U,	// M2_mpy_up
    459982874U,	// M2_mpy_up_s1
    459982874U,	// M2_mpy_up_s1_sat
    678053914U,	// M2_mpyd_acc_hh_s0
    678053914U,	// M2_mpyd_acc_hh_s1
    678053914U,	// M2_mpyd_acc_hl_s0
    678053914U,	// M2_mpyd_acc_hl_s1
    694831130U,	// M2_mpyd_acc_lh_s0
    694831130U,	// M2_mpyd_acc_lh_s1
    694831130U,	// M2_mpyd_acc_ll_s0
    694831130U,	// M2_mpyd_acc_ll_s1
    678086682U,	// M2_mpyd_hh_s0
    678086682U,	// M2_mpyd_hh_s1
    678086682U,	// M2_mpyd_hl_s0
    678086682U,	// M2_mpyd_hl_s1
    694863898U,	// M2_mpyd_lh_s0
    694863898U,	// M2_mpyd_lh_s1
    694863898U,	// M2_mpyd_ll_s0
    694863898U,	// M2_mpyd_ll_s1
    678070298U,	// M2_mpyd_nac_hh_s0
    678070298U,	// M2_mpyd_nac_hh_s1
    678070298U,	// M2_mpyd_nac_hl_s0
    678070298U,	// M2_mpyd_nac_hl_s1
    694847514U,	// M2_mpyd_nac_lh_s0
    694847514U,	// M2_mpyd_nac_lh_s1
    694847514U,	// M2_mpyd_nac_ll_s0
    694847514U,	// M2_mpyd_nac_ll_s1
    678086682U,	// M2_mpyd_rnd_hh_s0
    678086682U,	// M2_mpyd_rnd_hh_s1
    678086682U,	// M2_mpyd_rnd_hl_s0
    678086682U,	// M2_mpyd_rnd_hl_s1
    694863898U,	// M2_mpyd_rnd_lh_s0
    694863898U,	// M2_mpyd_rnd_lh_s1
    694863898U,	// M2_mpyd_rnd_ll_s0
    694863898U,	// M2_mpyd_rnd_ll_s1
    453642266U,	// M2_mpyi
    7227418U,	// M2_mpysin
    7243802U,	// M2_mpysip
    7260186U,	// M2_mpysu_up
    678103066U,	// M2_mpyu_acc_hh_s0
    678103066U,	// M2_mpyu_acc_hh_s1
    678103066U,	// M2_mpyu_acc_hl_s0
    678103066U,	// M2_mpyu_acc_hl_s1
    694880282U,	// M2_mpyu_acc_lh_s0
    694880282U,	// M2_mpyu_acc_lh_s1
    694880282U,	// M2_mpyu_acc_ll_s0
    694880282U,	// M2_mpyu_acc_ll_s1
    678135834U,	// M2_mpyu_hh_s0
    678135834U,	// M2_mpyu_hh_s1
    678135834U,	// M2_mpyu_hl_s0
    678135834U,	// M2_mpyu_hl_s1
    694913050U,	// M2_mpyu_lh_s0
    694913050U,	// M2_mpyu_lh_s1
    694913050U,	// M2_mpyu_ll_s0
    694913050U,	// M2_mpyu_ll_s1
    678119450U,	// M2_mpyu_nac_hh_s0
    678119450U,	// M2_mpyu_nac_hh_s1
    678119450U,	// M2_mpyu_nac_hl_s0
    678119450U,	// M2_mpyu_nac_hl_s1
    694896666U,	// M2_mpyu_nac_lh_s0
    694896666U,	// M2_mpyu_nac_lh_s1
    694896666U,	// M2_mpyu_nac_ll_s0
    694896666U,	// M2_mpyu_nac_ll_s1
    460032026U,	// M2_mpyu_up
    678103066U,	// M2_mpyud_acc_hh_s0
    678103066U,	// M2_mpyud_acc_hh_s1
    678103066U,	// M2_mpyud_acc_hl_s0
    678103066U,	// M2_mpyud_acc_hl_s1
    694880282U,	// M2_mpyud_acc_lh_s0
    694880282U,	// M2_mpyud_acc_lh_s1
    694880282U,	// M2_mpyud_acc_ll_s0
    694880282U,	// M2_mpyud_acc_ll_s1
    678135834U,	// M2_mpyud_hh_s0
    678135834U,	// M2_mpyud_hh_s1
    678135834U,	// M2_mpyud_hl_s0
    678135834U,	// M2_mpyud_hl_s1
    694913050U,	// M2_mpyud_lh_s0
    694913050U,	// M2_mpyud_lh_s1
    694913050U,	// M2_mpyud_ll_s0
    694913050U,	// M2_mpyud_ll_s1
    678119450U,	// M2_mpyud_nac_hh_s0
    678119450U,	// M2_mpyud_nac_hh_s1
    678119450U,	// M2_mpyud_nac_hl_s0
    678119450U,	// M2_mpyud_nac_hl_s1
    694896666U,	// M2_mpyud_nac_lh_s0
    694896666U,	// M2_mpyud_nac_lh_s1
    694896666U,	// M2_mpyud_nac_ll_s0
    694896666U,	// M2_mpyud_nac_ll_s1
    460261402U,	// M2_nacci
    191825946U,	// M2_naccii
    7292954U,	// M2_subacc
    1230874U,	// M2_vabsdiffh
    1280026U,	// M2_vabsdiffw
    7309338U,	// M2_vcmac_s0_sat_i
    7325722U,	// M2_vcmac_s0_sat_r
    393218074U,	// M2_vcmpy_s0_sat_i
    393234458U,	// M2_vcmpy_s0_sat_r
    208668698U,	// M2_vcmpy_s1_sat_i
    208685082U,	// M2_vcmpy_s1_sat_r
    393250842U,	// M2_vdmacs_s0
    208701466U,	// M2_vdmacs_s1
    477153306U,	// M2_vdmpyrs_s0
    225495066U,	// M2_vdmpyrs_s1
    393267226U,	// M2_vdmpys_s0
    208717850U,	// M2_vdmpys_s1
    19351578U,	// M2_vmac2
    24184858U,	// M2_vmac2es
    393283610U,	// M2_vmac2es_s0
    208734234U,	// M2_vmac2es_s1
    388450330U,	// M2_vmac2s_s0
    203900954U,	// M2_vmac2s_s1
    393299994U,	// M2_vmac2su_s0
    208750618U,	// M2_vmac2su_s1
    393316378U,	// M2_vmpy2es_s0
    208767002U,	// M2_vmpy2es_s1
    388466714U,	// M2_vmpy2s_s0
    472352794U,	// M2_vmpy2s_s0pack
    203917338U,	// M2_vmpy2s_s1
    220694554U,	// M2_vmpy2s_s1pack
    393332762U,	// M2_vmpy2su_s0
    208783386U,	// M2_vmpy2su_s1
    7473178U,	// M2_vraddh
    7489562U,	// M2_vradduh
    24283162U,	// M2_vrcmaci_s0
    1618118682U,	// M2_vrcmaci_s0c
    24299546U,	// M2_vrcmacr_s0
    1618135066U,	// M2_vrcmacr_s0c
    24315930U,	// M2_vrcmpyi_s0
    1618151450U,	// M2_vrcmpyi_s0c
    24332314U,	// M2_vrcmpyr_s0
    1618167834U,	// M2_vrcmpyr_s0c
    1628080154U,	// M2_vrcmpys_acc_s1_h
    1644857370U,	// M2_vrcmpys_acc_s1_l
    1628096538U,	// M2_vrcmpys_s1_h
    1644873754U,	// M2_vrcmpys_s1_l
    1661650970U,	// M2_vrcmpys_s1rp_h
    1678428186U,	// M2_vrcmpys_s1rp_l
    7571482U,	// M2_vrmac_s0
    7587866U,	// M2_vrmpy_s0
    7604250U,	// M2_xor_xacc
    460605466U,	// M4_and_and
    829704218U,	// M4_and_andn
    7637018U,	// M4_and_or
    7653402U,	// M4_and_xor
    225773594U,	// M4_cmpyi_wh
    1601505306U,	// M4_cmpyi_whc
    225789978U,	// M4_cmpyr_wh
    1601521690U,	// M4_cmpyr_whc
    459950106U,	// M4_mac_up_s1_sat
    1702201370U,	// M4_mpyri_addi
    2074U,	// M4_mpyri_addr
    2074U,	// M4_mpyri_addr_u2
    1702201370U,	// M4_mpyrr_addi
    2074U,	// M4_mpyrr_addr
    459966490U,	// M4_nac_up_s1_sat
    460703770U,	// M4_or_and
    829802522U,	// M4_or_andn
    460720154U,	// M4_or_or
    7751706U,	// M4_or_xor
    7768090U,	// M4_pmpyw
    7784474U,	// M4_pmpyw_acc
    7800858U,	// M4_vpmpyh
    7817242U,	// M4_vpmpyh_acc
    24610842U,	// M4_vrmpyeh_acc_s0
    1719109658U,	// M4_vrmpyeh_acc_s1
    24627226U,	// M4_vrmpyeh_s0
    1719126042U,	// M4_vrmpyeh_s1
    24643610U,	// M4_vrmpyoh_acc_s0
    1719142426U,	// M4_vrmpyoh_acc_s1
    24659994U,	// M4_vrmpyoh_s0
    1719158810U,	// M4_vrmpyoh_s1
    460883994U,	// M4_xor_and
    829982746U,	// M4_xor_andn
    7915546U,	// M4_xor_or
    7604250U,	// M4_xor_xacc
    7931930U,	// M5_vdmacbsu
    7948314U,	// M5_vdmpybsu
    7964698U,	// M5_vmacbsu
    7981082U,	// M5_vmacbuu
    7997466U,	// M5_vmpybsu
    8013850U,	// M5_vmpybuu
    8030234U,	// M5_vrmacbsu
    8046618U,	// M5_vrmacbuu
    8063002U,	// M5_vrmpybsu
    8079386U,	// M5_vrmpybuu
    8095770U,	// M6_vabsdiffb
    1247258U,	// M6_vabsdiffub
    727113U,	// PS_call_stk
    723029U,	// PS_callr_nr
    723036U,	// PS_jmpret
    6244451U,	// PS_jmpretf
    6260835U,	// PS_jmpretfnew
    6277219U,	// PS_jmpretfnewpt
    6244630U,	// PS_jmprett
    6261014U,	// PS_jmprettnew
    6277398U,	// PS_jmprettnewpt
    8112154U,	// PS_loadrbabs
    8128538U,	// PS_loadrdabs
    8144922U,	// PS_loadrhabs
    8161306U,	// PS_loadriabs
    8177690U,	// PS_loadrubabs
    8194074U,	// PS_loadruhabs
    51153054U,	// PS_storerbabs
    235702430U,	// PS_storerbnewabs
    51153061U,	// PS_storerdabs
    252479681U,	// PS_storerfabs
    51153089U,	// PS_storerhabs
    235702465U,	// PS_storerhnewabs
    51153105U,	// PS_storeriabs
    235702481U,	// PS_storerinewabs
    727113U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4
    727113U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT
    727113U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT_PIC
    727113U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_PIC
    727119U,	// RESTORE_DEALLOC_RET_JMP_V4
    727119U,	// RESTORE_DEALLOC_RET_JMP_V4_EXT
    727119U,	// RESTORE_DEALLOC_RET_JMP_V4_EXT_PIC
    727119U,	// RESTORE_DEALLOC_RET_JMP_V4_PIC
    8210458U,	// S2_addasl_rrri
    73550292U,	// S2_allocframe
    192776218U,	// S2_asl_i_p
    192792602U,	// S2_asl_i_p_acc
    192808986U,	// S2_asl_i_p_and
    192825370U,	// S2_asl_i_p_nac
    192841754U,	// S2_asl_i_p_or
    192858138U,	// S2_asl_i_p_xacc
    192776218U,	// S2_asl_i_r
    192792602U,	// S2_asl_i_r_acc
    192808986U,	// S2_asl_i_r_and
    192825370U,	// S2_asl_i_r_nac
    192841754U,	// S2_asl_i_r_or
    192776218U,	// S2_asl_i_r_sat
    192858138U,	// S2_asl_i_r_xacc
    186189850U,	// S2_asl_i_vh
    186222618U,	// S2_asl_i_vw
    461211674U,	// S2_asl_r_p
    461228058U,	// S2_asl_r_p_acc
    461244442U,	// S2_asl_r_p_and
    461260826U,	// S2_asl_r_p_nac
    461277210U,	// S2_asl_r_p_or
    461293594U,	// S2_asl_r_p_xor
    461211674U,	// S2_asl_r_r
    461228058U,	// S2_asl_r_r_acc
    461244442U,	// S2_asl_r_r_and
    461260826U,	// S2_asl_r_r_nac
    461277210U,	// S2_asl_r_r_or
    461211674U,	// S2_asl_r_r_sat
    454625306U,	// S2_asl_r_vh
    454658074U,	// S2_asl_r_vw
    192874522U,	// S2_asr_i_p
    192890906U,	// S2_asr_i_p_acc
    192907290U,	// S2_asr_i_p_and
    192923674U,	// S2_asr_i_p_nac
    192940058U,	// S2_asr_i_p_or
    192874522U,	// S2_asr_i_p_rnd
    192874522U,	// S2_asr_i_r
    192890906U,	// S2_asr_i_r_acc
    192907290U,	// S2_asr_i_r_and
    192923674U,	// S2_asr_i_r_nac
    192940058U,	// S2_asr_i_r_or
    192874522U,	// S2_asr_i_r_rnd
    186304538U,	// S2_asr_i_svw_trun
    185550874U,	// S2_asr_i_vh
    186304538U,	// S2_asr_i_vw
    461309978U,	// S2_asr_r_p
    461326362U,	// S2_asr_r_p_acc
    461342746U,	// S2_asr_r_p_and
    461359130U,	// S2_asr_r_p_nac
    461375514U,	// S2_asr_r_p_or
    8407066U,	// S2_asr_r_p_xor
    461309978U,	// S2_asr_r_r
    461326362U,	// S2_asr_r_r_acc
    461342746U,	// S2_asr_r_r_and
    461359130U,	// S2_asr_r_r_nac
    461375514U,	// S2_asr_r_r_or
    461309978U,	// S2_asr_r_r_sat
    454739994U,	// S2_asr_r_svw_trun
    453986330U,	// S2_asr_r_vh
    454739994U,	// S2_asr_r_vw
    8423450U,	// S2_brev
    8423450U,	// S2_brevp
    8439834U,	// S2_cabacdecbin
    8456218U,	// S2_cl0
    8456218U,	// S2_cl0p
    8472602U,	// S2_cl1
    8472602U,	// S2_cl1p
    8488986U,	// S2_clb
    8505370U,	// S2_clbnorm
    8488986U,	// S2_clbp
    193071130U,	// S2_clrbit_i
    461506586U,	// S2_clrbit_r
    8538138U,	// S2_ct0
    8538138U,	// S2_ct0p
    8554522U,	// S2_ct1
    8554522U,	// S2_ct1p
    8570906U,	// S2_deinterleave
    193136666U,	// S2_extractu
    461572122U,	// S2_extractu_rp
    193136666U,	// S2_extractup
    461572122U,	// S2_extractup_rp
    193153050U,	// S2_insert
    461588506U,	// S2_insert_rp
    193153050U,	// S2_insertp
    461588506U,	// S2_insertp_rp
    8620058U,	// S2_interleave
    8636442U,	// S2_lfsp
    8652826U,	// S2_lsl_r_p
    8669210U,	// S2_lsl_r_p_acc
    8685594U,	// S2_lsl_r_p_and
    8701978U,	// S2_lsl_r_p_nac
    8718362U,	// S2_lsl_r_p_or
    8734746U,	// S2_lsl_r_p_xor
    8652826U,	// S2_lsl_r_r
    8669210U,	// S2_lsl_r_r_acc
    8685594U,	// S2_lsl_r_r_and
    8701978U,	// S2_lsl_r_r_nac
    8718362U,	// S2_lsl_r_r_or
    8751130U,	// S2_lsl_r_vh
    8767514U,	// S2_lsl_r_vw
    193333274U,	// S2_lsr_i_p
    193349658U,	// S2_lsr_i_p_acc
    193366042U,	// S2_lsr_i_p_and
    193382426U,	// S2_lsr_i_p_nac
    193398810U,	// S2_lsr_i_p_or
    193415194U,	// S2_lsr_i_p_xacc
    193333274U,	// S2_lsr_i_r
    193349658U,	// S2_lsr_i_r_acc
    193366042U,	// S2_lsr_i_r_and
    193382426U,	// S2_lsr_i_r_nac
    193398810U,	// S2_lsr_i_r_or
    193415194U,	// S2_lsr_i_r_xacc
    186714138U,	// S2_lsr_i_vh
    186730522U,	// S2_lsr_i_vw
    461768730U,	// S2_lsr_r_p
    461785114U,	// S2_lsr_r_p_acc
    461801498U,	// S2_lsr_r_p_and
    461817882U,	// S2_lsr_r_p_nac
    461834266U,	// S2_lsr_r_p_or
    461850650U,	// S2_lsr_r_p_xor
    461768730U,	// S2_lsr_r_r
    461785114U,	// S2_lsr_r_r_acc
    461801498U,	// S2_lsr_r_r_and
    461817882U,	// S2_lsr_r_r_nac
    461834266U,	// S2_lsr_r_r_or
    455149594U,	// S2_lsr_r_vh
    455165978U,	// S2_lsr_r_vw
    8882202U,	// S2_mask
    25675802U,	// S2_packhl
    8914970U,	// S2_parityp
    755811U,	// S2_pstorerbf_io
    1728811107U,	// S2_pstorerbf_pi
    1728958563U,	// S2_pstorerbfnew_pi
    755811U,	// S2_pstorerbnewf_io
    1728811107U,	// S2_pstorerbnewf_pi
    1728958563U,	// S2_pstorerbnewfnew_pi
    755990U,	// S2_pstorerbnewt_io
    1728811286U,	// S2_pstorerbnewt_pi
    1728958742U,	// S2_pstorerbnewtnew_pi
    755990U,	// S2_pstorerbt_io
    1728811286U,	// S2_pstorerbt_pi
    1728958742U,	// S2_pstorerbtnew_pi
    772195U,	// S2_pstorerdf_io
    1728827491U,	// S2_pstorerdf_pi
    1728974947U,	// S2_pstorerdfnew_pi
    772374U,	// S2_pstorerdt_io
    1728827670U,	// S2_pstorerdt_pi
    1728975126U,	// S2_pstorerdtnew_pi
    788579U,	// S2_pstorerff_io
    1728843875U,	// S2_pstorerff_pi
    1728991331U,	// S2_pstorerffnew_pi
    788758U,	// S2_pstorerft_io
    1728844054U,	// S2_pstorerft_pi
    1728991510U,	// S2_pstorerftnew_pi
    788579U,	// S2_pstorerhf_io
    1728843875U,	// S2_pstorerhf_pi
    1728991331U,	// S2_pstorerhfnew_pi
    788579U,	// S2_pstorerhnewf_io
    1728843875U,	// S2_pstorerhnewf_pi
    1728991331U,	// S2_pstorerhnewfnew_pi
    788758U,	// S2_pstorerhnewt_io
    1728844054U,	// S2_pstorerhnewt_pi
    1728991510U,	// S2_pstorerhnewtnew_pi
    788758U,	// S2_pstorerht_io
    1728844054U,	// S2_pstorerht_pi
    1728991510U,	// S2_pstorerhtnew_pi
    804963U,	// S2_pstorerif_io
    1728860259U,	// S2_pstorerif_pi
    1729007715U,	// S2_pstorerifnew_pi
    804963U,	// S2_pstorerinewf_io
    1728860259U,	// S2_pstorerinewf_pi
    1729007715U,	// S2_pstorerinewfnew_pi
    805142U,	// S2_pstorerinewt_io
    1728860438U,	// S2_pstorerinewt_pi
    1729007894U,	// S2_pstorerinewtnew_pi
    805142U,	// S2_pstorerit_io
    1728860438U,	// S2_pstorerit_pi
    1729007894U,	// S2_pstoreritnew_pi
    193480730U,	// S2_setbit_i
    461916186U,	// S2_setbit_r
    8947738U,	// S2_shuffeb
    8964122U,	// S2_shuffeh
    8980506U,	// S2_shuffob
    8996890U,	// S2_shuffoh
    1751615911U,	// S2_storerb_io
    1770621351U,	// S2_storerb_pbr
    1787414951U,	// S2_storerb_pci
    59378087U,	// S2_storerb_pcr
    1753860519U,	// S2_storerb_pi
    1753844135U,	// S2_storerb_pr
    51153134U,	// S2_storerbgp
    1751615911U,	// S2_storerbnew_io
    1770621351U,	// S2_storerbnew_pbr
    1787414951U,	// S2_storerbnew_pci
    243927463U,	// S2_storerbnew_pcr
    1753860519U,	// S2_storerbnew_pi
    1753844135U,	// S2_storerbnew_pr
    235702510U,	// S2_storerbnewgp
    1751615943U,	// S2_storerd_io
    1770621383U,	// S2_storerd_pbr
    1787414983U,	// S2_storerd_pci
    59378119U,	// S2_storerd_pcr
    1753860551U,	// S2_storerd_pi
    1753844167U,	// S2_storerd_pr
    51153144U,	// S2_storerdgp
    1751615994U,	// S2_storerf_io
    1770621434U,	// S2_storerf_pbr
    1787415034U,	// S2_storerf_pci
    260704762U,	// S2_storerf_pcr
    1753860602U,	// S2_storerf_pi
    1753844218U,	// S2_storerf_pr
    252479746U,	// S2_storerfgp
    1751615994U,	// S2_storerh_io
    1770621434U,	// S2_storerh_pbr
    1787415034U,	// S2_storerh_pci
    59378170U,	// S2_storerh_pcr
    1753860602U,	// S2_storerh_pi
    1753844218U,	// S2_storerh_pr
    51153154U,	// S2_storerhgp
    1751615994U,	// S2_storerhnew_io
    1770621434U,	// S2_storerhnew_pbr
    1787415034U,	// S2_storerhnew_pci
    243927546U,	// S2_storerhnew_pcr
    1753860602U,	// S2_storerhnew_pi
    1753844218U,	// S2_storerhnew_pr
    235702530U,	// S2_storerhnewgp
    1751616299U,	// S2_storeri_io
    1770621739U,	// S2_storeri_pbr
    1787415339U,	// S2_storeri_pci
    59378475U,	// S2_storeri_pcr
    1753860907U,	// S2_storeri_pi
    1753844523U,	// S2_storeri_pr
    51153164U,	// S2_storerigp
    1751616299U,	// S2_storerinew_io
    1770621739U,	// S2_storerinew_pbr
    1787415339U,	// S2_storerinew_pci
    243927851U,	// S2_storerinew_pcr
    1753860907U,	// S2_storerinew_pi
    1753844523U,	// S2_storerinew_pr
    235702540U,	// S2_storerinewgp
    1731645882U,	// S2_storew_locked
    9062426U,	// S2_svsathb
    20301850U,	// S2_svsathub
    1795999770U,	// S2_tableidxb
    1796016154U,	// S2_tableidxd
    1796032538U,	// S2_tableidxh
    1796048922U,	// S2_tableidxw
    193628186U,	// S2_togglebit_i
    462063642U,	// S2_togglebit_r
    193644570U,	// S2_tstbit_i
    462080026U,	// S2_tstbit_r
    193660954U,	// S2_valignib
    462096410U,	// S2_valignrb
    9127962U,	// S2_vcnegh
    9144346U,	// S2_vcrotate
    9160730U,	// S2_vrcnegh
    25954330U,	// S2_vrndpackwh
    395053082U,	// S2_vrndpackwhs
    9062426U,	// S2_vsathb
    9062426U,	// S2_vsathb_nopack
    20301850U,	// S2_vsathub
    20301850U,	// S2_vsathub_nopack
    20334618U,	// S2_vsatwh
    20334618U,	// S2_vsatwh_nopack
    9193498U,	// S2_vsatwuh
    9193498U,	// S2_vsatwuh_nopack
    9209882U,	// S2_vsplatrb
    9226266U,	// S2_vsplatrh
    193792026U,	// S2_vspliceib
    462227482U,	// S2_vsplicerb
    9259034U,	// S2_vsxtbh
    9275418U,	// S2_vsxthw
    26069018U,	// S2_vtrunehb
    9308186U,	// S2_vtrunewh
    26101786U,	// S2_vtrunohb
    9340954U,	// S2_vtrunowh
    9357338U,	// S2_vzxtbh
    9373722U,	// S2_vzxthw
    2074U,	// S4_addaddi
    1819641882U,	// S4_addi_asl_ri
    1836419098U,	// S4_addi_lsr_ri
    1821329434U,	// S4_andi_asl_ri
    1838106650U,	// S4_andi_lsr_ri
    9406490U,	// S4_clbaddi
    9406490U,	// S4_clbpaddi
    8505370U,	// S4_clbpnorm
    193972250U,	// S4_extract
    462407706U,	// S4_extract_rp
    193972250U,	// S4_extractp
    462407706U,	// S4_extractp_rp
    9439258U,	// S4_lsli
    194005018U,	// S4_ntstbit_i
    462440474U,	// S4_ntstbit_r
    192268314U,	// S4_or_andi
    1027672090U,	// S4_or_andix
    192284698U,	// S4_or_ori
    1821411354U,	// S4_ori_asl_ri
    1838188570U,	// S4_ori_lsr_ri
    8914970U,	// S4_parity
    59820131U,	// S4_pstorerbf_abs
    755811U,	// S4_pstorerbf_rr
    59836515U,	// S4_pstorerbfnew_abs
    903267U,	// S4_pstorerbfnew_io
    903267U,	// S4_pstorerbfnew_rr
    244369507U,	// S4_pstorerbnewf_abs
    755811U,	// S4_pstorerbnewf_rr
    244385891U,	// S4_pstorerbnewfnew_abs
    903267U,	// S4_pstorerbnewfnew_io
    903267U,	// S4_pstorerbnewfnew_rr
    244369686U,	// S4_pstorerbnewt_abs
    755990U,	// S4_pstorerbnewt_rr
    244386070U,	// S4_pstorerbnewtnew_abs
    903446U,	// S4_pstorerbnewtnew_io
    903446U,	// S4_pstorerbnewtnew_rr
    59820310U,	// S4_pstorerbt_abs
    755990U,	// S4_pstorerbt_rr
    59836694U,	// S4_pstorerbtnew_abs
    903446U,	// S4_pstorerbtnew_io
    903446U,	// S4_pstorerbtnew_rr
    9521251U,	// S4_pstorerdf_abs
    772195U,	// S4_pstorerdf_rr
    9537635U,	// S4_pstorerdfnew_abs
    919651U,	// S4_pstorerdfnew_io
    919651U,	// S4_pstorerdfnew_rr
    9521430U,	// S4_pstorerdt_abs
    772374U,	// S4_pstorerdt_rr
    9537814U,	// S4_pstorerdtnew_abs
    919830U,	// S4_pstorerdtnew_io
    919830U,	// S4_pstorerdtnew_rr
    261212259U,	// S4_pstorerff_abs
    788579U,	// S4_pstorerff_rr
    261228643U,	// S4_pstorerffnew_abs
    936035U,	// S4_pstorerffnew_io
    936035U,	// S4_pstorerffnew_rr
    261212438U,	// S4_pstorerft_abs
    788758U,	// S4_pstorerft_rr
    261228822U,	// S4_pstorerftnew_abs
    936214U,	// S4_pstorerftnew_io
    936214U,	// S4_pstorerftnew_rr
    59885667U,	// S4_pstorerhf_abs
    788579U,	// S4_pstorerhf_rr
    59902051U,	// S4_pstorerhfnew_abs
    936035U,	// S4_pstorerhfnew_io
    936035U,	// S4_pstorerhfnew_rr
    244435043U,	// S4_pstorerhnewf_abs
    788579U,	// S4_pstorerhnewf_rr
    244451427U,	// S4_pstorerhnewfnew_abs
    936035U,	// S4_pstorerhnewfnew_io
    936035U,	// S4_pstorerhnewfnew_rr
    244435222U,	// S4_pstorerhnewt_abs
    788758U,	// S4_pstorerhnewt_rr
    244451606U,	// S4_pstorerhnewtnew_abs
    936214U,	// S4_pstorerhnewtnew_io
    936214U,	// S4_pstorerhnewtnew_rr
    59885846U,	// S4_pstorerht_abs
    788758U,	// S4_pstorerht_rr
    59902230U,	// S4_pstorerhtnew_abs
    936214U,	// S4_pstorerhtnew_io
    936214U,	// S4_pstorerhtnew_rr
    59918435U,	// S4_pstorerif_abs
    804963U,	// S4_pstorerif_rr
    59934819U,	// S4_pstorerifnew_abs
    952419U,	// S4_pstorerifnew_io
    952419U,	// S4_pstorerifnew_rr
    244467811U,	// S4_pstorerinewf_abs
    804963U,	// S4_pstorerinewf_rr
    244484195U,	// S4_pstorerinewfnew_abs
    952419U,	// S4_pstorerinewfnew_io
    952419U,	// S4_pstorerinewfnew_rr
    244467990U,	// S4_pstorerinewt_abs
    805142U,	// S4_pstorerinewt_rr
    244484374U,	// S4_pstorerinewtnew_abs
    952598U,	// S4_pstorerinewtnew_io
    952598U,	// S4_pstorerinewtnew_rr
    59918614U,	// S4_pstorerit_abs
    805142U,	// S4_pstorerit_rr
    59934998U,	// S4_pstoreritnew_abs
    952598U,	// S4_pstoreritnew_io
    952598U,	// S4_pstoreritnew_rr
    1731645869U,	// S4_stored_locked
    1852279207U,	// S4_storeirb_io
    755811U,	// S4_storeirbf_io
    903267U,	// S4_storeirbfnew_io
    755990U,	// S4_storeirbt_io
    903446U,	// S4_storeirbtnew_io
    1852279290U,	// S4_storeirh_io
    788579U,	// S4_storeirhf_io
    936035U,	// S4_storeirhfnew_io
    788758U,	// S4_storeirht_io
    936214U,	// S4_storeirhtnew_io
    1852279595U,	// S4_storeiri_io
    804963U,	// S4_storeirif_io
    952419U,	// S4_storeirifnew_io
    805142U,	// S4_storeirit_io
    952598U,	// S4_storeiritnew_io
    59951527U,	// S4_storerb_ap
    59967911U,	// S4_storerb_rr
    59984295U,	// S4_storerb_ur
    244500903U,	// S4_storerbnew_ap
    244517287U,	// S4_storerbnew_rr
    244533671U,	// S4_storerbnew_ur
    59951559U,	// S4_storerd_ap
    59967943U,	// S4_storerd_rr
    59984327U,	// S4_storerd_ur
    261278202U,	// S4_storerf_ap
    261294586U,	// S4_storerf_rr
    261310970U,	// S4_storerf_ur
    59951610U,	// S4_storerh_ap
    59967994U,	// S4_storerh_rr
    59984378U,	// S4_storerh_ur
    244500986U,	// S4_storerhnew_ap
    244517370U,	// S4_storerhnew_rr
    244533754U,	// S4_storerhnew_ur
    59951915U,	// S4_storeri_ap
    59968299U,	// S4_storeri_rr
    59984683U,	// S4_storeri_ur
    244501291U,	// S4_storerinew_ap
    244517675U,	// S4_storerinew_rr
    244534059U,	// S4_storerinew_ur
    2074U,	// S4_subaddi
    1816332314U,	// S4_subi_asl_ri
    1833109530U,	// S4_subi_lsr_ri
    9668634U,	// S4_vrcrotate
    9685018U,	// S4_vrcrotate_acc
    395577370U,	// S4_vxaddsubh
    1871972378U,	// S4_vxaddsubhr
    9717786U,	// S4_vxaddsubw
    395610138U,	// S4_vxsubaddh
    1872005146U,	// S4_vxsubaddhr
    9750554U,	// S4_vxsubaddw
    185534490U,	// S5_asrhub_rnd_sat
    185534490U,	// S5_asrhub_sat
    9766938U,	// S5_popcountp
    185550874U,	// S5_vasrhrnd
    9783322U,	// S6_rol_i_p
    9799706U,	// S6_rol_i_p_acc
    9816090U,	// S6_rol_i_p_and
    9832474U,	// S6_rol_i_p_nac
    9848858U,	// S6_rol_i_p_or
    9865242U,	// S6_rol_i_p_xacc
    9783322U,	// S6_rol_i_r
    9799706U,	// S6_rol_i_r_acc
    9816090U,	// S6_rol_i_r_and
    9832474U,	// S6_rol_i_r_nac
    9848858U,	// S6_rol_i_r_or
    9865242U,	// S6_rol_i_r_xacc
    9209882U,	// S6_vsplatrbp
    462276634U,	// S6_vtrunehb_ppp
    462309402U,	// S6_vtrunohb_ppp
    2074U,	// SA1_addi
    2074U,	// SA1_addrx
    9881626U,	// SA1_addsp
    1883162650U,	// SA1_and1
    1935387U,	// SA1_clrf
    1935406U,	// SA1_clrfnew
    1935397U,	// SA1_clrt
    1935420U,	// SA1_clrtnew
    6441489U,	// SA1_cmpeqi
    9898010U,	// SA1_combine0i
    9914394U,	// SA1_combine1i
    9930778U,	// SA1_combine2i
    9947162U,	// SA1_combine3i
    1899989018U,	// SA1_combinerz
    9963546U,	// SA1_combinezr
    2074U,	// SA1_dec
    2074U,	// SA1_inc
    50448410U,	// SA1_seti
    50448410U,	// SA1_setin1
    4425754U,	// SA1_sxtb
    4442138U,	// SA1_sxth
    50432026U,	// SA1_tfr
    1916717082U,	// SA1_zxtb
    4737050U,	// SA1_zxth
    727113U,	// SAVE_REGISTERS_CALL_V4
    727113U,	// SAVE_REGISTERS_CALL_V4STK
    727113U,	// SAVE_REGISTERS_CALL_V4STK_EXT
    727113U,	// SAVE_REGISTERS_CALL_V4STK_EXT_PIC
    727113U,	// SAVE_REGISTERS_CALL_V4STK_PIC
    727113U,	// SAVE_REGISTERS_CALL_V4_EXT
    727113U,	// SAVE_REGISTERS_CALL_V4_EXT_PIC
    727113U,	// SAVE_REGISTERS_CALL_V4_PIC
    1174833178U,	// SL1_loadri_io
    1174849562U,	// SL1_loadrub_io
    1180U,	// SL2_deallocframe
    1003U,	// SL2_jumpr31
    994U,	// SL2_jumpr31_f
    1031U,	// SL2_jumpr31_fnew
    1013U,	// SL2_jumpr31_t
    1057U,	// SL2_jumpr31_tnew
    1174784026U,	// SL2_loadrb_io
    9979930U,	// SL2_loadrd_sp
    1174816794U,	// SL2_loadrh_io
    9996314U,	// SL2_loadri_sp
    1174865946U,	// SL2_loadruh_io
    1216U,	// SL2_return
    1207U,	// SL2_return_f
    1287U,	// SL2_return_fnew
    1231U,	// SL2_return_t
    1318U,	// SL2_return_tnew
    1751615911U,	// SS1_storeb_io
    1751616299U,	// SS1_storew_io
    297132U,	// SS2_allocframe
    1936165287U,	// SS2_storebi0
    1952942503U,	// SS2_storebi1
    51153112U,	// SS2_stored_sp
    1751615994U,	// SS2_storeh_io
    51153123U,	// SS2_storew_sp
    1936165675U,	// SS2_storewi0
    1952942891U,	// SS2_storewi1
    188729370U,	// TFRI64_V2_ext
    50448410U,	// TFRI64_V4
    10012698U,	// V6_extractw
    10029082U,	// V6_lvsplatb
    10045466U,	// V6_lvsplath
    10061850U,	// V6_lvsplatw
    457099290U,	// V6_pred_and
    977192986U,	// V6_pred_and_n
    51226U,	// V6_pred_not
    457246746U,	// V6_pred_or
    977340442U,	// V6_pred_or_n
    10078234U,	// V6_pred_scalar2
    10094618U,	// V6_pred_scalar2v2
    4720666U,	// V6_pred_xor
    681199642U,	// V6_shuffeqh
    1973061658U,	// V6_shuffeqw
    1175537690U,	// V6_vL32Ub_ai
    1209092122U,	// V6_vL32Ub_pi
    1192314906U,	// V6_vL32Ub_ppu
    1175521306U,	// V6_vL32b_ai
    1184548890U,	// V6_vL32b_cur_ai
    318836835U,	// V6_vL32b_cur_npred_ai
    318840931U,	// V6_vL32b_cur_npred_pi
    318840931U,	// V6_vL32b_cur_npred_ppu
    1218103322U,	// V6_vL32b_cur_pi
    1201326106U,	// V6_vL32b_cur_ppu
    318837014U,	// V6_vL32b_cur_pred_ai
    318841110U,	// V6_vL32b_cur_pred_pi
    318841110U,	// V6_vL32b_cur_pred_ppu
    335614051U,	// V6_vL32b_npred_ai
    335618147U,	// V6_vL32b_npred_pi
    335618147U,	// V6_vL32b_npred_ppu
    1175521306U,	// V6_vL32b_nt_ai
    1184548890U,	// V6_vL32b_nt_cur_ai
    318836835U,	// V6_vL32b_nt_cur_npred_ai
    318840931U,	// V6_vL32b_nt_cur_npred_pi
    318840931U,	// V6_vL32b_nt_cur_npred_ppu
    1218103322U,	// V6_vL32b_nt_cur_pi
    1201326106U,	// V6_vL32b_nt_cur_ppu
    318837014U,	// V6_vL32b_nt_cur_pred_ai
    318841110U,	// V6_vL32b_nt_cur_pred_pi
    318841110U,	// V6_vL32b_nt_cur_pred_ppu
    335614051U,	// V6_vL32b_nt_npred_ai
    335618147U,	// V6_vL32b_nt_npred_pi
    335618147U,	// V6_vL32b_nt_npred_ppu
    1209075738U,	// V6_vL32b_nt_pi
    1192298522U,	// V6_vL32b_nt_ppu
    335614230U,	// V6_vL32b_nt_pred_ai
    335618326U,	// V6_vL32b_nt_pred_pi
    335618326U,	// V6_vL32b_nt_pred_ppu
    1184565274U,	// V6_vL32b_nt_tmp_ai
    369168483U,	// V6_vL32b_nt_tmp_npred_ai
    369172579U,	// V6_vL32b_nt_tmp_npred_pi
    369172579U,	// V6_vL32b_nt_tmp_npred_ppu
    1218119706U,	// V6_vL32b_nt_tmp_pi
    1201342490U,	// V6_vL32b_nt_tmp_ppu
    369168662U,	// V6_vL32b_nt_tmp_pred_ai
    369172758U,	// V6_vL32b_nt_tmp_pred_pi
    369172758U,	// V6_vL32b_nt_tmp_pred_ppu
    1209075738U,	// V6_vL32b_pi
    1192298522U,	// V6_vL32b_ppu
    335614230U,	// V6_vL32b_pred_ai
    335618326U,	// V6_vL32b_pred_pi
    335618326U,	// V6_vL32b_pred_ppu
    1184565274U,	// V6_vL32b_tmp_ai
    369168483U,	// V6_vL32b_tmp_npred_ai
    369172579U,	// V6_vL32b_tmp_npred_pi
    369172579U,	// V6_vL32b_tmp_npred_ppu
    1218119706U,	// V6_vL32b_tmp_pi
    1201342490U,	// V6_vL32b_tmp_ppu
    369168662U,	// V6_vL32b_tmp_pred_ai
    369172758U,	// V6_vL32b_tmp_pred_pi
    369172758U,	// V6_vL32b_tmp_pred_ppu
    1751616237U,	// V6_vS32Ub_ai
    1198179U,	// V6_vS32Ub_npred_ai
    1729253475U,	// V6_vS32Ub_npred_pi
    1729253475U,	// V6_vS32Ub_npred_ppu
    1753860845U,	// V6_vS32Ub_pi
    1753844461U,	// V6_vS32Ub_ppu
    1198358U,	// V6_vS32Ub_pred_ai
    1729253654U,	// V6_vS32Ub_pred_pi
    1729253654U,	// V6_vS32Ub_pred_ppu
    1751616011U,	// V6_vS32b_ai
    1751616011U,	// V6_vS32b_new_ai
    1181795U,	// V6_vS32b_new_npred_ai
    1729237091U,	// V6_vS32b_new_npred_pi
    1729237091U,	// V6_vS32b_new_npred_ppu
    1753860619U,	// V6_vS32b_new_pi
    1753844235U,	// V6_vS32b_new_ppu
    1181974U,	// V6_vS32b_new_pred_ai
    1729237270U,	// V6_vS32b_new_pred_pi
    1729237270U,	// V6_vS32b_new_pred_ppu
    1181795U,	// V6_vS32b_npred_ai
    1729237091U,	// V6_vS32b_npred_pi
    1729237091U,	// V6_vS32b_npred_ppu
    1181795U,	// V6_vS32b_nqpred_ai
    1729237091U,	// V6_vS32b_nqpred_pi
    1729237091U,	// V6_vS32b_nqpred_ppu
    1986497035U,	// V6_vS32b_nt_ai
    1986497035U,	// V6_vS32b_nt_new_ai
    1181795U,	// V6_vS32b_nt_new_npred_ai
    1729237091U,	// V6_vS32b_nt_new_npred_pi
    1729237091U,	// V6_vS32b_nt_new_npred_ppu
    1988741643U,	// V6_vS32b_nt_new_pi
    1988725259U,	// V6_vS32b_nt_new_ppu
    1181974U,	// V6_vS32b_nt_new_pred_ai
    1729237270U,	// V6_vS32b_nt_new_pred_pi
    1729237270U,	// V6_vS32b_nt_new_pred_ppu
    1181795U,	// V6_vS32b_nt_npred_ai
    1729237091U,	// V6_vS32b_nt_npred_pi
    1729237091U,	// V6_vS32b_nt_npred_ppu
    1181795U,	// V6_vS32b_nt_nqpred_ai
    1729237091U,	// V6_vS32b_nt_nqpred_pi
    1729237091U,	// V6_vS32b_nt_nqpred_ppu
    1988741643U,	// V6_vS32b_nt_pi
    1988725259U,	// V6_vS32b_nt_ppu
    1181974U,	// V6_vS32b_nt_pred_ai
    1729237270U,	// V6_vS32b_nt_pred_pi
    1729237270U,	// V6_vS32b_nt_pred_ppu
    1181974U,	// V6_vS32b_nt_qpred_ai
    1729237270U,	// V6_vS32b_nt_qpred_pi
    1729237270U,	// V6_vS32b_nt_qpred_ppu
    1753860619U,	// V6_vS32b_pi
    1753844235U,	// V6_vS32b_ppu
    1181974U,	// V6_vS32b_pred_ai
    1729237270U,	// V6_vS32b_pred_pi
    1729237270U,	// V6_vS32b_pred_ppu
    1181974U,	// V6_vS32b_qpred_ai
    1729237270U,	// V6_vS32b_qpred_pi
    1729237270U,	// V6_vS32b_qpred_ppu
    2003274251U,	// V6_vS32b_srls_ai
    2005518859U,	// V6_vS32b_srls_pi
    2005502475U,	// V6_vS32b_srls_ppu
    2023442458U,	// V6_vabsb
    2040219674U,	// V6_vabsb_sat
    681281562U,	// V6_vabsdiffh
    10209306U,	// V6_vabsdiffub
    295405594U,	// V6_vabsdiffuh
    10225690U,	// V6_vabsdiffw
    2057062426U,	// V6_vabsh
    2073839642U,	// V6_vabsh_sat
    2090633242U,	// V6_vabsw
    2107410458U,	// V6_vabsw_sat
    2023540762U,	// V6_vaddb
    2023540762U,	// V6_vaddb_dv
    402722915U,	// V6_vaddbnq
    402723094U,	// V6_vaddbq
    2040317978U,	// V6_vaddbsat
    2040317978U,	// V6_vaddbsat_dv
    77400090U,	// V6_vaddcarry
    2124236826U,	// V6_vaddcarryo
    10291226U,	// V6_vaddcarrysat
    10323994U,	// V6_vaddclbh
    10340378U,	// V6_vaddclbw
    681445402U,	// V6_vaddh
    681445402U,	// V6_vaddh_dv
    419500131U,	// V6_vaddhnq
    419500310U,	// V6_vaddhq
    681445402U,	// V6_vaddhsat
    681445402U,	// V6_vaddhsat_dv
    10291226U,	// V6_vaddhw
    681461786U,	// V6_vaddhw_acc
    278792218U,	// V6_vaddubh
    10389530U,	// V6_vaddubh_acc
    2141112346U,	// V6_vaddubsat
    2141112346U,	// V6_vaddubsat_dv
    2040449050U,	// V6_vaddububb_sat
    10422298U,	// V6_vadduhsat
    10422298U,	// V6_vadduhsat_dv
    10291226U,	// V6_vadduhw
    295585818U,	// V6_vadduhw_acc
    10438682U,	// V6_vadduwsat
    10438682U,	// V6_vadduwsat_dv
    10291226U,	// V6_vaddw
    10291226U,	// V6_vaddw_dv
    436277347U,	// V6_vaddwnq
    436277526U,	// V6_vaddwq
    10291226U,	// V6_vaddwsat
    10291226U,	// V6_vaddwsat_dv
    463439898U,	// V6_valignb
    195004442U,	// V6_valignbi
    10471450U,	// V6_vand
    10487834U,	// V6_vandnqrt
    10504218U,	// V6_vandnqrt_acc
    10471450U,	// V6_vandqrt
    10520602U,	// V6_vandqrt_acc
    10487834U,	// V6_vandvnqv
    10471450U,	// V6_vandvqv
    10471450U,	// V6_vandvrt
    10520602U,	// V6_vandvrt_acc
    27314202U,	// V6_vaslh
    10553370U,	// V6_vaslh_acc
    2057357338U,	// V6_vaslhv
    27346970U,	// V6_vaslw
    10586138U,	// V6_vaslw_acc
    2090944538U,	// V6_vaslwv
    10602522U,	// V6_vasr_into
    681707546U,	// V6_vasrh
    10635290U,	// V6_vasrh_acc
    480413722U,	// V6_vasrhbrndsat
    396527642U,	// V6_vasrhbsat
    681756698U,	// V6_vasrhubrndsat
    681756698U,	// V6_vasrhubsat
    681707546U,	// V6_vasrhv
    295880730U,	// V6_vasruhubrndsat
    295880730U,	// V6_vasruhubsat
    312674330U,	// V6_vasruwuhrndsat
    312674330U,	// V6_vasruwuhsat
    27478042U,	// V6_vasrw
    10717210U,	// V6_vasrw_acc
    1973553178U,	// V6_vasrwh
    1973553178U,	// V6_vasrwhrndsat
    1973553178U,	// V6_vasrwhsat
    1973618714U,	// V6_vasrwuhrndsat
    1973618714U,	// V6_vasrwuhsat
    2091075610U,	// V6_vasrwv
    50432026U,	// V6_vassign
    2023999514U,	// V6_vavgb
    2158217242U,	// V6_vavgbrnd
    2057570330U,	// V6_vavgh
    2175010842U,	// V6_vavghrnd
    581191706U,	// V6_vavgub
    2191804442U,	// V6_vavgubrnd
    2208598042U,	// V6_vavguh
    2225375258U,	// V6_vavguhrnd
    2242168858U,	// V6_vavguw
    2258946074U,	// V6_vavguwrnd
    2091190298U,	// V6_vavgw
    2275739674U,	// V6_vavgwrnd
    2281771286U,	// V6_vccombine
    10831898U,	// V6_vcl0h
    10848282U,	// V6_vcl0w
    33624342U,	// V6_vcmov
    10864666U,	// V6_vcombine
    3590656U,	// V6_vdeal
    10881050U,	// V6_vdealb
    10897434U,	// V6_vdealb4w
    10913818U,	// V6_vdealh
    10930202U,	// V6_vdealvdd
    10946586U,	// V6_vdelta
    10962970U,	// V6_vdmpybus
    10979354U,	// V6_vdmpybus_acc
    10962970U,	// V6_vdmpybus_dv
    10979354U,	// V6_vdmpybus_dv_acc
    2024261658U,	// V6_vdmpyhb
    2024278042U,	// V6_vdmpyhb_acc
    2024261658U,	// V6_vdmpyhb_dv
    2024278042U,	// V6_vdmpyhb_dv_acc
    2074593306U,	// V6_vdmpyhisat
    2074609690U,	// V6_vdmpyhisat_acc
    2074593306U,	// V6_vdmpyhsat
    2074609690U,	// V6_vdmpyhsat_acc
    2309474330U,	// V6_vdmpyhsuisat
    2309490714U,	// V6_vdmpyhsuisat_acc
    2326251546U,	// V6_vdmpyhsusat
    2326267930U,	// V6_vdmpyhsusat_acc
    2074593306U,	// V6_vdmpyhvsat
    2074609690U,	// V6_vdmpyhvsat_acc
    11028506U,	// V6_vdsaduh
    11044890U,	// V6_vdsaduh_acc
    554666010U,	// V6_veqb
    554682394U,	// V6_veqb_and
    554698778U,	// V6_veqb_or
    554715162U,	// V6_veqb_xor
    672106522U,	// V6_veqh
    672122906U,	// V6_veqh_and
    672139290U,	// V6_veqh_or
    672155674U,	// V6_veqh_xor
    1963952154U,	// V6_veqw
    1963968538U,	// V6_veqw_and
    1963984922U,	// V6_veqw_or
    1964001306U,	// V6_veqw_xor
    3590724U,	// V6_vgathermh
    2343094550U,	// V6_vgathermhq
    3590724U,	// V6_vgathermhw
    2359871766U,	// V6_vgathermhwq
    3590742U,	// V6_vgathermw
    11077910U,	// V6_vgathermwq
    564742170U,	// V6_vgtb
    564758554U,	// V6_vgtb_and
    564774938U,	// V6_vgtb_or
    564791322U,	// V6_vgtb_xor
    682182682U,	// V6_vgth
    682199066U,	// V6_vgth_and
    682215450U,	// V6_vgth_or
    682231834U,	// V6_vgth_xor
    279529498U,	// V6_vgtub
    279545882U,	// V6_vgtub_and
    279562266U,	// V6_vgtub_or
    279578650U,	// V6_vgtub_xor
    296306714U,	// V6_vgtuh
    296323098U,	// V6_vgtuh_and
    296339482U,	// V6_vgtuh_or
    296355866U,	// V6_vgtuh_xor
    313083930U,	// V6_vgtuw
    313100314U,	// V6_vgtuw_and
    313116698U,	// V6_vgtuw_or
    313133082U,	// V6_vgtuw_xor
    1974028314U,	// V6_vgtw
    1974044698U,	// V6_vgtw_and
    1974061082U,	// V6_vgtw_or
    1974077466U,	// V6_vgtw_xor
    1354U,	// V6_vhist
    297702U,	// V6_vhistq
    11159578U,	// V6_vinsertwr
    464160794U,	// V6_vlalignb
    195725338U,	// V6_vlalignbi
    11192346U,	// V6_vlsrb
    11208730U,	// V6_vlsrh
    11225114U,	// V6_vlsrhv
    11241498U,	// V6_vlsrw
    11257882U,	// V6_vlsrwv
    11274266U,	// V6_vlut4
    564938778U,	// V6_vlutvvb
    564938778U,	// V6_vlutvvb_nm
    564955162U,	// V6_vlutvvb_oracc
    2376894490U,	// V6_vlutvvb_oracci
    2376878106U,	// V6_vlutvvbi
    682412058U,	// V6_vlutvwh
    682412058U,	// V6_vlutvwh_nm
    682428442U,	// V6_vlutvwh_oracc
    2393704474U,	// V6_vlutvwh_oracci
    2393688090U,	// V6_vlutvwhi
    11356186U,	// V6_vmaxb
    11372570U,	// V6_vmaxh
    11388954U,	// V6_vmaxub
    11405338U,	// V6_vmaxuh
    11421722U,	// V6_vmaxw
    11438106U,	// V6_vminb
    11454490U,	// V6_vminh
    11470874U,	// V6_vminub
    11487258U,	// V6_vminuh
    11503642U,	// V6_vminw
    279955482U,	// V6_vmpabus
    2024802330U,	// V6_vmpabus_acc
    279955482U,	// V6_vmpabusv
    279955482U,	// V6_vmpabuu
    581961754U,	// V6_vmpabuu_acc
    279955482U,	// V6_vmpabuuv
    682641434U,	// V6_vmpahb
    682657818U,	// V6_vmpahb_acc
    682608666U,	// V6_vmpahhsat
    296765466U,	// V6_vmpauhb
    296781850U,	// V6_vmpauhb_acc
    682608666U,	// V6_vmpauhuhsat
    11585562U,	// V6_vmpsuhuhsat
    280037402U,	// V6_vmpybus
    280053786U,	// V6_vmpybus_acc
    280037402U,	// V6_vmpybusv
    280053786U,	// V6_vmpybusv_acc
    565250074U,	// V6_vmpybv
    565266458U,	// V6_vmpybv_acc
    11634714U,	// V6_vmpyewuh
    11651098U,	// V6_vmpyewuh_64
    2058487834U,	// V6_vmpyh
    2058504218U,	// V6_vmpyh_acc
    2075281434U,	// V6_vmpyhsat_acc
    682690586U,	// V6_vmpyhsrs
    682690586U,	// V6_vmpyhss
    2209482778U,	// V6_vmpyhus
    2209499162U,	// V6_vmpyhus_acc
    2058487834U,	// V6_vmpyhv
    2058504218U,	// V6_vmpyhv_acc
    682690586U,	// V6_vmpyhvsrs
    11700250U,	// V6_vmpyieoh
    2058536986U,	// V6_vmpyiewh_acc
    11733018U,	// V6_vmpyiewuh
    2209531930U,	// V6_vmpyiewuh_acc
    2058569754U,	// V6_vmpyih
    2058586138U,	// V6_vmpyih_acc
    2025015322U,	// V6_vmpyihb
    2025031706U,	// V6_vmpyihb_acc
    11782170U,	// V6_vmpyiowh
    2025064474U,	// V6_vmpyiwb
    2025080858U,	// V6_vmpyiwb_acc
    2058618906U,	// V6_vmpyiwh
    2058635290U,	// V6_vmpyiwh_acc
    582223898U,	// V6_vmpyiwub
    582240282U,	// V6_vmpyiwub_acc
    2410973210U,	// V6_vmpyowh
    11847706U,	// V6_vmpyowh_64_acc
    2427750426U,	// V6_vmpyowh_rnd
    2444560410U,	// V6_vmpyowh_rnd_sacc
    2461337626U,	// V6_vmpyowh_sacc
    11880474U,	// V6_vmpyub
    11896858U,	// V6_vmpyub_acc
    11880474U,	// V6_vmpyubv
    11896858U,	// V6_vmpyubv_acc
    11913242U,	// V6_vmpyuh
    11929626U,	// V6_vmpyuh_acc
    11946010U,	// V6_vmpyuhe
    11962394U,	// V6_vmpyuhe_acc
    11913242U,	// V6_vmpyuhv
    11929626U,	// V6_vmpyuhv_acc
    5294106U,	// V6_vmux
    565626906U,	// V6_vnavgb
    11995162U,	// V6_vnavgh
    280414234U,	// V6_vnavgub
    12011546U,	// V6_vnavgw
    2281771107U,	// V6_vnccombine
    33624163U,	// V6_vncmov
    12027930U,	// V6_vnormamth
    12044314U,	// V6_vnormamtw
    12060698U,	// V6_vnot
    12077082U,	// V6_vor
    12093466U,	// V6_vpackeb
    12109850U,	// V6_vpackeh
    12126234U,	// V6_vpackhb_sat
    12142618U,	// V6_vpackhub_sat
    12159002U,	// V6_vpackob
    12175386U,	// V6_vpackoh
    12191770U,	// V6_vpackwh_sat
    12208154U,	// V6_vpackwuh_sat
    12224538U,	// V6_vpopcounth
    12240922U,	// V6_vprefixqb
    12257306U,	// V6_vprefixqh
    12273690U,	// V6_vprefixqw
    12290074U,	// V6_vrdelta
    556877850U,	// V6_vrmpybub_rtt
    556861466U,	// V6_vrmpybub_rtt_acc
    271665178U,	// V6_vrmpybus
    271648794U,	// V6_vrmpybus_acc
    271665178U,	// V6_vrmpybusi
    271648794U,	// V6_vrmpybusi_acc
    271665178U,	// V6_vrmpybusv
    271648794U,	// V6_vrmpybusv_acc
    556877850U,	// V6_vrmpybv
    556861466U,	// V6_vrmpybv_acc
    573786138U,	// V6_vrmpyub
    573769754U,	// V6_vrmpyub_acc
    573786138U,	// V6_vrmpyub_rtt
    573769754U,	// V6_vrmpyub_rtt_acc
    2469611546U,	// V6_vrmpyubi
    2469595162U,	// V6_vrmpyubi_acc
    573786138U,	// V6_vrmpyubv
    573769754U,	// V6_vrmpyubv_acc
    12306458U,	// V6_vrmpyzbb_rt
    79431706U,	// V6_vrmpyzbb_rt_acc
    79415322U,	// V6_vrmpyzbb_rx
    2495350810U,	// V6_vrmpyzbb_rx_acc
    12306458U,	// V6_vrmpyzbub_rt
    79431706U,	// V6_vrmpyzbub_rt_acc
    79415322U,	// V6_vrmpyzbub_rx
    2495350810U,	// V6_vrmpyzbub_rx_acc
    12339226U,	// V6_vrmpyzcb_rt
    79464474U,	// V6_vrmpyzcb_rt_acc
    79448090U,	// V6_vrmpyzcb_rx
    2495383578U,	// V6_vrmpyzcb_rx_acc
    12371994U,	// V6_vrmpyzcbs_rt
    79497242U,	// V6_vrmpyzcbs_rt_acc
    79480858U,	// V6_vrmpyzcbs_rx
    2495416346U,	// V6_vrmpyzcbs_rx_acc
    12404762U,	// V6_vrmpyznb_rt
    79530010U,	// V6_vrmpyznb_rt_acc
    79513626U,	// V6_vrmpyznb_rx
    2495449114U,	// V6_vrmpyznb_rx_acc
    12437530U,	// V6_vror
    12453914U,	// V6_vrotr
    12470298U,	// V6_vroundhb
    683575322U,	// V6_vroundhub
    297699354U,	// V6_vrounduhub
    314492954U,	// V6_vrounduwuh
    12519450U,	// V6_vroundwh
    1975437338U,	// V6_vroundwuh
    12535834U,	// V6_vrsadubi
    12552218U,	// V6_vrsadubi_acc
    12568602U,	// V6_vsatdw
    12584986U,	// V6_vsathub
    12601370U,	// V6_vsatuwuh
    12617754U,	// V6_vsatwh
    12634138U,	// V6_vsb
    3590760U,	// V6_vscattermh
    3590760U,	// V6_vscattermh_add
    2503411990U,	// V6_vscattermhq
    3590760U,	// V6_vscattermhw
    3590760U,	// V6_vscattermhw_add
    2520189206U,	// V6_vscattermhwq
    3590760U,	// V6_vscattermw
    3590760U,	// V6_vscattermw_add
    2536966422U,	// V6_vscattermwq
    12650522U,	// V6_vsh
    681216026U,	// V6_vshufeh
    3590624U,	// V6_vshuff
    12666906U,	// V6_vshuffb
    563759130U,	// V6_vshuffeb
    12683290U,	// V6_vshuffh
    12699674U,	// V6_vshuffob
    12716058U,	// V6_vshuffvdd
    12732442U,	// V6_vshufoeb
    12748826U,	// V6_vshufoeh
    12765210U,	// V6_vshufoh
    2026047514U,	// V6_vsubb
    2026047514U,	// V6_vsubb_dv
    620826723U,	// V6_vsubbnq
    620826902U,	// V6_vsubbq
    2042824730U,	// V6_vsubbsat
    2042824730U,	// V6_vsubbsat_dv
    79906842U,	// V6_vsubcarry
    2560444442U,	// V6_vsubcarryo
    683903002U,	// V6_vsubh
    683903002U,	// V6_vsubh_dv
    637603939U,	// V6_vsubhnq
    637604118U,	// V6_vsubhq
    683903002U,	// V6_vsubhsat
    683903002U,	// V6_vsubhsat_dv
    12797978U,	// V6_vsubhw
    281249818U,	// V6_vsububh
    2143537178U,	// V6_vsububsat
    2143537178U,	// V6_vsububsat_dv
    2042873882U,	// V6_vsubububb_sat
    12847130U,	// V6_vsubuhsat
    12847130U,	// V6_vsubuhsat_dv
    12797978U,	// V6_vsubuhw
    12863514U,	// V6_vsubuwsat
    12863514U,	// V6_vsubuwsat_dv
    12797978U,	// V6_vsubw
    12797978U,	// V6_vsubw_dv
    654381155U,	// V6_vsubwnq
    654381334U,	// V6_vsubwq
    12797978U,	// V6_vsubwsat
    12797978U,	// V6_vsubwsat_dv
    12879898U,	// V6_vswap
    566544410U,	// V6_vtmpyb
    566560794U,	// V6_vtmpyb_acc
    281331738U,	// V6_vtmpybus
    281348122U,	// V6_vtmpybus_acc
    12929050U,	// V6_vtmpyhb
    12945434U,	// V6_vtmpyhb_acc
    12961818U,	// V6_vunpackb
    12978202U,	// V6_vunpackh
    12994586U,	// V6_vunpackob
    13010970U,	// V6_vunpackoh
    13027354U,	// V6_vunpackub
    13043738U,	// V6_vunpackuh
    1102U,	// V6_vwhist128
    297106U,	// V6_vwhist128m
    297324U,	// V6_vwhist128q
    6441324U,	// V6_vwhist128qm
    1092U,	// V6_vwhist256
    1266U,	// V6_vwhist256_sat
    297313U,	// V6_vwhist256q
    13060449U,	// V6_vwhist256q_sat
    13076506U,	// V6_vxor
    13092890U,	// V6_vzb
    13109274U,	// V6_vzh
    23562759U,	// V6_zLd_ai
    25807367U,	// V6_zLd_pi
    25790983U,	// V6_zLd_ppu
    4081942U,	// V6_zLd_pred_ai
    1732137238U,	// V6_zLd_pred_pi
    1732137238U,	// V6_zLd_pred_ppu
    13125658U,	// V6_zextract
    1258U,	// Y2_barrier
    1348U,	// Y2_break
    297335U,	// Y2_dccleana
    297370U,	// Y2_dccleaninva
    23562737U,	// Y2_dcfetchbo
    297354U,	// Y2_dcinva
    297345U,	// Y2_dczeroa
    297362U,	// Y2_icinva
    1174U,	// Y2_isync
    1280U,	// Y2_syncht
    297645U,	// Y2_wait
    3590632U,	// Y4_l2fetch
    297421U,	// Y4_trace
    3590632U,	// Y5_l2fetch
    2074U,	// dep_A2_addsat
    4376602U,	// dep_A2_subsat
    2575812634U,	// dep_S2_packhl
  };

  static const uint16_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTR_MASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// A2_addsp
    0U,	// A2_iconst
    0U,	// A2_neg
    0U,	// A2_not
    0U,	// A2_tfrf
    0U,	// A2_tfrfnew
    0U,	// A2_tfrp
    0U,	// A2_tfrpf
    0U,	// A2_tfrpfnew
    0U,	// A2_tfrpi
    0U,	// A2_tfrpt
    0U,	// A2_tfrptnew
    0U,	// A2_tfrt
    0U,	// A2_tfrtnew
    0U,	// A2_vaddb_map
    0U,	// A2_vsubb_map
    0U,	// A2_zxtb
    0U,	// A4_boundscheck
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// C2_cmpgei
    0U,	// C2_cmpgeui
    0U,	// C2_cmplt
    0U,	// C2_cmpltu
    0U,	// C2_pxfer_map
    0U,	// DUPLEX_Pseudo
    0U,	// ENDLOOP0
    0U,	// ENDLOOP01
    0U,	// ENDLOOP1
    0U,	// J2_endloop0
    0U,	// J2_endloop01
    0U,	// J2_endloop1
    0U,	// J2_jumpf_nopred_map
    0U,	// J2_jumprf_nopred_map
    0U,	// J2_jumprt_nopred_map
    0U,	// J2_jumpt_nopred_map
    0U,	// J2_trap1_noregmap
    1U,	// L2_loadalignb_zomap
    1U,	// L2_loadalignh_zomap
    0U,	// L2_loadbsw2_zomap
    0U,	// L2_loadbsw4_zomap
    0U,	// L2_loadbzw2_zomap
    0U,	// L2_loadbzw4_zomap
    0U,	// L2_loadrb_zomap
    0U,	// L2_loadrd_zomap
    0U,	// L2_loadrh_zomap
    0U,	// L2_loadri_zomap
    0U,	// L2_loadrub_zomap
    0U,	// L2_loadruh_zomap
    66U,	// L2_ploadrbf_zomap
    66U,	// L2_ploadrbfnew_zomap
    66U,	// L2_ploadrbt_zomap
    66U,	// L2_ploadrbtnew_zomap
    66U,	// L2_ploadrdf_zomap
    66U,	// L2_ploadrdfnew_zomap
    66U,	// L2_ploadrdt_zomap
    66U,	// L2_ploadrdtnew_zomap
    66U,	// L2_ploadrhf_zomap
    66U,	// L2_ploadrhfnew_zomap
    66U,	// L2_ploadrht_zomap
    66U,	// L2_ploadrhtnew_zomap
    66U,	// L2_ploadrif_zomap
    66U,	// L2_ploadrifnew_zomap
    66U,	// L2_ploadrit_zomap
    66U,	// L2_ploadritnew_zomap
    66U,	// L2_ploadrubf_zomap
    66U,	// L2_ploadrubfnew_zomap
    66U,	// L2_ploadrubt_zomap
    66U,	// L2_ploadrubtnew_zomap
    66U,	// L2_ploadruhf_zomap
    66U,	// L2_ploadruhfnew_zomap
    66U,	// L2_ploadruht_zomap
    66U,	// L2_ploadruhtnew_zomap
    0U,	// L4_add_memopb_zomap
    0U,	// L4_add_memoph_zomap
    0U,	// L4_add_memopw_zomap
    0U,	// L4_and_memopb_zomap
    0U,	// L4_and_memoph_zomap
    0U,	// L4_and_memopw_zomap
    0U,	// L4_iadd_memopb_zomap
    0U,	// L4_iadd_memoph_zomap
    0U,	// L4_iadd_memopw_zomap
    0U,	// L4_iand_memopb_zomap
    0U,	// L4_iand_memoph_zomap
    0U,	// L4_iand_memopw_zomap
    0U,	// L4_ior_memopb_zomap
    0U,	// L4_ior_memoph_zomap
    0U,	// L4_ior_memopw_zomap
    0U,	// L4_isub_memopb_zomap
    0U,	// L4_isub_memoph_zomap
    0U,	// L4_isub_memopw_zomap
    0U,	// L4_or_memopb_zomap
    0U,	// L4_or_memoph_zomap
    0U,	// L4_or_memopw_zomap
    0U,	// L4_return_map_to_raw_f
    0U,	// L4_return_map_to_raw_fnew_pnt
    0U,	// L4_return_map_to_raw_fnew_pt
    0U,	// L4_return_map_to_raw_t
    0U,	// L4_return_map_to_raw_tnew_pnt
    0U,	// L4_return_map_to_raw_tnew_pt
    0U,	// L4_sub_memopb_zomap
    0U,	// L4_sub_memoph_zomap
    0U,	// L4_sub_memopw_zomap
    0U,	// L6_deallocframe_map_to_raw
    0U,	// L6_return_map_to_raw
    0U,	// LDriw_ctr
    0U,	// LDriw_pred
    66U,	// M2_mpysmi
    0U,	// M2_mpyui
    0U,	// M2_vrcmpys_acc_s1
    0U,	// M2_vrcmpys_s1
    0U,	// M2_vrcmpys_s1rp
    0U,	// PS_aligna
    0U,	// PS_alloca
    0U,	// PS_call_nr
    0U,	// PS_crash
    0U,	// PS_false
    0U,	// PS_fi
    0U,	// PS_fia
    0U,	// PS_loadrb_pci
    0U,	// PS_loadrb_pcr
    0U,	// PS_loadrd_pci
    0U,	// PS_loadrd_pcr
    0U,	// PS_loadrh_pci
    0U,	// PS_loadrh_pcr
    0U,	// PS_loadri_pci
    0U,	// PS_loadri_pcr
    0U,	// PS_loadrub_pci
    0U,	// PS_loadrub_pcr
    0U,	// PS_loadruh_pci
    0U,	// PS_loadruh_pcr
    0U,	// PS_pselect
    0U,	// PS_qfalse
    0U,	// PS_qtrue
    0U,	// PS_storerb_pci
    0U,	// PS_storerb_pcr
    0U,	// PS_storerd_pci
    0U,	// PS_storerd_pcr
    0U,	// PS_storerf_pci
    0U,	// PS_storerf_pcr
    0U,	// PS_storerh_pci
    0U,	// PS_storerh_pcr
    0U,	// PS_storeri_pci
    0U,	// PS_storeri_pcr
    0U,	// PS_tailcall_i
    0U,	// PS_tailcall_r
    0U,	// PS_true
    0U,	// PS_vdd0
    0U,	// PS_vloadrq_ai
    0U,	// PS_vloadrv_ai
    0U,	// PS_vloadrv_nt_ai
    0U,	// PS_vloadrw_ai
    0U,	// PS_vloadrw_nt_ai
    0U,	// PS_vmulw
    0U,	// PS_vmulw_acc
    0U,	// PS_vselect
    0U,	// PS_vstorerq_ai
    0U,	// PS_vstorerv_ai
    0U,	// PS_vstorerv_nt_ai
    0U,	// PS_vstorerw_ai
    0U,	// PS_vstorerw_nt_ai
    0U,	// PS_wselect
    0U,	// S2_asr_i_p_rnd_goodsyntax
    0U,	// S2_asr_i_r_rnd_goodsyntax
    131U,	// S2_pstorerbf_zomap
    195U,	// S2_pstorerbnewf_zomap
    195U,	// S2_pstorerbnewt_zomap
    131U,	// S2_pstorerbt_zomap
    131U,	// S2_pstorerdf_zomap
    131U,	// S2_pstorerdt_zomap
    259U,	// S2_pstorerff_zomap
    259U,	// S2_pstorerft_zomap
    131U,	// S2_pstorerhf_zomap
    195U,	// S2_pstorerhnewf_zomap
    195U,	// S2_pstorerhnewt_zomap
    131U,	// S2_pstorerht_zomap
    131U,	// S2_pstorerif_zomap
    195U,	// S2_pstorerinewf_zomap
    195U,	// S2_pstorerinewt_zomap
    131U,	// S2_pstorerit_zomap
    0U,	// S2_storerb_zomap
    0U,	// S2_storerbnew_zomap
    0U,	// S2_storerd_zomap
    0U,	// S2_storerf_zomap
    0U,	// S2_storerh_zomap
    0U,	// S2_storerhnew_zomap
    0U,	// S2_storeri_zomap
    0U,	// S2_storerinew_zomap
    0U,	// S2_tableidxb_goodsyntax
    0U,	// S2_tableidxd_goodsyntax
    0U,	// S2_tableidxh_goodsyntax
    0U,	// S2_tableidxw_goodsyntax
    131U,	// S4_pstorerbfnew_zomap
    195U,	// S4_pstorerbnewfnew_zomap
    195U,	// S4_pstorerbnewtnew_zomap
    131U,	// S4_pstorerbtnew_zomap
    131U,	// S4_pstorerdfnew_zomap
    131U,	// S4_pstorerdtnew_zomap
    259U,	// S4_pstorerffnew_zomap
    259U,	// S4_pstorerftnew_zomap
    131U,	// S4_pstorerhfnew_zomap
    195U,	// S4_pstorerhnewfnew_zomap
    195U,	// S4_pstorerhnewtnew_zomap
    131U,	// S4_pstorerhtnew_zomap
    131U,	// S4_pstorerifnew_zomap
    195U,	// S4_pstorerinewfnew_zomap
    195U,	// S4_pstorerinewtnew_zomap
    131U,	// S4_pstoreritnew_zomap
    0U,	// S4_storeirb_zomap
    4U,	// S4_storeirbf_zomap
    4U,	// S4_storeirbfnew_zomap
    4U,	// S4_storeirbt_zomap
    4U,	// S4_storeirbtnew_zomap
    0U,	// S4_storeirh_zomap
    4U,	// S4_storeirhf_zomap
    4U,	// S4_storeirhfnew_zomap
    4U,	// S4_storeirht_zomap
    4U,	// S4_storeirhtnew_zomap
    0U,	// S4_storeiri_zomap
    4U,	// S4_storeirif_zomap
    4U,	// S4_storeirifnew_zomap
    4U,	// S4_storeirit_zomap
    4U,	// S4_storeiritnew_zomap
    322U,	// S5_asrhub_rnd_sat_goodsyntax
    386U,	// S5_vasrhrnd_goodsyntax
    0U,	// S6_allocframe_to_raw
    0U,	// STriw_ctr
    0U,	// STriw_pred
    450U,	// V6_MAP_equb
    453U,	// V6_MAP_equb_and
    453U,	// V6_MAP_equb_ior
    453U,	// V6_MAP_equb_xor
    514U,	// V6_MAP_equh
    517U,	// V6_MAP_equh_and
    517U,	// V6_MAP_equh_ior
    517U,	// V6_MAP_equh_xor
    578U,	// V6_MAP_equw
    581U,	// V6_MAP_equw_and
    581U,	// V6_MAP_equw_ior
    581U,	// V6_MAP_equw_xor
    0U,	// V6_extractw_alt
    0U,	// V6_hi
    0U,	// V6_ld0
    66U,	// V6_ldcnp0
    642U,	// V6_ldcnpnt0
    66U,	// V6_ldcp0
    642U,	// V6_ldcpnt0
    66U,	// V6_ldnp0
    642U,	// V6_ldnpnt0
    0U,	// V6_ldnt0
    0U,	// V6_ldntnt0
    66U,	// V6_ldp0
    642U,	// V6_ldpnt0
    66U,	// V6_ldtnp0
    642U,	// V6_ldtnpnt0
    66U,	// V6_ldtp0
    642U,	// V6_ldtpnt0
    0U,	// V6_ldu0
    0U,	// V6_lo
    0U,	// V6_st0
    0U,	// V6_stn0
    0U,	// V6_stnnt0
    131U,	// V6_stnp0
    6U,	// V6_stnpnt0
    131U,	// V6_stnq0
    6U,	// V6_stnqnt0
    0U,	// V6_stnt0
    131U,	// V6_stp0
    6U,	// V6_stpnt0
    131U,	// V6_stq0
    6U,	// V6_stqnt0
    0U,	// V6_stu0
    131U,	// V6_stunp0
    131U,	// V6_stup0
    0U,	// V6_vabsb_alt
    0U,	// V6_vabsb_sat_alt
    0U,	// V6_vabsdiffh_alt
    0U,	// V6_vabsdiffub_alt
    0U,	// V6_vabsdiffuh_alt
    0U,	// V6_vabsdiffw_alt
    0U,	// V6_vabsh_alt
    0U,	// V6_vabsh_sat_alt
    0U,	// V6_vabsub_alt
    0U,	// V6_vabsuh_alt
    0U,	// V6_vabsuw_alt
    0U,	// V6_vabsw_alt
    0U,	// V6_vabsw_sat_alt
    0U,	// V6_vaddb_alt
    0U,	// V6_vaddb_dv_alt
    0U,	// V6_vaddbnq_alt
    0U,	// V6_vaddbq_alt
    0U,	// V6_vaddbsat_alt
    0U,	// V6_vaddbsat_dv_alt
    0U,	// V6_vaddh_alt
    0U,	// V6_vaddh_dv_alt
    0U,	// V6_vaddhnq_alt
    0U,	// V6_vaddhq_alt
    0U,	// V6_vaddhsat_alt
    0U,	// V6_vaddhsat_dv_alt
    0U,	// V6_vaddhw_acc_alt
    0U,	// V6_vaddhw_alt
    0U,	// V6_vaddubh_acc_alt
    0U,	// V6_vaddubh_alt
    0U,	// V6_vaddubsat_alt
    0U,	// V6_vaddubsat_dv_alt
    0U,	// V6_vadduhsat_alt
    0U,	// V6_vadduhsat_dv_alt
    0U,	// V6_vadduhw_acc_alt
    0U,	// V6_vadduhw_alt
    0U,	// V6_vadduwsat_alt
    0U,	// V6_vadduwsat_dv_alt
    0U,	// V6_vaddw_alt
    0U,	// V6_vaddw_dv_alt
    0U,	// V6_vaddwnq_alt
    0U,	// V6_vaddwq_alt
    0U,	// V6_vaddwsat_alt
    0U,	// V6_vaddwsat_dv_alt
    0U,	// V6_vandnqrt_acc_alt
    0U,	// V6_vandnqrt_alt
    0U,	// V6_vandqrt_acc_alt
    0U,	// V6_vandqrt_alt
    0U,	// V6_vandvrt_acc_alt
    0U,	// V6_vandvrt_alt
    0U,	// V6_vaslh_acc_alt
    66U,	// V6_vaslh_alt
    66U,	// V6_vaslhv_alt
    0U,	// V6_vaslw_acc_alt
    66U,	// V6_vaslw_alt
    66U,	// V6_vaslwv_alt
    0U,	// V6_vasr_into_alt
    0U,	// V6_vasrh_acc_alt
    66U,	// V6_vasrh_alt
    0U,	// V6_vasrhbrndsat_alt
    4802U,	// V6_vasrhubrndsat_alt
    8898U,	// V6_vasrhubsat_alt
    66U,	// V6_vasrhv_alt
    0U,	// V6_vasrw_acc_alt
    66U,	// V6_vasrw_alt
    0U,	// V6_vasrwh_alt
    0U,	// V6_vasrwhrndsat_alt
    0U,	// V6_vasrwhsat_alt
    0U,	// V6_vasrwuhsat_alt
    66U,	// V6_vasrwv_alt
    0U,	// V6_vassignp
    0U,	// V6_vavgb_alt
    0U,	// V6_vavgbrnd_alt
    0U,	// V6_vavgh_alt
    0U,	// V6_vavghrnd_alt
    0U,	// V6_vavgub_alt
    0U,	// V6_vavgubrnd_alt
    0U,	// V6_vavguh_alt
    0U,	// V6_vavguhrnd_alt
    0U,	// V6_vavguw_alt
    0U,	// V6_vavguwrnd_alt
    0U,	// V6_vavgw_alt
    0U,	// V6_vavgwrnd_alt
    0U,	// V6_vcl0h_alt
    0U,	// V6_vcl0w_alt
    0U,	// V6_vd0
    0U,	// V6_vdd0
    0U,	// V6_vdealb4w_alt
    0U,	// V6_vdealb_alt
    0U,	// V6_vdealh_alt
    0U,	// V6_vdmpybus_acc_alt
    0U,	// V6_vdmpybus_alt
    0U,	// V6_vdmpybus_dv_acc_alt
    0U,	// V6_vdmpybus_dv_alt
    0U,	// V6_vdmpyhb_acc_alt
    0U,	// V6_vdmpyhb_alt
    0U,	// V6_vdmpyhb_dv_acc_alt
    0U,	// V6_vdmpyhb_dv_alt
    0U,	// V6_vdmpyhisat_acc_alt
    0U,	// V6_vdmpyhisat_alt
    0U,	// V6_vdmpyhsat_acc_alt
    0U,	// V6_vdmpyhsat_alt
    0U,	// V6_vdmpyhsuisat_acc_alt
    0U,	// V6_vdmpyhsuisat_alt
    0U,	// V6_vdmpyhsusat_acc_alt
    0U,	// V6_vdmpyhsusat_alt
    0U,	// V6_vdmpyhvsat_acc_alt
    0U,	// V6_vdmpyhvsat_alt
    0U,	// V6_vdsaduh_acc_alt
    0U,	// V6_vdsaduh_alt
    0U,	// V6_vgathermh_pseudo
    0U,	// V6_vgathermhq_pseudo
    0U,	// V6_vgathermhw_pseudo
    0U,	// V6_vgathermhwq_pseudo
    0U,	// V6_vgathermw_pseudo
    0U,	// V6_vgathermwq_pseudo
    66U,	// V6_vlsrh_alt
    66U,	// V6_vlsrhv_alt
    66U,	// V6_vlsrw_alt
    66U,	// V6_vlsrwv_alt
    0U,	// V6_vmaxb_alt
    0U,	// V6_vmaxh_alt
    0U,	// V6_vmaxub_alt
    0U,	// V6_vmaxuh_alt
    0U,	// V6_vmaxw_alt
    0U,	// V6_vminb_alt
    0U,	// V6_vminh_alt
    0U,	// V6_vminub_alt
    0U,	// V6_vminuh_alt
    0U,	// V6_vminw_alt
    0U,	// V6_vmpabus_acc_alt
    0U,	// V6_vmpabus_alt
    0U,	// V6_vmpabusv_alt
    0U,	// V6_vmpabuu_acc_alt
    0U,	// V6_vmpabuu_alt
    0U,	// V6_vmpabuuv_alt
    0U,	// V6_vmpahb_acc_alt
    0U,	// V6_vmpahb_alt
    0U,	// V6_vmpauhb_acc_alt
    0U,	// V6_vmpauhb_alt
    0U,	// V6_vmpybus_acc_alt
    0U,	// V6_vmpybus_alt
    0U,	// V6_vmpybusv_acc_alt
    0U,	// V6_vmpybusv_alt
    0U,	// V6_vmpybv_acc_alt
    0U,	// V6_vmpybv_alt
    0U,	// V6_vmpyewuh_alt
    0U,	// V6_vmpyh_acc_alt
    0U,	// V6_vmpyh_alt
    0U,	// V6_vmpyhsat_acc_alt
    0U,	// V6_vmpyhsrs_alt
    0U,	// V6_vmpyhss_alt
    0U,	// V6_vmpyhus_acc_alt
    0U,	// V6_vmpyhus_alt
    0U,	// V6_vmpyhv_acc_alt
    0U,	// V6_vmpyhv_alt
    0U,	// V6_vmpyhvsrs_alt
    0U,	// V6_vmpyiewh_acc_alt
    0U,	// V6_vmpyiewuh_acc_alt
    0U,	// V6_vmpyiewuh_alt
    0U,	// V6_vmpyih_acc_alt
    0U,	// V6_vmpyih_alt
    0U,	// V6_vmpyihb_acc_alt
    0U,	// V6_vmpyihb_alt
    0U,	// V6_vmpyiowh_alt
    0U,	// V6_vmpyiwb_acc_alt
    0U,	// V6_vmpyiwb_alt
    0U,	// V6_vmpyiwh_acc_alt
    0U,	// V6_vmpyiwh_alt
    0U,	// V6_vmpyiwub_acc_alt
    0U,	// V6_vmpyiwub_alt
    0U,	// V6_vmpyowh_alt
    0U,	// V6_vmpyowh_rnd_alt
    0U,	// V6_vmpyowh_rnd_sacc_alt
    0U,	// V6_vmpyowh_sacc_alt
    0U,	// V6_vmpyub_acc_alt
    0U,	// V6_vmpyub_alt
    0U,	// V6_vmpyubv_acc_alt
    0U,	// V6_vmpyubv_alt
    0U,	// V6_vmpyuh_acc_alt
    0U,	// V6_vmpyuh_alt
    0U,	// V6_vmpyuhv_acc_alt
    0U,	// V6_vmpyuhv_alt
    0U,	// V6_vnavgb_alt
    0U,	// V6_vnavgh_alt
    0U,	// V6_vnavgub_alt
    0U,	// V6_vnavgw_alt
    0U,	// V6_vnormamth_alt
    0U,	// V6_vnormamtw_alt
    0U,	// V6_vpackeb_alt
    0U,	// V6_vpackeh_alt
    0U,	// V6_vpackhb_sat_alt
    0U,	// V6_vpackhub_sat_alt
    0U,	// V6_vpackob_alt
    0U,	// V6_vpackoh_alt
    0U,	// V6_vpackwh_sat_alt
    0U,	// V6_vpackwuh_sat_alt
    0U,	// V6_vpopcounth_alt
    453U,	// V6_vrmpybub_rtt_acc_alt
    450U,	// V6_vrmpybub_rtt_alt
    0U,	// V6_vrmpybus_acc_alt
    0U,	// V6_vrmpybus_alt
    71U,	// V6_vrmpybusi_acc_alt
    69U,	// V6_vrmpybusi_alt
    0U,	// V6_vrmpybusv_acc_alt
    0U,	// V6_vrmpybusv_alt
    0U,	// V6_vrmpybv_acc_alt
    0U,	// V6_vrmpybv_alt
    0U,	// V6_vrmpyub_acc_alt
    0U,	// V6_vrmpyub_alt
    0U,	// V6_vrmpyub_rtt_acc_alt
    0U,	// V6_vrmpyub_rtt_alt
    71U,	// V6_vrmpyubi_acc_alt
    69U,	// V6_vrmpyubi_alt
    0U,	// V6_vrmpyubv_acc_alt
    0U,	// V6_vrmpyubv_alt
    0U,	// V6_vrotr_alt
    0U,	// V6_vroundhb_alt
    0U,	// V6_vroundhub_alt
    0U,	// V6_vrounduhub_alt
    0U,	// V6_vrounduwuh_alt
    0U,	// V6_vroundwh_alt
    0U,	// V6_vroundwuh_alt
    71U,	// V6_vrsadubi_acc_alt
    69U,	// V6_vrsadubi_alt
    66U,	// V6_vsathub_alt
    0U,	// V6_vsatuwuh_alt
    66U,	// V6_vsatwh_alt
    0U,	// V6_vsb_alt
    12288U,	// V6_vscattermh_add_alt
    16384U,	// V6_vscattermh_alt
    0U,	// V6_vscattermhq_alt
    20480U,	// V6_vscattermw_add_alt
    24576U,	// V6_vscattermw_alt
    20480U,	// V6_vscattermwh_add_alt
    24576U,	// V6_vscattermwh_alt
    8U,	// V6_vscattermwhq_alt
    9U,	// V6_vscattermwq_alt
    0U,	// V6_vsh_alt
    0U,	// V6_vshufeh_alt
    0U,	// V6_vshuffb_alt
    0U,	// V6_vshuffeb_alt
    0U,	// V6_vshuffh_alt
    0U,	// V6_vshuffob_alt
    0U,	// V6_vshufoeb_alt
    0U,	// V6_vshufoeh_alt
    0U,	// V6_vshufoh_alt
    0U,	// V6_vsubb_alt
    0U,	// V6_vsubb_dv_alt
    0U,	// V6_vsubbnq_alt
    0U,	// V6_vsubbq_alt
    0U,	// V6_vsubbsat_alt
    0U,	// V6_vsubbsat_dv_alt
    0U,	// V6_vsubh_alt
    0U,	// V6_vsubh_dv_alt
    0U,	// V6_vsubhnq_alt
    0U,	// V6_vsubhq_alt
    0U,	// V6_vsubhsat_alt
    0U,	// V6_vsubhsat_dv_alt
    0U,	// V6_vsubhw_alt
    0U,	// V6_vsububh_alt
    0U,	// V6_vsububsat_alt
    0U,	// V6_vsububsat_dv_alt
    0U,	// V6_vsubuhsat_alt
    0U,	// V6_vsubuhsat_dv_alt
    0U,	// V6_vsubuhw_alt
    0U,	// V6_vsubuwsat_alt
    0U,	// V6_vsubuwsat_dv_alt
    0U,	// V6_vsubw_alt
    0U,	// V6_vsubw_dv_alt
    0U,	// V6_vsubwnq_alt
    0U,	// V6_vsubwq_alt
    0U,	// V6_vsubwsat_alt
    0U,	// V6_vsubwsat_dv_alt
    0U,	// V6_vtmpyb_acc_alt
    0U,	// V6_vtmpyb_alt
    0U,	// V6_vtmpybus_acc_alt
    0U,	// V6_vtmpybus_alt
    0U,	// V6_vtmpyhb_acc_alt
    0U,	// V6_vtmpyhb_alt
    768U,	// V6_vtran2x2_map
    0U,	// V6_vunpackb_alt
    0U,	// V6_vunpackh_alt
    0U,	// V6_vunpackob_alt
    0U,	// V6_vunpackoh_alt
    0U,	// V6_vunpackub_alt
    0U,	// V6_vunpackuh_alt
    0U,	// V6_vzb_alt
    0U,	// V6_vzh_alt
    0U,	// V6_zld0
    1U,	// V6_zldp0
    0U,	// Y2_dcfetch
    0U,	// A2_abs
    0U,	// A2_absp
    0U,	// A2_abssat
    0U,	// A2_add
    842U,	// A2_addh_h16_hh
    906U,	// A2_addh_h16_hl
    843U,	// A2_addh_h16_lh
    907U,	// A2_addh_h16_ll
    970U,	// A2_addh_h16_sat_hh
    1034U,	// A2_addh_h16_sat_hl
    971U,	// A2_addh_h16_sat_lh
    1035U,	// A2_addh_h16_sat_ll
    1099U,	// A2_addh_l16_hl
    1163U,	// A2_addh_l16_ll
    1227U,	// A2_addh_l16_sat_hl
    1291U,	// A2_addh_l16_sat_ll
    12U,	// A2_addi
    0U,	// A2_addp
    8192U,	// A2_addpsat
    8192U,	// A2_addsat
    28672U,	// A2_addsph
    32768U,	// A2_addspl
    66U,	// A2_and
    66U,	// A2_andir
    66U,	// A2_andp
    0U,	// A2_aslh
    0U,	// A2_asrh
    1090U,	// A2_combine_hh
    1154U,	// A2_combine_hl
    1090U,	// A2_combine_lh
    1154U,	// A2_combine_ll
    66U,	// A2_combineii
    66U,	// A2_combinew
    0U,	// A2_max
    0U,	// A2_maxp
    0U,	// A2_maxu
    0U,	// A2_maxup
    0U,	// A2_min
    0U,	// A2_minp
    0U,	// A2_minu
    0U,	// A2_minup
    0U,	// A2_negp
    0U,	// A2_negsat
    0U,	// A2_nop
    0U,	// A2_notp
    66U,	// A2_or
    66U,	// A2_orir
    66U,	// A2_orp
    1344U,	// A2_paddf
    1344U,	// A2_paddfnew
    1356U,	// A2_paddif
    1356U,	// A2_paddifnew
    1356U,	// A2_paddit
    1356U,	// A2_padditnew
    1344U,	// A2_paddt
    1344U,	// A2_paddtnew
    0U,	// A2_pandf
    0U,	// A2_pandfnew
    0U,	// A2_pandt
    0U,	// A2_pandtnew
    0U,	// A2_porf
    0U,	// A2_porfnew
    0U,	// A2_port
    0U,	// A2_portnew
    0U,	// A2_psubf
    0U,	// A2_psubfnew
    0U,	// A2_psubt
    0U,	// A2_psubtnew
    0U,	// A2_pxorf
    0U,	// A2_pxorfnew
    0U,	// A2_pxort
    0U,	// A2_pxortnew
    0U,	// A2_roundsat
    0U,	// A2_sat
    0U,	// A2_satb
    0U,	// A2_sath
    0U,	// A2_satub
    0U,	// A2_satuh
    0U,	// A2_sub
    842U,	// A2_subh_h16_hh
    906U,	// A2_subh_h16_hl
    843U,	// A2_subh_h16_lh
    907U,	// A2_subh_h16_ll
    970U,	// A2_subh_h16_sat_hh
    1034U,	// A2_subh_h16_sat_hl
    971U,	// A2_subh_h16_sat_lh
    1035U,	// A2_subh_h16_sat_ll
    1099U,	// A2_subh_l16_hl
    1163U,	// A2_subh_l16_ll
    1227U,	// A2_subh_l16_sat_hl
    1291U,	// A2_subh_l16_sat_ll
    0U,	// A2_subp
    66U,	// A2_subri
    8192U,	// A2_subsat
    0U,	// A2_svaddh
    0U,	// A2_svaddhs
    0U,	// A2_svadduhs
    0U,	// A2_svavgh
    0U,	// A2_svavghs
    0U,	// A2_svnavgh
    0U,	// A2_svsubh
    0U,	// A2_svsubhs
    0U,	// A2_svsubuhs
    0U,	// A2_swiz
    0U,	// A2_sxtb
    0U,	// A2_sxth
    0U,	// A2_sxtw
    0U,	// A2_tfr
    0U,	// A2_tfrcrr
    13U,	// A2_tfrih
    13U,	// A2_tfril
    0U,	// A2_tfrrcr
    0U,	// A2_tfrsi
    0U,	// A2_vabsh
    0U,	// A2_vabshsat
    0U,	// A2_vabsw
    0U,	// A2_vabswsat
    0U,	// A2_vaddh
    0U,	// A2_vaddhs
    0U,	// A2_vaddub
    0U,	// A2_vaddubs
    0U,	// A2_vadduhs
    0U,	// A2_vaddw
    0U,	// A2_vaddws
    0U,	// A2_vavgh
    0U,	// A2_vavghcr
    0U,	// A2_vavghr
    0U,	// A2_vavgub
    0U,	// A2_vavgubr
    0U,	// A2_vavguh
    0U,	// A2_vavguhr
    0U,	// A2_vavguw
    0U,	// A2_vavguwr
    0U,	// A2_vavgw
    0U,	// A2_vavgwcr
    0U,	// A2_vavgwr
    66U,	// A2_vcmpbeq
    66U,	// A2_vcmpbgtu
    66U,	// A2_vcmpheq
    66U,	// A2_vcmphgt
    66U,	// A2_vcmphgtu
    66U,	// A2_vcmpweq
    66U,	// A2_vcmpwgt
    66U,	// A2_vcmpwgtu
    0U,	// A2_vconj
    0U,	// A2_vmaxb
    0U,	// A2_vmaxh
    0U,	// A2_vmaxub
    0U,	// A2_vmaxuh
    0U,	// A2_vmaxuw
    0U,	// A2_vmaxw
    0U,	// A2_vminb
    0U,	// A2_vminh
    0U,	// A2_vminub
    0U,	// A2_vminuh
    0U,	// A2_vminuw
    0U,	// A2_vminw
    0U,	// A2_vnavgh
    0U,	// A2_vnavghcr
    0U,	// A2_vnavghr
    0U,	// A2_vnavgw
    0U,	// A2_vnavgwcr
    0U,	// A2_vnavgwr
    0U,	// A2_vraddub
    0U,	// A2_vraddub_acc
    0U,	// A2_vrsadub
    0U,	// A2_vrsadub_acc
    0U,	// A2_vsubh
    0U,	// A2_vsubhs
    0U,	// A2_vsubub
    0U,	// A2_vsububs
    0U,	// A2_vsubuhs
    0U,	// A2_vsubw
    0U,	// A2_vsubws
    0U,	// A2_xor
    0U,	// A2_xorp
    0U,	// A2_zxth
    38208U,	// A4_addp_c
    66U,	// A4_andn
    66U,	// A4_andnp
    66U,	// A4_bitsplit
    66U,	// A4_bitspliti
    0U,	// A4_boundscheck_hi
    0U,	// A4_boundscheck_lo
    66U,	// A4_cmpbeq
    66U,	// A4_cmpbeqi
    66U,	// A4_cmpbgt
    66U,	// A4_cmpbgti
    66U,	// A4_cmpbgtu
    66U,	// A4_cmpbgtui
    66U,	// A4_cmpheq
    66U,	// A4_cmpheqi
    66U,	// A4_cmphgt
    66U,	// A4_cmphgti
    66U,	// A4_cmphgtu
    66U,	// A4_cmphgtui
    66U,	// A4_combineii
    66U,	// A4_combineir
    66U,	// A4_combineri
    66U,	// A4_cround_ri
    66U,	// A4_cround_rr
    0U,	// A4_ext
    0U,	// A4_modwrapu
    66U,	// A4_orn
    66U,	// A4_ornp
    0U,	// A4_paslhf
    0U,	// A4_paslhfnew
    0U,	// A4_paslht
    0U,	// A4_paslhtnew
    0U,	// A4_pasrhf
    0U,	// A4_pasrhfnew
    0U,	// A4_pasrht
    0U,	// A4_pasrhtnew
    0U,	// A4_psxtbf
    0U,	// A4_psxtbfnew
    0U,	// A4_psxtbt
    0U,	// A4_psxtbtnew
    0U,	// A4_psxthf
    0U,	// A4_psxthfnew
    0U,	// A4_psxtht
    0U,	// A4_psxthtnew
    0U,	// A4_pzxtbf
    0U,	// A4_pzxtbfnew
    0U,	// A4_pzxtbt
    0U,	// A4_pzxtbtnew
    0U,	// A4_pzxthf
    0U,	// A4_pzxthfnew
    0U,	// A4_pzxtht
    0U,	// A4_pzxthtnew
    66U,	// A4_rcmpeq
    66U,	// A4_rcmpeqi
    66U,	// A4_rcmpneq
    66U,	// A4_rcmpneqi
    66U,	// A4_round_ri
    1410U,	// A4_round_ri_sat
    66U,	// A4_round_rr
    1410U,	// A4_round_rr_sat
    38208U,	// A4_subp_c
    0U,	// A4_tfrcpp
    0U,	// A4_tfrpcp
    0U,	// A4_tlbmatch
    0U,	// A4_vcmpbeq_any
    66U,	// A4_vcmpbeqi
    66U,	// A4_vcmpbgt
    66U,	// A4_vcmpbgti
    66U,	// A4_vcmpbgtui
    66U,	// A4_vcmpheqi
    66U,	// A4_vcmphgti
    66U,	// A4_vcmphgtui
    66U,	// A4_vcmpweqi
    66U,	// A4_vcmpwgti
    66U,	// A4_vcmpwgtui
    0U,	// A4_vrmaxh
    0U,	// A4_vrmaxuh
    0U,	// A4_vrmaxuw
    0U,	// A4_vrmaxw
    0U,	// A4_vrminh
    0U,	// A4_vrminuh
    0U,	// A4_vrminuw
    0U,	// A4_vrminw
    14U,	// A5_ACS
    0U,	// A5_vaddhubs
    0U,	// A6_vcmpbeq_notany
    15U,	// A6_vminub_RdP
    0U,	// C2_all8
    66U,	// C2_and
    0U,	// C2_andn
    0U,	// C2_any8
    66U,	// C2_bitsclr
    66U,	// C2_bitsclri
    0U,	// C2_bitsset
    0U,	// C2_ccombinewf
    0U,	// C2_ccombinewnewf
    0U,	// C2_ccombinewnewt
    0U,	// C2_ccombinewt
    0U,	// C2_cmoveif
    0U,	// C2_cmoveit
    0U,	// C2_cmovenewif
    0U,	// C2_cmovenewit
    66U,	// C2_cmpeq
    66U,	// C2_cmpeqi
    66U,	// C2_cmpeqp
    66U,	// C2_cmpgt
    66U,	// C2_cmpgti
    66U,	// C2_cmpgtp
    66U,	// C2_cmpgtu
    66U,	// C2_cmpgtui
    66U,	// C2_cmpgtup
    0U,	// C2_mask
    706U,	// C2_mux
    42434U,	// C2_muxii
    42434U,	// C2_muxir
    706U,	// C2_muxri
    0U,	// C2_not
    66U,	// C2_or
    0U,	// C2_orn
    0U,	// C2_tfrpr
    0U,	// C2_tfrrp
    0U,	// C2_vitpack
    0U,	// C2_vmux
    0U,	// C2_xor
    0U,	// C4_addipc
    46400U,	// C4_and_and
    16U,	// C4_and_andn
    46400U,	// C4_and_or
    16U,	// C4_and_orn
    66U,	// C4_cmplte
    66U,	// C4_cmpltei
    66U,	// C4_cmplteu
    66U,	// C4_cmplteui
    66U,	// C4_cmpneq
    66U,	// C4_cmpneqi
    0U,	// C4_fastcorner9
    0U,	// C4_fastcorner9_not
    66U,	// C4_nbitsclr
    66U,	// C4_nbitsclri
    0U,	// C4_nbitsset
    46400U,	// C4_or_and
    16U,	// C4_or_andn
    46400U,	// C4_or_or
    16U,	// C4_or_orn
    0U,	// CALLProfile
    0U,	// CONST32
    0U,	// CONST64
    0U,	// DuplexIClass0
    0U,	// DuplexIClass1
    0U,	// DuplexIClass2
    0U,	// DuplexIClass3
    0U,	// DuplexIClass4
    0U,	// DuplexIClass5
    0U,	// DuplexIClass6
    0U,	// DuplexIClass7
    0U,	// DuplexIClass8
    0U,	// DuplexIClass9
    0U,	// DuplexIClassA
    0U,	// DuplexIClassB
    0U,	// DuplexIClassC
    0U,	// DuplexIClassD
    0U,	// DuplexIClassE
    0U,	// DuplexIClassF
    0U,	// EH_RETURN_JMPR
    0U,	// F2_conv_d2df
    0U,	// F2_conv_d2sf
    0U,	// F2_conv_df2d
    0U,	// F2_conv_df2d_chop
    0U,	// F2_conv_df2sf
    0U,	// F2_conv_df2ud
    0U,	// F2_conv_df2ud_chop
    0U,	// F2_conv_df2uw
    0U,	// F2_conv_df2uw_chop
    0U,	// F2_conv_df2w
    0U,	// F2_conv_df2w_chop
    0U,	// F2_conv_sf2d
    0U,	// F2_conv_sf2d_chop
    0U,	// F2_conv_sf2df
    0U,	// F2_conv_sf2ud
    0U,	// F2_conv_sf2ud_chop
    0U,	// F2_conv_sf2uw
    0U,	// F2_conv_sf2uw_chop
    0U,	// F2_conv_sf2w
    0U,	// F2_conv_sf2w_chop
    0U,	// F2_conv_ud2df
    0U,	// F2_conv_ud2sf
    0U,	// F2_conv_uw2df
    0U,	// F2_conv_uw2sf
    0U,	// F2_conv_w2df
    0U,	// F2_conv_w2sf
    0U,	// F2_dfadd
    0U,	// F2_dfclass
    0U,	// F2_dfcmpeq
    0U,	// F2_dfcmpge
    0U,	// F2_dfcmpgt
    0U,	// F2_dfcmpuo
    0U,	// F2_dfimm_n
    0U,	// F2_dfimm_p
    0U,	// F2_dfsub
    0U,	// F2_sfadd
    0U,	// F2_sfclass
    0U,	// F2_sfcmpeq
    0U,	// F2_sfcmpge
    0U,	// F2_sfcmpgt
    0U,	// F2_sfcmpuo
    0U,	// F2_sffixupd
    0U,	// F2_sffixupn
    0U,	// F2_sffixupr
    0U,	// F2_sffma
    0U,	// F2_sffma_lib
    1543U,	// F2_sffma_sc
    0U,	// F2_sffms
    0U,	// F2_sffms_lib
    0U,	// F2_sfimm_n
    0U,	// F2_sfimm_p
    17U,	// F2_sfinvsqrta
    0U,	// F2_sfmax
    0U,	// F2_sfmin
    0U,	// F2_sfmpy
    18U,	// F2_sfrecipa
    0U,	// F2_sfsub
    0U,	// G4_tfrgcpp
    0U,	// G4_tfrgcrr
    0U,	// G4_tfrgpcp
    0U,	// G4_tfrgrcr
    13U,	// HI
    0U,	// J2_call
    0U,	// J2_callf
    0U,	// J2_callr
    0U,	// J2_callrf
    0U,	// J2_callrt
    0U,	// J2_callt
    0U,	// J2_jump
    0U,	// J2_jumpf
    0U,	// J2_jumpfnew
    0U,	// J2_jumpfnewpt
    0U,	// J2_jumpfpt
    0U,	// J2_jumpr
    0U,	// J2_jumprf
    0U,	// J2_jumprfnew
    0U,	// J2_jumprfnewpt
    0U,	// J2_jumprfpt
    0U,	// J2_jumprgtez
    0U,	// J2_jumprgtezpt
    0U,	// J2_jumprltez
    0U,	// J2_jumprltezpt
    0U,	// J2_jumprnz
    0U,	// J2_jumprnzpt
    0U,	// J2_jumprt
    0U,	// J2_jumprtnew
    0U,	// J2_jumprtnewpt
    0U,	// J2_jumprtpt
    0U,	// J2_jumprz
    0U,	// J2_jumprzpt
    0U,	// J2_jumpt
    0U,	// J2_jumptnew
    0U,	// J2_jumptnewpt
    0U,	// J2_jumptpt
    1U,	// J2_loop0i
    1U,	// J2_loop0iext
    1U,	// J2_loop0r
    1U,	// J2_loop0rext
    1U,	// J2_loop1i
    1U,	// J2_loop1iext
    1U,	// J2_loop1r
    1U,	// J2_loop1rext
    0U,	// J2_pause
    1U,	// J2_ploop1si
    1U,	// J2_ploop1sr
    1U,	// J2_ploop2si
    1U,	// J2_ploop2sr
    1U,	// J2_ploop3si
    1U,	// J2_ploop3sr
    0U,	// J2_trap0
    1U,	// J2_trap1
    0U,	// J4_cmpeq_f_jumpnv_nt
    0U,	// J4_cmpeq_f_jumpnv_t
    19U,	// J4_cmpeq_fp0_jump_nt
    20U,	// J4_cmpeq_fp0_jump_t
    21U,	// J4_cmpeq_fp1_jump_nt
    22U,	// J4_cmpeq_fp1_jump_t
    0U,	// J4_cmpeq_t_jumpnv_nt
    0U,	// J4_cmpeq_t_jumpnv_t
    23U,	// J4_cmpeq_tp0_jump_nt
    24U,	// J4_cmpeq_tp0_jump_t
    25U,	// J4_cmpeq_tp1_jump_nt
    26U,	// J4_cmpeq_tp1_jump_t
    0U,	// J4_cmpeqi_f_jumpnv_nt
    0U,	// J4_cmpeqi_f_jumpnv_t
    19U,	// J4_cmpeqi_fp0_jump_nt
    20U,	// J4_cmpeqi_fp0_jump_t
    21U,	// J4_cmpeqi_fp1_jump_nt
    22U,	// J4_cmpeqi_fp1_jump_t
    0U,	// J4_cmpeqi_t_jumpnv_nt
    0U,	// J4_cmpeqi_t_jumpnv_t
    23U,	// J4_cmpeqi_tp0_jump_nt
    24U,	// J4_cmpeqi_tp0_jump_t
    25U,	// J4_cmpeqi_tp1_jump_nt
    26U,	// J4_cmpeqi_tp1_jump_t
    0U,	// J4_cmpeqn1_f_jumpnv_nt
    0U,	// J4_cmpeqn1_f_jumpnv_t
    19U,	// J4_cmpeqn1_fp0_jump_nt
    20U,	// J4_cmpeqn1_fp0_jump_t
    21U,	// J4_cmpeqn1_fp1_jump_nt
    22U,	// J4_cmpeqn1_fp1_jump_t
    0U,	// J4_cmpeqn1_t_jumpnv_nt
    0U,	// J4_cmpeqn1_t_jumpnv_t
    23U,	// J4_cmpeqn1_tp0_jump_nt
    24U,	// J4_cmpeqn1_tp0_jump_t
    25U,	// J4_cmpeqn1_tp1_jump_nt
    26U,	// J4_cmpeqn1_tp1_jump_t
    0U,	// J4_cmpgt_f_jumpnv_nt
    0U,	// J4_cmpgt_f_jumpnv_t
    19U,	// J4_cmpgt_fp0_jump_nt
    20U,	// J4_cmpgt_fp0_jump_t
    21U,	// J4_cmpgt_fp1_jump_nt
    22U,	// J4_cmpgt_fp1_jump_t
    0U,	// J4_cmpgt_t_jumpnv_nt
    0U,	// J4_cmpgt_t_jumpnv_t
    23U,	// J4_cmpgt_tp0_jump_nt
    24U,	// J4_cmpgt_tp0_jump_t
    25U,	// J4_cmpgt_tp1_jump_nt
    26U,	// J4_cmpgt_tp1_jump_t
    0U,	// J4_cmpgti_f_jumpnv_nt
    0U,	// J4_cmpgti_f_jumpnv_t
    19U,	// J4_cmpgti_fp0_jump_nt
    20U,	// J4_cmpgti_fp0_jump_t
    21U,	// J4_cmpgti_fp1_jump_nt
    22U,	// J4_cmpgti_fp1_jump_t
    0U,	// J4_cmpgti_t_jumpnv_nt
    0U,	// J4_cmpgti_t_jumpnv_t
    23U,	// J4_cmpgti_tp0_jump_nt
    24U,	// J4_cmpgti_tp0_jump_t
    25U,	// J4_cmpgti_tp1_jump_nt
    26U,	// J4_cmpgti_tp1_jump_t
    0U,	// J4_cmpgtn1_f_jumpnv_nt
    0U,	// J4_cmpgtn1_f_jumpnv_t
    19U,	// J4_cmpgtn1_fp0_jump_nt
    20U,	// J4_cmpgtn1_fp0_jump_t
    21U,	// J4_cmpgtn1_fp1_jump_nt
    22U,	// J4_cmpgtn1_fp1_jump_t
    0U,	// J4_cmpgtn1_t_jumpnv_nt
    0U,	// J4_cmpgtn1_t_jumpnv_t
    23U,	// J4_cmpgtn1_tp0_jump_nt
    24U,	// J4_cmpgtn1_tp0_jump_t
    25U,	// J4_cmpgtn1_tp1_jump_nt
    26U,	// J4_cmpgtn1_tp1_jump_t
    0U,	// J4_cmpgtu_f_jumpnv_nt
    0U,	// J4_cmpgtu_f_jumpnv_t
    19U,	// J4_cmpgtu_fp0_jump_nt
    20U,	// J4_cmpgtu_fp0_jump_t
    21U,	// J4_cmpgtu_fp1_jump_nt
    22U,	// J4_cmpgtu_fp1_jump_t
    0U,	// J4_cmpgtu_t_jumpnv_nt
    0U,	// J4_cmpgtu_t_jumpnv_t
    23U,	// J4_cmpgtu_tp0_jump_nt
    24U,	// J4_cmpgtu_tp0_jump_t
    25U,	// J4_cmpgtu_tp1_jump_nt
    26U,	// J4_cmpgtu_tp1_jump_t
    0U,	// J4_cmpgtui_f_jumpnv_nt
    0U,	// J4_cmpgtui_f_jumpnv_t
    19U,	// J4_cmpgtui_fp0_jump_nt
    20U,	// J4_cmpgtui_fp0_jump_t
    21U,	// J4_cmpgtui_fp1_jump_nt
    22U,	// J4_cmpgtui_fp1_jump_t
    0U,	// J4_cmpgtui_t_jumpnv_nt
    0U,	// J4_cmpgtui_t_jumpnv_t
    23U,	// J4_cmpgtui_tp0_jump_nt
    24U,	// J4_cmpgtui_tp0_jump_t
    25U,	// J4_cmpgtui_tp1_jump_nt
    26U,	// J4_cmpgtui_tp1_jump_t
    27U,	// J4_cmplt_f_jumpnv_nt
    28U,	// J4_cmplt_f_jumpnv_t
    27U,	// J4_cmplt_t_jumpnv_nt
    28U,	// J4_cmplt_t_jumpnv_t
    27U,	// J4_cmpltu_f_jumpnv_nt
    28U,	// J4_cmpltu_f_jumpnv_t
    27U,	// J4_cmpltu_t_jumpnv_nt
    28U,	// J4_cmpltu_t_jumpnv_t
    0U,	// J4_hintjumpr
    0U,	// J4_jumpseti
    0U,	// J4_jumpsetr
    0U,	// J4_tstbit0_f_jumpnv_nt
    0U,	// J4_tstbit0_f_jumpnv_t
    0U,	// J4_tstbit0_fp0_jump_nt
    0U,	// J4_tstbit0_fp0_jump_t
    0U,	// J4_tstbit0_fp1_jump_nt
    0U,	// J4_tstbit0_fp1_jump_t
    0U,	// J4_tstbit0_t_jumpnv_nt
    0U,	// J4_tstbit0_t_jumpnv_t
    0U,	// J4_tstbit0_tp0_jump_nt
    0U,	// J4_tstbit0_tp0_jump_t
    0U,	// J4_tstbit0_tp1_jump_nt
    0U,	// J4_tstbit0_tp1_jump_t
    0U,	// L2_deallocframe
    1373U,	// L2_loadalignb_io
    49950U,	// L2_loadalignb_pbr
    54047U,	// L2_loadalignb_pci
    32U,	// L2_loadalignb_pcr
    799U,	// L2_loadalignb_pi
    798U,	// L2_loadalignb_pr
    1373U,	// L2_loadalignh_io
    49950U,	// L2_loadalignh_pbr
    54047U,	// L2_loadalignh_pci
    32U,	// L2_loadalignh_pcr
    799U,	// L2_loadalignh_pi
    798U,	// L2_loadalignh_pr
    1U,	// L2_loadbsw2_io
    33U,	// L2_loadbsw2_pbr
    34U,	// L2_loadbsw2_pci
    0U,	// L2_loadbsw2_pcr
    1U,	// L2_loadbsw2_pi
    1U,	// L2_loadbsw2_pr
    1U,	// L2_loadbsw4_io
    33U,	// L2_loadbsw4_pbr
    34U,	// L2_loadbsw4_pci
    0U,	// L2_loadbsw4_pcr
    1U,	// L2_loadbsw4_pi
    1U,	// L2_loadbsw4_pr
    1U,	// L2_loadbzw2_io
    33U,	// L2_loadbzw2_pbr
    34U,	// L2_loadbzw2_pci
    0U,	// L2_loadbzw2_pcr
    1U,	// L2_loadbzw2_pi
    1U,	// L2_loadbzw2_pr
    1U,	// L2_loadbzw4_io
    33U,	// L2_loadbzw4_pbr
    34U,	// L2_loadbzw4_pci
    0U,	// L2_loadbzw4_pcr
    1U,	// L2_loadbzw4_pi
    1U,	// L2_loadbzw4_pr
    1U,	// L2_loadrb_io
    33U,	// L2_loadrb_pbr
    34U,	// L2_loadrb_pci
    0U,	// L2_loadrb_pcr
    1U,	// L2_loadrb_pi
    1U,	// L2_loadrb_pr
    0U,	// L2_loadrbgp
    1U,	// L2_loadrd_io
    33U,	// L2_loadrd_pbr
    34U,	// L2_loadrd_pci
    0U,	// L2_loadrd_pcr
    1U,	// L2_loadrd_pi
    1U,	// L2_loadrd_pr
    0U,	// L2_loadrdgp
    1U,	// L2_loadrh_io
    33U,	// L2_loadrh_pbr
    34U,	// L2_loadrh_pci
    0U,	// L2_loadrh_pcr
    1U,	// L2_loadrh_pi
    1U,	// L2_loadrh_pr
    0U,	// L2_loadrhgp
    1U,	// L2_loadri_io
    33U,	// L2_loadri_pbr
    34U,	// L2_loadri_pci
    0U,	// L2_loadri_pcr
    1U,	// L2_loadri_pi
    1U,	// L2_loadri_pr
    0U,	// L2_loadrigp
    1U,	// L2_loadrub_io
    33U,	// L2_loadrub_pbr
    34U,	// L2_loadrub_pci
    0U,	// L2_loadrub_pcr
    1U,	// L2_loadrub_pi
    1U,	// L2_loadrub_pr
    0U,	// L2_loadrubgp
    1U,	// L2_loadruh_io
    33U,	// L2_loadruh_pbr
    34U,	// L2_loadruh_pci
    0U,	// L2_loadruh_pcr
    1U,	// L2_loadruh_pi
    1U,	// L2_loadruh_pr
    0U,	// L2_loadruhgp
    0U,	// L2_loadw_locked
    1602U,	// L2_ploadrbf_io
    1699U,	// L2_ploadrbf_pi
    1602U,	// L2_ploadrbfnew_io
    1699U,	// L2_ploadrbfnew_pi
    1602U,	// L2_ploadrbt_io
    1699U,	// L2_ploadrbt_pi
    1602U,	// L2_ploadrbtnew_io
    1699U,	// L2_ploadrbtnew_pi
    1602U,	// L2_ploadrdf_io
    1699U,	// L2_ploadrdf_pi
    1602U,	// L2_ploadrdfnew_io
    1699U,	// L2_ploadrdfnew_pi
    1602U,	// L2_ploadrdt_io
    1699U,	// L2_ploadrdt_pi
    1602U,	// L2_ploadrdtnew_io
    1699U,	// L2_ploadrdtnew_pi
    1602U,	// L2_ploadrhf_io
    1699U,	// L2_ploadrhf_pi
    1602U,	// L2_ploadrhfnew_io
    1699U,	// L2_ploadrhfnew_pi
    1602U,	// L2_ploadrht_io
    1699U,	// L2_ploadrht_pi
    1602U,	// L2_ploadrhtnew_io
    1699U,	// L2_ploadrhtnew_pi
    1602U,	// L2_ploadrif_io
    1699U,	// L2_ploadrif_pi
    1602U,	// L2_ploadrifnew_io
    1699U,	// L2_ploadrifnew_pi
    1602U,	// L2_ploadrit_io
    1699U,	// L2_ploadrit_pi
    1602U,	// L2_ploadritnew_io
    1699U,	// L2_ploadritnew_pi
    1602U,	// L2_ploadrubf_io
    1699U,	// L2_ploadrubf_pi
    1602U,	// L2_ploadrubfnew_io
    1699U,	// L2_ploadrubfnew_pi
    1602U,	// L2_ploadrubt_io
    1699U,	// L2_ploadrubt_pi
    1602U,	// L2_ploadrubtnew_io
    1699U,	// L2_ploadrubtnew_pi
    1602U,	// L2_ploadruhf_io
    1699U,	// L2_ploadruhf_pi
    1602U,	// L2_ploadruhfnew_io
    1699U,	// L2_ploadruhfnew_pi
    1602U,	// L2_ploadruht_io
    1699U,	// L2_ploadruht_pi
    1602U,	// L2_ploadruhtnew_io
    1699U,	// L2_ploadruhtnew_pi
    0U,	// L4_add_memopb_io
    0U,	// L4_add_memoph_io
    0U,	// L4_add_memopw_io
    0U,	// L4_and_memopb_io
    0U,	// L4_and_memoph_io
    0U,	// L4_and_memopw_io
    0U,	// L4_iadd_memopb_io
    0U,	// L4_iadd_memoph_io
    0U,	// L4_iadd_memopw_io
    0U,	// L4_iand_memopb_io
    0U,	// L4_iand_memoph_io
    0U,	// L4_iand_memopw_io
    0U,	// L4_ior_memopb_io
    0U,	// L4_ior_memoph_io
    0U,	// L4_ior_memopw_io
    0U,	// L4_isub_memopb_io
    0U,	// L4_isub_memoph_io
    0U,	// L4_isub_memopw_io
    36U,	// L4_loadalignb_ap
    37U,	// L4_loadalignb_ur
    36U,	// L4_loadalignh_ap
    37U,	// L4_loadalignh_ur
    0U,	// L4_loadbsw2_ap
    0U,	// L4_loadbsw2_ur
    0U,	// L4_loadbsw4_ap
    0U,	// L4_loadbsw4_ur
    0U,	// L4_loadbzw2_ap
    0U,	// L4_loadbzw2_ur
    0U,	// L4_loadbzw4_ap
    0U,	// L4_loadbzw4_ur
    0U,	// L4_loadd_locked
    0U,	// L4_loadrb_ap
    0U,	// L4_loadrb_rr
    0U,	// L4_loadrb_ur
    0U,	// L4_loadrd_ap
    0U,	// L4_loadrd_rr
    0U,	// L4_loadrd_ur
    0U,	// L4_loadrh_ap
    0U,	// L4_loadrh_rr
    0U,	// L4_loadrh_ur
    0U,	// L4_loadri_ap
    0U,	// L4_loadri_rr
    0U,	// L4_loadri_ur
    0U,	// L4_loadrub_ap
    0U,	// L4_loadrub_rr
    0U,	// L4_loadrub_ur
    0U,	// L4_loadruh_ap
    0U,	// L4_loadruh_rr
    0U,	// L4_loadruh_ur
    0U,	// L4_or_memopb_io
    0U,	// L4_or_memoph_io
    0U,	// L4_or_memopw_io
    0U,	// L4_ploadrbf_abs
    1730U,	// L4_ploadrbf_rr
    0U,	// L4_ploadrbfnew_abs
    1730U,	// L4_ploadrbfnew_rr
    0U,	// L4_ploadrbt_abs
    1730U,	// L4_ploadrbt_rr
    0U,	// L4_ploadrbtnew_abs
    1730U,	// L4_ploadrbtnew_rr
    0U,	// L4_ploadrdf_abs
    1730U,	// L4_ploadrdf_rr
    0U,	// L4_ploadrdfnew_abs
    1730U,	// L4_ploadrdfnew_rr
    0U,	// L4_ploadrdt_abs
    1730U,	// L4_ploadrdt_rr
    0U,	// L4_ploadrdtnew_abs
    1730U,	// L4_ploadrdtnew_rr
    0U,	// L4_ploadrhf_abs
    1730U,	// L4_ploadrhf_rr
    0U,	// L4_ploadrhfnew_abs
    1730U,	// L4_ploadrhfnew_rr
    0U,	// L4_ploadrht_abs
    1730U,	// L4_ploadrht_rr
    0U,	// L4_ploadrhtnew_abs
    1730U,	// L4_ploadrhtnew_rr
    0U,	// L4_ploadrif_abs
    1730U,	// L4_ploadrif_rr
    0U,	// L4_ploadrifnew_abs
    1730U,	// L4_ploadrifnew_rr
    0U,	// L4_ploadrit_abs
    1730U,	// L4_ploadrit_rr
    0U,	// L4_ploadritnew_abs
    1730U,	// L4_ploadritnew_rr
    0U,	// L4_ploadrubf_abs
    1730U,	// L4_ploadrubf_rr
    0U,	// L4_ploadrubfnew_abs
    1730U,	// L4_ploadrubfnew_rr
    0U,	// L4_ploadrubt_abs
    1730U,	// L4_ploadrubt_rr
    0U,	// L4_ploadrubtnew_abs
    1730U,	// L4_ploadrubtnew_rr
    0U,	// L4_ploadruhf_abs
    1730U,	// L4_ploadruhf_rr
    0U,	// L4_ploadruhfnew_abs
    1730U,	// L4_ploadruhfnew_rr
    0U,	// L4_ploadruht_abs
    1730U,	// L4_ploadruht_rr
    0U,	// L4_ploadruhtnew_abs
    1730U,	// L4_ploadruhtnew_rr
    0U,	// L4_return
    38U,	// L4_return_f
    39U,	// L4_return_fnew_pnt
    40U,	// L4_return_fnew_pt
    38U,	// L4_return_t
    39U,	// L4_return_tnew_pnt
    40U,	// L4_return_tnew_pt
    0U,	// L4_sub_memopb_io
    0U,	// L4_sub_memoph_io
    0U,	// L4_sub_memopw_io
    0U,	// L6_memcpy
    13U,	// LO
    69U,	// M2_acci
    69U,	// M2_accii
    0U,	// M2_cmaci_s0
    0U,	// M2_cmacr_s0
    0U,	// M2_cmacs_s0
    0U,	// M2_cmacs_s1
    0U,	// M2_cmacsc_s0
    0U,	// M2_cmacsc_s1
    0U,	// M2_cmpyi_s0
    0U,	// M2_cmpyr_s0
    0U,	// M2_cmpyrs_s0
    0U,	// M2_cmpyrs_s1
    0U,	// M2_cmpyrsc_s0
    0U,	// M2_cmpyrsc_s1
    0U,	// M2_cmpys_s0
    0U,	// M2_cmpys_s1
    0U,	// M2_cmpysc_s0
    0U,	// M2_cmpysc_s1
    0U,	// M2_cnacs_s0
    0U,	// M2_cnacs_s1
    0U,	// M2_cnacsc_s0
    0U,	// M2_cnacsc_s1
    69U,	// M2_dpmpyss_acc_s0
    69U,	// M2_dpmpyss_nac_s0
    386U,	// M2_dpmpyss_rnd_s0
    66U,	// M2_dpmpyss_s0
    69U,	// M2_dpmpyuu_acc_s0
    69U,	// M2_dpmpyuu_nac_s0
    66U,	// M2_dpmpyuu_s0
    1794U,	// M2_hmmpyh_rs1
    1858U,	// M2_hmmpyh_s1
    1922U,	// M2_hmmpyl_rs1
    1986U,	// M2_hmmpyl_s1
    69U,	// M2_maci
    69U,	// M2_macsin
    69U,	// M2_macsip
    0U,	// M2_mmachs_rs0
    0U,	// M2_mmachs_rs1
    0U,	// M2_mmachs_s0
    0U,	// M2_mmachs_s1
    0U,	// M2_mmacls_rs0
    0U,	// M2_mmacls_rs1
    0U,	// M2_mmacls_s0
    0U,	// M2_mmacls_s1
    0U,	// M2_mmacuhs_rs0
    0U,	// M2_mmacuhs_rs1
    0U,	// M2_mmacuhs_s0
    0U,	// M2_mmacuhs_s1
    0U,	// M2_mmaculs_rs0
    0U,	// M2_mmaculs_rs1
    0U,	// M2_mmaculs_s0
    0U,	// M2_mmaculs_s1
    0U,	// M2_mmpyh_rs0
    0U,	// M2_mmpyh_rs1
    0U,	// M2_mmpyh_s0
    0U,	// M2_mmpyh_s1
    0U,	// M2_mmpyl_rs0
    0U,	// M2_mmpyl_rs1
    0U,	// M2_mmpyl_s0
    0U,	// M2_mmpyl_s1
    0U,	// M2_mmpyuh_rs0
    0U,	// M2_mmpyuh_rs1
    0U,	// M2_mmpyuh_s0
    0U,	// M2_mmpyuh_s1
    0U,	// M2_mmpyul_rs0
    0U,	// M2_mmpyul_rs1
    0U,	// M2_mmpyul_s0
    0U,	// M2_mmpyul_s1
    69U,	// M2_mnaci
    1093U,	// M2_mpy_acc_hh_s0
    2053U,	// M2_mpy_acc_hh_s1
    1157U,	// M2_mpy_acc_hl_s0
    2117U,	// M2_mpy_acc_hl_s1
    1093U,	// M2_mpy_acc_lh_s0
    2053U,	// M2_mpy_acc_lh_s1
    1157U,	// M2_mpy_acc_ll_s0
    2117U,	// M2_mpy_acc_ll_s1
    1221U,	// M2_mpy_acc_sat_hh_s0
    1861U,	// M2_mpy_acc_sat_hh_s1
    1285U,	// M2_mpy_acc_sat_hl_s0
    1989U,	// M2_mpy_acc_sat_hl_s1
    1221U,	// M2_mpy_acc_sat_lh_s0
    1861U,	// M2_mpy_acc_sat_lh_s1
    1285U,	// M2_mpy_acc_sat_ll_s0
    1989U,	// M2_mpy_acc_sat_ll_s1
    1090U,	// M2_mpy_hh_s0
    2050U,	// M2_mpy_hh_s1
    1154U,	// M2_mpy_hl_s0
    2114U,	// M2_mpy_hl_s1
    1090U,	// M2_mpy_lh_s0
    2050U,	// M2_mpy_lh_s1
    1154U,	// M2_mpy_ll_s0
    2114U,	// M2_mpy_ll_s1
    1093U,	// M2_mpy_nac_hh_s0
    2053U,	// M2_mpy_nac_hh_s1
    1157U,	// M2_mpy_nac_hl_s0
    2117U,	// M2_mpy_nac_hl_s1
    1093U,	// M2_mpy_nac_lh_s0
    2053U,	// M2_mpy_nac_lh_s1
    1157U,	// M2_mpy_nac_ll_s0
    2117U,	// M2_mpy_nac_ll_s1
    1221U,	// M2_mpy_nac_sat_hh_s0
    1861U,	// M2_mpy_nac_sat_hh_s1
    1285U,	// M2_mpy_nac_sat_hl_s0
    1989U,	// M2_mpy_nac_sat_hl_s1
    1221U,	// M2_mpy_nac_sat_lh_s0
    1861U,	// M2_mpy_nac_sat_lh_s1
    1285U,	// M2_mpy_nac_sat_ll_s0
    1989U,	// M2_mpy_nac_sat_ll_s1
    2178U,	// M2_mpy_rnd_hh_s0
    2242U,	// M2_mpy_rnd_hh_s1
    2306U,	// M2_mpy_rnd_hl_s0
    2370U,	// M2_mpy_rnd_hl_s1
    2178U,	// M2_mpy_rnd_lh_s0
    2242U,	// M2_mpy_rnd_lh_s1
    2306U,	// M2_mpy_rnd_ll_s0
    2370U,	// M2_mpy_rnd_ll_s1
    1218U,	// M2_mpy_sat_hh_s0
    1858U,	// M2_mpy_sat_hh_s1
    1282U,	// M2_mpy_sat_hl_s0
    1986U,	// M2_mpy_sat_hl_s1
    1218U,	// M2_mpy_sat_lh_s0
    1858U,	// M2_mpy_sat_lh_s1
    1282U,	// M2_mpy_sat_ll_s0
    1986U,	// M2_mpy_sat_ll_s1
    2434U,	// M2_mpy_sat_rnd_hh_s0
    1794U,	// M2_mpy_sat_rnd_hh_s1
    2498U,	// M2_mpy_sat_rnd_hl_s0
    1922U,	// M2_mpy_sat_rnd_hl_s1
    2434U,	// M2_mpy_sat_rnd_lh_s0
    1794U,	// M2_mpy_sat_rnd_lh_s1
    2498U,	// M2_mpy_sat_rnd_ll_s0
    1922U,	// M2_mpy_sat_rnd_ll_s1
    66U,	// M2_mpy_up
    2562U,	// M2_mpy_up_s1
    2626U,	// M2_mpy_up_s1_sat
    1093U,	// M2_mpyd_acc_hh_s0
    2053U,	// M2_mpyd_acc_hh_s1
    1157U,	// M2_mpyd_acc_hl_s0
    2117U,	// M2_mpyd_acc_hl_s1
    1093U,	// M2_mpyd_acc_lh_s0
    2053U,	// M2_mpyd_acc_lh_s1
    1157U,	// M2_mpyd_acc_ll_s0
    2117U,	// M2_mpyd_acc_ll_s1
    1090U,	// M2_mpyd_hh_s0
    2050U,	// M2_mpyd_hh_s1
    1154U,	// M2_mpyd_hl_s0
    2114U,	// M2_mpyd_hl_s1
    1090U,	// M2_mpyd_lh_s0
    2050U,	// M2_mpyd_lh_s1
    1154U,	// M2_mpyd_ll_s0
    2114U,	// M2_mpyd_ll_s1
    1093U,	// M2_mpyd_nac_hh_s0
    2053U,	// M2_mpyd_nac_hh_s1
    1157U,	// M2_mpyd_nac_hl_s0
    2117U,	// M2_mpyd_nac_hl_s1
    1093U,	// M2_mpyd_nac_lh_s0
    2053U,	// M2_mpyd_nac_lh_s1
    1157U,	// M2_mpyd_nac_ll_s0
    2117U,	// M2_mpyd_nac_ll_s1
    2178U,	// M2_mpyd_rnd_hh_s0
    2242U,	// M2_mpyd_rnd_hh_s1
    2306U,	// M2_mpyd_rnd_hl_s0
    2370U,	// M2_mpyd_rnd_hl_s1
    2178U,	// M2_mpyd_rnd_lh_s0
    2242U,	// M2_mpyd_rnd_lh_s1
    2306U,	// M2_mpyd_rnd_ll_s0
    2370U,	// M2_mpyd_rnd_ll_s1
    66U,	// M2_mpyi
    0U,	// M2_mpysin
    0U,	// M2_mpysip
    0U,	// M2_mpysu_up
    1093U,	// M2_mpyu_acc_hh_s0
    2053U,	// M2_mpyu_acc_hh_s1
    1157U,	// M2_mpyu_acc_hl_s0
    2117U,	// M2_mpyu_acc_hl_s1
    1093U,	// M2_mpyu_acc_lh_s0
    2053U,	// M2_mpyu_acc_lh_s1
    1157U,	// M2_mpyu_acc_ll_s0
    2117U,	// M2_mpyu_acc_ll_s1
    1090U,	// M2_mpyu_hh_s0
    2050U,	// M2_mpyu_hh_s1
    1154U,	// M2_mpyu_hl_s0
    2114U,	// M2_mpyu_hl_s1
    1090U,	// M2_mpyu_lh_s0
    2050U,	// M2_mpyu_lh_s1
    1154U,	// M2_mpyu_ll_s0
    2114U,	// M2_mpyu_ll_s1
    1093U,	// M2_mpyu_nac_hh_s0
    2053U,	// M2_mpyu_nac_hh_s1
    1157U,	// M2_mpyu_nac_hl_s0
    2117U,	// M2_mpyu_nac_hl_s1
    1093U,	// M2_mpyu_nac_lh_s0
    2053U,	// M2_mpyu_nac_lh_s1
    1157U,	// M2_mpyu_nac_ll_s0
    2117U,	// M2_mpyu_nac_ll_s1
    66U,	// M2_mpyu_up
    1093U,	// M2_mpyud_acc_hh_s0
    2053U,	// M2_mpyud_acc_hh_s1
    1157U,	// M2_mpyud_acc_hl_s0
    2117U,	// M2_mpyud_acc_hl_s1
    1093U,	// M2_mpyud_acc_lh_s0
    2053U,	// M2_mpyud_acc_lh_s1
    1157U,	// M2_mpyud_acc_ll_s0
    2117U,	// M2_mpyud_acc_ll_s1
    1090U,	// M2_mpyud_hh_s0
    2050U,	// M2_mpyud_hh_s1
    1154U,	// M2_mpyud_hl_s0
    2114U,	// M2_mpyud_hl_s1
    1090U,	// M2_mpyud_lh_s0
    2050U,	// M2_mpyud_lh_s1
    1154U,	// M2_mpyud_ll_s0
    2114U,	// M2_mpyud_ll_s1
    1093U,	// M2_mpyud_nac_hh_s0
    2053U,	// M2_mpyud_nac_hh_s1
    1157U,	// M2_mpyud_nac_hl_s0
    2117U,	// M2_mpyud_nac_hl_s1
    1093U,	// M2_mpyud_nac_lh_s0
    2053U,	// M2_mpyud_nac_lh_s1
    1157U,	// M2_mpyud_nac_ll_s0
    2117U,	// M2_mpyud_nac_ll_s1
    69U,	// M2_nacci
    69U,	// M2_naccii
    0U,	// M2_subacc
    0U,	// M2_vabsdiffh
    0U,	// M2_vabsdiffw
    0U,	// M2_vcmac_s0_sat_i
    0U,	// M2_vcmac_s0_sat_r
    0U,	// M2_vcmpy_s0_sat_i
    0U,	// M2_vcmpy_s0_sat_r
    0U,	// M2_vcmpy_s1_sat_i
    0U,	// M2_vcmpy_s1_sat_r
    0U,	// M2_vdmacs_s0
    0U,	// M2_vdmacs_s1
    0U,	// M2_vdmpyrs_s0
    0U,	// M2_vdmpyrs_s1
    0U,	// M2_vdmpys_s0
    0U,	// M2_vdmpys_s1
    0U,	// M2_vmac2
    0U,	// M2_vmac2es
    0U,	// M2_vmac2es_s0
    0U,	// M2_vmac2es_s1
    0U,	// M2_vmac2s_s0
    0U,	// M2_vmac2s_s1
    0U,	// M2_vmac2su_s0
    0U,	// M2_vmac2su_s1
    0U,	// M2_vmpy2es_s0
    0U,	// M2_vmpy2es_s1
    0U,	// M2_vmpy2s_s0
    0U,	// M2_vmpy2s_s0pack
    0U,	// M2_vmpy2s_s1
    0U,	// M2_vmpy2s_s1pack
    0U,	// M2_vmpy2su_s0
    0U,	// M2_vmpy2su_s1
    0U,	// M2_vraddh
    0U,	// M2_vradduh
    0U,	// M2_vrcmaci_s0
    0U,	// M2_vrcmaci_s0c
    0U,	// M2_vrcmacr_s0
    0U,	// M2_vrcmacr_s0c
    0U,	// M2_vrcmpyi_s0
    0U,	// M2_vrcmpyi_s0c
    0U,	// M2_vrcmpyr_s0
    0U,	// M2_vrcmpyr_s0c
    0U,	// M2_vrcmpys_acc_s1_h
    0U,	// M2_vrcmpys_acc_s1_l
    0U,	// M2_vrcmpys_s1_h
    0U,	// M2_vrcmpys_s1_l
    0U,	// M2_vrcmpys_s1rp_h
    0U,	// M2_vrcmpys_s1rp_l
    0U,	// M2_vrmac_s0
    0U,	// M2_vrmpy_s0
    0U,	// M2_xor_xacc
    69U,	// M4_and_and
    69U,	// M4_and_andn
    0U,	// M4_and_or
    0U,	// M4_and_xor
    0U,	// M4_cmpyi_wh
    0U,	// M4_cmpyi_whc
    0U,	// M4_cmpyr_wh
    0U,	// M4_cmpyr_whc
    2629U,	// M4_mac_up_s1_sat
    46412U,	// M4_mpyri_addi
    42473U,	// M4_mpyri_addr
    42U,	// M4_mpyri_addr_u2
    46400U,	// M4_mpyrr_addi
    45801U,	// M4_mpyrr_addr
    2629U,	// M4_nac_up_s1_sat
    69U,	// M4_or_and
    69U,	// M4_or_andn
    69U,	// M4_or_or
    0U,	// M4_or_xor
    0U,	// M4_pmpyw
    0U,	// M4_pmpyw_acc
    0U,	// M4_vpmpyh
    0U,	// M4_vpmpyh_acc
    0U,	// M4_vrmpyeh_acc_s0
    0U,	// M4_vrmpyeh_acc_s1
    0U,	// M4_vrmpyeh_s0
    0U,	// M4_vrmpyeh_s1
    0U,	// M4_vrmpyoh_acc_s0
    0U,	// M4_vrmpyoh_acc_s1
    0U,	// M4_vrmpyoh_s0
    0U,	// M4_vrmpyoh_s1
    69U,	// M4_xor_and
    69U,	// M4_xor_andn
    0U,	// M4_xor_or
    0U,	// M4_xor_xacc
    0U,	// M5_vdmacbsu
    0U,	// M5_vdmpybsu
    0U,	// M5_vmacbsu
    0U,	// M5_vmacbuu
    0U,	// M5_vmpybsu
    0U,	// M5_vmpybuu
    0U,	// M5_vrmacbsu
    0U,	// M5_vrmacbuu
    0U,	// M5_vrmpybsu
    0U,	// M5_vrmpybuu
    0U,	// M6_vabsdiffb
    0U,	// M6_vabsdiffub
    0U,	// PS_call_stk
    0U,	// PS_callr_nr
    0U,	// PS_jmpret
    0U,	// PS_jmpretf
    0U,	// PS_jmpretfnew
    0U,	// PS_jmpretfnewpt
    0U,	// PS_jmprett
    0U,	// PS_jmprettnew
    0U,	// PS_jmprettnewpt
    0U,	// PS_loadrbabs
    0U,	// PS_loadrdabs
    0U,	// PS_loadrhabs
    0U,	// PS_loadriabs
    0U,	// PS_loadrubabs
    0U,	// PS_loadruhabs
    0U,	// PS_storerbabs
    0U,	// PS_storerbnewabs
    0U,	// PS_storerdabs
    0U,	// PS_storerfabs
    0U,	// PS_storerhabs
    0U,	// PS_storerhnewabs
    0U,	// PS_storeriabs
    0U,	// PS_storerinewabs
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT_PIC
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_PIC
    0U,	// RESTORE_DEALLOC_RET_JMP_V4
    0U,	// RESTORE_DEALLOC_RET_JMP_V4_EXT
    0U,	// RESTORE_DEALLOC_RET_JMP_V4_EXT_PIC
    0U,	// RESTORE_DEALLOC_RET_JMP_V4_PIC
    0U,	// S2_addasl_rrri
    38U,	// S2_allocframe
    66U,	// S2_asl_i_p
    69U,	// S2_asl_i_p_acc
    69U,	// S2_asl_i_p_and
    69U,	// S2_asl_i_p_nac
    69U,	// S2_asl_i_p_or
    69U,	// S2_asl_i_p_xacc
    66U,	// S2_asl_i_r
    69U,	// S2_asl_i_r_acc
    69U,	// S2_asl_i_r_and
    69U,	// S2_asl_i_r_nac
    69U,	// S2_asl_i_r_or
    1410U,	// S2_asl_i_r_sat
    69U,	// S2_asl_i_r_xacc
    66U,	// S2_asl_i_vh
    66U,	// S2_asl_i_vw
    66U,	// S2_asl_r_p
    69U,	// S2_asl_r_p_acc
    69U,	// S2_asl_r_p_and
    69U,	// S2_asl_r_p_nac
    69U,	// S2_asl_r_p_or
    69U,	// S2_asl_r_p_xor
    66U,	// S2_asl_r_r
    69U,	// S2_asl_r_r_acc
    69U,	// S2_asl_r_r_and
    69U,	// S2_asl_r_r_nac
    69U,	// S2_asl_r_r_or
    1410U,	// S2_asl_r_r_sat
    66U,	// S2_asl_r_vh
    66U,	// S2_asl_r_vw
    66U,	// S2_asr_i_p
    69U,	// S2_asr_i_p_acc
    69U,	// S2_asr_i_p_and
    69U,	// S2_asr_i_p_nac
    69U,	// S2_asr_i_p_or
    386U,	// S2_asr_i_p_rnd
    66U,	// S2_asr_i_r
    69U,	// S2_asr_i_r_acc
    69U,	// S2_asr_i_r_and
    69U,	// S2_asr_i_r_nac
    69U,	// S2_asr_i_r_or
    386U,	// S2_asr_i_r_rnd
    66U,	// S2_asr_i_svw_trun
    66U,	// S2_asr_i_vh
    66U,	// S2_asr_i_vw
    66U,	// S2_asr_r_p
    69U,	// S2_asr_r_p_acc
    69U,	// S2_asr_r_p_and
    69U,	// S2_asr_r_p_nac
    69U,	// S2_asr_r_p_or
    0U,	// S2_asr_r_p_xor
    66U,	// S2_asr_r_r
    69U,	// S2_asr_r_r_acc
    69U,	// S2_asr_r_r_and
    69U,	// S2_asr_r_r_nac
    69U,	// S2_asr_r_r_or
    1410U,	// S2_asr_r_r_sat
    66U,	// S2_asr_r_svw_trun
    66U,	// S2_asr_r_vh
    66U,	// S2_asr_r_vw
    0U,	// S2_brev
    0U,	// S2_brevp
    0U,	// S2_cabacdecbin
    0U,	// S2_cl0
    0U,	// S2_cl0p
    0U,	// S2_cl1
    0U,	// S2_cl1p
    0U,	// S2_clb
    0U,	// S2_clbnorm
    0U,	// S2_clbp
    66U,	// S2_clrbit_i
    66U,	// S2_clrbit_r
    0U,	// S2_ct0
    0U,	// S2_ct0p
    0U,	// S2_ct1
    0U,	// S2_ct1p
    0U,	// S2_deinterleave
    42434U,	// S2_extractu
    66U,	// S2_extractu_rp
    42434U,	// S2_extractup
    66U,	// S2_extractup_rp
    58821U,	// S2_insert
    69U,	// S2_insert_rp
    58821U,	// S2_insertp
    69U,	// S2_insertp_rp
    0U,	// S2_interleave
    0U,	// S2_lfsp
    0U,	// S2_lsl_r_p
    0U,	// S2_lsl_r_p_acc
    0U,	// S2_lsl_r_p_and
    0U,	// S2_lsl_r_p_nac
    0U,	// S2_lsl_r_p_or
    0U,	// S2_lsl_r_p_xor
    0U,	// S2_lsl_r_r
    0U,	// S2_lsl_r_r_acc
    0U,	// S2_lsl_r_r_and
    0U,	// S2_lsl_r_r_nac
    0U,	// S2_lsl_r_r_or
    0U,	// S2_lsl_r_vh
    0U,	// S2_lsl_r_vw
    66U,	// S2_lsr_i_p
    69U,	// S2_lsr_i_p_acc
    69U,	// S2_lsr_i_p_and
    69U,	// S2_lsr_i_p_nac
    69U,	// S2_lsr_i_p_or
    69U,	// S2_lsr_i_p_xacc
    66U,	// S2_lsr_i_r
    69U,	// S2_lsr_i_r_acc
    69U,	// S2_lsr_i_r_and
    69U,	// S2_lsr_i_r_nac
    69U,	// S2_lsr_i_r_or
    69U,	// S2_lsr_i_r_xacc
    66U,	// S2_lsr_i_vh
    66U,	// S2_lsr_i_vw
    66U,	// S2_lsr_r_p
    69U,	// S2_lsr_r_p_acc
    69U,	// S2_lsr_r_p_and
    69U,	// S2_lsr_r_p_nac
    69U,	// S2_lsr_r_p_or
    69U,	// S2_lsr_r_p_xor
    66U,	// S2_lsr_r_r
    69U,	// S2_lsr_r_r_acc
    69U,	// S2_lsr_r_r_and
    69U,	// S2_lsr_r_r_nac
    69U,	// S2_lsr_r_r_or
    66U,	// S2_lsr_r_vh
    66U,	// S2_lsr_r_vw
    0U,	// S2_mask
    0U,	// S2_packhl
    0U,	// S2_parityp
    61469U,	// S2_pstorerbf_io
    62815U,	// S2_pstorerbf_pi
    62815U,	// S2_pstorerbfnew_pi
    61469U,	// S2_pstorerbnewf_io
    62815U,	// S2_pstorerbnewf_pi
    62815U,	// S2_pstorerbnewfnew_pi
    61469U,	// S2_pstorerbnewt_io
    62815U,	// S2_pstorerbnewt_pi
    62815U,	// S2_pstorerbnewtnew_pi
    61469U,	// S2_pstorerbt_io
    62815U,	// S2_pstorerbt_pi
    62815U,	// S2_pstorerbtnew_pi
    61469U,	// S2_pstorerdf_io
    62815U,	// S2_pstorerdf_pi
    62815U,	// S2_pstorerdfnew_pi
    61469U,	// S2_pstorerdt_io
    62815U,	// S2_pstorerdt_pi
    62815U,	// S2_pstorerdtnew_pi
    61469U,	// S2_pstorerff_io
    62815U,	// S2_pstorerff_pi
    62815U,	// S2_pstorerffnew_pi
    61469U,	// S2_pstorerft_io
    62815U,	// S2_pstorerft_pi
    62815U,	// S2_pstorerftnew_pi
    61469U,	// S2_pstorerhf_io
    62815U,	// S2_pstorerhf_pi
    62815U,	// S2_pstorerhfnew_pi
    61469U,	// S2_pstorerhnewf_io
    62815U,	// S2_pstorerhnewf_pi
    62815U,	// S2_pstorerhnewfnew_pi
    61469U,	// S2_pstorerhnewt_io
    62815U,	// S2_pstorerhnewt_pi
    62815U,	// S2_pstorerhnewtnew_pi
    61469U,	// S2_pstorerht_io
    62815U,	// S2_pstorerht_pi
    62815U,	// S2_pstorerhtnew_pi
    61469U,	// S2_pstorerif_io
    62815U,	// S2_pstorerif_pi
    62815U,	// S2_pstorerifnew_pi
    61469U,	// S2_pstorerinewf_io
    62815U,	// S2_pstorerinewf_pi
    62815U,	// S2_pstorerinewfnew_pi
    61469U,	// S2_pstorerinewt_io
    62815U,	// S2_pstorerinewt_pi
    62815U,	// S2_pstorerinewtnew_pi
    61469U,	// S2_pstorerit_io
    62815U,	// S2_pstorerit_pi
    62815U,	// S2_pstoreritnew_pi
    66U,	// S2_setbit_i
    66U,	// S2_setbit_r
    0U,	// S2_shuffeb
    0U,	// S2_shuffeh
    0U,	// S2_shuffob
    0U,	// S2_shuffoh
    130U,	// S2_storerb_io
    13U,	// S2_storerb_pbr
    13U,	// S2_storerb_pci
    0U,	// S2_storerb_pcr
    133U,	// S2_storerb_pi
    133U,	// S2_storerb_pr
    0U,	// S2_storerbgp
    194U,	// S2_storerbnew_io
    43U,	// S2_storerbnew_pbr
    43U,	// S2_storerbnew_pci
    0U,	// S2_storerbnew_pcr
    197U,	// S2_storerbnew_pi
    197U,	// S2_storerbnew_pr
    0U,	// S2_storerbnewgp
    130U,	// S2_storerd_io
    13U,	// S2_storerd_pbr
    13U,	// S2_storerd_pci
    0U,	// S2_storerd_pcr
    133U,	// S2_storerd_pi
    133U,	// S2_storerd_pr
    0U,	// S2_storerdgp
    258U,	// S2_storerf_io
    8U,	// S2_storerf_pbr
    8U,	// S2_storerf_pci
    0U,	// S2_storerf_pcr
    261U,	// S2_storerf_pi
    261U,	// S2_storerf_pr
    0U,	// S2_storerfgp
    130U,	// S2_storerh_io
    13U,	// S2_storerh_pbr
    13U,	// S2_storerh_pci
    0U,	// S2_storerh_pcr
    133U,	// S2_storerh_pi
    133U,	// S2_storerh_pr
    0U,	// S2_storerhgp
    194U,	// S2_storerhnew_io
    43U,	// S2_storerhnew_pbr
    43U,	// S2_storerhnew_pci
    0U,	// S2_storerhnew_pcr
    197U,	// S2_storerhnew_pi
    197U,	// S2_storerhnew_pr
    0U,	// S2_storerhnewgp
    130U,	// S2_storeri_io
    13U,	// S2_storeri_pbr
    13U,	// S2_storeri_pci
    0U,	// S2_storeri_pcr
    133U,	// S2_storeri_pi
    133U,	// S2_storeri_pr
    0U,	// S2_storerigp
    194U,	// S2_storerinew_io
    43U,	// S2_storerinew_pbr
    43U,	// S2_storerinew_pci
    0U,	// S2_storerinew_pcr
    197U,	// S2_storerinew_pi
    197U,	// S2_storerinew_pr
    0U,	// S2_storerinewgp
    131U,	// S2_storew_locked
    0U,	// S2_svsathb
    0U,	// S2_svsathub
    0U,	// S2_tableidxb
    0U,	// S2_tableidxd
    0U,	// S2_tableidxh
    0U,	// S2_tableidxw
    66U,	// S2_togglebit_i
    66U,	// S2_togglebit_r
    66U,	// S2_tstbit_i
    66U,	// S2_tstbit_r
    69U,	// S2_valignib
    69U,	// S2_valignrb
    0U,	// S2_vcnegh
    0U,	// S2_vcrotate
    0U,	// S2_vrcnegh
    0U,	// S2_vrndpackwh
    0U,	// S2_vrndpackwhs
    0U,	// S2_vsathb
    0U,	// S2_vsathb_nopack
    0U,	// S2_vsathub
    0U,	// S2_vsathub_nopack
    0U,	// S2_vsatwh
    0U,	// S2_vsatwh_nopack
    0U,	// S2_vsatwuh
    0U,	// S2_vsatwuh_nopack
    0U,	// S2_vsplatrb
    0U,	// S2_vsplatrh
    69U,	// S2_vspliceib
    69U,	// S2_vsplicerb
    0U,	// S2_vsxtbh
    0U,	// S2_vsxthw
    0U,	// S2_vtrunehb
    0U,	// S2_vtrunewh
    0U,	// S2_vtrunohb
    0U,	// S2_vtrunowh
    0U,	// S2_vzxtbh
    0U,	// S2_vzxthw
    44U,	// S4_addaddi
    0U,	// S4_addi_asl_ri
    0U,	// S4_addi_lsr_ri
    0U,	// S4_andi_asl_ri
    0U,	// S4_andi_lsr_ri
    0U,	// S4_clbaddi
    0U,	// S4_clbpaddi
    0U,	// S4_clbpnorm
    42434U,	// S4_extract
    66U,	// S4_extract_rp
    42434U,	// S4_extractp
    66U,	// S4_extractp_rp
    0U,	// S4_lsli
    66U,	// S4_ntstbit_i
    66U,	// S4_ntstbit_r
    69U,	// S4_or_andi
    46412U,	// S4_or_andix
    69U,	// S4_or_ori
    0U,	// S4_ori_asl_ri
    0U,	// S4_ori_lsr_ri
    0U,	// S4_parity
    0U,	// S4_pstorerbf_abs
    173U,	// S4_pstorerbf_rr
    0U,	// S4_pstorerbfnew_abs
    61469U,	// S4_pstorerbfnew_io
    173U,	// S4_pstorerbfnew_rr
    0U,	// S4_pstorerbnewf_abs
    237U,	// S4_pstorerbnewf_rr
    0U,	// S4_pstorerbnewfnew_abs
    61469U,	// S4_pstorerbnewfnew_io
    237U,	// S4_pstorerbnewfnew_rr
    0U,	// S4_pstorerbnewt_abs
    237U,	// S4_pstorerbnewt_rr
    0U,	// S4_pstorerbnewtnew_abs
    61469U,	// S4_pstorerbnewtnew_io
    237U,	// S4_pstorerbnewtnew_rr
    0U,	// S4_pstorerbt_abs
    173U,	// S4_pstorerbt_rr
    0U,	// S4_pstorerbtnew_abs
    61469U,	// S4_pstorerbtnew_io
    173U,	// S4_pstorerbtnew_rr
    0U,	// S4_pstorerdf_abs
    173U,	// S4_pstorerdf_rr
    0U,	// S4_pstorerdfnew_abs
    61469U,	// S4_pstorerdfnew_io
    173U,	// S4_pstorerdfnew_rr
    0U,	// S4_pstorerdt_abs
    173U,	// S4_pstorerdt_rr
    0U,	// S4_pstorerdtnew_abs
    61469U,	// S4_pstorerdtnew_io
    173U,	// S4_pstorerdtnew_rr
    0U,	// S4_pstorerff_abs
    301U,	// S4_pstorerff_rr
    0U,	// S4_pstorerffnew_abs
    61469U,	// S4_pstorerffnew_io
    301U,	// S4_pstorerffnew_rr
    0U,	// S4_pstorerft_abs
    301U,	// S4_pstorerft_rr
    0U,	// S4_pstorerftnew_abs
    61469U,	// S4_pstorerftnew_io
    301U,	// S4_pstorerftnew_rr
    0U,	// S4_pstorerhf_abs
    173U,	// S4_pstorerhf_rr
    0U,	// S4_pstorerhfnew_abs
    61469U,	// S4_pstorerhfnew_io
    173U,	// S4_pstorerhfnew_rr
    0U,	// S4_pstorerhnewf_abs
    237U,	// S4_pstorerhnewf_rr
    0U,	// S4_pstorerhnewfnew_abs
    61469U,	// S4_pstorerhnewfnew_io
    237U,	// S4_pstorerhnewfnew_rr
    0U,	// S4_pstorerhnewt_abs
    237U,	// S4_pstorerhnewt_rr
    0U,	// S4_pstorerhnewtnew_abs
    61469U,	// S4_pstorerhnewtnew_io
    237U,	// S4_pstorerhnewtnew_rr
    0U,	// S4_pstorerht_abs
    173U,	// S4_pstorerht_rr
    0U,	// S4_pstorerhtnew_abs
    61469U,	// S4_pstorerhtnew_io
    173U,	// S4_pstorerhtnew_rr
    0U,	// S4_pstorerif_abs
    173U,	// S4_pstorerif_rr
    0U,	// S4_pstorerifnew_abs
    61469U,	// S4_pstorerifnew_io
    173U,	// S4_pstorerifnew_rr
    0U,	// S4_pstorerinewf_abs
    237U,	// S4_pstorerinewf_rr
    0U,	// S4_pstorerinewfnew_abs
    61469U,	// S4_pstorerinewfnew_io
    237U,	// S4_pstorerinewfnew_rr
    0U,	// S4_pstorerinewt_abs
    237U,	// S4_pstorerinewt_rr
    0U,	// S4_pstorerinewtnew_abs
    61469U,	// S4_pstorerinewtnew_io
    237U,	// S4_pstorerinewtnew_rr
    0U,	// S4_pstorerit_abs
    173U,	// S4_pstorerit_rr
    0U,	// S4_pstoreritnew_abs
    61469U,	// S4_pstoreritnew_io
    173U,	// S4_pstoreritnew_rr
    131U,	// S4_stored_locked
    0U,	// S4_storeirb_io
    29U,	// S4_storeirbf_io
    29U,	// S4_storeirbfnew_io
    29U,	// S4_storeirbt_io
    29U,	// S4_storeirbtnew_io
    0U,	// S4_storeirh_io
    29U,	// S4_storeirhf_io
    29U,	// S4_storeirhfnew_io
    29U,	// S4_storeirht_io
    29U,	// S4_storeirhtnew_io
    0U,	// S4_storeiri_io
    29U,	// S4_storeirif_io
    29U,	// S4_storeirifnew_io
    29U,	// S4_storeirit_io
    29U,	// S4_storeiritnew_io
    0U,	// S4_storerb_ap
    0U,	// S4_storerb_rr
    0U,	// S4_storerb_ur
    0U,	// S4_storerbnew_ap
    0U,	// S4_storerbnew_rr
    0U,	// S4_storerbnew_ur
    0U,	// S4_storerd_ap
    0U,	// S4_storerd_rr
    0U,	// S4_storerd_ur
    0U,	// S4_storerf_ap
    0U,	// S4_storerf_rr
    0U,	// S4_storerf_ur
    0U,	// S4_storerh_ap
    0U,	// S4_storerh_rr
    0U,	// S4_storerh_ur
    0U,	// S4_storerhnew_ap
    0U,	// S4_storerhnew_rr
    0U,	// S4_storerhnew_ur
    0U,	// S4_storeri_ap
    0U,	// S4_storeri_rr
    0U,	// S4_storeri_ur
    0U,	// S4_storerinew_ap
    0U,	// S4_storerinew_rr
    0U,	// S4_storerinew_ur
    46U,	// S4_subaddi
    0U,	// S4_subi_asl_ri
    0U,	// S4_subi_lsr_ri
    0U,	// S4_vrcrotate
    0U,	// S4_vrcrotate_acc
    0U,	// S4_vxaddsubh
    0U,	// S4_vxaddsubhr
    0U,	// S4_vxaddsubw
    0U,	// S4_vxsubaddh
    0U,	// S4_vxsubaddhr
    0U,	// S4_vxsubaddw
    2690U,	// S5_asrhub_rnd_sat
    1410U,	// S5_asrhub_sat
    0U,	// S5_popcountp
    2690U,	// S5_vasrhrnd
    0U,	// S6_rol_i_p
    0U,	// S6_rol_i_p_acc
    0U,	// S6_rol_i_p_and
    0U,	// S6_rol_i_p_nac
    0U,	// S6_rol_i_p_or
    0U,	// S6_rol_i_p_xacc
    0U,	// S6_rol_i_r
    0U,	// S6_rol_i_r_acc
    0U,	// S6_rol_i_r_and
    0U,	// S6_rol_i_r_nac
    0U,	// S6_rol_i_r_or
    0U,	// S6_rol_i_r_xacc
    0U,	// S6_vsplatrbp
    66U,	// S6_vtrunehb_ppp
    66U,	// S6_vtrunohb_ppp
    12U,	// SA1_addi
    0U,	// SA1_addrx
    0U,	// SA1_addsp
    0U,	// SA1_and1
    0U,	// SA1_clrf
    0U,	// SA1_clrfnew
    0U,	// SA1_clrt
    0U,	// SA1_clrtnew
    1U,	// SA1_cmpeqi
    0U,	// SA1_combine0i
    0U,	// SA1_combine1i
    0U,	// SA1_combine2i
    0U,	// SA1_combine3i
    0U,	// SA1_combinerz
    0U,	// SA1_combinezr
    12U,	// SA1_dec
    47U,	// SA1_inc
    0U,	// SA1_seti
    0U,	// SA1_setin1
    0U,	// SA1_sxtb
    0U,	// SA1_sxth
    0U,	// SA1_tfr
    0U,	// SA1_zxtb
    0U,	// SA1_zxth
    0U,	// SAVE_REGISTERS_CALL_V4
    0U,	// SAVE_REGISTERS_CALL_V4STK
    0U,	// SAVE_REGISTERS_CALL_V4STK_EXT
    0U,	// SAVE_REGISTERS_CALL_V4STK_EXT_PIC
    0U,	// SAVE_REGISTERS_CALL_V4STK_PIC
    0U,	// SAVE_REGISTERS_CALL_V4_EXT
    0U,	// SAVE_REGISTERS_CALL_V4_EXT_PIC
    0U,	// SAVE_REGISTERS_CALL_V4_PIC
    1U,	// SL1_loadri_io
    1U,	// SL1_loadrub_io
    0U,	// SL2_deallocframe
    0U,	// SL2_jumpr31
    0U,	// SL2_jumpr31_f
    0U,	// SL2_jumpr31_fnew
    0U,	// SL2_jumpr31_t
    0U,	// SL2_jumpr31_tnew
    1U,	// SL2_loadrb_io
    0U,	// SL2_loadrd_sp
    1U,	// SL2_loadrh_io
    0U,	// SL2_loadri_sp
    1U,	// SL2_loadruh_io
    0U,	// SL2_return
    0U,	// SL2_return_f
    0U,	// SL2_return_fnew
    0U,	// SL2_return_t
    0U,	// SL2_return_tnew
    130U,	// SS1_storeb_io
    130U,	// SS1_storew_io
    0U,	// SS2_allocframe
    0U,	// SS2_storebi0
    0U,	// SS2_storebi1
    0U,	// SS2_stored_sp
    130U,	// SS2_storeh_io
    0U,	// SS2_storew_sp
    0U,	// SS2_storewi0
    0U,	// SS2_storewi1
    66U,	// TFRI64_V2_ext
    0U,	// TFRI64_V4
    0U,	// V6_extractw
    0U,	// V6_lvsplatb
    0U,	// V6_lvsplath
    0U,	// V6_lvsplatw
    66U,	// V6_pred_and
    0U,	// V6_pred_and_n
    0U,	// V6_pred_not
    66U,	// V6_pred_or
    0U,	// V6_pred_or_n
    0U,	// V6_pred_scalar2
    0U,	// V6_pred_scalar2v2
    0U,	// V6_pred_xor
    1090U,	// V6_shuffeqh
    2754U,	// V6_shuffeqw
    1U,	// V6_vL32Ub_ai
    1U,	// V6_vL32Ub_pi
    1U,	// V6_vL32Ub_ppu
    1U,	// V6_vL32b_ai
    1U,	// V6_vL32b_cur_ai
    1602U,	// V6_vL32b_cur_npred_ai
    1699U,	// V6_vL32b_cur_npred_pi
    2851U,	// V6_vL32b_cur_npred_ppu
    1U,	// V6_vL32b_cur_pi
    1U,	// V6_vL32b_cur_ppu
    1602U,	// V6_vL32b_cur_pred_ai
    1699U,	// V6_vL32b_cur_pred_pi
    2851U,	// V6_vL32b_cur_pred_ppu
    1602U,	// V6_vL32b_npred_ai
    1699U,	// V6_vL32b_npred_pi
    2851U,	// V6_vL32b_npred_ppu
    48U,	// V6_vL32b_nt_ai
    48U,	// V6_vL32b_nt_cur_ai
    5698U,	// V6_vL32b_nt_cur_npred_ai
    5795U,	// V6_vL32b_nt_cur_npred_pi
    6947U,	// V6_vL32b_nt_cur_npred_ppu
    48U,	// V6_vL32b_nt_cur_pi
    48U,	// V6_vL32b_nt_cur_ppu
    5698U,	// V6_vL32b_nt_cur_pred_ai
    5795U,	// V6_vL32b_nt_cur_pred_pi
    6947U,	// V6_vL32b_nt_cur_pred_ppu
    5698U,	// V6_vL32b_nt_npred_ai
    5795U,	// V6_vL32b_nt_npred_pi
    6947U,	// V6_vL32b_nt_npred_ppu
    48U,	// V6_vL32b_nt_pi
    48U,	// V6_vL32b_nt_ppu
    5698U,	// V6_vL32b_nt_pred_ai
    5795U,	// V6_vL32b_nt_pred_pi
    6947U,	// V6_vL32b_nt_pred_ppu
    48U,	// V6_vL32b_nt_tmp_ai
    5698U,	// V6_vL32b_nt_tmp_npred_ai
    5795U,	// V6_vL32b_nt_tmp_npred_pi
    6947U,	// V6_vL32b_nt_tmp_npred_ppu
    48U,	// V6_vL32b_nt_tmp_pi
    48U,	// V6_vL32b_nt_tmp_ppu
    5698U,	// V6_vL32b_nt_tmp_pred_ai
    5795U,	// V6_vL32b_nt_tmp_pred_pi
    6947U,	// V6_vL32b_nt_tmp_pred_ppu
    1U,	// V6_vL32b_pi
    1U,	// V6_vL32b_ppu
    1602U,	// V6_vL32b_pred_ai
    1699U,	// V6_vL32b_pred_pi
    2851U,	// V6_vL32b_pred_ppu
    1U,	// V6_vL32b_tmp_ai
    1602U,	// V6_vL32b_tmp_npred_ai
    1699U,	// V6_vL32b_tmp_npred_pi
    2851U,	// V6_vL32b_tmp_npred_ppu
    1U,	// V6_vL32b_tmp_pi
    1U,	// V6_vL32b_tmp_ppu
    1602U,	// V6_vL32b_tmp_pred_ai
    1699U,	// V6_vL32b_tmp_pred_pi
    2851U,	// V6_vL32b_tmp_pred_ppu
    130U,	// V6_vS32Ub_ai
    61469U,	// V6_vS32Ub_npred_ai
    62815U,	// V6_vS32Ub_npred_pi
    62814U,	// V6_vS32Ub_npred_ppu
    133U,	// V6_vS32Ub_pi
    133U,	// V6_vS32Ub_ppu
    61469U,	// V6_vS32Ub_pred_ai
    62815U,	// V6_vS32Ub_pred_pi
    62814U,	// V6_vS32Ub_pred_ppu
    130U,	// V6_vS32b_ai
    194U,	// V6_vS32b_new_ai
    61469U,	// V6_vS32b_new_npred_ai
    62815U,	// V6_vS32b_new_npred_pi
    62814U,	// V6_vS32b_new_npred_ppu
    197U,	// V6_vS32b_new_pi
    197U,	// V6_vS32b_new_ppu
    61469U,	// V6_vS32b_new_pred_ai
    62815U,	// V6_vS32b_new_pred_pi
    62814U,	// V6_vS32b_new_pred_ppu
    61469U,	// V6_vS32b_npred_ai
    62815U,	// V6_vS32b_npred_pi
    62814U,	// V6_vS32b_npred_ppu
    61469U,	// V6_vS32b_nqpred_ai
    62815U,	// V6_vS32b_nqpred_pi
    62814U,	// V6_vS32b_nqpred_ppu
    130U,	// V6_vS32b_nt_ai
    194U,	// V6_vS32b_nt_new_ai
    8221U,	// V6_vS32b_nt_new_npred_ai
    9567U,	// V6_vS32b_nt_new_npred_pi
    9566U,	// V6_vS32b_nt_new_npred_ppu
    197U,	// V6_vS32b_nt_new_pi
    197U,	// V6_vS32b_nt_new_ppu
    8221U,	// V6_vS32b_nt_new_pred_ai
    9567U,	// V6_vS32b_nt_new_pred_pi
    9566U,	// V6_vS32b_nt_new_pred_ppu
    8221U,	// V6_vS32b_nt_npred_ai
    9567U,	// V6_vS32b_nt_npred_pi
    9566U,	// V6_vS32b_nt_npred_ppu
    8221U,	// V6_vS32b_nt_nqpred_ai
    9567U,	// V6_vS32b_nt_nqpred_pi
    9566U,	// V6_vS32b_nt_nqpred_ppu
    133U,	// V6_vS32b_nt_pi
    133U,	// V6_vS32b_nt_ppu
    8221U,	// V6_vS32b_nt_pred_ai
    9567U,	// V6_vS32b_nt_pred_pi
    9566U,	// V6_vS32b_nt_pred_ppu
    8221U,	// V6_vS32b_nt_qpred_ai
    9567U,	// V6_vS32b_nt_qpred_pi
    9566U,	// V6_vS32b_nt_qpred_ppu
    133U,	// V6_vS32b_pi
    133U,	// V6_vS32b_ppu
    61469U,	// V6_vS32b_pred_ai
    62815U,	// V6_vS32b_pred_pi
    62814U,	// V6_vS32b_pred_ppu
    61469U,	// V6_vS32b_qpred_ai
    62815U,	// V6_vS32b_qpred_pi
    62814U,	// V6_vS32b_qpred_ppu
    0U,	// V6_vS32b_srls_ai
    0U,	// V6_vS32b_srls_pi
    0U,	// V6_vS32b_srls_ppu
    0U,	// V6_vabsb
    0U,	// V6_vabsb_sat
    1090U,	// V6_vabsdiffh
    0U,	// V6_vabsdiffub
    514U,	// V6_vabsdiffuh
    0U,	// V6_vabsdiffw
    0U,	// V6_vabsh
    0U,	// V6_vabsh_sat
    0U,	// V6_vabsw
    0U,	// V6_vabsw_sat
    0U,	// V6_vaddb
    0U,	// V6_vaddb_dv
    0U,	// V6_vaddbnq
    0U,	// V6_vaddbq
    0U,	// V6_vaddbsat
    0U,	// V6_vaddbsat_dv
    13681U,	// V6_vaddcarry
    0U,	// V6_vaddcarryo
    12337U,	// V6_vaddcarrysat
    0U,	// V6_vaddclbh
    0U,	// V6_vaddclbw
    1090U,	// V6_vaddh
    1090U,	// V6_vaddh_dv
    0U,	// V6_vaddhnq
    0U,	// V6_vaddhq
    1218U,	// V6_vaddhsat
    1218U,	// V6_vaddhsat_dv
    1098U,	// V6_vaddhw
    1093U,	// V6_vaddhw_acc
    450U,	// V6_vaddubh
    0U,	// V6_vaddubh_acc
    0U,	// V6_vaddubsat
    0U,	// V6_vaddubsat_dv
    0U,	// V6_vaddububb_sat
    0U,	// V6_vadduhsat
    0U,	// V6_vadduhsat_dv
    50U,	// V6_vadduhw
    517U,	// V6_vadduhw_acc
    0U,	// V6_vadduwsat
    0U,	// V6_vadduwsat_dv
    16433U,	// V6_vaddw
    16433U,	// V6_vaddw_dv
    0U,	// V6_vaddwnq
    0U,	// V6_vaddwq
    20529U,	// V6_vaddwsat
    20529U,	// V6_vaddwsat_dv
    69U,	// V6_valignb
    69U,	// V6_valignbi
    0U,	// V6_vand
    0U,	// V6_vandnqrt
    0U,	// V6_vandnqrt_acc
    0U,	// V6_vandqrt
    0U,	// V6_vandqrt_acc
    0U,	// V6_vandvnqv
    0U,	// V6_vandvqv
    0U,	// V6_vandvrt
    0U,	// V6_vandvrt_acc
    0U,	// V6_vaslh
    0U,	// V6_vaslh_acc
    0U,	// V6_vaslhv
    0U,	// V6_vaslw
    0U,	// V6_vaslw_acc
    0U,	// V6_vaslwv
    0U,	// V6_vasr_into
    66U,	// V6_vasrh
    0U,	// V6_vasrh_acc
    0U,	// V6_vasrhbrndsat
    0U,	// V6_vasrhbsat
    6978U,	// V6_vasrhubrndsat
    11074U,	// V6_vasrhubsat
    1090U,	// V6_vasrhv
    7042U,	// V6_vasruhubrndsat
    11138U,	// V6_vasruhubsat
    7106U,	// V6_vasruwuhrndsat
    11202U,	// V6_vasruwuhsat
    0U,	// V6_vasrw
    0U,	// V6_vasrw_acc
    3074U,	// V6_vasrwh
    7170U,	// V6_vasrwhrndsat
    11266U,	// V6_vasrwhsat
    7170U,	// V6_vasrwuhrndsat
    11266U,	// V6_vasrwuhsat
    0U,	// V6_vasrwv
    0U,	// V6_vassign
    0U,	// V6_vavgb
    0U,	// V6_vavgbrnd
    0U,	// V6_vavgh
    0U,	// V6_vavghrnd
    0U,	// V6_vavgub
    0U,	// V6_vavgubrnd
    0U,	// V6_vavguh
    0U,	// V6_vavguhrnd
    0U,	// V6_vavguw
    0U,	// V6_vavguwrnd
    0U,	// V6_vavgw
    0U,	// V6_vavgwrnd
    0U,	// V6_vccombine
    0U,	// V6_vcl0h
    0U,	// V6_vcl0w
    0U,	// V6_vcmov
    0U,	// V6_vcombine
    768U,	// V6_vdeal
    0U,	// V6_vdealb
    0U,	// V6_vdealb4w
    0U,	// V6_vdealh
    0U,	// V6_vdealvdd
    0U,	// V6_vdelta
    0U,	// V6_vdmpybus
    0U,	// V6_vdmpybus_acc
    0U,	// V6_vdmpybus_dv
    0U,	// V6_vdmpybus_dv_acc
    0U,	// V6_vdmpyhb
    0U,	// V6_vdmpyhb_acc
    0U,	// V6_vdmpyhb_dv
    0U,	// V6_vdmpyhb_dv_acc
    0U,	// V6_vdmpyhisat
    0U,	// V6_vdmpyhisat_acc
    0U,	// V6_vdmpyhsat
    0U,	// V6_vdmpyhsat_acc
    0U,	// V6_vdmpyhsuisat
    0U,	// V6_vdmpyhsuisat_acc
    0U,	// V6_vdmpyhsusat
    0U,	// V6_vdmpyhsusat_acc
    0U,	// V6_vdmpyhvsat
    0U,	// V6_vdmpyhvsat_acc
    0U,	// V6_vdsaduh
    0U,	// V6_vdsaduh_acc
    3138U,	// V6_veqb
    3141U,	// V6_veqb_and
    3141U,	// V6_veqb_or
    3141U,	// V6_veqb_xor
    1090U,	// V6_veqh
    1093U,	// V6_veqh_and
    1093U,	// V6_veqh_or
    1093U,	// V6_veqh_xor
    2754U,	// V6_veqw
    2757U,	// V6_veqw_and
    2757U,	// V6_veqw_or
    2757U,	// V6_veqw_xor
    24576U,	// V6_vgathermh
    0U,	// V6_vgathermhq
    28672U,	// V6_vgathermhw
    0U,	// V6_vgathermhwq
    32768U,	// V6_vgathermw
    0U,	// V6_vgathermwq
    3138U,	// V6_vgtb
    3141U,	// V6_vgtb_and
    3141U,	// V6_vgtb_or
    3141U,	// V6_vgtb_xor
    1090U,	// V6_vgth
    1093U,	// V6_vgth_and
    1093U,	// V6_vgth_or
    1093U,	// V6_vgth_xor
    450U,	// V6_vgtub
    453U,	// V6_vgtub_and
    453U,	// V6_vgtub_or
    453U,	// V6_vgtub_xor
    514U,	// V6_vgtuh
    517U,	// V6_vgtuh_and
    517U,	// V6_vgtuh_or
    517U,	// V6_vgtuh_xor
    578U,	// V6_vgtuw
    581U,	// V6_vgtuw_and
    581U,	// V6_vgtuw_or
    581U,	// V6_vgtuw_xor
    2754U,	// V6_vgtw
    2757U,	// V6_vgtw_and
    2757U,	// V6_vgtw_or
    2757U,	// V6_vgtw_xor
    0U,	// V6_vhist
    0U,	// V6_vhistq
    0U,	// V6_vinsertwr
    69U,	// V6_vlalignb
    69U,	// V6_vlalignbi
    0U,	// V6_vlsrb
    0U,	// V6_vlsrh
    0U,	// V6_vlsrhv
    0U,	// V6_vlsrw
    0U,	// V6_vlsrwv
    0U,	// V6_vlut4
    69U,	// V6_vlutvvb
    3205U,	// V6_vlutvvb_nm
    71U,	// V6_vlutvvb_oracc
    71U,	// V6_vlutvvb_oracci
    69U,	// V6_vlutvvbi
    69U,	// V6_vlutvwh
    3205U,	// V6_vlutvwh_nm
    71U,	// V6_vlutvwh_oracc
    71U,	// V6_vlutvwh_oracci
    69U,	// V6_vlutvwhi
    0U,	// V6_vmaxb
    0U,	// V6_vmaxh
    0U,	// V6_vmaxub
    0U,	// V6_vmaxuh
    0U,	// V6_vmaxw
    0U,	// V6_vminb
    0U,	// V6_vminh
    0U,	// V6_vminub
    0U,	// V6_vminuh
    0U,	// V6_vminw
    3138U,	// V6_vmpabus
    0U,	// V6_vmpabus_acc
    3138U,	// V6_vmpabusv
    450U,	// V6_vmpabuu
    0U,	// V6_vmpabuu_acc
    450U,	// V6_vmpabuuv
    3138U,	// V6_vmpahb
    3141U,	// V6_vmpahb_acc
    39746U,	// V6_vmpahhsat
    3138U,	// V6_vmpauhb
    3141U,	// V6_vmpauhb_acc
    43906U,	// V6_vmpauhuhsat
    0U,	// V6_vmpsuhuhsat
    3138U,	// V6_vmpybus
    3141U,	// V6_vmpybus_acc
    3138U,	// V6_vmpybusv
    3141U,	// V6_vmpybusv_acc
    3138U,	// V6_vmpybv
    3141U,	// V6_vmpybv_acc
    0U,	// V6_vmpyewuh
    0U,	// V6_vmpyewuh_64
    0U,	// V6_vmpyh
    0U,	// V6_vmpyh_acc
    0U,	// V6_vmpyhsat_acc
    1794U,	// V6_vmpyhsrs
    1858U,	// V6_vmpyhss
    0U,	// V6_vmpyhus
    0U,	// V6_vmpyhus_acc
    0U,	// V6_vmpyhv
    0U,	// V6_vmpyhv_acc
    1794U,	// V6_vmpyhvsrs
    0U,	// V6_vmpyieoh
    0U,	// V6_vmpyiewh_acc
    0U,	// V6_vmpyiewuh
    0U,	// V6_vmpyiewuh_acc
    0U,	// V6_vmpyih
    0U,	// V6_vmpyih_acc
    0U,	// V6_vmpyihb
    0U,	// V6_vmpyihb_acc
    0U,	// V6_vmpyiowh
    0U,	// V6_vmpyiwb
    0U,	// V6_vmpyiwb_acc
    0U,	// V6_vmpyiwh
    0U,	// V6_vmpyiwh_acc
    0U,	// V6_vmpyiwub
    0U,	// V6_vmpyiwub_acc
    0U,	// V6_vmpyowh
    0U,	// V6_vmpyowh_64_acc
    0U,	// V6_vmpyowh_rnd
    0U,	// V6_vmpyowh_rnd_sacc
    0U,	// V6_vmpyowh_sacc
    0U,	// V6_vmpyub
    0U,	// V6_vmpyub_acc
    0U,	// V6_vmpyubv
    0U,	// V6_vmpyubv_acc
    0U,	// V6_vmpyuh
    0U,	// V6_vmpyuh_acc
    0U,	// V6_vmpyuhe
    0U,	// V6_vmpyuhe_acc
    0U,	// V6_vmpyuhv
    0U,	// V6_vmpyuhv_acc
    0U,	// V6_vmux
    3138U,	// V6_vnavgb
    0U,	// V6_vnavgh
    450U,	// V6_vnavgub
    0U,	// V6_vnavgw
    0U,	// V6_vnccombine
    0U,	// V6_vncmov
    0U,	// V6_vnormamth
    0U,	// V6_vnormamtw
    0U,	// V6_vnot
    0U,	// V6_vor
    0U,	// V6_vpackeb
    0U,	// V6_vpackeh
    0U,	// V6_vpackhb_sat
    0U,	// V6_vpackhub_sat
    0U,	// V6_vpackob
    0U,	// V6_vpackoh
    0U,	// V6_vpackwh_sat
    0U,	// V6_vpackwuh_sat
    0U,	// V6_vpopcounth
    0U,	// V6_vprefixqb
    0U,	// V6_vprefixqh
    0U,	// V6_vprefixqw
    0U,	// V6_vrdelta
    450U,	// V6_vrmpybub_rtt
    453U,	// V6_vrmpybub_rtt_acc
    3138U,	// V6_vrmpybus
    3141U,	// V6_vrmpybus_acc
    44226U,	// V6_vrmpybusi
    60613U,	// V6_vrmpybusi_acc
    3138U,	// V6_vrmpybusv
    3141U,	// V6_vrmpybusv_acc
    3138U,	// V6_vrmpybv
    3141U,	// V6_vrmpybv_acc
    0U,	// V6_vrmpyub
    0U,	// V6_vrmpyub_acc
    0U,	// V6_vrmpyub_rtt
    0U,	// V6_vrmpyub_rtt_acc
    69U,	// V6_vrmpyubi
    71U,	// V6_vrmpyubi_acc
    0U,	// V6_vrmpyubv
    0U,	// V6_vrmpyubv_acc
    45107U,	// V6_vrmpyzbb_rt
    46451U,	// V6_vrmpyzbb_rt_acc
    52531U,	// V6_vrmpyzbb_rx
    52531U,	// V6_vrmpyzbb_rx_acc
    53299U,	// V6_vrmpyzbub_rt
    54643U,	// V6_vrmpyzbub_rt_acc
    60723U,	// V6_vrmpyzbub_rx
    60723U,	// V6_vrmpyzbub_rx_acc
    45108U,	// V6_vrmpyzcb_rt
    46452U,	// V6_vrmpyzcb_rt_acc
    52532U,	// V6_vrmpyzcb_rx
    52532U,	// V6_vrmpyzcb_rx_acc
    45108U,	// V6_vrmpyzcbs_rt
    46452U,	// V6_vrmpyzcbs_rt_acc
    52532U,	// V6_vrmpyzcbs_rx
    52532U,	// V6_vrmpyzcbs_rx_acc
    45109U,	// V6_vrmpyznb_rt
    46453U,	// V6_vrmpyznb_rt_acc
    52533U,	// V6_vrmpyznb_rx
    52533U,	// V6_vrmpyznb_rx_acc
    0U,	// V6_vror
    0U,	// V6_vrotr
    0U,	// V6_vroundhb
    1218U,	// V6_vroundhub
    3394U,	// V6_vrounduhub
    3458U,	// V6_vrounduwuh
    0U,	// V6_vroundwh
    3522U,	// V6_vroundwuh
    0U,	// V6_vrsadubi
    0U,	// V6_vrsadubi_acc
    0U,	// V6_vsatdw
    0U,	// V6_vsathub
    0U,	// V6_vsatuwuh
    0U,	// V6_vsatwh
    0U,	// V6_vsb
    61440U,	// V6_vscattermh
    0U,	// V6_vscattermh_add
    0U,	// V6_vscattermhq
    4096U,	// V6_vscattermhw
    8192U,	// V6_vscattermhw_add
    0U,	// V6_vscattermhwq
    12288U,	// V6_vscattermw
    16384U,	// V6_vscattermw_add
    0U,	// V6_vscattermwq
    0U,	// V6_vsh
    1090U,	// V6_vshufeh
    768U,	// V6_vshuff
    0U,	// V6_vshuffb
    3138U,	// V6_vshuffeb
    0U,	// V6_vshuffh
    0U,	// V6_vshuffob
    0U,	// V6_vshuffvdd
    0U,	// V6_vshufoeb
    0U,	// V6_vshufoeh
    0U,	// V6_vshufoh
    0U,	// V6_vsubb
    0U,	// V6_vsubb_dv
    0U,	// V6_vsubbnq
    0U,	// V6_vsubbq
    0U,	// V6_vsubbsat
    0U,	// V6_vsubbsat_dv
    13681U,	// V6_vsubcarry
    0U,	// V6_vsubcarryo
    1090U,	// V6_vsubh
    1090U,	// V6_vsubh_dv
    0U,	// V6_vsubhnq
    0U,	// V6_vsubhq
    1218U,	// V6_vsubhsat
    1218U,	// V6_vsubhsat_dv
    1098U,	// V6_vsubhw
    450U,	// V6_vsububh
    0U,	// V6_vsububsat
    0U,	// V6_vsububsat_dv
    0U,	// V6_vsubububb_sat
    0U,	// V6_vsubuhsat
    0U,	// V6_vsubuhsat_dv
    50U,	// V6_vsubuhw
    0U,	// V6_vsubuwsat
    0U,	// V6_vsubuwsat_dv
    16433U,	// V6_vsubw
    16433U,	// V6_vsubw_dv
    0U,	// V6_vsubwnq
    0U,	// V6_vsubwq
    20529U,	// V6_vsubwsat
    20529U,	// V6_vsubwsat_dv
    0U,	// V6_vswap
    3138U,	// V6_vtmpyb
    3141U,	// V6_vtmpyb_acc
    3138U,	// V6_vtmpybus
    3141U,	// V6_vtmpybus_acc
    0U,	// V6_vtmpyhb
    0U,	// V6_vtmpyhb_acc
    0U,	// V6_vunpackb
    0U,	// V6_vunpackh
    0U,	// V6_vunpackob
    0U,	// V6_vunpackoh
    0U,	// V6_vunpackub
    0U,	// V6_vunpackuh
    0U,	// V6_vwhist128
    0U,	// V6_vwhist128m
    0U,	// V6_vwhist128q
    1U,	// V6_vwhist128qm
    0U,	// V6_vwhist256
    0U,	// V6_vwhist256_sat
    0U,	// V6_vwhist256q
    0U,	// V6_vwhist256q_sat
    0U,	// V6_vxor
    0U,	// V6_vzb
    0U,	// V6_vzh
    0U,	// V6_zLd_ai
    0U,	// V6_zLd_pi
    0U,	// V6_zLd_ppu
    29U,	// V6_zLd_pred_ai
    1375U,	// V6_zLd_pred_pi
    1374U,	// V6_zLd_pred_ppu
    0U,	// V6_zextract
    0U,	// Y2_barrier
    0U,	// Y2_break
    0U,	// Y2_dccleana
    0U,	// Y2_dccleaninva
    0U,	// Y2_dcfetchbo
    0U,	// Y2_dcinva
    0U,	// Y2_dczeroa
    0U,	// Y2_icinva
    0U,	// Y2_isync
    0U,	// Y2_syncht
    0U,	// Y2_wait
    1U,	// Y4_l2fetch
    0U,	// Y4_trace
    1U,	// Y5_l2fetch
    20480U,	// dep_A2_addsat
    20480U,	// dep_A2_subsat
    0U,	// dep_S2_packhl
  };

  static const uint8_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTR_MASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// A2_addsp
    0U,	// A2_iconst
    0U,	// A2_neg
    0U,	// A2_not
    0U,	// A2_tfrf
    0U,	// A2_tfrfnew
    0U,	// A2_tfrp
    0U,	// A2_tfrpf
    0U,	// A2_tfrpfnew
    0U,	// A2_tfrpi
    0U,	// A2_tfrpt
    0U,	// A2_tfrptnew
    0U,	// A2_tfrt
    0U,	// A2_tfrtnew
    0U,	// A2_vaddb_map
    0U,	// A2_vsubb_map
    0U,	// A2_zxtb
    0U,	// A4_boundscheck
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// C2_cmpgei
    0U,	// C2_cmpgeui
    0U,	// C2_cmplt
    0U,	// C2_cmpltu
    0U,	// C2_pxfer_map
    0U,	// DUPLEX_Pseudo
    0U,	// ENDLOOP0
    0U,	// ENDLOOP01
    0U,	// ENDLOOP1
    0U,	// J2_endloop0
    0U,	// J2_endloop01
    0U,	// J2_endloop1
    0U,	// J2_jumpf_nopred_map
    0U,	// J2_jumprf_nopred_map
    0U,	// J2_jumprt_nopred_map
    0U,	// J2_jumpt_nopred_map
    0U,	// J2_trap1_noregmap
    0U,	// L2_loadalignb_zomap
    0U,	// L2_loadalignh_zomap
    0U,	// L2_loadbsw2_zomap
    0U,	// L2_loadbsw4_zomap
    0U,	// L2_loadbzw2_zomap
    0U,	// L2_loadbzw4_zomap
    0U,	// L2_loadrb_zomap
    0U,	// L2_loadrd_zomap
    0U,	// L2_loadrh_zomap
    0U,	// L2_loadri_zomap
    0U,	// L2_loadrub_zomap
    0U,	// L2_loadruh_zomap
    0U,	// L2_ploadrbf_zomap
    0U,	// L2_ploadrbfnew_zomap
    0U,	// L2_ploadrbt_zomap
    0U,	// L2_ploadrbtnew_zomap
    0U,	// L2_ploadrdf_zomap
    0U,	// L2_ploadrdfnew_zomap
    0U,	// L2_ploadrdt_zomap
    0U,	// L2_ploadrdtnew_zomap
    0U,	// L2_ploadrhf_zomap
    0U,	// L2_ploadrhfnew_zomap
    0U,	// L2_ploadrht_zomap
    0U,	// L2_ploadrhtnew_zomap
    0U,	// L2_ploadrif_zomap
    0U,	// L2_ploadrifnew_zomap
    0U,	// L2_ploadrit_zomap
    0U,	// L2_ploadritnew_zomap
    0U,	// L2_ploadrubf_zomap
    0U,	// L2_ploadrubfnew_zomap
    0U,	// L2_ploadrubt_zomap
    0U,	// L2_ploadrubtnew_zomap
    0U,	// L2_ploadruhf_zomap
    0U,	// L2_ploadruhfnew_zomap
    0U,	// L2_ploadruht_zomap
    0U,	// L2_ploadruhtnew_zomap
    0U,	// L4_add_memopb_zomap
    0U,	// L4_add_memoph_zomap
    0U,	// L4_add_memopw_zomap
    0U,	// L4_and_memopb_zomap
    0U,	// L4_and_memoph_zomap
    0U,	// L4_and_memopw_zomap
    0U,	// L4_iadd_memopb_zomap
    0U,	// L4_iadd_memoph_zomap
    0U,	// L4_iadd_memopw_zomap
    0U,	// L4_iand_memopb_zomap
    0U,	// L4_iand_memoph_zomap
    0U,	// L4_iand_memopw_zomap
    0U,	// L4_ior_memopb_zomap
    0U,	// L4_ior_memoph_zomap
    0U,	// L4_ior_memopw_zomap
    0U,	// L4_isub_memopb_zomap
    0U,	// L4_isub_memoph_zomap
    0U,	// L4_isub_memopw_zomap
    0U,	// L4_or_memopb_zomap
    0U,	// L4_or_memoph_zomap
    0U,	// L4_or_memopw_zomap
    0U,	// L4_return_map_to_raw_f
    0U,	// L4_return_map_to_raw_fnew_pnt
    0U,	// L4_return_map_to_raw_fnew_pt
    0U,	// L4_return_map_to_raw_t
    0U,	// L4_return_map_to_raw_tnew_pnt
    0U,	// L4_return_map_to_raw_tnew_pt
    0U,	// L4_sub_memopb_zomap
    0U,	// L4_sub_memoph_zomap
    0U,	// L4_sub_memopw_zomap
    0U,	// L6_deallocframe_map_to_raw
    0U,	// L6_return_map_to_raw
    0U,	// LDriw_ctr
    0U,	// LDriw_pred
    0U,	// M2_mpysmi
    0U,	// M2_mpyui
    0U,	// M2_vrcmpys_acc_s1
    0U,	// M2_vrcmpys_s1
    0U,	// M2_vrcmpys_s1rp
    0U,	// PS_aligna
    0U,	// PS_alloca
    0U,	// PS_call_nr
    0U,	// PS_crash
    0U,	// PS_false
    0U,	// PS_fi
    0U,	// PS_fia
    0U,	// PS_loadrb_pci
    0U,	// PS_loadrb_pcr
    0U,	// PS_loadrd_pci
    0U,	// PS_loadrd_pcr
    0U,	// PS_loadrh_pci
    0U,	// PS_loadrh_pcr
    0U,	// PS_loadri_pci
    0U,	// PS_loadri_pcr
    0U,	// PS_loadrub_pci
    0U,	// PS_loadrub_pcr
    0U,	// PS_loadruh_pci
    0U,	// PS_loadruh_pcr
    0U,	// PS_pselect
    0U,	// PS_qfalse
    0U,	// PS_qtrue
    0U,	// PS_storerb_pci
    0U,	// PS_storerb_pcr
    0U,	// PS_storerd_pci
    0U,	// PS_storerd_pcr
    0U,	// PS_storerf_pci
    0U,	// PS_storerf_pcr
    0U,	// PS_storerh_pci
    0U,	// PS_storerh_pcr
    0U,	// PS_storeri_pci
    0U,	// PS_storeri_pcr
    0U,	// PS_tailcall_i
    0U,	// PS_tailcall_r
    0U,	// PS_true
    0U,	// PS_vdd0
    0U,	// PS_vloadrq_ai
    0U,	// PS_vloadrv_ai
    0U,	// PS_vloadrv_nt_ai
    0U,	// PS_vloadrw_ai
    0U,	// PS_vloadrw_nt_ai
    0U,	// PS_vmulw
    0U,	// PS_vmulw_acc
    0U,	// PS_vselect
    0U,	// PS_vstorerq_ai
    0U,	// PS_vstorerv_ai
    0U,	// PS_vstorerv_nt_ai
    0U,	// PS_vstorerw_ai
    0U,	// PS_vstorerw_nt_ai
    0U,	// PS_wselect
    0U,	// S2_asr_i_p_rnd_goodsyntax
    0U,	// S2_asr_i_r_rnd_goodsyntax
    0U,	// S2_pstorerbf_zomap
    0U,	// S2_pstorerbnewf_zomap
    0U,	// S2_pstorerbnewt_zomap
    0U,	// S2_pstorerbt_zomap
    0U,	// S2_pstorerdf_zomap
    0U,	// S2_pstorerdt_zomap
    0U,	// S2_pstorerff_zomap
    0U,	// S2_pstorerft_zomap
    0U,	// S2_pstorerhf_zomap
    0U,	// S2_pstorerhnewf_zomap
    0U,	// S2_pstorerhnewt_zomap
    0U,	// S2_pstorerht_zomap
    0U,	// S2_pstorerif_zomap
    0U,	// S2_pstorerinewf_zomap
    0U,	// S2_pstorerinewt_zomap
    0U,	// S2_pstorerit_zomap
    0U,	// S2_storerb_zomap
    0U,	// S2_storerbnew_zomap
    0U,	// S2_storerd_zomap
    0U,	// S2_storerf_zomap
    0U,	// S2_storerh_zomap
    0U,	// S2_storerhnew_zomap
    0U,	// S2_storeri_zomap
    0U,	// S2_storerinew_zomap
    0U,	// S2_tableidxb_goodsyntax
    0U,	// S2_tableidxd_goodsyntax
    0U,	// S2_tableidxh_goodsyntax
    0U,	// S2_tableidxw_goodsyntax
    0U,	// S4_pstorerbfnew_zomap
    0U,	// S4_pstorerbnewfnew_zomap
    0U,	// S4_pstorerbnewtnew_zomap
    0U,	// S4_pstorerbtnew_zomap
    0U,	// S4_pstorerdfnew_zomap
    0U,	// S4_pstorerdtnew_zomap
    0U,	// S4_pstorerffnew_zomap
    0U,	// S4_pstorerftnew_zomap
    0U,	// S4_pstorerhfnew_zomap
    0U,	// S4_pstorerhnewfnew_zomap
    0U,	// S4_pstorerhnewtnew_zomap
    0U,	// S4_pstorerhtnew_zomap
    0U,	// S4_pstorerifnew_zomap
    0U,	// S4_pstorerinewfnew_zomap
    0U,	// S4_pstorerinewtnew_zomap
    0U,	// S4_pstoreritnew_zomap
    0U,	// S4_storeirb_zomap
    0U,	// S4_storeirbf_zomap
    0U,	// S4_storeirbfnew_zomap
    0U,	// S4_storeirbt_zomap
    0U,	// S4_storeirbtnew_zomap
    0U,	// S4_storeirh_zomap
    0U,	// S4_storeirhf_zomap
    0U,	// S4_storeirhfnew_zomap
    0U,	// S4_storeirht_zomap
    0U,	// S4_storeirhtnew_zomap
    0U,	// S4_storeiri_zomap
    0U,	// S4_storeirif_zomap
    0U,	// S4_storeirifnew_zomap
    0U,	// S4_storeirit_zomap
    0U,	// S4_storeiritnew_zomap
    0U,	// S5_asrhub_rnd_sat_goodsyntax
    0U,	// S5_vasrhrnd_goodsyntax
    0U,	// S6_allocframe_to_raw
    0U,	// STriw_ctr
    0U,	// STriw_pred
    0U,	// V6_MAP_equb
    0U,	// V6_MAP_equb_and
    0U,	// V6_MAP_equb_ior
    0U,	// V6_MAP_equb_xor
    0U,	// V6_MAP_equh
    0U,	// V6_MAP_equh_and
    0U,	// V6_MAP_equh_ior
    0U,	// V6_MAP_equh_xor
    0U,	// V6_MAP_equw
    0U,	// V6_MAP_equw_and
    0U,	// V6_MAP_equw_ior
    0U,	// V6_MAP_equw_xor
    0U,	// V6_extractw_alt
    0U,	// V6_hi
    0U,	// V6_ld0
    0U,	// V6_ldcnp0
    0U,	// V6_ldcnpnt0
    0U,	// V6_ldcp0
    0U,	// V6_ldcpnt0
    0U,	// V6_ldnp0
    0U,	// V6_ldnpnt0
    0U,	// V6_ldnt0
    0U,	// V6_ldntnt0
    0U,	// V6_ldp0
    0U,	// V6_ldpnt0
    0U,	// V6_ldtnp0
    0U,	// V6_ldtnpnt0
    0U,	// V6_ldtp0
    0U,	// V6_ldtpnt0
    0U,	// V6_ldu0
    0U,	// V6_lo
    0U,	// V6_st0
    0U,	// V6_stn0
    0U,	// V6_stnnt0
    0U,	// V6_stnp0
    0U,	// V6_stnpnt0
    0U,	// V6_stnq0
    0U,	// V6_stnqnt0
    0U,	// V6_stnt0
    0U,	// V6_stp0
    0U,	// V6_stpnt0
    0U,	// V6_stq0
    0U,	// V6_stqnt0
    0U,	// V6_stu0
    0U,	// V6_stunp0
    0U,	// V6_stup0
    0U,	// V6_vabsb_alt
    0U,	// V6_vabsb_sat_alt
    0U,	// V6_vabsdiffh_alt
    0U,	// V6_vabsdiffub_alt
    0U,	// V6_vabsdiffuh_alt
    0U,	// V6_vabsdiffw_alt
    0U,	// V6_vabsh_alt
    0U,	// V6_vabsh_sat_alt
    0U,	// V6_vabsub_alt
    0U,	// V6_vabsuh_alt
    0U,	// V6_vabsuw_alt
    0U,	// V6_vabsw_alt
    0U,	// V6_vabsw_sat_alt
    0U,	// V6_vaddb_alt
    0U,	// V6_vaddb_dv_alt
    0U,	// V6_vaddbnq_alt
    0U,	// V6_vaddbq_alt
    0U,	// V6_vaddbsat_alt
    0U,	// V6_vaddbsat_dv_alt
    0U,	// V6_vaddh_alt
    0U,	// V6_vaddh_dv_alt
    0U,	// V6_vaddhnq_alt
    0U,	// V6_vaddhq_alt
    0U,	// V6_vaddhsat_alt
    0U,	// V6_vaddhsat_dv_alt
    0U,	// V6_vaddhw_acc_alt
    0U,	// V6_vaddhw_alt
    0U,	// V6_vaddubh_acc_alt
    0U,	// V6_vaddubh_alt
    0U,	// V6_vaddubsat_alt
    0U,	// V6_vaddubsat_dv_alt
    0U,	// V6_vadduhsat_alt
    0U,	// V6_vadduhsat_dv_alt
    0U,	// V6_vadduhw_acc_alt
    0U,	// V6_vadduhw_alt
    0U,	// V6_vadduwsat_alt
    0U,	// V6_vadduwsat_dv_alt
    0U,	// V6_vaddw_alt
    0U,	// V6_vaddw_dv_alt
    0U,	// V6_vaddwnq_alt
    0U,	// V6_vaddwq_alt
    0U,	// V6_vaddwsat_alt
    0U,	// V6_vaddwsat_dv_alt
    0U,	// V6_vandnqrt_acc_alt
    0U,	// V6_vandnqrt_alt
    0U,	// V6_vandqrt_acc_alt
    0U,	// V6_vandqrt_alt
    0U,	// V6_vandvrt_acc_alt
    0U,	// V6_vandvrt_alt
    0U,	// V6_vaslh_acc_alt
    0U,	// V6_vaslh_alt
    0U,	// V6_vaslhv_alt
    0U,	// V6_vaslw_acc_alt
    0U,	// V6_vaslw_alt
    0U,	// V6_vaslwv_alt
    0U,	// V6_vasr_into_alt
    0U,	// V6_vasrh_acc_alt
    0U,	// V6_vasrh_alt
    0U,	// V6_vasrhbrndsat_alt
    0U,	// V6_vasrhubrndsat_alt
    0U,	// V6_vasrhubsat_alt
    0U,	// V6_vasrhv_alt
    0U,	// V6_vasrw_acc_alt
    0U,	// V6_vasrw_alt
    0U,	// V6_vasrwh_alt
    0U,	// V6_vasrwhrndsat_alt
    0U,	// V6_vasrwhsat_alt
    0U,	// V6_vasrwuhsat_alt
    0U,	// V6_vasrwv_alt
    0U,	// V6_vassignp
    0U,	// V6_vavgb_alt
    0U,	// V6_vavgbrnd_alt
    0U,	// V6_vavgh_alt
    0U,	// V6_vavghrnd_alt
    0U,	// V6_vavgub_alt
    0U,	// V6_vavgubrnd_alt
    0U,	// V6_vavguh_alt
    0U,	// V6_vavguhrnd_alt
    0U,	// V6_vavguw_alt
    0U,	// V6_vavguwrnd_alt
    0U,	// V6_vavgw_alt
    0U,	// V6_vavgwrnd_alt
    0U,	// V6_vcl0h_alt
    0U,	// V6_vcl0w_alt
    0U,	// V6_vd0
    0U,	// V6_vdd0
    0U,	// V6_vdealb4w_alt
    0U,	// V6_vdealb_alt
    0U,	// V6_vdealh_alt
    0U,	// V6_vdmpybus_acc_alt
    0U,	// V6_vdmpybus_alt
    0U,	// V6_vdmpybus_dv_acc_alt
    0U,	// V6_vdmpybus_dv_alt
    0U,	// V6_vdmpyhb_acc_alt
    0U,	// V6_vdmpyhb_alt
    0U,	// V6_vdmpyhb_dv_acc_alt
    0U,	// V6_vdmpyhb_dv_alt
    0U,	// V6_vdmpyhisat_acc_alt
    0U,	// V6_vdmpyhisat_alt
    0U,	// V6_vdmpyhsat_acc_alt
    0U,	// V6_vdmpyhsat_alt
    0U,	// V6_vdmpyhsuisat_acc_alt
    0U,	// V6_vdmpyhsuisat_alt
    0U,	// V6_vdmpyhsusat_acc_alt
    0U,	// V6_vdmpyhsusat_alt
    0U,	// V6_vdmpyhvsat_acc_alt
    0U,	// V6_vdmpyhvsat_alt
    0U,	// V6_vdsaduh_acc_alt
    0U,	// V6_vdsaduh_alt
    0U,	// V6_vgathermh_pseudo
    0U,	// V6_vgathermhq_pseudo
    0U,	// V6_vgathermhw_pseudo
    0U,	// V6_vgathermhwq_pseudo
    0U,	// V6_vgathermw_pseudo
    0U,	// V6_vgathermwq_pseudo
    0U,	// V6_vlsrh_alt
    0U,	// V6_vlsrhv_alt
    0U,	// V6_vlsrw_alt
    0U,	// V6_vlsrwv_alt
    0U,	// V6_vmaxb_alt
    0U,	// V6_vmaxh_alt
    0U,	// V6_vmaxub_alt
    0U,	// V6_vmaxuh_alt
    0U,	// V6_vmaxw_alt
    0U,	// V6_vminb_alt
    0U,	// V6_vminh_alt
    0U,	// V6_vminub_alt
    0U,	// V6_vminuh_alt
    0U,	// V6_vminw_alt
    0U,	// V6_vmpabus_acc_alt
    0U,	// V6_vmpabus_alt
    0U,	// V6_vmpabusv_alt
    0U,	// V6_vmpabuu_acc_alt
    0U,	// V6_vmpabuu_alt
    0U,	// V6_vmpabuuv_alt
    0U,	// V6_vmpahb_acc_alt
    0U,	// V6_vmpahb_alt
    0U,	// V6_vmpauhb_acc_alt
    0U,	// V6_vmpauhb_alt
    0U,	// V6_vmpybus_acc_alt
    0U,	// V6_vmpybus_alt
    0U,	// V6_vmpybusv_acc_alt
    0U,	// V6_vmpybusv_alt
    0U,	// V6_vmpybv_acc_alt
    0U,	// V6_vmpybv_alt
    0U,	// V6_vmpyewuh_alt
    0U,	// V6_vmpyh_acc_alt
    0U,	// V6_vmpyh_alt
    0U,	// V6_vmpyhsat_acc_alt
    0U,	// V6_vmpyhsrs_alt
    0U,	// V6_vmpyhss_alt
    0U,	// V6_vmpyhus_acc_alt
    0U,	// V6_vmpyhus_alt
    0U,	// V6_vmpyhv_acc_alt
    0U,	// V6_vmpyhv_alt
    0U,	// V6_vmpyhvsrs_alt
    0U,	// V6_vmpyiewh_acc_alt
    0U,	// V6_vmpyiewuh_acc_alt
    0U,	// V6_vmpyiewuh_alt
    0U,	// V6_vmpyih_acc_alt
    0U,	// V6_vmpyih_alt
    0U,	// V6_vmpyihb_acc_alt
    0U,	// V6_vmpyihb_alt
    0U,	// V6_vmpyiowh_alt
    0U,	// V6_vmpyiwb_acc_alt
    0U,	// V6_vmpyiwb_alt
    0U,	// V6_vmpyiwh_acc_alt
    0U,	// V6_vmpyiwh_alt
    0U,	// V6_vmpyiwub_acc_alt
    0U,	// V6_vmpyiwub_alt
    0U,	// V6_vmpyowh_alt
    0U,	// V6_vmpyowh_rnd_alt
    0U,	// V6_vmpyowh_rnd_sacc_alt
    0U,	// V6_vmpyowh_sacc_alt
    0U,	// V6_vmpyub_acc_alt
    0U,	// V6_vmpyub_alt
    0U,	// V6_vmpyubv_acc_alt
    0U,	// V6_vmpyubv_alt
    0U,	// V6_vmpyuh_acc_alt
    0U,	// V6_vmpyuh_alt
    0U,	// V6_vmpyuhv_acc_alt
    0U,	// V6_vmpyuhv_alt
    0U,	// V6_vnavgb_alt
    0U,	// V6_vnavgh_alt
    0U,	// V6_vnavgub_alt
    0U,	// V6_vnavgw_alt
    0U,	// V6_vnormamth_alt
    0U,	// V6_vnormamtw_alt
    0U,	// V6_vpackeb_alt
    0U,	// V6_vpackeh_alt
    0U,	// V6_vpackhb_sat_alt
    0U,	// V6_vpackhub_sat_alt
    0U,	// V6_vpackob_alt
    0U,	// V6_vpackoh_alt
    0U,	// V6_vpackwh_sat_alt
    0U,	// V6_vpackwuh_sat_alt
    0U,	// V6_vpopcounth_alt
    0U,	// V6_vrmpybub_rtt_acc_alt
    0U,	// V6_vrmpybub_rtt_alt
    0U,	// V6_vrmpybus_acc_alt
    0U,	// V6_vrmpybus_alt
    0U,	// V6_vrmpybusi_acc_alt
    0U,	// V6_vrmpybusi_alt
    0U,	// V6_vrmpybusv_acc_alt
    0U,	// V6_vrmpybusv_alt
    0U,	// V6_vrmpybv_acc_alt
    0U,	// V6_vrmpybv_alt
    0U,	// V6_vrmpyub_acc_alt
    0U,	// V6_vrmpyub_alt
    0U,	// V6_vrmpyub_rtt_acc_alt
    0U,	// V6_vrmpyub_rtt_alt
    0U,	// V6_vrmpyubi_acc_alt
    0U,	// V6_vrmpyubi_alt
    0U,	// V6_vrmpyubv_acc_alt
    0U,	// V6_vrmpyubv_alt
    0U,	// V6_vrotr_alt
    0U,	// V6_vroundhb_alt
    0U,	// V6_vroundhub_alt
    0U,	// V6_vrounduhub_alt
    0U,	// V6_vrounduwuh_alt
    0U,	// V6_vroundwh_alt
    0U,	// V6_vroundwuh_alt
    0U,	// V6_vrsadubi_acc_alt
    0U,	// V6_vrsadubi_alt
    0U,	// V6_vsathub_alt
    0U,	// V6_vsatuwuh_alt
    0U,	// V6_vsatwh_alt
    0U,	// V6_vsb_alt
    0U,	// V6_vscattermh_add_alt
    0U,	// V6_vscattermh_alt
    0U,	// V6_vscattermhq_alt
    0U,	// V6_vscattermw_add_alt
    0U,	// V6_vscattermw_alt
    4U,	// V6_vscattermwh_add_alt
    4U,	// V6_vscattermwh_alt
    0U,	// V6_vscattermwhq_alt
    0U,	// V6_vscattermwq_alt
    0U,	// V6_vsh_alt
    0U,	// V6_vshufeh_alt
    0U,	// V6_vshuffb_alt
    0U,	// V6_vshuffeb_alt
    0U,	// V6_vshuffh_alt
    0U,	// V6_vshuffob_alt
    0U,	// V6_vshufoeb_alt
    0U,	// V6_vshufoeh_alt
    0U,	// V6_vshufoh_alt
    0U,	// V6_vsubb_alt
    0U,	// V6_vsubb_dv_alt
    0U,	// V6_vsubbnq_alt
    0U,	// V6_vsubbq_alt
    0U,	// V6_vsubbsat_alt
    0U,	// V6_vsubbsat_dv_alt
    0U,	// V6_vsubh_alt
    0U,	// V6_vsubh_dv_alt
    0U,	// V6_vsubhnq_alt
    0U,	// V6_vsubhq_alt
    0U,	// V6_vsubhsat_alt
    0U,	// V6_vsubhsat_dv_alt
    0U,	// V6_vsubhw_alt
    0U,	// V6_vsububh_alt
    0U,	// V6_vsububsat_alt
    0U,	// V6_vsububsat_dv_alt
    0U,	// V6_vsubuhsat_alt
    0U,	// V6_vsubuhsat_dv_alt
    0U,	// V6_vsubuhw_alt
    0U,	// V6_vsubuwsat_alt
    0U,	// V6_vsubuwsat_dv_alt
    0U,	// V6_vsubw_alt
    0U,	// V6_vsubw_dv_alt
    0U,	// V6_vsubwnq_alt
    0U,	// V6_vsubwq_alt
    0U,	// V6_vsubwsat_alt
    0U,	// V6_vsubwsat_dv_alt
    0U,	// V6_vtmpyb_acc_alt
    0U,	// V6_vtmpyb_alt
    0U,	// V6_vtmpybus_acc_alt
    0U,	// V6_vtmpybus_alt
    0U,	// V6_vtmpyhb_acc_alt
    0U,	// V6_vtmpyhb_alt
    0U,	// V6_vtran2x2_map
    0U,	// V6_vunpackb_alt
    0U,	// V6_vunpackh_alt
    0U,	// V6_vunpackob_alt
    0U,	// V6_vunpackoh_alt
    0U,	// V6_vunpackub_alt
    0U,	// V6_vunpackuh_alt
    0U,	// V6_vzb_alt
    0U,	// V6_vzh_alt
    0U,	// V6_zld0
    0U,	// V6_zldp0
    0U,	// Y2_dcfetch
    0U,	// A2_abs
    0U,	// A2_absp
    0U,	// A2_abssat
    0U,	// A2_add
    0U,	// A2_addh_h16_hh
    0U,	// A2_addh_h16_hl
    0U,	// A2_addh_h16_lh
    0U,	// A2_addh_h16_ll
    0U,	// A2_addh_h16_sat_hh
    0U,	// A2_addh_h16_sat_hl
    0U,	// A2_addh_h16_sat_lh
    0U,	// A2_addh_h16_sat_ll
    0U,	// A2_addh_l16_hl
    0U,	// A2_addh_l16_ll
    0U,	// A2_addh_l16_sat_hl
    0U,	// A2_addh_l16_sat_ll
    0U,	// A2_addi
    0U,	// A2_addp
    0U,	// A2_addpsat
    0U,	// A2_addsat
    0U,	// A2_addsph
    0U,	// A2_addspl
    0U,	// A2_and
    0U,	// A2_andir
    0U,	// A2_andp
    0U,	// A2_aslh
    0U,	// A2_asrh
    0U,	// A2_combine_hh
    0U,	// A2_combine_hl
    0U,	// A2_combine_lh
    0U,	// A2_combine_ll
    0U,	// A2_combineii
    0U,	// A2_combinew
    0U,	// A2_max
    0U,	// A2_maxp
    0U,	// A2_maxu
    0U,	// A2_maxup
    0U,	// A2_min
    0U,	// A2_minp
    0U,	// A2_minu
    0U,	// A2_minup
    0U,	// A2_negp
    0U,	// A2_negsat
    0U,	// A2_nop
    0U,	// A2_notp
    0U,	// A2_or
    0U,	// A2_orir
    0U,	// A2_orp
    0U,	// A2_paddf
    0U,	// A2_paddfnew
    0U,	// A2_paddif
    0U,	// A2_paddifnew
    0U,	// A2_paddit
    0U,	// A2_padditnew
    0U,	// A2_paddt
    0U,	// A2_paddtnew
    0U,	// A2_pandf
    0U,	// A2_pandfnew
    0U,	// A2_pandt
    0U,	// A2_pandtnew
    0U,	// A2_porf
    0U,	// A2_porfnew
    0U,	// A2_port
    0U,	// A2_portnew
    0U,	// A2_psubf
    0U,	// A2_psubfnew
    0U,	// A2_psubt
    0U,	// A2_psubtnew
    0U,	// A2_pxorf
    0U,	// A2_pxorfnew
    0U,	// A2_pxort
    0U,	// A2_pxortnew
    0U,	// A2_roundsat
    0U,	// A2_sat
    0U,	// A2_satb
    0U,	// A2_sath
    0U,	// A2_satub
    0U,	// A2_satuh
    0U,	// A2_sub
    0U,	// A2_subh_h16_hh
    0U,	// A2_subh_h16_hl
    0U,	// A2_subh_h16_lh
    0U,	// A2_subh_h16_ll
    0U,	// A2_subh_h16_sat_hh
    0U,	// A2_subh_h16_sat_hl
    0U,	// A2_subh_h16_sat_lh
    0U,	// A2_subh_h16_sat_ll
    0U,	// A2_subh_l16_hl
    0U,	// A2_subh_l16_ll
    0U,	// A2_subh_l16_sat_hl
    0U,	// A2_subh_l16_sat_ll
    0U,	// A2_subp
    0U,	// A2_subri
    0U,	// A2_subsat
    0U,	// A2_svaddh
    0U,	// A2_svaddhs
    0U,	// A2_svadduhs
    0U,	// A2_svavgh
    0U,	// A2_svavghs
    0U,	// A2_svnavgh
    0U,	// A2_svsubh
    0U,	// A2_svsubhs
    0U,	// A2_svsubuhs
    0U,	// A2_swiz
    0U,	// A2_sxtb
    0U,	// A2_sxth
    0U,	// A2_sxtw
    0U,	// A2_tfr
    0U,	// A2_tfrcrr
    0U,	// A2_tfrih
    0U,	// A2_tfril
    0U,	// A2_tfrrcr
    0U,	// A2_tfrsi
    0U,	// A2_vabsh
    0U,	// A2_vabshsat
    0U,	// A2_vabsw
    0U,	// A2_vabswsat
    0U,	// A2_vaddh
    0U,	// A2_vaddhs
    0U,	// A2_vaddub
    0U,	// A2_vaddubs
    0U,	// A2_vadduhs
    0U,	// A2_vaddw
    0U,	// A2_vaddws
    0U,	// A2_vavgh
    0U,	// A2_vavghcr
    0U,	// A2_vavghr
    0U,	// A2_vavgub
    0U,	// A2_vavgubr
    0U,	// A2_vavguh
    0U,	// A2_vavguhr
    0U,	// A2_vavguw
    0U,	// A2_vavguwr
    0U,	// A2_vavgw
    0U,	// A2_vavgwcr
    0U,	// A2_vavgwr
    0U,	// A2_vcmpbeq
    0U,	// A2_vcmpbgtu
    0U,	// A2_vcmpheq
    0U,	// A2_vcmphgt
    0U,	// A2_vcmphgtu
    0U,	// A2_vcmpweq
    0U,	// A2_vcmpwgt
    0U,	// A2_vcmpwgtu
    0U,	// A2_vconj
    0U,	// A2_vmaxb
    0U,	// A2_vmaxh
    0U,	// A2_vmaxub
    0U,	// A2_vmaxuh
    0U,	// A2_vmaxuw
    0U,	// A2_vmaxw
    0U,	// A2_vminb
    0U,	// A2_vminh
    0U,	// A2_vminub
    0U,	// A2_vminuh
    0U,	// A2_vminuw
    0U,	// A2_vminw
    0U,	// A2_vnavgh
    0U,	// A2_vnavghcr
    0U,	// A2_vnavghr
    0U,	// A2_vnavgw
    0U,	// A2_vnavgwcr
    0U,	// A2_vnavgwr
    0U,	// A2_vraddub
    0U,	// A2_vraddub_acc
    0U,	// A2_vrsadub
    0U,	// A2_vrsadub_acc
    0U,	// A2_vsubh
    0U,	// A2_vsubhs
    0U,	// A2_vsubub
    0U,	// A2_vsububs
    0U,	// A2_vsubuhs
    0U,	// A2_vsubw
    0U,	// A2_vsubws
    0U,	// A2_xor
    0U,	// A2_xorp
    0U,	// A2_zxth
    0U,	// A4_addp_c
    0U,	// A4_andn
    0U,	// A4_andnp
    0U,	// A4_bitsplit
    0U,	// A4_bitspliti
    0U,	// A4_boundscheck_hi
    0U,	// A4_boundscheck_lo
    0U,	// A4_cmpbeq
    0U,	// A4_cmpbeqi
    0U,	// A4_cmpbgt
    0U,	// A4_cmpbgti
    0U,	// A4_cmpbgtu
    0U,	// A4_cmpbgtui
    0U,	// A4_cmpheq
    0U,	// A4_cmpheqi
    0U,	// A4_cmphgt
    0U,	// A4_cmphgti
    0U,	// A4_cmphgtu
    0U,	// A4_cmphgtui
    0U,	// A4_combineii
    0U,	// A4_combineir
    0U,	// A4_combineri
    0U,	// A4_cround_ri
    0U,	// A4_cround_rr
    0U,	// A4_ext
    0U,	// A4_modwrapu
    0U,	// A4_orn
    0U,	// A4_ornp
    0U,	// A4_paslhf
    0U,	// A4_paslhfnew
    0U,	// A4_paslht
    0U,	// A4_paslhtnew
    0U,	// A4_pasrhf
    0U,	// A4_pasrhfnew
    0U,	// A4_pasrht
    0U,	// A4_pasrhtnew
    0U,	// A4_psxtbf
    0U,	// A4_psxtbfnew
    0U,	// A4_psxtbt
    0U,	// A4_psxtbtnew
    0U,	// A4_psxthf
    0U,	// A4_psxthfnew
    0U,	// A4_psxtht
    0U,	// A4_psxthtnew
    0U,	// A4_pzxtbf
    0U,	// A4_pzxtbfnew
    0U,	// A4_pzxtbt
    0U,	// A4_pzxtbtnew
    0U,	// A4_pzxthf
    0U,	// A4_pzxthfnew
    0U,	// A4_pzxtht
    0U,	// A4_pzxthtnew
    0U,	// A4_rcmpeq
    0U,	// A4_rcmpeqi
    0U,	// A4_rcmpneq
    0U,	// A4_rcmpneqi
    0U,	// A4_round_ri
    0U,	// A4_round_ri_sat
    0U,	// A4_round_rr
    0U,	// A4_round_rr_sat
    0U,	// A4_subp_c
    0U,	// A4_tfrcpp
    0U,	// A4_tfrpcp
    0U,	// A4_tlbmatch
    0U,	// A4_vcmpbeq_any
    0U,	// A4_vcmpbeqi
    0U,	// A4_vcmpbgt
    0U,	// A4_vcmpbgti
    0U,	// A4_vcmpbgtui
    0U,	// A4_vcmpheqi
    0U,	// A4_vcmphgti
    0U,	// A4_vcmphgtui
    0U,	// A4_vcmpweqi
    0U,	// A4_vcmpwgti
    0U,	// A4_vcmpwgtui
    0U,	// A4_vrmaxh
    0U,	// A4_vrmaxuh
    0U,	// A4_vrmaxuw
    0U,	// A4_vrmaxw
    0U,	// A4_vrminh
    0U,	// A4_vrminuh
    0U,	// A4_vrminuw
    0U,	// A4_vrminw
    0U,	// A5_ACS
    0U,	// A5_vaddhubs
    0U,	// A6_vcmpbeq_notany
    0U,	// A6_vminub_RdP
    0U,	// C2_all8
    0U,	// C2_and
    0U,	// C2_andn
    0U,	// C2_any8
    0U,	// C2_bitsclr
    0U,	// C2_bitsclri
    0U,	// C2_bitsset
    0U,	// C2_ccombinewf
    0U,	// C2_ccombinewnewf
    0U,	// C2_ccombinewnewt
    0U,	// C2_ccombinewt
    0U,	// C2_cmoveif
    0U,	// C2_cmoveit
    0U,	// C2_cmovenewif
    0U,	// C2_cmovenewit
    0U,	// C2_cmpeq
    0U,	// C2_cmpeqi
    0U,	// C2_cmpeqp
    0U,	// C2_cmpgt
    0U,	// C2_cmpgti
    0U,	// C2_cmpgtp
    0U,	// C2_cmpgtu
    0U,	// C2_cmpgtui
    0U,	// C2_cmpgtup
    0U,	// C2_mask
    0U,	// C2_mux
    8U,	// C2_muxii
    8U,	// C2_muxir
    0U,	// C2_muxri
    0U,	// C2_not
    0U,	// C2_or
    0U,	// C2_orn
    0U,	// C2_tfrpr
    0U,	// C2_tfrrp
    0U,	// C2_vitpack
    0U,	// C2_vmux
    0U,	// C2_xor
    0U,	// C4_addipc
    0U,	// C4_and_and
    0U,	// C4_and_andn
    0U,	// C4_and_or
    0U,	// C4_and_orn
    0U,	// C4_cmplte
    0U,	// C4_cmpltei
    0U,	// C4_cmplteu
    0U,	// C4_cmplteui
    0U,	// C4_cmpneq
    0U,	// C4_cmpneqi
    0U,	// C4_fastcorner9
    0U,	// C4_fastcorner9_not
    0U,	// C4_nbitsclr
    0U,	// C4_nbitsclri
    0U,	// C4_nbitsset
    0U,	// C4_or_and
    0U,	// C4_or_andn
    0U,	// C4_or_or
    0U,	// C4_or_orn
    0U,	// CALLProfile
    0U,	// CONST32
    0U,	// CONST64
    0U,	// DuplexIClass0
    0U,	// DuplexIClass1
    0U,	// DuplexIClass2
    0U,	// DuplexIClass3
    0U,	// DuplexIClass4
    0U,	// DuplexIClass5
    0U,	// DuplexIClass6
    0U,	// DuplexIClass7
    0U,	// DuplexIClass8
    0U,	// DuplexIClass9
    0U,	// DuplexIClassA
    0U,	// DuplexIClassB
    0U,	// DuplexIClassC
    0U,	// DuplexIClassD
    0U,	// DuplexIClassE
    0U,	// DuplexIClassF
    0U,	// EH_RETURN_JMPR
    0U,	// F2_conv_d2df
    0U,	// F2_conv_d2sf
    0U,	// F2_conv_df2d
    0U,	// F2_conv_df2d_chop
    0U,	// F2_conv_df2sf
    0U,	// F2_conv_df2ud
    0U,	// F2_conv_df2ud_chop
    0U,	// F2_conv_df2uw
    0U,	// F2_conv_df2uw_chop
    0U,	// F2_conv_df2w
    0U,	// F2_conv_df2w_chop
    0U,	// F2_conv_sf2d
    0U,	// F2_conv_sf2d_chop
    0U,	// F2_conv_sf2df
    0U,	// F2_conv_sf2ud
    0U,	// F2_conv_sf2ud_chop
    0U,	// F2_conv_sf2uw
    0U,	// F2_conv_sf2uw_chop
    0U,	// F2_conv_sf2w
    0U,	// F2_conv_sf2w_chop
    0U,	// F2_conv_ud2df
    0U,	// F2_conv_ud2sf
    0U,	// F2_conv_uw2df
    0U,	// F2_conv_uw2sf
    0U,	// F2_conv_w2df
    0U,	// F2_conv_w2sf
    0U,	// F2_dfadd
    0U,	// F2_dfclass
    0U,	// F2_dfcmpeq
    0U,	// F2_dfcmpge
    0U,	// F2_dfcmpgt
    0U,	// F2_dfcmpuo
    0U,	// F2_dfimm_n
    0U,	// F2_dfimm_p
    0U,	// F2_dfsub
    0U,	// F2_sfadd
    0U,	// F2_sfclass
    0U,	// F2_sfcmpeq
    0U,	// F2_sfcmpge
    0U,	// F2_sfcmpgt
    0U,	// F2_sfcmpuo
    0U,	// F2_sffixupd
    0U,	// F2_sffixupn
    0U,	// F2_sffixupr
    0U,	// F2_sffma
    0U,	// F2_sffma_lib
    0U,	// F2_sffma_sc
    0U,	// F2_sffms
    0U,	// F2_sffms_lib
    0U,	// F2_sfimm_n
    0U,	// F2_sfimm_p
    0U,	// F2_sfinvsqrta
    0U,	// F2_sfmax
    0U,	// F2_sfmin
    0U,	// F2_sfmpy
    0U,	// F2_sfrecipa
    0U,	// F2_sfsub
    0U,	// G4_tfrgcpp
    0U,	// G4_tfrgcrr
    0U,	// G4_tfrgpcp
    0U,	// G4_tfrgrcr
    0U,	// HI
    0U,	// J2_call
    0U,	// J2_callf
    0U,	// J2_callr
    0U,	// J2_callrf
    0U,	// J2_callrt
    0U,	// J2_callt
    0U,	// J2_jump
    0U,	// J2_jumpf
    0U,	// J2_jumpfnew
    0U,	// J2_jumpfnewpt
    0U,	// J2_jumpfpt
    0U,	// J2_jumpr
    0U,	// J2_jumprf
    0U,	// J2_jumprfnew
    0U,	// J2_jumprfnewpt
    0U,	// J2_jumprfpt
    0U,	// J2_jumprgtez
    0U,	// J2_jumprgtezpt
    0U,	// J2_jumprltez
    0U,	// J2_jumprltezpt
    0U,	// J2_jumprnz
    0U,	// J2_jumprnzpt
    0U,	// J2_jumprt
    0U,	// J2_jumprtnew
    0U,	// J2_jumprtnewpt
    0U,	// J2_jumprtpt
    0U,	// J2_jumprz
    0U,	// J2_jumprzpt
    0U,	// J2_jumpt
    0U,	// J2_jumptnew
    0U,	// J2_jumptnewpt
    0U,	// J2_jumptpt
    0U,	// J2_loop0i
    0U,	// J2_loop0iext
    0U,	// J2_loop0r
    0U,	// J2_loop0rext
    0U,	// J2_loop1i
    0U,	// J2_loop1iext
    0U,	// J2_loop1r
    0U,	// J2_loop1rext
    0U,	// J2_pause
    0U,	// J2_ploop1si
    0U,	// J2_ploop1sr
    0U,	// J2_ploop2si
    0U,	// J2_ploop2sr
    0U,	// J2_ploop3si
    0U,	// J2_ploop3sr
    0U,	// J2_trap0
    0U,	// J2_trap1
    0U,	// J4_cmpeq_f_jumpnv_nt
    0U,	// J4_cmpeq_f_jumpnv_t
    0U,	// J4_cmpeq_fp0_jump_nt
    0U,	// J4_cmpeq_fp0_jump_t
    0U,	// J4_cmpeq_fp1_jump_nt
    0U,	// J4_cmpeq_fp1_jump_t
    0U,	// J4_cmpeq_t_jumpnv_nt
    0U,	// J4_cmpeq_t_jumpnv_t
    0U,	// J4_cmpeq_tp0_jump_nt
    0U,	// J4_cmpeq_tp0_jump_t
    0U,	// J4_cmpeq_tp1_jump_nt
    0U,	// J4_cmpeq_tp1_jump_t
    0U,	// J4_cmpeqi_f_jumpnv_nt
    0U,	// J4_cmpeqi_f_jumpnv_t
    0U,	// J4_cmpeqi_fp0_jump_nt
    0U,	// J4_cmpeqi_fp0_jump_t
    0U,	// J4_cmpeqi_fp1_jump_nt
    0U,	// J4_cmpeqi_fp1_jump_t
    0U,	// J4_cmpeqi_t_jumpnv_nt
    0U,	// J4_cmpeqi_t_jumpnv_t
    0U,	// J4_cmpeqi_tp0_jump_nt
    0U,	// J4_cmpeqi_tp0_jump_t
    0U,	// J4_cmpeqi_tp1_jump_nt
    0U,	// J4_cmpeqi_tp1_jump_t
    0U,	// J4_cmpeqn1_f_jumpnv_nt
    0U,	// J4_cmpeqn1_f_jumpnv_t
    0U,	// J4_cmpeqn1_fp0_jump_nt
    0U,	// J4_cmpeqn1_fp0_jump_t
    0U,	// J4_cmpeqn1_fp1_jump_nt
    0U,	// J4_cmpeqn1_fp1_jump_t
    0U,	// J4_cmpeqn1_t_jumpnv_nt
    0U,	// J4_cmpeqn1_t_jumpnv_t
    0U,	// J4_cmpeqn1_tp0_jump_nt
    0U,	// J4_cmpeqn1_tp0_jump_t
    0U,	// J4_cmpeqn1_tp1_jump_nt
    0U,	// J4_cmpeqn1_tp1_jump_t
    0U,	// J4_cmpgt_f_jumpnv_nt
    0U,	// J4_cmpgt_f_jumpnv_t
    0U,	// J4_cmpgt_fp0_jump_nt
    0U,	// J4_cmpgt_fp0_jump_t
    0U,	// J4_cmpgt_fp1_jump_nt
    0U,	// J4_cmpgt_fp1_jump_t
    0U,	// J4_cmpgt_t_jumpnv_nt
    0U,	// J4_cmpgt_t_jumpnv_t
    0U,	// J4_cmpgt_tp0_jump_nt
    0U,	// J4_cmpgt_tp0_jump_t
    0U,	// J4_cmpgt_tp1_jump_nt
    0U,	// J4_cmpgt_tp1_jump_t
    0U,	// J4_cmpgti_f_jumpnv_nt
    0U,	// J4_cmpgti_f_jumpnv_t
    0U,	// J4_cmpgti_fp0_jump_nt
    0U,	// J4_cmpgti_fp0_jump_t
    0U,	// J4_cmpgti_fp1_jump_nt
    0U,	// J4_cmpgti_fp1_jump_t
    0U,	// J4_cmpgti_t_jumpnv_nt
    0U,	// J4_cmpgti_t_jumpnv_t
    0U,	// J4_cmpgti_tp0_jump_nt
    0U,	// J4_cmpgti_tp0_jump_t
    0U,	// J4_cmpgti_tp1_jump_nt
    0U,	// J4_cmpgti_tp1_jump_t
    0U,	// J4_cmpgtn1_f_jumpnv_nt
    0U,	// J4_cmpgtn1_f_jumpnv_t
    0U,	// J4_cmpgtn1_fp0_jump_nt
    0U,	// J4_cmpgtn1_fp0_jump_t
    0U,	// J4_cmpgtn1_fp1_jump_nt
    0U,	// J4_cmpgtn1_fp1_jump_t
    0U,	// J4_cmpgtn1_t_jumpnv_nt
    0U,	// J4_cmpgtn1_t_jumpnv_t
    0U,	// J4_cmpgtn1_tp0_jump_nt
    0U,	// J4_cmpgtn1_tp0_jump_t
    0U,	// J4_cmpgtn1_tp1_jump_nt
    0U,	// J4_cmpgtn1_tp1_jump_t
    0U,	// J4_cmpgtu_f_jumpnv_nt
    0U,	// J4_cmpgtu_f_jumpnv_t
    0U,	// J4_cmpgtu_fp0_jump_nt
    0U,	// J4_cmpgtu_fp0_jump_t
    0U,	// J4_cmpgtu_fp1_jump_nt
    0U,	// J4_cmpgtu_fp1_jump_t
    0U,	// J4_cmpgtu_t_jumpnv_nt
    0U,	// J4_cmpgtu_t_jumpnv_t
    0U,	// J4_cmpgtu_tp0_jump_nt
    0U,	// J4_cmpgtu_tp0_jump_t
    0U,	// J4_cmpgtu_tp1_jump_nt
    0U,	// J4_cmpgtu_tp1_jump_t
    0U,	// J4_cmpgtui_f_jumpnv_nt
    0U,	// J4_cmpgtui_f_jumpnv_t
    0U,	// J4_cmpgtui_fp0_jump_nt
    0U,	// J4_cmpgtui_fp0_jump_t
    0U,	// J4_cmpgtui_fp1_jump_nt
    0U,	// J4_cmpgtui_fp1_jump_t
    0U,	// J4_cmpgtui_t_jumpnv_nt
    0U,	// J4_cmpgtui_t_jumpnv_t
    0U,	// J4_cmpgtui_tp0_jump_nt
    0U,	// J4_cmpgtui_tp0_jump_t
    0U,	// J4_cmpgtui_tp1_jump_nt
    0U,	// J4_cmpgtui_tp1_jump_t
    0U,	// J4_cmplt_f_jumpnv_nt
    0U,	// J4_cmplt_f_jumpnv_t
    0U,	// J4_cmplt_t_jumpnv_nt
    0U,	// J4_cmplt_t_jumpnv_t
    0U,	// J4_cmpltu_f_jumpnv_nt
    0U,	// J4_cmpltu_f_jumpnv_t
    0U,	// J4_cmpltu_t_jumpnv_nt
    0U,	// J4_cmpltu_t_jumpnv_t
    0U,	// J4_hintjumpr
    0U,	// J4_jumpseti
    0U,	// J4_jumpsetr
    0U,	// J4_tstbit0_f_jumpnv_nt
    0U,	// J4_tstbit0_f_jumpnv_t
    0U,	// J4_tstbit0_fp0_jump_nt
    0U,	// J4_tstbit0_fp0_jump_t
    0U,	// J4_tstbit0_fp1_jump_nt
    0U,	// J4_tstbit0_fp1_jump_t
    0U,	// J4_tstbit0_t_jumpnv_nt
    0U,	// J4_tstbit0_t_jumpnv_t
    0U,	// J4_tstbit0_tp0_jump_nt
    0U,	// J4_tstbit0_tp0_jump_t
    0U,	// J4_tstbit0_tp1_jump_nt
    0U,	// J4_tstbit0_tp1_jump_t
    0U,	// L2_deallocframe
    0U,	// L2_loadalignb_io
    0U,	// L2_loadalignb_pbr
    0U,	// L2_loadalignb_pci
    0U,	// L2_loadalignb_pcr
    0U,	// L2_loadalignb_pi
    0U,	// L2_loadalignb_pr
    0U,	// L2_loadalignh_io
    0U,	// L2_loadalignh_pbr
    0U,	// L2_loadalignh_pci
    0U,	// L2_loadalignh_pcr
    0U,	// L2_loadalignh_pi
    0U,	// L2_loadalignh_pr
    0U,	// L2_loadbsw2_io
    0U,	// L2_loadbsw2_pbr
    0U,	// L2_loadbsw2_pci
    0U,	// L2_loadbsw2_pcr
    0U,	// L2_loadbsw2_pi
    0U,	// L2_loadbsw2_pr
    0U,	// L2_loadbsw4_io
    0U,	// L2_loadbsw4_pbr
    0U,	// L2_loadbsw4_pci
    0U,	// L2_loadbsw4_pcr
    0U,	// L2_loadbsw4_pi
    0U,	// L2_loadbsw4_pr
    0U,	// L2_loadbzw2_io
    0U,	// L2_loadbzw2_pbr
    0U,	// L2_loadbzw2_pci
    0U,	// L2_loadbzw2_pcr
    0U,	// L2_loadbzw2_pi
    0U,	// L2_loadbzw2_pr
    0U,	// L2_loadbzw4_io
    0U,	// L2_loadbzw4_pbr
    0U,	// L2_loadbzw4_pci
    0U,	// L2_loadbzw4_pcr
    0U,	// L2_loadbzw4_pi
    0U,	// L2_loadbzw4_pr
    0U,	// L2_loadrb_io
    0U,	// L2_loadrb_pbr
    0U,	// L2_loadrb_pci
    0U,	// L2_loadrb_pcr
    0U,	// L2_loadrb_pi
    0U,	// L2_loadrb_pr
    0U,	// L2_loadrbgp
    0U,	// L2_loadrd_io
    0U,	// L2_loadrd_pbr
    0U,	// L2_loadrd_pci
    0U,	// L2_loadrd_pcr
    0U,	// L2_loadrd_pi
    0U,	// L2_loadrd_pr
    0U,	// L2_loadrdgp
    0U,	// L2_loadrh_io
    0U,	// L2_loadrh_pbr
    0U,	// L2_loadrh_pci
    0U,	// L2_loadrh_pcr
    0U,	// L2_loadrh_pi
    0U,	// L2_loadrh_pr
    0U,	// L2_loadrhgp
    0U,	// L2_loadri_io
    0U,	// L2_loadri_pbr
    0U,	// L2_loadri_pci
    0U,	// L2_loadri_pcr
    0U,	// L2_loadri_pi
    0U,	// L2_loadri_pr
    0U,	// L2_loadrigp
    0U,	// L2_loadrub_io
    0U,	// L2_loadrub_pbr
    0U,	// L2_loadrub_pci
    0U,	// L2_loadrub_pcr
    0U,	// L2_loadrub_pi
    0U,	// L2_loadrub_pr
    0U,	// L2_loadrubgp
    0U,	// L2_loadruh_io
    0U,	// L2_loadruh_pbr
    0U,	// L2_loadruh_pci
    0U,	// L2_loadruh_pcr
    0U,	// L2_loadruh_pi
    0U,	// L2_loadruh_pr
    0U,	// L2_loadruhgp
    0U,	// L2_loadw_locked
    0U,	// L2_ploadrbf_io
    0U,	// L2_ploadrbf_pi
    0U,	// L2_ploadrbfnew_io
    0U,	// L2_ploadrbfnew_pi
    0U,	// L2_ploadrbt_io
    0U,	// L2_ploadrbt_pi
    0U,	// L2_ploadrbtnew_io
    0U,	// L2_ploadrbtnew_pi
    0U,	// L2_ploadrdf_io
    0U,	// L2_ploadrdf_pi
    0U,	// L2_ploadrdfnew_io
    0U,	// L2_ploadrdfnew_pi
    0U,	// L2_ploadrdt_io
    0U,	// L2_ploadrdt_pi
    0U,	// L2_ploadrdtnew_io
    0U,	// L2_ploadrdtnew_pi
    0U,	// L2_ploadrhf_io
    0U,	// L2_ploadrhf_pi
    0U,	// L2_ploadrhfnew_io
    0U,	// L2_ploadrhfnew_pi
    0U,	// L2_ploadrht_io
    0U,	// L2_ploadrht_pi
    0U,	// L2_ploadrhtnew_io
    0U,	// L2_ploadrhtnew_pi
    0U,	// L2_ploadrif_io
    0U,	// L2_ploadrif_pi
    0U,	// L2_ploadrifnew_io
    0U,	// L2_ploadrifnew_pi
    0U,	// L2_ploadrit_io
    0U,	// L2_ploadrit_pi
    0U,	// L2_ploadritnew_io
    0U,	// L2_ploadritnew_pi
    0U,	// L2_ploadrubf_io
    0U,	// L2_ploadrubf_pi
    0U,	// L2_ploadrubfnew_io
    0U,	// L2_ploadrubfnew_pi
    0U,	// L2_ploadrubt_io
    0U,	// L2_ploadrubt_pi
    0U,	// L2_ploadrubtnew_io
    0U,	// L2_ploadrubtnew_pi
    0U,	// L2_ploadruhf_io
    0U,	// L2_ploadruhf_pi
    0U,	// L2_ploadruhfnew_io
    0U,	// L2_ploadruhfnew_pi
    0U,	// L2_ploadruht_io
    0U,	// L2_ploadruht_pi
    0U,	// L2_ploadruhtnew_io
    0U,	// L2_ploadruhtnew_pi
    0U,	// L4_add_memopb_io
    0U,	// L4_add_memoph_io
    0U,	// L4_add_memopw_io
    0U,	// L4_and_memopb_io
    0U,	// L4_and_memoph_io
    0U,	// L4_and_memopw_io
    0U,	// L4_iadd_memopb_io
    0U,	// L4_iadd_memoph_io
    0U,	// L4_iadd_memopw_io
    0U,	// L4_iand_memopb_io
    0U,	// L4_iand_memoph_io
    0U,	// L4_iand_memopw_io
    0U,	// L4_ior_memopb_io
    0U,	// L4_ior_memoph_io
    0U,	// L4_ior_memopw_io
    0U,	// L4_isub_memopb_io
    0U,	// L4_isub_memoph_io
    0U,	// L4_isub_memopw_io
    0U,	// L4_loadalignb_ap
    0U,	// L4_loadalignb_ur
    0U,	// L4_loadalignh_ap
    0U,	// L4_loadalignh_ur
    0U,	// L4_loadbsw2_ap
    0U,	// L4_loadbsw2_ur
    0U,	// L4_loadbsw4_ap
    0U,	// L4_loadbsw4_ur
    0U,	// L4_loadbzw2_ap
    0U,	// L4_loadbzw2_ur
    0U,	// L4_loadbzw4_ap
    0U,	// L4_loadbzw4_ur
    0U,	// L4_loadd_locked
    0U,	// L4_loadrb_ap
    0U,	// L4_loadrb_rr
    0U,	// L4_loadrb_ur
    0U,	// L4_loadrd_ap
    0U,	// L4_loadrd_rr
    0U,	// L4_loadrd_ur
    0U,	// L4_loadrh_ap
    0U,	// L4_loadrh_rr
    0U,	// L4_loadrh_ur
    0U,	// L4_loadri_ap
    0U,	// L4_loadri_rr
    0U,	// L4_loadri_ur
    0U,	// L4_loadrub_ap
    0U,	// L4_loadrub_rr
    0U,	// L4_loadrub_ur
    0U,	// L4_loadruh_ap
    0U,	// L4_loadruh_rr
    0U,	// L4_loadruh_ur
    0U,	// L4_or_memopb_io
    0U,	// L4_or_memoph_io
    0U,	// L4_or_memopw_io
    0U,	// L4_ploadrbf_abs
    0U,	// L4_ploadrbf_rr
    0U,	// L4_ploadrbfnew_abs
    0U,	// L4_ploadrbfnew_rr
    0U,	// L4_ploadrbt_abs
    0U,	// L4_ploadrbt_rr
    0U,	// L4_ploadrbtnew_abs
    0U,	// L4_ploadrbtnew_rr
    0U,	// L4_ploadrdf_abs
    0U,	// L4_ploadrdf_rr
    0U,	// L4_ploadrdfnew_abs
    0U,	// L4_ploadrdfnew_rr
    0U,	// L4_ploadrdt_abs
    0U,	// L4_ploadrdt_rr
    0U,	// L4_ploadrdtnew_abs
    0U,	// L4_ploadrdtnew_rr
    0U,	// L4_ploadrhf_abs
    0U,	// L4_ploadrhf_rr
    0U,	// L4_ploadrhfnew_abs
    0U,	// L4_ploadrhfnew_rr
    0U,	// L4_ploadrht_abs
    0U,	// L4_ploadrht_rr
    0U,	// L4_ploadrhtnew_abs
    0U,	// L4_ploadrhtnew_rr
    0U,	// L4_ploadrif_abs
    0U,	// L4_ploadrif_rr
    0U,	// L4_ploadrifnew_abs
    0U,	// L4_ploadrifnew_rr
    0U,	// L4_ploadrit_abs
    0U,	// L4_ploadrit_rr
    0U,	// L4_ploadritnew_abs
    0U,	// L4_ploadritnew_rr
    0U,	// L4_ploadrubf_abs
    0U,	// L4_ploadrubf_rr
    0U,	// L4_ploadrubfnew_abs
    0U,	// L4_ploadrubfnew_rr
    0U,	// L4_ploadrubt_abs
    0U,	// L4_ploadrubt_rr
    0U,	// L4_ploadrubtnew_abs
    0U,	// L4_ploadrubtnew_rr
    0U,	// L4_ploadruhf_abs
    0U,	// L4_ploadruhf_rr
    0U,	// L4_ploadruhfnew_abs
    0U,	// L4_ploadruhfnew_rr
    0U,	// L4_ploadruht_abs
    0U,	// L4_ploadruht_rr
    0U,	// L4_ploadruhtnew_abs
    0U,	// L4_ploadruhtnew_rr
    0U,	// L4_return
    0U,	// L4_return_f
    0U,	// L4_return_fnew_pnt
    0U,	// L4_return_fnew_pt
    0U,	// L4_return_t
    0U,	// L4_return_tnew_pnt
    0U,	// L4_return_tnew_pt
    0U,	// L4_sub_memopb_io
    0U,	// L4_sub_memoph_io
    0U,	// L4_sub_memopw_io
    0U,	// L6_memcpy
    0U,	// LO
    0U,	// M2_acci
    0U,	// M2_accii
    0U,	// M2_cmaci_s0
    0U,	// M2_cmacr_s0
    0U,	// M2_cmacs_s0
    0U,	// M2_cmacs_s1
    0U,	// M2_cmacsc_s0
    0U,	// M2_cmacsc_s1
    0U,	// M2_cmpyi_s0
    0U,	// M2_cmpyr_s0
    0U,	// M2_cmpyrs_s0
    0U,	// M2_cmpyrs_s1
    0U,	// M2_cmpyrsc_s0
    0U,	// M2_cmpyrsc_s1
    0U,	// M2_cmpys_s0
    0U,	// M2_cmpys_s1
    0U,	// M2_cmpysc_s0
    0U,	// M2_cmpysc_s1
    0U,	// M2_cnacs_s0
    0U,	// M2_cnacs_s1
    0U,	// M2_cnacsc_s0
    0U,	// M2_cnacsc_s1
    0U,	// M2_dpmpyss_acc_s0
    0U,	// M2_dpmpyss_nac_s0
    0U,	// M2_dpmpyss_rnd_s0
    0U,	// M2_dpmpyss_s0
    0U,	// M2_dpmpyuu_acc_s0
    0U,	// M2_dpmpyuu_nac_s0
    0U,	// M2_dpmpyuu_s0
    0U,	// M2_hmmpyh_rs1
    0U,	// M2_hmmpyh_s1
    0U,	// M2_hmmpyl_rs1
    0U,	// M2_hmmpyl_s1
    0U,	// M2_maci
    0U,	// M2_macsin
    0U,	// M2_macsip
    0U,	// M2_mmachs_rs0
    0U,	// M2_mmachs_rs1
    0U,	// M2_mmachs_s0
    0U,	// M2_mmachs_s1
    0U,	// M2_mmacls_rs0
    0U,	// M2_mmacls_rs1
    0U,	// M2_mmacls_s0
    0U,	// M2_mmacls_s1
    0U,	// M2_mmacuhs_rs0
    0U,	// M2_mmacuhs_rs1
    0U,	// M2_mmacuhs_s0
    0U,	// M2_mmacuhs_s1
    0U,	// M2_mmaculs_rs0
    0U,	// M2_mmaculs_rs1
    0U,	// M2_mmaculs_s0
    0U,	// M2_mmaculs_s1
    0U,	// M2_mmpyh_rs0
    0U,	// M2_mmpyh_rs1
    0U,	// M2_mmpyh_s0
    0U,	// M2_mmpyh_s1
    0U,	// M2_mmpyl_rs0
    0U,	// M2_mmpyl_rs1
    0U,	// M2_mmpyl_s0
    0U,	// M2_mmpyl_s1
    0U,	// M2_mmpyuh_rs0
    0U,	// M2_mmpyuh_rs1
    0U,	// M2_mmpyuh_s0
    0U,	// M2_mmpyuh_s1
    0U,	// M2_mmpyul_rs0
    0U,	// M2_mmpyul_rs1
    0U,	// M2_mmpyul_s0
    0U,	// M2_mmpyul_s1
    0U,	// M2_mnaci
    0U,	// M2_mpy_acc_hh_s0
    0U,	// M2_mpy_acc_hh_s1
    0U,	// M2_mpy_acc_hl_s0
    0U,	// M2_mpy_acc_hl_s1
    0U,	// M2_mpy_acc_lh_s0
    0U,	// M2_mpy_acc_lh_s1
    0U,	// M2_mpy_acc_ll_s0
    0U,	// M2_mpy_acc_ll_s1
    0U,	// M2_mpy_acc_sat_hh_s0
    0U,	// M2_mpy_acc_sat_hh_s1
    0U,	// M2_mpy_acc_sat_hl_s0
    0U,	// M2_mpy_acc_sat_hl_s1
    0U,	// M2_mpy_acc_sat_lh_s0
    0U,	// M2_mpy_acc_sat_lh_s1
    0U,	// M2_mpy_acc_sat_ll_s0
    0U,	// M2_mpy_acc_sat_ll_s1
    0U,	// M2_mpy_hh_s0
    0U,	// M2_mpy_hh_s1
    0U,	// M2_mpy_hl_s0
    0U,	// M2_mpy_hl_s1
    0U,	// M2_mpy_lh_s0
    0U,	// M2_mpy_lh_s1
    0U,	// M2_mpy_ll_s0
    0U,	// M2_mpy_ll_s1
    0U,	// M2_mpy_nac_hh_s0
    0U,	// M2_mpy_nac_hh_s1
    0U,	// M2_mpy_nac_hl_s0
    0U,	// M2_mpy_nac_hl_s1
    0U,	// M2_mpy_nac_lh_s0
    0U,	// M2_mpy_nac_lh_s1
    0U,	// M2_mpy_nac_ll_s0
    0U,	// M2_mpy_nac_ll_s1
    0U,	// M2_mpy_nac_sat_hh_s0
    0U,	// M2_mpy_nac_sat_hh_s1
    0U,	// M2_mpy_nac_sat_hl_s0
    0U,	// M2_mpy_nac_sat_hl_s1
    0U,	// M2_mpy_nac_sat_lh_s0
    0U,	// M2_mpy_nac_sat_lh_s1
    0U,	// M2_mpy_nac_sat_ll_s0
    0U,	// M2_mpy_nac_sat_ll_s1
    0U,	// M2_mpy_rnd_hh_s0
    0U,	// M2_mpy_rnd_hh_s1
    0U,	// M2_mpy_rnd_hl_s0
    0U,	// M2_mpy_rnd_hl_s1
    0U,	// M2_mpy_rnd_lh_s0
    0U,	// M2_mpy_rnd_lh_s1
    0U,	// M2_mpy_rnd_ll_s0
    0U,	// M2_mpy_rnd_ll_s1
    0U,	// M2_mpy_sat_hh_s0
    0U,	// M2_mpy_sat_hh_s1
    0U,	// M2_mpy_sat_hl_s0
    0U,	// M2_mpy_sat_hl_s1
    0U,	// M2_mpy_sat_lh_s0
    0U,	// M2_mpy_sat_lh_s1
    0U,	// M2_mpy_sat_ll_s0
    0U,	// M2_mpy_sat_ll_s1
    0U,	// M2_mpy_sat_rnd_hh_s0
    0U,	// M2_mpy_sat_rnd_hh_s1
    0U,	// M2_mpy_sat_rnd_hl_s0
    0U,	// M2_mpy_sat_rnd_hl_s1
    0U,	// M2_mpy_sat_rnd_lh_s0
    0U,	// M2_mpy_sat_rnd_lh_s1
    0U,	// M2_mpy_sat_rnd_ll_s0
    0U,	// M2_mpy_sat_rnd_ll_s1
    0U,	// M2_mpy_up
    0U,	// M2_mpy_up_s1
    0U,	// M2_mpy_up_s1_sat
    0U,	// M2_mpyd_acc_hh_s0
    0U,	// M2_mpyd_acc_hh_s1
    0U,	// M2_mpyd_acc_hl_s0
    0U,	// M2_mpyd_acc_hl_s1
    0U,	// M2_mpyd_acc_lh_s0
    0U,	// M2_mpyd_acc_lh_s1
    0U,	// M2_mpyd_acc_ll_s0
    0U,	// M2_mpyd_acc_ll_s1
    0U,	// M2_mpyd_hh_s0
    0U,	// M2_mpyd_hh_s1
    0U,	// M2_mpyd_hl_s0
    0U,	// M2_mpyd_hl_s1
    0U,	// M2_mpyd_lh_s0
    0U,	// M2_mpyd_lh_s1
    0U,	// M2_mpyd_ll_s0
    0U,	// M2_mpyd_ll_s1
    0U,	// M2_mpyd_nac_hh_s0
    0U,	// M2_mpyd_nac_hh_s1
    0U,	// M2_mpyd_nac_hl_s0
    0U,	// M2_mpyd_nac_hl_s1
    0U,	// M2_mpyd_nac_lh_s0
    0U,	// M2_mpyd_nac_lh_s1
    0U,	// M2_mpyd_nac_ll_s0
    0U,	// M2_mpyd_nac_ll_s1
    0U,	// M2_mpyd_rnd_hh_s0
    0U,	// M2_mpyd_rnd_hh_s1
    0U,	// M2_mpyd_rnd_hl_s0
    0U,	// M2_mpyd_rnd_hl_s1
    0U,	// M2_mpyd_rnd_lh_s0
    0U,	// M2_mpyd_rnd_lh_s1
    0U,	// M2_mpyd_rnd_ll_s0
    0U,	// M2_mpyd_rnd_ll_s1
    0U,	// M2_mpyi
    0U,	// M2_mpysin
    0U,	// M2_mpysip
    0U,	// M2_mpysu_up
    0U,	// M2_mpyu_acc_hh_s0
    0U,	// M2_mpyu_acc_hh_s1
    0U,	// M2_mpyu_acc_hl_s0
    0U,	// M2_mpyu_acc_hl_s1
    0U,	// M2_mpyu_acc_lh_s0
    0U,	// M2_mpyu_acc_lh_s1
    0U,	// M2_mpyu_acc_ll_s0
    0U,	// M2_mpyu_acc_ll_s1
    0U,	// M2_mpyu_hh_s0
    0U,	// M2_mpyu_hh_s1
    0U,	// M2_mpyu_hl_s0
    0U,	// M2_mpyu_hl_s1
    0U,	// M2_mpyu_lh_s0
    0U,	// M2_mpyu_lh_s1
    0U,	// M2_mpyu_ll_s0
    0U,	// M2_mpyu_ll_s1
    0U,	// M2_mpyu_nac_hh_s0
    0U,	// M2_mpyu_nac_hh_s1
    0U,	// M2_mpyu_nac_hl_s0
    0U,	// M2_mpyu_nac_hl_s1
    0U,	// M2_mpyu_nac_lh_s0
    0U,	// M2_mpyu_nac_lh_s1
    0U,	// M2_mpyu_nac_ll_s0
    0U,	// M2_mpyu_nac_ll_s1
    0U,	// M2_mpyu_up
    0U,	// M2_mpyud_acc_hh_s0
    0U,	// M2_mpyud_acc_hh_s1
    0U,	// M2_mpyud_acc_hl_s0
    0U,	// M2_mpyud_acc_hl_s1
    0U,	// M2_mpyud_acc_lh_s0
    0U,	// M2_mpyud_acc_lh_s1
    0U,	// M2_mpyud_acc_ll_s0
    0U,	// M2_mpyud_acc_ll_s1
    0U,	// M2_mpyud_hh_s0
    0U,	// M2_mpyud_hh_s1
    0U,	// M2_mpyud_hl_s0
    0U,	// M2_mpyud_hl_s1
    0U,	// M2_mpyud_lh_s0
    0U,	// M2_mpyud_lh_s1
    0U,	// M2_mpyud_ll_s0
    0U,	// M2_mpyud_ll_s1
    0U,	// M2_mpyud_nac_hh_s0
    0U,	// M2_mpyud_nac_hh_s1
    0U,	// M2_mpyud_nac_hl_s0
    0U,	// M2_mpyud_nac_hl_s1
    0U,	// M2_mpyud_nac_lh_s0
    0U,	// M2_mpyud_nac_lh_s1
    0U,	// M2_mpyud_nac_ll_s0
    0U,	// M2_mpyud_nac_ll_s1
    0U,	// M2_nacci
    0U,	// M2_naccii
    0U,	// M2_subacc
    0U,	// M2_vabsdiffh
    0U,	// M2_vabsdiffw
    0U,	// M2_vcmac_s0_sat_i
    0U,	// M2_vcmac_s0_sat_r
    0U,	// M2_vcmpy_s0_sat_i
    0U,	// M2_vcmpy_s0_sat_r
    0U,	// M2_vcmpy_s1_sat_i
    0U,	// M2_vcmpy_s1_sat_r
    0U,	// M2_vdmacs_s0
    0U,	// M2_vdmacs_s1
    0U,	// M2_vdmpyrs_s0
    0U,	// M2_vdmpyrs_s1
    0U,	// M2_vdmpys_s0
    0U,	// M2_vdmpys_s1
    0U,	// M2_vmac2
    0U,	// M2_vmac2es
    0U,	// M2_vmac2es_s0
    0U,	// M2_vmac2es_s1
    0U,	// M2_vmac2s_s0
    0U,	// M2_vmac2s_s1
    0U,	// M2_vmac2su_s0
    0U,	// M2_vmac2su_s1
    0U,	// M2_vmpy2es_s0
    0U,	// M2_vmpy2es_s1
    0U,	// M2_vmpy2s_s0
    0U,	// M2_vmpy2s_s0pack
    0U,	// M2_vmpy2s_s1
    0U,	// M2_vmpy2s_s1pack
    0U,	// M2_vmpy2su_s0
    0U,	// M2_vmpy2su_s1
    0U,	// M2_vraddh
    0U,	// M2_vradduh
    0U,	// M2_vrcmaci_s0
    0U,	// M2_vrcmaci_s0c
    0U,	// M2_vrcmacr_s0
    0U,	// M2_vrcmacr_s0c
    0U,	// M2_vrcmpyi_s0
    0U,	// M2_vrcmpyi_s0c
    0U,	// M2_vrcmpyr_s0
    0U,	// M2_vrcmpyr_s0c
    0U,	// M2_vrcmpys_acc_s1_h
    0U,	// M2_vrcmpys_acc_s1_l
    0U,	// M2_vrcmpys_s1_h
    0U,	// M2_vrcmpys_s1_l
    0U,	// M2_vrcmpys_s1rp_h
    0U,	// M2_vrcmpys_s1rp_l
    0U,	// M2_vrmac_s0
    0U,	// M2_vrmpy_s0
    0U,	// M2_xor_xacc
    0U,	// M4_and_and
    0U,	// M4_and_andn
    0U,	// M4_and_or
    0U,	// M4_and_xor
    0U,	// M4_cmpyi_wh
    0U,	// M4_cmpyi_whc
    0U,	// M4_cmpyr_wh
    0U,	// M4_cmpyr_whc
    0U,	// M4_mac_up_s1_sat
    0U,	// M4_mpyri_addi
    12U,	// M4_mpyri_addr
    0U,	// M4_mpyri_addr_u2
    0U,	// M4_mpyrr_addi
    0U,	// M4_mpyrr_addr
    0U,	// M4_nac_up_s1_sat
    0U,	// M4_or_and
    0U,	// M4_or_andn
    0U,	// M4_or_or
    0U,	// M4_or_xor
    0U,	// M4_pmpyw
    0U,	// M4_pmpyw_acc
    0U,	// M4_vpmpyh
    0U,	// M4_vpmpyh_acc
    0U,	// M4_vrmpyeh_acc_s0
    0U,	// M4_vrmpyeh_acc_s1
    0U,	// M4_vrmpyeh_s0
    0U,	// M4_vrmpyeh_s1
    0U,	// M4_vrmpyoh_acc_s0
    0U,	// M4_vrmpyoh_acc_s1
    0U,	// M4_vrmpyoh_s0
    0U,	// M4_vrmpyoh_s1
    0U,	// M4_xor_and
    0U,	// M4_xor_andn
    0U,	// M4_xor_or
    0U,	// M4_xor_xacc
    0U,	// M5_vdmacbsu
    0U,	// M5_vdmpybsu
    0U,	// M5_vmacbsu
    0U,	// M5_vmacbuu
    0U,	// M5_vmpybsu
    0U,	// M5_vmpybuu
    0U,	// M5_vrmacbsu
    0U,	// M5_vrmacbuu
    0U,	// M5_vrmpybsu
    0U,	// M5_vrmpybuu
    0U,	// M6_vabsdiffb
    0U,	// M6_vabsdiffub
    0U,	// PS_call_stk
    0U,	// PS_callr_nr
    0U,	// PS_jmpret
    0U,	// PS_jmpretf
    0U,	// PS_jmpretfnew
    0U,	// PS_jmpretfnewpt
    0U,	// PS_jmprett
    0U,	// PS_jmprettnew
    0U,	// PS_jmprettnewpt
    0U,	// PS_loadrbabs
    0U,	// PS_loadrdabs
    0U,	// PS_loadrhabs
    0U,	// PS_loadriabs
    0U,	// PS_loadrubabs
    0U,	// PS_loadruhabs
    0U,	// PS_storerbabs
    0U,	// PS_storerbnewabs
    0U,	// PS_storerdabs
    0U,	// PS_storerfabs
    0U,	// PS_storerhabs
    0U,	// PS_storerhnewabs
    0U,	// PS_storeriabs
    0U,	// PS_storerinewabs
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT_PIC
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_PIC
    0U,	// RESTORE_DEALLOC_RET_JMP_V4
    0U,	// RESTORE_DEALLOC_RET_JMP_V4_EXT
    0U,	// RESTORE_DEALLOC_RET_JMP_V4_EXT_PIC
    0U,	// RESTORE_DEALLOC_RET_JMP_V4_PIC
    0U,	// S2_addasl_rrri
    0U,	// S2_allocframe
    0U,	// S2_asl_i_p
    0U,	// S2_asl_i_p_acc
    0U,	// S2_asl_i_p_and
    0U,	// S2_asl_i_p_nac
    0U,	// S2_asl_i_p_or
    0U,	// S2_asl_i_p_xacc
    0U,	// S2_asl_i_r
    0U,	// S2_asl_i_r_acc
    0U,	// S2_asl_i_r_and
    0U,	// S2_asl_i_r_nac
    0U,	// S2_asl_i_r_or
    0U,	// S2_asl_i_r_sat
    0U,	// S2_asl_i_r_xacc
    0U,	// S2_asl_i_vh
    0U,	// S2_asl_i_vw
    0U,	// S2_asl_r_p
    0U,	// S2_asl_r_p_acc
    0U,	// S2_asl_r_p_and
    0U,	// S2_asl_r_p_nac
    0U,	// S2_asl_r_p_or
    0U,	// S2_asl_r_p_xor
    0U,	// S2_asl_r_r
    0U,	// S2_asl_r_r_acc
    0U,	// S2_asl_r_r_and
    0U,	// S2_asl_r_r_nac
    0U,	// S2_asl_r_r_or
    0U,	// S2_asl_r_r_sat
    0U,	// S2_asl_r_vh
    0U,	// S2_asl_r_vw
    0U,	// S2_asr_i_p
    0U,	// S2_asr_i_p_acc
    0U,	// S2_asr_i_p_and
    0U,	// S2_asr_i_p_nac
    0U,	// S2_asr_i_p_or
    0U,	// S2_asr_i_p_rnd
    0U,	// S2_asr_i_r
    0U,	// S2_asr_i_r_acc
    0U,	// S2_asr_i_r_and
    0U,	// S2_asr_i_r_nac
    0U,	// S2_asr_i_r_or
    0U,	// S2_asr_i_r_rnd
    0U,	// S2_asr_i_svw_trun
    0U,	// S2_asr_i_vh
    0U,	// S2_asr_i_vw
    0U,	// S2_asr_r_p
    0U,	// S2_asr_r_p_acc
    0U,	// S2_asr_r_p_and
    0U,	// S2_asr_r_p_nac
    0U,	// S2_asr_r_p_or
    0U,	// S2_asr_r_p_xor
    0U,	// S2_asr_r_r
    0U,	// S2_asr_r_r_acc
    0U,	// S2_asr_r_r_and
    0U,	// S2_asr_r_r_nac
    0U,	// S2_asr_r_r_or
    0U,	// S2_asr_r_r_sat
    0U,	// S2_asr_r_svw_trun
    0U,	// S2_asr_r_vh
    0U,	// S2_asr_r_vw
    0U,	// S2_brev
    0U,	// S2_brevp
    0U,	// S2_cabacdecbin
    0U,	// S2_cl0
    0U,	// S2_cl0p
    0U,	// S2_cl1
    0U,	// S2_cl1p
    0U,	// S2_clb
    0U,	// S2_clbnorm
    0U,	// S2_clbp
    0U,	// S2_clrbit_i
    0U,	// S2_clrbit_r
    0U,	// S2_ct0
    0U,	// S2_ct0p
    0U,	// S2_ct1
    0U,	// S2_ct1p
    0U,	// S2_deinterleave
    8U,	// S2_extractu
    0U,	// S2_extractu_rp
    8U,	// S2_extractup
    0U,	// S2_extractup_rp
    0U,	// S2_insert
    0U,	// S2_insert_rp
    0U,	// S2_insertp
    0U,	// S2_insertp_rp
    0U,	// S2_interleave
    0U,	// S2_lfsp
    0U,	// S2_lsl_r_p
    0U,	// S2_lsl_r_p_acc
    0U,	// S2_lsl_r_p_and
    0U,	// S2_lsl_r_p_nac
    0U,	// S2_lsl_r_p_or
    0U,	// S2_lsl_r_p_xor
    0U,	// S2_lsl_r_r
    0U,	// S2_lsl_r_r_acc
    0U,	// S2_lsl_r_r_and
    0U,	// S2_lsl_r_r_nac
    0U,	// S2_lsl_r_r_or
    0U,	// S2_lsl_r_vh
    0U,	// S2_lsl_r_vw
    0U,	// S2_lsr_i_p
    0U,	// S2_lsr_i_p_acc
    0U,	// S2_lsr_i_p_and
    0U,	// S2_lsr_i_p_nac
    0U,	// S2_lsr_i_p_or
    0U,	// S2_lsr_i_p_xacc
    0U,	// S2_lsr_i_r
    0U,	// S2_lsr_i_r_acc
    0U,	// S2_lsr_i_r_and
    0U,	// S2_lsr_i_r_nac
    0U,	// S2_lsr_i_r_or
    0U,	// S2_lsr_i_r_xacc
    0U,	// S2_lsr_i_vh
    0U,	// S2_lsr_i_vw
    0U,	// S2_lsr_r_p
    0U,	// S2_lsr_r_p_acc
    0U,	// S2_lsr_r_p_and
    0U,	// S2_lsr_r_p_nac
    0U,	// S2_lsr_r_p_or
    0U,	// S2_lsr_r_p_xor
    0U,	// S2_lsr_r_r
    0U,	// S2_lsr_r_r_acc
    0U,	// S2_lsr_r_r_and
    0U,	// S2_lsr_r_r_nac
    0U,	// S2_lsr_r_r_or
    0U,	// S2_lsr_r_vh
    0U,	// S2_lsr_r_vw
    0U,	// S2_mask
    0U,	// S2_packhl
    0U,	// S2_parityp
    16U,	// S2_pstorerbf_io
    20U,	// S2_pstorerbf_pi
    20U,	// S2_pstorerbfnew_pi
    48U,	// S2_pstorerbnewf_io
    52U,	// S2_pstorerbnewf_pi
    52U,	// S2_pstorerbnewfnew_pi
    48U,	// S2_pstorerbnewt_io
    52U,	// S2_pstorerbnewt_pi
    52U,	// S2_pstorerbnewtnew_pi
    16U,	// S2_pstorerbt_io
    20U,	// S2_pstorerbt_pi
    20U,	// S2_pstorerbtnew_pi
    16U,	// S2_pstorerdf_io
    20U,	// S2_pstorerdf_pi
    20U,	// S2_pstorerdfnew_pi
    16U,	// S2_pstorerdt_io
    20U,	// S2_pstorerdt_pi
    20U,	// S2_pstorerdtnew_pi
    80U,	// S2_pstorerff_io
    84U,	// S2_pstorerff_pi
    84U,	// S2_pstorerffnew_pi
    80U,	// S2_pstorerft_io
    84U,	// S2_pstorerft_pi
    84U,	// S2_pstorerftnew_pi
    16U,	// S2_pstorerhf_io
    20U,	// S2_pstorerhf_pi
    20U,	// S2_pstorerhfnew_pi
    48U,	// S2_pstorerhnewf_io
    52U,	// S2_pstorerhnewf_pi
    52U,	// S2_pstorerhnewfnew_pi
    48U,	// S2_pstorerhnewt_io
    52U,	// S2_pstorerhnewt_pi
    52U,	// S2_pstorerhnewtnew_pi
    16U,	// S2_pstorerht_io
    20U,	// S2_pstorerht_pi
    20U,	// S2_pstorerhtnew_pi
    16U,	// S2_pstorerif_io
    20U,	// S2_pstorerif_pi
    20U,	// S2_pstorerifnew_pi
    48U,	// S2_pstorerinewf_io
    52U,	// S2_pstorerinewf_pi
    52U,	// S2_pstorerinewfnew_pi
    48U,	// S2_pstorerinewt_io
    52U,	// S2_pstorerinewt_pi
    52U,	// S2_pstorerinewtnew_pi
    16U,	// S2_pstorerit_io
    20U,	// S2_pstorerit_pi
    20U,	// S2_pstoreritnew_pi
    0U,	// S2_setbit_i
    0U,	// S2_setbit_r
    0U,	// S2_shuffeb
    0U,	// S2_shuffeh
    0U,	// S2_shuffob
    0U,	// S2_shuffoh
    0U,	// S2_storerb_io
    0U,	// S2_storerb_pbr
    0U,	// S2_storerb_pci
    0U,	// S2_storerb_pcr
    0U,	// S2_storerb_pi
    0U,	// S2_storerb_pr
    0U,	// S2_storerbgp
    0U,	// S2_storerbnew_io
    0U,	// S2_storerbnew_pbr
    0U,	// S2_storerbnew_pci
    0U,	// S2_storerbnew_pcr
    0U,	// S2_storerbnew_pi
    0U,	// S2_storerbnew_pr
    0U,	// S2_storerbnewgp
    0U,	// S2_storerd_io
    0U,	// S2_storerd_pbr
    0U,	// S2_storerd_pci
    0U,	// S2_storerd_pcr
    0U,	// S2_storerd_pi
    0U,	// S2_storerd_pr
    0U,	// S2_storerdgp
    0U,	// S2_storerf_io
    0U,	// S2_storerf_pbr
    0U,	// S2_storerf_pci
    0U,	// S2_storerf_pcr
    0U,	// S2_storerf_pi
    0U,	// S2_storerf_pr
    0U,	// S2_storerfgp
    0U,	// S2_storerh_io
    0U,	// S2_storerh_pbr
    0U,	// S2_storerh_pci
    0U,	// S2_storerh_pcr
    0U,	// S2_storerh_pi
    0U,	// S2_storerh_pr
    0U,	// S2_storerhgp
    0U,	// S2_storerhnew_io
    0U,	// S2_storerhnew_pbr
    0U,	// S2_storerhnew_pci
    0U,	// S2_storerhnew_pcr
    0U,	// S2_storerhnew_pi
    0U,	// S2_storerhnew_pr
    0U,	// S2_storerhnewgp
    0U,	// S2_storeri_io
    0U,	// S2_storeri_pbr
    0U,	// S2_storeri_pci
    0U,	// S2_storeri_pcr
    0U,	// S2_storeri_pi
    0U,	// S2_storeri_pr
    0U,	// S2_storerigp
    0U,	// S2_storerinew_io
    0U,	// S2_storerinew_pbr
    0U,	// S2_storerinew_pci
    0U,	// S2_storerinew_pcr
    0U,	// S2_storerinew_pi
    0U,	// S2_storerinew_pr
    0U,	// S2_storerinewgp
    0U,	// S2_storew_locked
    0U,	// S2_svsathb
    0U,	// S2_svsathub
    0U,	// S2_tableidxb
    0U,	// S2_tableidxd
    0U,	// S2_tableidxh
    0U,	// S2_tableidxw
    0U,	// S2_togglebit_i
    0U,	// S2_togglebit_r
    0U,	// S2_tstbit_i
    0U,	// S2_tstbit_r
    0U,	// S2_valignib
    0U,	// S2_valignrb
    0U,	// S2_vcnegh
    0U,	// S2_vcrotate
    0U,	// S2_vrcnegh
    0U,	// S2_vrndpackwh
    0U,	// S2_vrndpackwhs
    0U,	// S2_vsathb
    0U,	// S2_vsathb_nopack
    0U,	// S2_vsathub
    0U,	// S2_vsathub_nopack
    0U,	// S2_vsatwh
    0U,	// S2_vsatwh_nopack
    0U,	// S2_vsatwuh
    0U,	// S2_vsatwuh_nopack
    0U,	// S2_vsplatrb
    0U,	// S2_vsplatrh
    0U,	// S2_vspliceib
    0U,	// S2_vsplicerb
    0U,	// S2_vsxtbh
    0U,	// S2_vsxthw
    0U,	// S2_vtrunehb
    0U,	// S2_vtrunewh
    0U,	// S2_vtrunohb
    0U,	// S2_vtrunowh
    0U,	// S2_vzxtbh
    0U,	// S2_vzxthw
    0U,	// S4_addaddi
    0U,	// S4_addi_asl_ri
    0U,	// S4_addi_lsr_ri
    0U,	// S4_andi_asl_ri
    0U,	// S4_andi_lsr_ri
    0U,	// S4_clbaddi
    0U,	// S4_clbpaddi
    0U,	// S4_clbpnorm
    8U,	// S4_extract
    0U,	// S4_extract_rp
    8U,	// S4_extractp
    0U,	// S4_extractp_rp
    0U,	// S4_lsli
    0U,	// S4_ntstbit_i
    0U,	// S4_ntstbit_r
    0U,	// S4_or_andi
    0U,	// S4_or_andix
    0U,	// S4_or_ori
    0U,	// S4_ori_asl_ri
    0U,	// S4_ori_lsr_ri
    0U,	// S4_parity
    0U,	// S4_pstorerbf_abs
    0U,	// S4_pstorerbf_rr
    0U,	// S4_pstorerbfnew_abs
    16U,	// S4_pstorerbfnew_io
    0U,	// S4_pstorerbfnew_rr
    0U,	// S4_pstorerbnewf_abs
    0U,	// S4_pstorerbnewf_rr
    0U,	// S4_pstorerbnewfnew_abs
    48U,	// S4_pstorerbnewfnew_io
    0U,	// S4_pstorerbnewfnew_rr
    0U,	// S4_pstorerbnewt_abs
    0U,	// S4_pstorerbnewt_rr
    0U,	// S4_pstorerbnewtnew_abs
    48U,	// S4_pstorerbnewtnew_io
    0U,	// S4_pstorerbnewtnew_rr
    0U,	// S4_pstorerbt_abs
    0U,	// S4_pstorerbt_rr
    0U,	// S4_pstorerbtnew_abs
    16U,	// S4_pstorerbtnew_io
    0U,	// S4_pstorerbtnew_rr
    0U,	// S4_pstorerdf_abs
    0U,	// S4_pstorerdf_rr
    0U,	// S4_pstorerdfnew_abs
    16U,	// S4_pstorerdfnew_io
    0U,	// S4_pstorerdfnew_rr
    0U,	// S4_pstorerdt_abs
    0U,	// S4_pstorerdt_rr
    0U,	// S4_pstorerdtnew_abs
    16U,	// S4_pstorerdtnew_io
    0U,	// S4_pstorerdtnew_rr
    0U,	// S4_pstorerff_abs
    0U,	// S4_pstorerff_rr
    0U,	// S4_pstorerffnew_abs
    80U,	// S4_pstorerffnew_io
    0U,	// S4_pstorerffnew_rr
    0U,	// S4_pstorerft_abs
    0U,	// S4_pstorerft_rr
    0U,	// S4_pstorerftnew_abs
    80U,	// S4_pstorerftnew_io
    0U,	// S4_pstorerftnew_rr
    0U,	// S4_pstorerhf_abs
    0U,	// S4_pstorerhf_rr
    0U,	// S4_pstorerhfnew_abs
    16U,	// S4_pstorerhfnew_io
    0U,	// S4_pstorerhfnew_rr
    0U,	// S4_pstorerhnewf_abs
    0U,	// S4_pstorerhnewf_rr
    0U,	// S4_pstorerhnewfnew_abs
    48U,	// S4_pstorerhnewfnew_io
    0U,	// S4_pstorerhnewfnew_rr
    0U,	// S4_pstorerhnewt_abs
    0U,	// S4_pstorerhnewt_rr
    0U,	// S4_pstorerhnewtnew_abs
    48U,	// S4_pstorerhnewtnew_io
    0U,	// S4_pstorerhnewtnew_rr
    0U,	// S4_pstorerht_abs
    0U,	// S4_pstorerht_rr
    0U,	// S4_pstorerhtnew_abs
    16U,	// S4_pstorerhtnew_io
    0U,	// S4_pstorerhtnew_rr
    0U,	// S4_pstorerif_abs
    0U,	// S4_pstorerif_rr
    0U,	// S4_pstorerifnew_abs
    16U,	// S4_pstorerifnew_io
    0U,	// S4_pstorerifnew_rr
    0U,	// S4_pstorerinewf_abs
    0U,	// S4_pstorerinewf_rr
    0U,	// S4_pstorerinewfnew_abs
    48U,	// S4_pstorerinewfnew_io
    0U,	// S4_pstorerinewfnew_rr
    0U,	// S4_pstorerinewt_abs
    0U,	// S4_pstorerinewt_rr
    0U,	// S4_pstorerinewtnew_abs
    48U,	// S4_pstorerinewtnew_io
    0U,	// S4_pstorerinewtnew_rr
    0U,	// S4_pstorerit_abs
    0U,	// S4_pstorerit_rr
    0U,	// S4_pstoreritnew_abs
    16U,	// S4_pstoreritnew_io
    0U,	// S4_pstoreritnew_rr
    0U,	// S4_stored_locked
    0U,	// S4_storeirb_io
    1U,	// S4_storeirbf_io
    1U,	// S4_storeirbfnew_io
    1U,	// S4_storeirbt_io
    1U,	// S4_storeirbtnew_io
    0U,	// S4_storeirh_io
    1U,	// S4_storeirhf_io
    1U,	// S4_storeirhfnew_io
    1U,	// S4_storeirht_io
    1U,	// S4_storeirhtnew_io
    0U,	// S4_storeiri_io
    1U,	// S4_storeirif_io
    1U,	// S4_storeirifnew_io
    1U,	// S4_storeirit_io
    1U,	// S4_storeiritnew_io
    0U,	// S4_storerb_ap
    0U,	// S4_storerb_rr
    0U,	// S4_storerb_ur
    0U,	// S4_storerbnew_ap
    0U,	// S4_storerbnew_rr
    0U,	// S4_storerbnew_ur
    0U,	// S4_storerd_ap
    0U,	// S4_storerd_rr
    0U,	// S4_storerd_ur
    0U,	// S4_storerf_ap
    0U,	// S4_storerf_rr
    0U,	// S4_storerf_ur
    0U,	// S4_storerh_ap
    0U,	// S4_storerh_rr
    0U,	// S4_storerh_ur
    0U,	// S4_storerhnew_ap
    0U,	// S4_storerhnew_rr
    0U,	// S4_storerhnew_ur
    0U,	// S4_storeri_ap
    0U,	// S4_storeri_rr
    0U,	// S4_storeri_ur
    0U,	// S4_storerinew_ap
    0U,	// S4_storerinew_rr
    0U,	// S4_storerinew_ur
    0U,	// S4_subaddi
    0U,	// S4_subi_asl_ri
    0U,	// S4_subi_lsr_ri
    0U,	// S4_vrcrotate
    0U,	// S4_vrcrotate_acc
    0U,	// S4_vxaddsubh
    0U,	// S4_vxaddsubhr
    0U,	// S4_vxaddsubw
    0U,	// S4_vxsubaddh
    0U,	// S4_vxsubaddhr
    0U,	// S4_vxsubaddw
    0U,	// S5_asrhub_rnd_sat
    0U,	// S5_asrhub_sat
    0U,	// S5_popcountp
    0U,	// S5_vasrhrnd
    0U,	// S6_rol_i_p
    0U,	// S6_rol_i_p_acc
    0U,	// S6_rol_i_p_and
    0U,	// S6_rol_i_p_nac
    0U,	// S6_rol_i_p_or
    0U,	// S6_rol_i_p_xacc
    0U,	// S6_rol_i_r
    0U,	// S6_rol_i_r_acc
    0U,	// S6_rol_i_r_and
    0U,	// S6_rol_i_r_nac
    0U,	// S6_rol_i_r_or
    0U,	// S6_rol_i_r_xacc
    0U,	// S6_vsplatrbp
    0U,	// S6_vtrunehb_ppp
    0U,	// S6_vtrunohb_ppp
    0U,	// SA1_addi
    0U,	// SA1_addrx
    0U,	// SA1_addsp
    0U,	// SA1_and1
    0U,	// SA1_clrf
    0U,	// SA1_clrfnew
    0U,	// SA1_clrt
    0U,	// SA1_clrtnew
    0U,	// SA1_cmpeqi
    0U,	// SA1_combine0i
    0U,	// SA1_combine1i
    0U,	// SA1_combine2i
    0U,	// SA1_combine3i
    0U,	// SA1_combinerz
    0U,	// SA1_combinezr
    0U,	// SA1_dec
    0U,	// SA1_inc
    0U,	// SA1_seti
    0U,	// SA1_setin1
    0U,	// SA1_sxtb
    0U,	// SA1_sxth
    0U,	// SA1_tfr
    0U,	// SA1_zxtb
    0U,	// SA1_zxth
    0U,	// SAVE_REGISTERS_CALL_V4
    0U,	// SAVE_REGISTERS_CALL_V4STK
    0U,	// SAVE_REGISTERS_CALL_V4STK_EXT
    0U,	// SAVE_REGISTERS_CALL_V4STK_EXT_PIC
    0U,	// SAVE_REGISTERS_CALL_V4STK_PIC
    0U,	// SAVE_REGISTERS_CALL_V4_EXT
    0U,	// SAVE_REGISTERS_CALL_V4_EXT_PIC
    0U,	// SAVE_REGISTERS_CALL_V4_PIC
    0U,	// SL1_loadri_io
    0U,	// SL1_loadrub_io
    0U,	// SL2_deallocframe
    0U,	// SL2_jumpr31
    0U,	// SL2_jumpr31_f
    0U,	// SL2_jumpr31_fnew
    0U,	// SL2_jumpr31_t
    0U,	// SL2_jumpr31_tnew
    0U,	// SL2_loadrb_io
    0U,	// SL2_loadrd_sp
    0U,	// SL2_loadrh_io
    0U,	// SL2_loadri_sp
    0U,	// SL2_loadruh_io
    0U,	// SL2_return
    0U,	// SL2_return_f
    0U,	// SL2_return_fnew
    0U,	// SL2_return_t
    0U,	// SL2_return_tnew
    0U,	// SS1_storeb_io
    0U,	// SS1_storew_io
    0U,	// SS2_allocframe
    0U,	// SS2_storebi0
    0U,	// SS2_storebi1
    0U,	// SS2_stored_sp
    0U,	// SS2_storeh_io
    0U,	// SS2_storew_sp
    0U,	// SS2_storewi0
    0U,	// SS2_storewi1
    0U,	// TFRI64_V2_ext
    0U,	// TFRI64_V4
    0U,	// V6_extractw
    0U,	// V6_lvsplatb
    0U,	// V6_lvsplath
    0U,	// V6_lvsplatw
    0U,	// V6_pred_and
    0U,	// V6_pred_and_n
    0U,	// V6_pred_not
    0U,	// V6_pred_or
    0U,	// V6_pred_or_n
    0U,	// V6_pred_scalar2
    0U,	// V6_pred_scalar2v2
    0U,	// V6_pred_xor
    0U,	// V6_shuffeqh
    0U,	// V6_shuffeqw
    0U,	// V6_vL32Ub_ai
    0U,	// V6_vL32Ub_pi
    0U,	// V6_vL32Ub_ppu
    0U,	// V6_vL32b_ai
    0U,	// V6_vL32b_cur_ai
    0U,	// V6_vL32b_cur_npred_ai
    0U,	// V6_vL32b_cur_npred_pi
    0U,	// V6_vL32b_cur_npred_ppu
    0U,	// V6_vL32b_cur_pi
    0U,	// V6_vL32b_cur_ppu
    0U,	// V6_vL32b_cur_pred_ai
    0U,	// V6_vL32b_cur_pred_pi
    0U,	// V6_vL32b_cur_pred_ppu
    0U,	// V6_vL32b_npred_ai
    0U,	// V6_vL32b_npred_pi
    0U,	// V6_vL32b_npred_ppu
    0U,	// V6_vL32b_nt_ai
    0U,	// V6_vL32b_nt_cur_ai
    1U,	// V6_vL32b_nt_cur_npred_ai
    1U,	// V6_vL32b_nt_cur_npred_pi
    1U,	// V6_vL32b_nt_cur_npred_ppu
    0U,	// V6_vL32b_nt_cur_pi
    0U,	// V6_vL32b_nt_cur_ppu
    1U,	// V6_vL32b_nt_cur_pred_ai
    1U,	// V6_vL32b_nt_cur_pred_pi
    1U,	// V6_vL32b_nt_cur_pred_ppu
    1U,	// V6_vL32b_nt_npred_ai
    1U,	// V6_vL32b_nt_npred_pi
    1U,	// V6_vL32b_nt_npred_ppu
    0U,	// V6_vL32b_nt_pi
    0U,	// V6_vL32b_nt_ppu
    1U,	// V6_vL32b_nt_pred_ai
    1U,	// V6_vL32b_nt_pred_pi
    1U,	// V6_vL32b_nt_pred_ppu
    0U,	// V6_vL32b_nt_tmp_ai
    1U,	// V6_vL32b_nt_tmp_npred_ai
    1U,	// V6_vL32b_nt_tmp_npred_pi
    1U,	// V6_vL32b_nt_tmp_npred_ppu
    0U,	// V6_vL32b_nt_tmp_pi
    0U,	// V6_vL32b_nt_tmp_ppu
    1U,	// V6_vL32b_nt_tmp_pred_ai
    1U,	// V6_vL32b_nt_tmp_pred_pi
    1U,	// V6_vL32b_nt_tmp_pred_ppu
    0U,	// V6_vL32b_pi
    0U,	// V6_vL32b_ppu
    0U,	// V6_vL32b_pred_ai
    0U,	// V6_vL32b_pred_pi
    0U,	// V6_vL32b_pred_ppu
    0U,	// V6_vL32b_tmp_ai
    0U,	// V6_vL32b_tmp_npred_ai
    0U,	// V6_vL32b_tmp_npred_pi
    0U,	// V6_vL32b_tmp_npred_ppu
    0U,	// V6_vL32b_tmp_pi
    0U,	// V6_vL32b_tmp_ppu
    0U,	// V6_vL32b_tmp_pred_ai
    0U,	// V6_vL32b_tmp_pred_pi
    0U,	// V6_vL32b_tmp_pred_ppu
    0U,	// V6_vS32Ub_ai
    16U,	// V6_vS32Ub_npred_ai
    20U,	// V6_vS32Ub_npred_pi
    20U,	// V6_vS32Ub_npred_ppu
    0U,	// V6_vS32Ub_pi
    0U,	// V6_vS32Ub_ppu
    16U,	// V6_vS32Ub_pred_ai
    20U,	// V6_vS32Ub_pred_pi
    20U,	// V6_vS32Ub_pred_ppu
    0U,	// V6_vS32b_ai
    0U,	// V6_vS32b_new_ai
    48U,	// V6_vS32b_new_npred_ai
    52U,	// V6_vS32b_new_npred_pi
    52U,	// V6_vS32b_new_npred_ppu
    0U,	// V6_vS32b_new_pi
    0U,	// V6_vS32b_new_ppu
    48U,	// V6_vS32b_new_pred_ai
    52U,	// V6_vS32b_new_pred_pi
    52U,	// V6_vS32b_new_pred_ppu
    16U,	// V6_vS32b_npred_ai
    20U,	// V6_vS32b_npred_pi
    20U,	// V6_vS32b_npred_ppu
    16U,	// V6_vS32b_nqpred_ai
    20U,	// V6_vS32b_nqpred_pi
    20U,	// V6_vS32b_nqpred_ppu
    0U,	// V6_vS32b_nt_ai
    0U,	// V6_vS32b_nt_new_ai
    49U,	// V6_vS32b_nt_new_npred_ai
    53U,	// V6_vS32b_nt_new_npred_pi
    53U,	// V6_vS32b_nt_new_npred_ppu
    0U,	// V6_vS32b_nt_new_pi
    0U,	// V6_vS32b_nt_new_ppu
    49U,	// V6_vS32b_nt_new_pred_ai
    53U,	// V6_vS32b_nt_new_pred_pi
    53U,	// V6_vS32b_nt_new_pred_ppu
    17U,	// V6_vS32b_nt_npred_ai
    21U,	// V6_vS32b_nt_npred_pi
    21U,	// V6_vS32b_nt_npred_ppu
    17U,	// V6_vS32b_nt_nqpred_ai
    21U,	// V6_vS32b_nt_nqpred_pi
    21U,	// V6_vS32b_nt_nqpred_ppu
    0U,	// V6_vS32b_nt_pi
    0U,	// V6_vS32b_nt_ppu
    17U,	// V6_vS32b_nt_pred_ai
    21U,	// V6_vS32b_nt_pred_pi
    21U,	// V6_vS32b_nt_pred_ppu
    17U,	// V6_vS32b_nt_qpred_ai
    21U,	// V6_vS32b_nt_qpred_pi
    21U,	// V6_vS32b_nt_qpred_ppu
    0U,	// V6_vS32b_pi
    0U,	// V6_vS32b_ppu
    16U,	// V6_vS32b_pred_ai
    20U,	// V6_vS32b_pred_pi
    20U,	// V6_vS32b_pred_ppu
    16U,	// V6_vS32b_qpred_ai
    20U,	// V6_vS32b_qpred_pi
    20U,	// V6_vS32b_qpred_ppu
    0U,	// V6_vS32b_srls_ai
    0U,	// V6_vS32b_srls_pi
    0U,	// V6_vS32b_srls_ppu
    0U,	// V6_vabsb
    0U,	// V6_vabsb_sat
    0U,	// V6_vabsdiffh
    0U,	// V6_vabsdiffub
    0U,	// V6_vabsdiffuh
    0U,	// V6_vabsdiffw
    0U,	// V6_vabsh
    0U,	// V6_vabsh_sat
    0U,	// V6_vabsw
    0U,	// V6_vabsw_sat
    0U,	// V6_vaddb
    0U,	// V6_vaddb_dv
    0U,	// V6_vaddbnq
    0U,	// V6_vaddbq
    0U,	// V6_vaddbsat
    0U,	// V6_vaddbsat_dv
    25U,	// V6_vaddcarry
    0U,	// V6_vaddcarryo
    113U,	// V6_vaddcarrysat
    0U,	// V6_vaddclbh
    0U,	// V6_vaddclbw
    0U,	// V6_vaddh
    0U,	// V6_vaddh_dv
    0U,	// V6_vaddhnq
    0U,	// V6_vaddhq
    0U,	// V6_vaddhsat
    0U,	// V6_vaddhsat_dv
    0U,	// V6_vaddhw
    0U,	// V6_vaddhw_acc
    0U,	// V6_vaddubh
    0U,	// V6_vaddubh_acc
    0U,	// V6_vaddubsat
    0U,	// V6_vaddubsat_dv
    0U,	// V6_vaddububb_sat
    0U,	// V6_vadduhsat
    0U,	// V6_vadduhsat_dv
    0U,	// V6_vadduhw
    0U,	// V6_vadduhw_acc
    0U,	// V6_vadduwsat
    0U,	// V6_vadduwsat_dv
    1U,	// V6_vaddw
    1U,	// V6_vaddw_dv
    0U,	// V6_vaddwnq
    0U,	// V6_vaddwq
    1U,	// V6_vaddwsat
    1U,	// V6_vaddwsat_dv
    0U,	// V6_valignb
    0U,	// V6_valignbi
    0U,	// V6_vand
    0U,	// V6_vandnqrt
    0U,	// V6_vandnqrt_acc
    0U,	// V6_vandqrt
    0U,	// V6_vandqrt_acc
    0U,	// V6_vandvnqv
    0U,	// V6_vandvqv
    0U,	// V6_vandvrt
    0U,	// V6_vandvrt_acc
    0U,	// V6_vaslh
    0U,	// V6_vaslh_acc
    0U,	// V6_vaslhv
    0U,	// V6_vaslw
    0U,	// V6_vaslw_acc
    0U,	// V6_vaslwv
    0U,	// V6_vasr_into
    0U,	// V6_vasrh
    0U,	// V6_vasrh_acc
    0U,	// V6_vasrhbrndsat
    0U,	// V6_vasrhbsat
    0U,	// V6_vasrhubrndsat
    0U,	// V6_vasrhubsat
    0U,	// V6_vasrhv
    0U,	// V6_vasruhubrndsat
    0U,	// V6_vasruhubsat
    0U,	// V6_vasruwuhrndsat
    0U,	// V6_vasruwuhsat
    0U,	// V6_vasrw
    0U,	// V6_vasrw_acc
    0U,	// V6_vasrwh
    0U,	// V6_vasrwhrndsat
    0U,	// V6_vasrwhsat
    0U,	// V6_vasrwuhrndsat
    0U,	// V6_vasrwuhsat
    0U,	// V6_vasrwv
    0U,	// V6_vassign
    0U,	// V6_vavgb
    0U,	// V6_vavgbrnd
    0U,	// V6_vavgh
    0U,	// V6_vavghrnd
    0U,	// V6_vavgub
    0U,	// V6_vavgubrnd
    0U,	// V6_vavguh
    0U,	// V6_vavguhrnd
    0U,	// V6_vavguw
    0U,	// V6_vavguwrnd
    0U,	// V6_vavgw
    0U,	// V6_vavgwrnd
    0U,	// V6_vccombine
    0U,	// V6_vcl0h
    0U,	// V6_vcl0w
    0U,	// V6_vcmov
    0U,	// V6_vcombine
    0U,	// V6_vdeal
    0U,	// V6_vdealb
    0U,	// V6_vdealb4w
    0U,	// V6_vdealh
    0U,	// V6_vdealvdd
    0U,	// V6_vdelta
    0U,	// V6_vdmpybus
    0U,	// V6_vdmpybus_acc
    0U,	// V6_vdmpybus_dv
    0U,	// V6_vdmpybus_dv_acc
    0U,	// V6_vdmpyhb
    0U,	// V6_vdmpyhb_acc
    0U,	// V6_vdmpyhb_dv
    0U,	// V6_vdmpyhb_dv_acc
    0U,	// V6_vdmpyhisat
    0U,	// V6_vdmpyhisat_acc
    0U,	// V6_vdmpyhsat
    0U,	// V6_vdmpyhsat_acc
    0U,	// V6_vdmpyhsuisat
    0U,	// V6_vdmpyhsuisat_acc
    0U,	// V6_vdmpyhsusat
    0U,	// V6_vdmpyhsusat_acc
    0U,	// V6_vdmpyhvsat
    0U,	// V6_vdmpyhvsat_acc
    0U,	// V6_vdsaduh
    0U,	// V6_vdsaduh_acc
    0U,	// V6_veqb
    0U,	// V6_veqb_and
    0U,	// V6_veqb_or
    0U,	// V6_veqb_xor
    0U,	// V6_veqh
    0U,	// V6_veqh_and
    0U,	// V6_veqh_or
    0U,	// V6_veqh_xor
    0U,	// V6_veqw
    0U,	// V6_veqw_and
    0U,	// V6_veqw_or
    0U,	// V6_veqw_xor
    1U,	// V6_vgathermh
    0U,	// V6_vgathermhq
    1U,	// V6_vgathermhw
    0U,	// V6_vgathermhwq
    1U,	// V6_vgathermw
    0U,	// V6_vgathermwq
    0U,	// V6_vgtb
    0U,	// V6_vgtb_and
    0U,	// V6_vgtb_or
    0U,	// V6_vgtb_xor
    0U,	// V6_vgth
    0U,	// V6_vgth_and
    0U,	// V6_vgth_or
    0U,	// V6_vgth_xor
    0U,	// V6_vgtub
    0U,	// V6_vgtub_and
    0U,	// V6_vgtub_or
    0U,	// V6_vgtub_xor
    0U,	// V6_vgtuh
    0U,	// V6_vgtuh_and
    0U,	// V6_vgtuh_or
    0U,	// V6_vgtuh_xor
    0U,	// V6_vgtuw
    0U,	// V6_vgtuw_and
    0U,	// V6_vgtuw_or
    0U,	// V6_vgtuw_xor
    0U,	// V6_vgtw
    0U,	// V6_vgtw_and
    0U,	// V6_vgtw_or
    0U,	// V6_vgtw_xor
    0U,	// V6_vhist
    0U,	// V6_vhistq
    0U,	// V6_vinsertwr
    0U,	// V6_vlalignb
    0U,	// V6_vlalignbi
    0U,	// V6_vlsrb
    0U,	// V6_vlsrh
    0U,	// V6_vlsrhv
    0U,	// V6_vlsrw
    0U,	// V6_vlsrwv
    0U,	// V6_vlut4
    0U,	// V6_vlutvvb
    0U,	// V6_vlutvvb_nm
    0U,	// V6_vlutvvb_oracc
    0U,	// V6_vlutvvb_oracci
    0U,	// V6_vlutvvbi
    0U,	// V6_vlutvwh
    0U,	// V6_vlutvwh_nm
    0U,	// V6_vlutvwh_oracc
    0U,	// V6_vlutvwh_oracci
    0U,	// V6_vlutvwhi
    0U,	// V6_vmaxb
    0U,	// V6_vmaxh
    0U,	// V6_vmaxub
    0U,	// V6_vmaxuh
    0U,	// V6_vmaxw
    0U,	// V6_vminb
    0U,	// V6_vminh
    0U,	// V6_vminub
    0U,	// V6_vminuh
    0U,	// V6_vminw
    0U,	// V6_vmpabus
    0U,	// V6_vmpabus_acc
    0U,	// V6_vmpabusv
    0U,	// V6_vmpabuu
    0U,	// V6_vmpabuu_acc
    0U,	// V6_vmpabuuv
    0U,	// V6_vmpahb
    0U,	// V6_vmpahb_acc
    1U,	// V6_vmpahhsat
    0U,	// V6_vmpauhb
    0U,	// V6_vmpauhb_acc
    1U,	// V6_vmpauhuhsat
    0U,	// V6_vmpsuhuhsat
    0U,	// V6_vmpybus
    0U,	// V6_vmpybus_acc
    0U,	// V6_vmpybusv
    0U,	// V6_vmpybusv_acc
    0U,	// V6_vmpybv
    0U,	// V6_vmpybv_acc
    0U,	// V6_vmpyewuh
    0U,	// V6_vmpyewuh_64
    0U,	// V6_vmpyh
    0U,	// V6_vmpyh_acc
    0U,	// V6_vmpyhsat_acc
    0U,	// V6_vmpyhsrs
    0U,	// V6_vmpyhss
    0U,	// V6_vmpyhus
    0U,	// V6_vmpyhus_acc
    0U,	// V6_vmpyhv
    0U,	// V6_vmpyhv_acc
    0U,	// V6_vmpyhvsrs
    0U,	// V6_vmpyieoh
    0U,	// V6_vmpyiewh_acc
    0U,	// V6_vmpyiewuh
    0U,	// V6_vmpyiewuh_acc
    0U,	// V6_vmpyih
    0U,	// V6_vmpyih_acc
    0U,	// V6_vmpyihb
    0U,	// V6_vmpyihb_acc
    0U,	// V6_vmpyiowh
    0U,	// V6_vmpyiwb
    0U,	// V6_vmpyiwb_acc
    0U,	// V6_vmpyiwh
    0U,	// V6_vmpyiwh_acc
    0U,	// V6_vmpyiwub
    0U,	// V6_vmpyiwub_acc
    0U,	// V6_vmpyowh
    0U,	// V6_vmpyowh_64_acc
    0U,	// V6_vmpyowh_rnd
    0U,	// V6_vmpyowh_rnd_sacc
    0U,	// V6_vmpyowh_sacc
    0U,	// V6_vmpyub
    0U,	// V6_vmpyub_acc
    0U,	// V6_vmpyubv
    0U,	// V6_vmpyubv_acc
    0U,	// V6_vmpyuh
    0U,	// V6_vmpyuh_acc
    0U,	// V6_vmpyuhe
    0U,	// V6_vmpyuhe_acc
    0U,	// V6_vmpyuhv
    0U,	// V6_vmpyuhv_acc
    0U,	// V6_vmux
    0U,	// V6_vnavgb
    0U,	// V6_vnavgh
    0U,	// V6_vnavgub
    0U,	// V6_vnavgw
    0U,	// V6_vnccombine
    0U,	// V6_vncmov
    0U,	// V6_vnormamth
    0U,	// V6_vnormamtw
    0U,	// V6_vnot
    0U,	// V6_vor
    0U,	// V6_vpackeb
    0U,	// V6_vpackeh
    0U,	// V6_vpackhb_sat
    0U,	// V6_vpackhub_sat
    0U,	// V6_vpackob
    0U,	// V6_vpackoh
    0U,	// V6_vpackwh_sat
    0U,	// V6_vpackwuh_sat
    0U,	// V6_vpopcounth
    0U,	// V6_vprefixqb
    0U,	// V6_vprefixqh
    0U,	// V6_vprefixqw
    0U,	// V6_vrdelta
    0U,	// V6_vrmpybub_rtt
    0U,	// V6_vrmpybub_rtt_acc
    0U,	// V6_vrmpybus
    0U,	// V6_vrmpybus_acc
    8U,	// V6_vrmpybusi
    0U,	// V6_vrmpybusi_acc
    0U,	// V6_vrmpybusv
    0U,	// V6_vrmpybusv_acc
    0U,	// V6_vrmpybv
    0U,	// V6_vrmpybv_acc
    0U,	// V6_vrmpyub
    0U,	// V6_vrmpyub_acc
    0U,	// V6_vrmpyub_rtt
    0U,	// V6_vrmpyub_rtt_acc
    0U,	// V6_vrmpyubi
    0U,	// V6_vrmpyubi_acc
    0U,	// V6_vrmpyubv
    0U,	// V6_vrmpyubv_acc
    1U,	// V6_vrmpyzbb_rt
    1U,	// V6_vrmpyzbb_rt_acc
    1U,	// V6_vrmpyzbb_rx
    1U,	// V6_vrmpyzbb_rx_acc
    1U,	// V6_vrmpyzbub_rt
    1U,	// V6_vrmpyzbub_rt_acc
    1U,	// V6_vrmpyzbub_rx
    1U,	// V6_vrmpyzbub_rx_acc
    1U,	// V6_vrmpyzcb_rt
    1U,	// V6_vrmpyzcb_rt_acc
    1U,	// V6_vrmpyzcb_rx
    1U,	// V6_vrmpyzcb_rx_acc
    1U,	// V6_vrmpyzcbs_rt
    1U,	// V6_vrmpyzcbs_rt_acc
    1U,	// V6_vrmpyzcbs_rx
    1U,	// V6_vrmpyzcbs_rx_acc
    1U,	// V6_vrmpyznb_rt
    1U,	// V6_vrmpyznb_rt_acc
    1U,	// V6_vrmpyznb_rx
    1U,	// V6_vrmpyznb_rx_acc
    0U,	// V6_vror
    0U,	// V6_vrotr
    0U,	// V6_vroundhb
    0U,	// V6_vroundhub
    0U,	// V6_vrounduhub
    0U,	// V6_vrounduwuh
    0U,	// V6_vroundwh
    0U,	// V6_vroundwuh
    0U,	// V6_vrsadubi
    0U,	// V6_vrsadubi_acc
    0U,	// V6_vsatdw
    0U,	// V6_vsathub
    0U,	// V6_vsatuwuh
    0U,	// V6_vsatwh
    0U,	// V6_vsb
    1U,	// V6_vscattermh
    2U,	// V6_vscattermh_add
    0U,	// V6_vscattermhq
    2U,	// V6_vscattermhw
    2U,	// V6_vscattermhw_add
    0U,	// V6_vscattermhwq
    2U,	// V6_vscattermw
    2U,	// V6_vscattermw_add
    0U,	// V6_vscattermwq
    0U,	// V6_vsh
    0U,	// V6_vshufeh
    0U,	// V6_vshuff
    0U,	// V6_vshuffb
    0U,	// V6_vshuffeb
    0U,	// V6_vshuffh
    0U,	// V6_vshuffob
    0U,	// V6_vshuffvdd
    0U,	// V6_vshufoeb
    0U,	// V6_vshufoeh
    0U,	// V6_vshufoh
    0U,	// V6_vsubb
    0U,	// V6_vsubb_dv
    0U,	// V6_vsubbnq
    0U,	// V6_vsubbq
    0U,	// V6_vsubbsat
    0U,	// V6_vsubbsat_dv
    25U,	// V6_vsubcarry
    0U,	// V6_vsubcarryo
    0U,	// V6_vsubh
    0U,	// V6_vsubh_dv
    0U,	// V6_vsubhnq
    0U,	// V6_vsubhq
    0U,	// V6_vsubhsat
    0U,	// V6_vsubhsat_dv
    0U,	// V6_vsubhw
    0U,	// V6_vsububh
    0U,	// V6_vsububsat
    0U,	// V6_vsububsat_dv
    0U,	// V6_vsubububb_sat
    0U,	// V6_vsubuhsat
    0U,	// V6_vsubuhsat_dv
    0U,	// V6_vsubuhw
    0U,	// V6_vsubuwsat
    0U,	// V6_vsubuwsat_dv
    1U,	// V6_vsubw
    1U,	// V6_vsubw_dv
    0U,	// V6_vsubwnq
    0U,	// V6_vsubwq
    1U,	// V6_vsubwsat
    1U,	// V6_vsubwsat_dv
    0U,	// V6_vswap
    0U,	// V6_vtmpyb
    0U,	// V6_vtmpyb_acc
    0U,	// V6_vtmpybus
    0U,	// V6_vtmpybus_acc
    0U,	// V6_vtmpyhb
    0U,	// V6_vtmpyhb_acc
    0U,	// V6_vunpackb
    0U,	// V6_vunpackh
    0U,	// V6_vunpackob
    0U,	// V6_vunpackoh
    0U,	// V6_vunpackub
    0U,	// V6_vunpackuh
    0U,	// V6_vwhist128
    0U,	// V6_vwhist128m
    0U,	// V6_vwhist128q
    0U,	// V6_vwhist128qm
    0U,	// V6_vwhist256
    0U,	// V6_vwhist256_sat
    0U,	// V6_vwhist256q
    0U,	// V6_vwhist256q_sat
    0U,	// V6_vxor
    0U,	// V6_vzb
    0U,	// V6_vzh
    0U,	// V6_zLd_ai
    0U,	// V6_zLd_pi
    0U,	// V6_zLd_ppu
    0U,	// V6_zLd_pred_ai
    0U,	// V6_zLd_pred_pi
    0U,	// V6_zLd_pred_ppu
    0U,	// V6_zextract
    0U,	// Y2_barrier
    0U,	// Y2_break
    0U,	// Y2_dccleana
    0U,	// Y2_dccleaninva
    0U,	// Y2_dcfetchbo
    0U,	// Y2_dcinva
    0U,	// Y2_dczeroa
    0U,	// Y2_icinva
    0U,	// Y2_isync
    0U,	// Y2_syncht
    0U,	// Y2_wait
    0U,	// Y4_l2fetch
    0U,	// Y4_trace
    0U,	// Y5_l2fetch
    2U,	// dep_A2_addsat
    2U,	// dep_A2_subsat
    0U,	// dep_S2_packhl
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  Bits |= (uint64_t)OpInfo2[MI->getOpcode()] << 48;
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 2047)-1;


  // Fragment 0 encoded into 3 bits for 5 unique commands.
  switch ((Bits >> 11) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_LABEL, BUNDLE, LIFETIME_START, LIFETIME_END, FENTRY_CAL...
    return;
    break;
  case 1:
    // A2_addsp, A2_iconst, A2_neg, A2_not, A2_tfrp, A2_tfrpi, A2_vaddb_map, ...
    printOperand(MI, 0, O);
    break;
  case 2:
    // A2_tfrf, A2_tfrfnew, A2_tfrpf, A2_tfrpfnew, A2_tfrpt, A2_tfrptnew, A2_...
    printOperand(MI, 1, O);
    break;
  case 3:
    // CALLProfile, J2_call, J2_jump, J2_loop0i, J2_loop0iext, J2_loop0r, J2_...
    printBrtarget(MI, 0, O);
    break;
  case 4:
    // L2_ploadrbf_pi, L2_ploadrbfnew_pi, L2_ploadrbt_pi, L2_ploadrbtnew_pi, ...
    printOperand(MI, 2, O);
    break;
  }


  // Fragment 1 encoded into 10 bits for 802 unique commands.
  switch ((Bits >> 14) & 1023) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A2_addsp, A2_add, A2_addh_h16_hh, A2_addh_h16_hl, A2_addh_h16_lh, A2_a...
    O << " = add(";
    break;
  case 1:
    // A2_iconst
    O << " = iconst(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 2:
    // A2_neg, A2_negp, A2_negsat
    O << " = neg(";
    printOperand(MI, 1, O);
    break;
  case 3:
    // A2_not, A2_notp, C2_not, V6_pred_not
    O << " = not(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 4:
    // A2_tfrf, A2_tfrpf, A2_tfrpt, A2_tfrt, L2_ploadrbf_zomap, L2_ploadrbt_z...
    O << ") ";
    printOperand(MI, 0, O);
    break;
  case 5:
    // A2_tfrfnew, A2_tfrpfnew, A2_tfrptnew, A2_tfrtnew, L2_ploadrbfnew_zomap...
    O << ".new) ";
    printOperand(MI, 0, O);
    break;
  case 6:
    // A2_tfrp, C2_pxfer_map, V6_vassignp, A2_tfr, A2_tfrcrr, A2_tfrrcr, A4_t...
    O << " = ";
    printOperand(MI, 1, O);
    break;
  case 7:
    // A2_tfrpi, A2_tfrsi, J4_jumpseti, SA1_seti, SA1_setin1, TFRI64_V4
    O << " = #";
    printOperand(MI, 1, O);
    break;
  case 8:
    // A2_vaddb_map, V6_vaddb_alt, V6_vaddb_dv_alt, V6_vaddbsat_alt, V6_vaddb...
    O << " = vaddb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 9:
    // A2_vsubb_map, V6_vsubb_alt, V6_vsubb_dv_alt, V6_vsubbsat_alt, V6_vsubb...
    O << " = vsubb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 10:
    // A2_zxtb
    O << " = zxtb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 11:
    // A4_boundscheck, A4_boundscheck_hi, A4_boundscheck_lo
    O << " = boundscheck(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 12:
    // C2_cmpgei
    O << " = cmp.ge(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 13:
    // C2_cmpgeui
    O << " = cmp.geu(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 14:
    // C2_cmplt
    O << " = cmp.lt(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 15:
    // C2_cmpltu
    O << " = cmp.ltu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 16:
    // J2_jumpf_nopred_map, J2_jumpt_nopred_map
    O << ") jump ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 17:
    // J2_jumprf_nopred_map, J2_jumprt_nopred_map
    O << ") jumpr ";
    printOperand(MI, 1, O);
    return;
    break;
  case 18:
    // J2_trap1_noregmap, S6_allocframe_to_raw, V6_zld0, Y2_dcfetch, A4_ext, ...
    O << ')';
    return;
    break;
  case 19:
    // L2_loadalignb_zomap, L2_loadalignb_io, L2_loadalignb_pbr, L2_loadalign...
    O << " = memb_fifo(";
    break;
  case 20:
    // L2_loadalignh_zomap, L2_loadalignh_io, L2_loadalignh_pbr, L2_loadalign...
    O << " = memh_fifo(";
    break;
  case 21:
    // L2_loadbsw2_zomap, L2_loadbsw4_zomap, L2_loadbsw2_io, L2_loadbsw2_pbr,...
    O << " = membh(";
    printOperand(MI, 1, O);
    break;
  case 22:
    // L2_loadbzw2_zomap, L2_loadbzw4_zomap, L2_loadbzw2_io, L2_loadbzw2_pbr,...
    O << " = memubh(";
    printOperand(MI, 1, O);
    break;
  case 23:
    // L2_loadrb_zomap, L2_loadrb_io, L2_loadrb_pbr, L2_loadrb_pci, L2_loadrb...
    O << " = memb(";
    printOperand(MI, 1, O);
    break;
  case 24:
    // L2_loadrd_zomap, L2_loadrd_io, L2_loadrd_pbr, L2_loadrd_pci, L2_loadrd...
    O << " = memd(";
    printOperand(MI, 1, O);
    break;
  case 25:
    // L2_loadrh_zomap, L2_loadrh_io, L2_loadrh_pbr, L2_loadrh_pci, L2_loadrh...
    O << " = memh(";
    printOperand(MI, 1, O);
    break;
  case 26:
    // L2_loadri_zomap, L2_loadri_io, L2_loadri_pbr, L2_loadri_pci, L2_loadri...
    O << " = memw(";
    printOperand(MI, 1, O);
    break;
  case 27:
    // L2_loadrub_zomap, L2_loadrub_io, L2_loadrub_pbr, L2_loadrub_pci, L2_lo...
    O << " = memub(";
    printOperand(MI, 1, O);
    break;
  case 28:
    // L2_loadruh_zomap, L2_loadruh_io, L2_loadruh_pbr, L2_loadruh_pci, L2_lo...
    O << " = memuh(";
    printOperand(MI, 1, O);
    break;
  case 29:
    // L4_add_memopb_zomap, L4_add_memoph_zomap, L4_add_memopw_zomap
    O << ") += ";
    printOperand(MI, 1, O);
    return;
    break;
  case 30:
    // L4_and_memopb_zomap, L4_and_memoph_zomap, L4_and_memopw_zomap
    O << ") &= ";
    printOperand(MI, 1, O);
    return;
    break;
  case 31:
    // L4_iadd_memopb_zomap, L4_iadd_memoph_zomap, L4_iadd_memopw_zomap
    O << ") += #";
    printOperand(MI, 1, O);
    return;
    break;
  case 32:
    // L4_iand_memopb_zomap, L4_iand_memoph_zomap, L4_iand_memopw_zomap
    O << ") = clrbit(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 33:
    // L4_ior_memopb_zomap, L4_ior_memoph_zomap, L4_ior_memopw_zomap
    O << ") = setbit(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 34:
    // L4_isub_memopb_zomap, L4_isub_memoph_zomap, L4_isub_memopw_zomap
    O << ") -= #";
    printOperand(MI, 1, O);
    return;
    break;
  case 35:
    // L4_or_memopb_zomap, L4_or_memoph_zomap, L4_or_memopw_zomap
    O << ") |= ";
    printOperand(MI, 1, O);
    return;
    break;
  case 36:
    // L4_return_map_to_raw_f, L4_return_map_to_raw_t
    O << ") dealloc_return";
    return;
    break;
  case 37:
    // L4_return_map_to_raw_fnew_pnt, L4_return_map_to_raw_tnew_pnt
    O << ".new) dealloc_return:nt";
    return;
    break;
  case 38:
    // L4_return_map_to_raw_fnew_pt, L4_return_map_to_raw_tnew_pt
    O << ".new) dealloc_return:t";
    return;
    break;
  case 39:
    // L4_sub_memopb_zomap, L4_sub_memoph_zomap, L4_sub_memopw_zomap
    O << ") -= ";
    printOperand(MI, 1, O);
    return;
    break;
  case 40:
    // M2_mpysmi, M2_mpyi
    O << " = mpyi(";
    printOperand(MI, 1, O);
    break;
  case 41:
    // M2_mpyui
    O << " = mpyui(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 42:
    // M2_vrcmpys_acc_s1, M2_vrcmpys_acc_s1_h, M2_vrcmpys_acc_s1_l
    O << " += vrcmpys(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 43:
    // M2_vrcmpys_s1, M2_vrcmpys_s1rp, M2_vrcmpys_s1_h, M2_vrcmpys_s1_l, M2_v...
    O << " = vrcmpys(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 44:
    // PS_tailcall_r, CALLProfile, EH_RETURN_JMPR, J2_call, J2_callr, J2_jump...
    return;
    break;
  case 45:
    // S2_asr_i_p_rnd_goodsyntax, S2_asr_i_r_rnd_goodsyntax
    O << " = asrrnd(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 46:
    // S2_pstorerbf_zomap, S2_pstorerbnewf_zomap, S2_pstorerbnewt_zomap, S2_p...
    O << ") memb(";
    break;
  case 47:
    // S2_pstorerdf_zomap, S2_pstorerdt_zomap, S2_pstorerdf_io, S2_pstorerdf_...
    O << ") memd(";
    break;
  case 48:
    // S2_pstorerff_zomap, S2_pstorerft_zomap, S2_pstorerhf_zomap, S2_pstorer...
    O << ") memh(";
    break;
  case 49:
    // S2_pstorerif_zomap, S2_pstorerinewf_zomap, S2_pstorerinewt_zomap, S2_p...
    O << ") memw(";
    break;
  case 50:
    // S2_storerb_zomap, S2_storerbnew_zomap, S2_storerd_zomap, S2_storerf_zo...
    O << ") = ";
    printOperand(MI, 1, O);
    break;
  case 51:
    // S2_tableidxb_goodsyntax, S2_tableidxb
    O << " = tableidxb(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ",#";
    printOperand(MI, 4, O);
    break;
  case 52:
    // S2_tableidxd_goodsyntax, S2_tableidxd
    O << " = tableidxd(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ",#";
    printOperand(MI, 4, O);
    break;
  case 53:
    // S2_tableidxh_goodsyntax, S2_tableidxh
    O << " = tableidxh(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ",#";
    printOperand(MI, 4, O);
    break;
  case 54:
    // S2_tableidxw_goodsyntax, S2_tableidxw
    O << " = tableidxw(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ",#";
    printOperand(MI, 4, O);
    break;
  case 55:
    // S4_pstorerbfnew_zomap, S4_pstorerbnewfnew_zomap, S4_pstorerbnewtnew_zo...
    O << ".new) memb(";
    break;
  case 56:
    // S4_pstorerdfnew_zomap, S4_pstorerdtnew_zomap, S2_pstorerdfnew_pi, S2_p...
    O << ".new) memd(";
    break;
  case 57:
    // S4_pstorerffnew_zomap, S4_pstorerftnew_zomap, S4_pstorerhfnew_zomap, S...
    O << ".new) memh(";
    break;
  case 58:
    // S4_pstorerifnew_zomap, S4_pstorerinewfnew_zomap, S4_pstorerinewtnew_zo...
    O << ".new) memw(";
    break;
  case 59:
    // S4_storeirb_zomap, S4_storeirh_zomap, S4_storeiri_zomap
    O << ") = #";
    printOperand(MI, 1, O);
    return;
    break;
  case 60:
    // S5_asrhub_rnd_sat_goodsyntax, V6_vasrhubrndsat_alt, V6_vasrhubsat_alt,...
    O << " = vasrhub(";
    printOperand(MI, 1, O);
    break;
  case 61:
    // S5_vasrhrnd_goodsyntax, V6_vasrh_alt, V6_vasrhv_alt, S2_asr_i_vh, S2_a...
    O << " = vasrh(";
    printOperand(MI, 1, O);
    break;
  case 62:
    // V6_MAP_equb, V6_MAP_equh, V6_MAP_equw, V6_veqb, V6_veqh, V6_veqw
    O << " = vcmp.eq(";
    printOperand(MI, 1, O);
    break;
  case 63:
    // V6_MAP_equb_and, V6_MAP_equh_and, V6_MAP_equw_and, V6_veqb_and, V6_veq...
    O << " &= vcmp.eq(";
    printOperand(MI, 2, O);
    break;
  case 64:
    // V6_MAP_equb_ior, V6_MAP_equh_ior, V6_MAP_equw_ior, V6_veqb_or, V6_veqh...
    O << " |= vcmp.eq(";
    printOperand(MI, 2, O);
    break;
  case 65:
    // V6_MAP_equb_xor, V6_MAP_equh_xor, V6_MAP_equw_xor, V6_veqb_xor, V6_veq...
    O << " ^= vcmp.eq(";
    printOperand(MI, 2, O);
    break;
  case 66:
    // V6_extractw_alt
    O << ".w = vextract(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 67:
    // V6_hi
    O << " = hi(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 68:
    // V6_ld0, V6_ldnt0, V6_ldntnt0, V6_vL32b_ai, V6_vL32b_nt_ai, V6_vL32b_nt...
    O << " = vmem(";
    printOperand(MI, 1, O);
    break;
  case 69:
    // V6_ldu0, V6_vL32Ub_ai, V6_vL32Ub_pi, V6_vL32Ub_ppu
    O << " = vmemu(";
    printOperand(MI, 1, O);
    break;
  case 70:
    // V6_lo
    O << " = lo(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 71:
    // V6_stnnt0, V6_stnt0
    O << "):nt = ";
    printOperand(MI, 1, O);
    break;
  case 72:
    // V6_stnp0, V6_stnpnt0, V6_stnq0, V6_stnqnt0, V6_stp0, V6_stpnt0, V6_stq...
    O << ") vmem(";
    break;
  case 73:
    // V6_stunp0, V6_stup0, V6_vS32Ub_npred_ai, V6_vS32Ub_npred_pi, V6_vS32Ub...
    O << ") vmemu(";
    break;
  case 74:
    // V6_vabsb_alt, V6_vabsb_sat_alt
    O << " = vabsb(";
    printOperand(MI, 1, O);
    break;
  case 75:
    // V6_vabsdiffh_alt, M2_vabsdiffh
    O << " = vabsdiffh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 76:
    // V6_vabsdiffub_alt, M6_vabsdiffub
    O << " = vabsdiffub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 77:
    // V6_vabsdiffuh_alt
    O << " = vabsdiffuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 78:
    // V6_vabsdiffw_alt, M2_vabsdiffw
    O << " = vabsdiffw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 79:
    // V6_vabsh_alt, V6_vabsh_sat_alt, A2_vabsh, A2_vabshsat
    O << " = vabsh(";
    printOperand(MI, 1, O);
    break;
  case 80:
    // V6_vabsub_alt
    O << ".ub = vabs(";
    printOperand(MI, 1, O);
    O << ".b)";
    return;
    break;
  case 81:
    // V6_vabsuh_alt
    O << ".uh = vabs(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 82:
    // V6_vabsuw_alt
    O << ".uw = vabs(";
    printOperand(MI, 1, O);
    O << ".w)";
    return;
    break;
  case 83:
    // V6_vabsw_alt, V6_vabsw_sat_alt, A2_vabsw, A2_vabswsat
    O << " = vabsw(";
    printOperand(MI, 1, O);
    break;
  case 84:
    // V6_vaddbnq_alt, V6_vaddbq_alt, V6_vsubbnq_alt, V6_vsubbq_alt
    O << ".b) ";
    printOperand(MI, 0, O);
    break;
  case 85:
    // V6_vaddh_alt, V6_vaddh_dv_alt, V6_vaddhsat_alt, V6_vaddhsat_dv_alt, V6...
    O << " = vaddh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 86:
    // V6_vaddhnq_alt, V6_vaddhq_alt, V6_vsubhnq_alt, V6_vsubhq_alt
    O << ".h) ";
    printOperand(MI, 0, O);
    break;
  case 87:
    // V6_vaddhw_acc_alt
    O << " += vaddh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 88:
    // V6_vaddubh_acc_alt
    O << " += vaddub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 89:
    // V6_vaddubh_alt, V6_vaddubsat_alt, V6_vaddubsat_dv_alt, A2_vaddub, A2_v...
    O << " = vaddub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 90:
    // V6_vadduhsat_alt, V6_vadduhsat_dv_alt, V6_vadduhw_alt, A2_svadduhs, A2...
    O << " = vadduh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 91:
    // V6_vadduhw_acc_alt
    O << " += vadduh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 92:
    // V6_vadduwsat_alt, V6_vadduwsat_dv_alt
    O << " = vadduw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 93:
    // V6_vaddw_alt, V6_vaddw_dv_alt, V6_vaddwsat_alt, V6_vaddwsat_dv_alt, A2...
    O << " = vaddw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 94:
    // V6_vaddwnq_alt, V6_vaddwq_alt, V6_vsubwnq_alt, V6_vsubwq_alt
    O << ".w) ";
    printOperand(MI, 0, O);
    break;
  case 95:
    // V6_vandnqrt_acc_alt
    O << ".ub |= vand(!";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    O << ".ub)";
    return;
    break;
  case 96:
    // V6_vandnqrt_alt
    O << ".ub = vand(!";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub)";
    return;
    break;
  case 97:
    // V6_vandqrt_acc_alt, V6_vandvrt_acc_alt
    O << ".ub |= vand(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    O << ".ub)";
    return;
    break;
  case 98:
    // V6_vandqrt_alt, V6_vandvrt_alt
    O << ".ub = vand(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub)";
    return;
    break;
  case 99:
    // V6_vaslh_acc_alt
    O << " += vaslh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 100:
    // V6_vaslh_alt, V6_vaslhv_alt, S2_asl_i_vh, S2_asl_r_vh
    O << " = vaslh(";
    printOperand(MI, 1, O);
    break;
  case 101:
    // V6_vaslw_acc_alt
    O << " += vaslw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 102:
    // V6_vaslw_alt, V6_vaslwv_alt, S2_asl_i_vw, S2_asl_r_vw
    O << " = vaslw(";
    printOperand(MI, 1, O);
    break;
  case 103:
    // V6_vasr_into_alt
    O << " = vasrinto(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 104:
    // V6_vasrh_acc_alt
    O << " += vasrh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 105:
    // V6_vasrhbrndsat_alt
    O << " = vasrhb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "):rnd:sat";
    return;
    break;
  case 106:
    // V6_vasrw_acc_alt
    O << " += vasrw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 107:
    // V6_vasrw_alt, V6_vasrwv_alt, S2_asr_i_svw_trun, S2_asr_i_vw, S2_asr_r_...
    O << " = vasrw(";
    printOperand(MI, 1, O);
    break;
  case 108:
    // V6_vasrwh_alt, V6_vasrwhrndsat_alt, V6_vasrwhsat_alt
    O << " = vasrwh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 109:
    // V6_vasrwuhsat_alt
    O << " = vasrwuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "):sat";
    return;
    break;
  case 110:
    // V6_vavgb_alt, V6_vavgbrnd_alt
    O << " = vavgb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 111:
    // V6_vavgh_alt, V6_vavghrnd_alt, A2_svavgh, A2_svavghs, A2_vavgh, A2_vav...
    O << " = vavgh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 112:
    // V6_vavgub_alt, V6_vavgubrnd_alt, A2_vavgub, A2_vavgubr
    O << " = vavgub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 113:
    // V6_vavguh_alt, V6_vavguhrnd_alt, A2_vavguh, A2_vavguhr
    O << " = vavguh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 114:
    // V6_vavguw_alt, V6_vavguwrnd_alt, A2_vavguw, A2_vavguwr
    O << " = vavguw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 115:
    // V6_vavgw_alt, V6_vavgwrnd_alt, A2_vavgw, A2_vavgwcr, A2_vavgwr
    O << " = vavgw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 116:
    // V6_vcl0h_alt
    O << " = vcl0h(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 117:
    // V6_vcl0w_alt
    O << " = vcl0w(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 118:
    // V6_vd0, V6_vdd0, SA1_clrf, SA1_clrfnew, SA1_clrt, SA1_clrtnew
    O << " = #0";
    return;
    break;
  case 119:
    // V6_vdealb4w_alt
    O << " = vdealb4w(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 120:
    // V6_vdealb_alt
    O << " = vdealb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 121:
    // V6_vdealh_alt
    O << " = vdealh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 122:
    // V6_vdmpybus_acc_alt, V6_vdmpybus_dv_acc_alt
    O << " += vdmpybus(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 123:
    // V6_vdmpybus_alt, V6_vdmpybus_dv_alt
    O << " = vdmpybus(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 124:
    // V6_vdmpyhb_acc_alt, V6_vdmpyhb_dv_acc_alt
    O << " += vdmpyhb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 125:
    // V6_vdmpyhb_alt, V6_vdmpyhb_dv_alt
    O << " = vdmpyhb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 126:
    // V6_vdmpyhisat_acc_alt, V6_vdmpyhsat_acc_alt, V6_vdmpyhvsat_acc_alt
    O << " += vdmpyh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "):sat";
    return;
    break;
  case 127:
    // V6_vdmpyhisat_alt, V6_vdmpyhsat_alt, V6_vdmpyhvsat_alt
    O << " = vdmpyh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 128:
    // V6_vdmpyhsuisat_acc_alt, V6_vdmpyhsusat_acc_alt
    O << " += vdmpyhsu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 129:
    // V6_vdmpyhsuisat_alt, V6_vdmpyhsusat_alt
    O << " = vdmpyhsu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 130:
    // V6_vdsaduh_acc_alt
    O << " += vdsaduh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 131:
    // V6_vdsaduh_alt
    O << " = vdsaduh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 132:
    // V6_vlsrh_alt, V6_vlsrhv_alt, S2_lsr_i_vh, S2_lsr_r_vh
    O << " = vlsrh(";
    printOperand(MI, 1, O);
    break;
  case 133:
    // V6_vlsrw_alt, V6_vlsrwv_alt, S2_lsr_i_vw, S2_lsr_r_vw
    O << " = vlsrw(";
    printOperand(MI, 1, O);
    break;
  case 134:
    // V6_vmaxb_alt, A2_vmaxb
    O << " = vmaxb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 135:
    // V6_vmaxh_alt, A2_vmaxh
    O << " = vmaxh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 136:
    // V6_vmaxub_alt, A2_vmaxub
    O << " = vmaxub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 137:
    // V6_vmaxuh_alt, A2_vmaxuh
    O << " = vmaxuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 138:
    // V6_vmaxw_alt, A2_vmaxw
    O << " = vmaxw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 139:
    // V6_vminb_alt, A2_vminb
    O << " = vminb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 140:
    // V6_vminh_alt, A2_vminh
    O << " = vminh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 141:
    // V6_vminub_alt, A2_vminub
    O << " = vminub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 142:
    // V6_vminuh_alt, A2_vminuh
    O << " = vminuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 143:
    // V6_vminw_alt, A2_vminw
    O << " = vminw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 144:
    // V6_vmpabus_acc_alt
    O << " += vmpabus(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 145:
    // V6_vmpabus_alt, V6_vmpabusv_alt
    O << " = vmpabus(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 146:
    // V6_vmpabuu_acc_alt
    O << " += vmpabuu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 147:
    // V6_vmpabuu_alt, V6_vmpabuuv_alt
    O << " = vmpabuu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 148:
    // V6_vmpahb_acc_alt
    O << " += vmpahb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 149:
    // V6_vmpahb_alt
    O << " = vmpahb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 150:
    // V6_vmpauhb_acc_alt
    O << " += vmpauhb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 151:
    // V6_vmpauhb_alt
    O << " = vmpauhb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 152:
    // V6_vmpybus_acc_alt, V6_vmpybusv_acc_alt
    O << " += vmpybus(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 153:
    // V6_vmpybus_alt, V6_vmpybusv_alt
    O << " = vmpybus(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 154:
    // V6_vmpybv_acc_alt
    O << " += vmpyb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 155:
    // V6_vmpybv_alt
    O << " = vmpyb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 156:
    // V6_vmpyewuh_alt
    O << " = vmpyewuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 157:
    // V6_vmpyh_acc_alt, V6_vmpyhsat_acc_alt, V6_vmpyhv_acc_alt, M2_vmac2, M2...
    O << " += vmpyh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 158:
    // V6_vmpyh_alt, V6_vmpyhsrs_alt, V6_vmpyhss_alt, V6_vmpyhv_alt, V6_vmpyh...
    O << " = vmpyh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 159:
    // V6_vmpyhus_acc_alt
    O << " += vmpyhus(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 160:
    // V6_vmpyhus_alt
    O << " = vmpyhus(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 161:
    // V6_vmpyiewh_acc_alt
    O << " += vmpyiewh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 162:
    // V6_vmpyiewuh_acc_alt
    O << " += vmpyiewuh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 163:
    // V6_vmpyiewuh_alt
    O << " = vmpyiewuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 164:
    // V6_vmpyih_acc_alt
    O << " += vmpyih(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 165:
    // V6_vmpyih_alt
    O << " = vmpyih(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 166:
    // V6_vmpyihb_acc_alt
    O << " += vmpyihb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 167:
    // V6_vmpyihb_alt
    O << " = vmpyihb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 168:
    // V6_vmpyiowh_alt
    O << " = vmpyiowh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 169:
    // V6_vmpyiwb_acc_alt
    O << " += vmpyiwb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 170:
    // V6_vmpyiwb_alt
    O << " = vmpyiwb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 171:
    // V6_vmpyiwh_acc_alt
    O << " += vmpyiwh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 172:
    // V6_vmpyiwh_alt
    O << " = vmpyiwh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 173:
    // V6_vmpyiwub_acc_alt
    O << " += vmpyiwub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 174:
    // V6_vmpyiwub_alt
    O << " = vmpyiwub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 175:
    // V6_vmpyowh_alt, V6_vmpyowh_rnd_alt
    O << " = vmpyowh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 176:
    // V6_vmpyowh_rnd_sacc_alt, V6_vmpyowh_sacc_alt
    O << " += vmpyowh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 177:
    // V6_vmpyub_acc_alt, V6_vmpyubv_acc_alt
    O << " += vmpyub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 178:
    // V6_vmpyub_alt, V6_vmpyubv_alt
    O << " = vmpyub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 179:
    // V6_vmpyuh_acc_alt, V6_vmpyuhv_acc_alt
    O << " += vmpyuh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 180:
    // V6_vmpyuh_alt, V6_vmpyuhv_alt
    O << " = vmpyuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 181:
    // V6_vnavgb_alt
    O << " = vnavgb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 182:
    // V6_vnavgh_alt, A2_svnavgh, A2_vnavgh, A2_vnavghcr, A2_vnavghr
    O << " = vnavgh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 183:
    // V6_vnavgub_alt
    O << " = vnavgub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 184:
    // V6_vnavgw_alt, A2_vnavgw, A2_vnavgwcr, A2_vnavgwr
    O << " = vnavgw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 185:
    // V6_vnormamth_alt
    O << " = vnormamth(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 186:
    // V6_vnormamtw_alt
    O << " = vnormamtw(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 187:
    // V6_vpackeb_alt
    O << " = vpackeb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 188:
    // V6_vpackeh_alt
    O << " = vpackeh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 189:
    // V6_vpackhb_sat_alt
    O << " = vpackhb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 190:
    // V6_vpackhub_sat_alt
    O << " = vpackhub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 191:
    // V6_vpackob_alt
    O << " = vpackob(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 192:
    // V6_vpackoh_alt
    O << " = vpackoh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 193:
    // V6_vpackwh_sat_alt
    O << " = vpackwh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 194:
    // V6_vpackwuh_sat_alt
    O << " = vpackwuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 195:
    // V6_vpopcounth_alt
    O << " = vpopcounth(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 196:
    // V6_vrmpybub_rtt_acc_alt, V6_vrmpybub_rtt_acc, V6_vrmpybus_acc, V6_vrmp...
    O << ".w += vrmpy(";
    printOperand(MI, 2, O);
    break;
  case 197:
    // V6_vrmpybub_rtt_alt, V6_vrmpybub_rtt, V6_vrmpybus, V6_vrmpybusi, V6_vr...
    O << ".w = vrmpy(";
    printOperand(MI, 1, O);
    break;
  case 198:
    // V6_vrmpybus_acc_alt, V6_vrmpybusi_acc_alt, V6_vrmpybusv_acc_alt
    O << " += vrmpybus(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 199:
    // V6_vrmpybus_alt, V6_vrmpybusi_alt, V6_vrmpybusv_alt
    O << " = vrmpybus(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 200:
    // V6_vrmpybv_acc_alt
    O << " += vrmpyb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 201:
    // V6_vrmpybv_alt
    O << " = vrmpyb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 202:
    // V6_vrmpyub_acc_alt, V6_vrmpyubi_acc_alt, V6_vrmpyubv_acc_alt
    O << " += vrmpyub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 203:
    // V6_vrmpyub_alt, V6_vrmpyubi_alt, V6_vrmpyubv_alt
    O << " = vrmpyub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 204:
    // V6_vrmpyub_rtt_acc_alt, V6_vrmpyub_acc, V6_vrmpyub_rtt_acc, V6_vrmpyub...
    O << ".uw += vrmpy(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    break;
  case 205:
    // V6_vrmpyub_rtt_alt, V6_vrmpyub, V6_vrmpyub_rtt, V6_vrmpyubi, V6_vrmpyu...
    O << ".uw = vrmpy(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    break;
  case 206:
    // V6_vrotr_alt
    O << " = vrotr(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 207:
    // V6_vroundhb_alt
    O << " = vroundhb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 208:
    // V6_vroundhub_alt
    O << " = vroundhub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 209:
    // V6_vrounduhub_alt
    O << " = vrounduhub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 210:
    // V6_vrounduwuh_alt
    O << " = vrounduwuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 211:
    // V6_vroundwh_alt
    O << " = vroundwh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 212:
    // V6_vroundwuh_alt
    O << " = vroundwuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 213:
    // V6_vrsadubi_acc_alt, A2_vrsadub_acc
    O << " += vrsadub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 214:
    // V6_vrsadubi_alt, A2_vrsadub
    O << " = vrsadub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 215:
    // V6_vsathub_alt, S2_svsathub, S2_vsathub, S2_vsathub_nopack
    O << " = vsathub(";
    printOperand(MI, 1, O);
    break;
  case 216:
    // V6_vsatuwuh_alt
    O << " = vsatuwuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 217:
    // V6_vsatwh_alt, S2_vsatwh, S2_vsatwh_nopack
    O << " = vsatwh(";
    printOperand(MI, 1, O);
    break;
  case 218:
    // V6_vsb_alt
    O << " = vsxtb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 219:
    // V6_vscattermh_add_alt, V6_vscattermh_alt, V6_vscattermw_add_alt, V6_vs...
    O << ',';
    break;
  case 220:
    // V6_vscattermhq_alt, V6_vscattermwhq_alt, V6_vscattermwq_alt, V6_vscatt...
    O << ") vscatter(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 221:
    // V6_vsh_alt
    O << " = vsxth(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 222:
    // V6_vshufeh_alt
    O << " = vshuffeh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 223:
    // V6_vshuffb_alt
    O << " = vshuffb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 224:
    // V6_vshuffeb_alt
    O << " = vshuffeb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 225:
    // V6_vshuffh_alt
    O << " = vshuffh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 226:
    // V6_vshuffob_alt
    O << " = vshuffob(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 227:
    // V6_vshufoeb_alt
    O << " = vshuffoeb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 228:
    // V6_vshufoeh_alt
    O << " = vshuffoeh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 229:
    // V6_vshufoh_alt
    O << " = vshuffoh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 230:
    // V6_vsubh_alt, V6_vsubh_dv_alt, V6_vsubhsat_alt, V6_vsubhsat_dv_alt, V6...
    O << " = vsubh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 231:
    // V6_vsububh_alt, V6_vsububsat_alt, V6_vsububsat_dv_alt, A2_vsubub, A2_v...
    O << " = vsubub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 232:
    // V6_vsubuhsat_alt, V6_vsubuhsat_dv_alt, V6_vsubuhw_alt, A2_svsubuhs, A2...
    O << " = vsubuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 233:
    // V6_vsubuwsat_alt, V6_vsubuwsat_dv_alt
    O << " = vsubuw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 234:
    // V6_vsubw_alt, V6_vsubw_dv_alt, V6_vsubwsat_alt, V6_vsubwsat_dv_alt, A2...
    O << " = vsubw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 235:
    // V6_vtmpyb_acc_alt
    O << " += vtmpyb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 236:
    // V6_vtmpyb_alt
    O << " = vtmpyb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 237:
    // V6_vtmpybus_acc_alt
    O << " += vtmpybus(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 238:
    // V6_vtmpybus_alt
    O << " = vtmpybus(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 239:
    // V6_vtmpyhb_acc_alt
    O << " += vtmpyhb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 240:
    // V6_vtmpyhb_alt
    O << " = vtmpyhb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 241:
    // V6_vunpackb_alt
    O << " = vunpackb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 242:
    // V6_vunpackh_alt
    O << " = vunpackh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 243:
    // V6_vunpackob_alt
    O << " |= vunpackob(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 244:
    // V6_vunpackoh_alt
    O << " |= vunpackoh(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 245:
    // V6_vunpackub_alt
    O << " = vunpackub(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 246:
    // V6_vunpackuh_alt
    O << " = vunpackuh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 247:
    // V6_vzb_alt
    O << " = vzxtb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 248:
    // V6_vzh_alt
    O << " = vzxth(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 249:
    // V6_zldp0, V6_zLd_pred_ai, V6_zLd_pred_pi, V6_zLd_pred_ppu
    O << ") z = vmem(";
    break;
  case 250:
    // A2_abs, A2_absp, A2_abssat
    O << " = abs(";
    printOperand(MI, 1, O);
    break;
  case 251:
    // A2_and, A2_andir, A2_andp, A4_andn, A4_andnp, C2_and, C2_andn, C4_and_...
    O << " = and(";
    printOperand(MI, 1, O);
    break;
  case 252:
    // A2_aslh
    O << " = aslh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 253:
    // A2_asrh
    O << " = asrh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 254:
    // A2_combine_hh, A2_combine_hl, A2_combine_lh, A2_combine_ll, A2_combine...
    O << " = combine(";
    printOperand(MI, 1, O);
    break;
  case 255:
    // A2_combineii, A4_combineii, A4_combineir, TFRI64_V2_ext
    O << " = combine(#";
    printOperand(MI, 1, O);
    break;
  case 256:
    // A2_max, A2_maxp
    O << " = max(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 257:
    // A2_maxu, A2_maxup
    O << " = maxu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 258:
    // A2_min, A2_minp
    O << " = min(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 259:
    // A2_minu, A2_minup
    O << " = minu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 260:
    // A2_or, A2_orir, A2_orp, A4_orn, A4_ornp, C2_or, C2_orn, C4_or_and, C4_...
    O << " = or(";
    printOperand(MI, 1, O);
    break;
  case 261:
    // A2_roundsat, A4_round_ri, A4_round_ri_sat, A4_round_rr, A4_round_rr_sa...
    O << " = round(";
    printOperand(MI, 1, O);
    break;
  case 262:
    // A2_sat
    O << " = sat(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 263:
    // A2_satb
    O << " = satb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 264:
    // A2_sath
    O << " = sath(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 265:
    // A2_satub
    O << " = satub(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 266:
    // A2_satuh
    O << " = satuh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 267:
    // A2_sub, A2_subh_h16_hh, A2_subh_h16_hl, A2_subh_h16_lh, A2_subh_h16_ll...
    O << " = sub(";
    break;
  case 268:
    // A2_subri, S4_subi_asl_ri, S4_subi_lsr_ri
    O << " = sub(#";
    printOperand(MI, 1, O);
    break;
  case 269:
    // A2_swiz
    O << " = swiz(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 270:
    // A2_sxtb, SA1_sxtb
    O << " = sxtb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 271:
    // A2_sxth, SA1_sxth
    O << " = sxth(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 272:
    // A2_sxtw
    O << " = sxtw(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 273:
    // A2_tfrih, HI
    O << ".h = #";
    break;
  case 274:
    // A2_tfril, LO
    O << ".l = #";
    break;
  case 275:
    // A2_vcmpbeq, A4_vcmpbeqi
    O << " = vcmpb.eq(";
    printOperand(MI, 1, O);
    break;
  case 276:
    // A2_vcmpbgtu, A4_vcmpbgtui
    O << " = vcmpb.gtu(";
    printOperand(MI, 1, O);
    break;
  case 277:
    // A2_vcmpheq, A4_vcmpheqi
    O << " = vcmph.eq(";
    printOperand(MI, 1, O);
    break;
  case 278:
    // A2_vcmphgt, A4_vcmphgti
    O << " = vcmph.gt(";
    printOperand(MI, 1, O);
    break;
  case 279:
    // A2_vcmphgtu, A4_vcmphgtui
    O << " = vcmph.gtu(";
    printOperand(MI, 1, O);
    break;
  case 280:
    // A2_vcmpweq, A4_vcmpweqi
    O << " = vcmpw.eq(";
    printOperand(MI, 1, O);
    break;
  case 281:
    // A2_vcmpwgt, A4_vcmpwgti
    O << " = vcmpw.gt(";
    printOperand(MI, 1, O);
    break;
  case 282:
    // A2_vcmpwgtu, A4_vcmpwgtui
    O << " = vcmpw.gtu(";
    printOperand(MI, 1, O);
    break;
  case 283:
    // A2_vconj
    O << " = vconj(";
    printOperand(MI, 1, O);
    O << "):sat";
    return;
    break;
  case 284:
    // A2_vmaxuw
    O << " = vmaxuw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 285:
    // A2_vminuw
    O << " = vminuw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 286:
    // A2_vraddub
    O << " = vraddub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 287:
    // A2_vraddub_acc
    O << " += vraddub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 288:
    // A2_xor, A2_xorp, C2_xor, V6_pred_xor
    O << " = xor(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 289:
    // A2_zxth, SA1_zxth
    O << " = zxth(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 290:
    // A4_bitsplit, A4_bitspliti
    O << " = bitsplit(";
    printOperand(MI, 1, O);
    break;
  case 291:
    // A4_cmpbeq, A4_cmpbeqi
    O << " = cmpb.eq(";
    printOperand(MI, 1, O);
    break;
  case 292:
    // A4_cmpbgt, A4_cmpbgti
    O << " = cmpb.gt(";
    printOperand(MI, 1, O);
    break;
  case 293:
    // A4_cmpbgtu, A4_cmpbgtui
    O << " = cmpb.gtu(";
    printOperand(MI, 1, O);
    break;
  case 294:
    // A4_cmpheq, A4_cmpheqi
    O << " = cmph.eq(";
    printOperand(MI, 1, O);
    break;
  case 295:
    // A4_cmphgt, A4_cmphgti
    O << " = cmph.gt(";
    printOperand(MI, 1, O);
    break;
  case 296:
    // A4_cmphgtu, A4_cmphgtui
    O << " = cmph.gtu(";
    printOperand(MI, 1, O);
    break;
  case 297:
    // A4_cround_ri, A4_cround_rr
    O << " = cround(";
    printOperand(MI, 1, O);
    break;
  case 298:
    // A4_modwrapu
    O << " = modwrap(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 299:
    // A4_rcmpeq, A4_rcmpeqi, C2_cmpeq, C2_cmpeqi, C2_cmpeqp
    O << " = cmp.eq(";
    printOperand(MI, 1, O);
    break;
  case 300:
    // A4_rcmpneq, A4_rcmpneqi, C4_cmpneq, C4_cmpneqi
    O << " = !cmp.eq(";
    printOperand(MI, 1, O);
    break;
  case 301:
    // A4_tlbmatch
    O << " = tlbmatch(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 302:
    // A4_vcmpbeq_any
    O << " = any8(vcmpb.eq(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "))";
    return;
    break;
  case 303:
    // A4_vcmpbgt, A4_vcmpbgti
    O << " = vcmpb.gt(";
    printOperand(MI, 1, O);
    break;
  case 304:
    // A4_vrmaxh
    O << " = vrmaxh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 305:
    // A4_vrmaxuh
    O << " = vrmaxuh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 306:
    // A4_vrmaxuw
    O << " = vrmaxuw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 307:
    // A4_vrmaxw
    O << " = vrmaxw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 308:
    // A4_vrminh
    O << " = vrminh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 309:
    // A4_vrminuh
    O << " = vrminuh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 310:
    // A4_vrminuw
    O << " = vrminuw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 311:
    // A4_vrminw
    O << " = vrminw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 312:
    // A5_vaddhubs
    O << " = vaddhub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 313:
    // A6_vcmpbeq_notany
    O << " = !any8(vcmpb.eq(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "))";
    return;
    break;
  case 314:
    // C2_all8
    O << " = all8(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 315:
    // C2_any8
    O << " = any8(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 316:
    // C2_bitsclr, C2_bitsclri
    O << " = bitsclr(";
    printOperand(MI, 1, O);
    break;
  case 317:
    // C2_bitsset
    O << " = bitsset(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 318:
    // C2_cmpgt, C2_cmpgti, C2_cmpgtp
    O << " = cmp.gt(";
    printOperand(MI, 1, O);
    break;
  case 319:
    // C2_cmpgtu, C2_cmpgtui, C2_cmpgtup
    O << " = cmp.gtu(";
    printOperand(MI, 1, O);
    break;
  case 320:
    // C2_mask
    O << " = mask(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 321:
    // C2_mux, C2_muxii, C2_muxir, C2_muxri
    O << " = mux(";
    printOperand(MI, 1, O);
    break;
  case 322:
    // C2_vitpack
    O << " = vitpack(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 323:
    // C2_vmux, V6_vmux
    O << " = vmux(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 324:
    // C4_addipc
    O << " = add(pc,#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 325:
    // C4_cmplte, C4_cmpltei
    O << " = !cmp.gt(";
    printOperand(MI, 1, O);
    break;
  case 326:
    // C4_cmplteu, C4_cmplteui
    O << " = !cmp.gtu(";
    printOperand(MI, 1, O);
    break;
  case 327:
    // C4_fastcorner9
    O << " = fastcorner9(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 328:
    // C4_fastcorner9_not
    O << " = !fastcorner9(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 329:
    // C4_nbitsclr, C4_nbitsclri
    O << " = !bitsclr(";
    printOperand(MI, 1, O);
    break;
  case 330:
    // C4_nbitsset
    O << " = !bitsset(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 331:
    // CONST32
    O << " = CONST32(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 332:
    // CONST64
    O << " = CONST64(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 333:
    // F2_conv_d2df
    O << " = convert_d2df(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 334:
    // F2_conv_d2sf
    O << " = convert_d2sf(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 335:
    // F2_conv_df2d, F2_conv_df2d_chop
    O << " = convert_df2d(";
    printOperand(MI, 1, O);
    break;
  case 336:
    // F2_conv_df2sf
    O << " = convert_df2sf(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 337:
    // F2_conv_df2ud, F2_conv_df2ud_chop
    O << " = convert_df2ud(";
    printOperand(MI, 1, O);
    break;
  case 338:
    // F2_conv_df2uw, F2_conv_df2uw_chop
    O << " = convert_df2uw(";
    printOperand(MI, 1, O);
    break;
  case 339:
    // F2_conv_df2w, F2_conv_df2w_chop
    O << " = convert_df2w(";
    printOperand(MI, 1, O);
    break;
  case 340:
    // F2_conv_sf2d, F2_conv_sf2d_chop
    O << " = convert_sf2d(";
    printOperand(MI, 1, O);
    break;
  case 341:
    // F2_conv_sf2df
    O << " = convert_sf2df(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 342:
    // F2_conv_sf2ud, F2_conv_sf2ud_chop
    O << " = convert_sf2ud(";
    printOperand(MI, 1, O);
    break;
  case 343:
    // F2_conv_sf2uw, F2_conv_sf2uw_chop
    O << " = convert_sf2uw(";
    printOperand(MI, 1, O);
    break;
  case 344:
    // F2_conv_sf2w, F2_conv_sf2w_chop
    O << " = convert_sf2w(";
    printOperand(MI, 1, O);
    break;
  case 345:
    // F2_conv_ud2df
    O << " = convert_ud2df(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 346:
    // F2_conv_ud2sf
    O << " = convert_ud2sf(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 347:
    // F2_conv_uw2df
    O << " = convert_uw2df(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 348:
    // F2_conv_uw2sf
    O << " = convert_uw2sf(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 349:
    // F2_conv_w2df
    O << " = convert_w2df(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 350:
    // F2_conv_w2sf
    O << " = convert_w2sf(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 351:
    // F2_dfadd
    O << " = dfadd(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 352:
    // F2_dfclass
    O << " = dfclass(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 353:
    // F2_dfcmpeq
    O << " = dfcmp.eq(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 354:
    // F2_dfcmpge
    O << " = dfcmp.ge(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 355:
    // F2_dfcmpgt
    O << " = dfcmp.gt(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 356:
    // F2_dfcmpuo
    O << " = dfcmp.uo(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 357:
    // F2_dfimm_n, F2_dfimm_p
    O << " = dfmake(#";
    printOperand(MI, 1, O);
    break;
  case 358:
    // F2_dfsub
    O << " = dfsub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 359:
    // F2_sfadd
    O << " = sfadd(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 360:
    // F2_sfclass
    O << " = sfclass(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 361:
    // F2_sfcmpeq
    O << " = sfcmp.eq(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 362:
    // F2_sfcmpge
    O << " = sfcmp.ge(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 363:
    // F2_sfcmpgt
    O << " = sfcmp.gt(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 364:
    // F2_sfcmpuo
    O << " = sfcmp.uo(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 365:
    // F2_sffixupd
    O << " = sffixupd(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 366:
    // F2_sffixupn
    O << " = sffixupn(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 367:
    // F2_sffixupr
    O << " = sffixupr(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 368:
    // F2_sffma, F2_sffma_lib, F2_sffma_sc
    O << " += sfmpy(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 369:
    // F2_sffms, F2_sffms_lib
    O << " -= sfmpy(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 370:
    // F2_sfimm_n, F2_sfimm_p
    O << " = sfmake(#";
    printOperand(MI, 1, O);
    break;
  case 371:
    // F2_sfmax
    O << " = sfmax(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 372:
    // F2_sfmin
    O << " = sfmin(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 373:
    // F2_sfmpy
    O << " = sfmpy(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 374:
    // F2_sfsub
    O << " = sfsub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 375:
    // J2_callf, J2_callt
    O << ") call ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 376:
    // J2_callrf, J2_callrt
    O << ") callr ";
    printOperand(MI, 1, O);
    return;
    break;
  case 377:
    // J2_jumpf, J2_jumpt
    O << ") jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 378:
    // J2_jumpfnew, J2_jumptnew
    O << ".new) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 379:
    // J2_jumpfnewpt, J2_jumptnewpt
    O << ".new) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 380:
    // J2_jumpfpt, J2_jumptpt
    O << ") jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 381:
    // J2_jumprf, J2_jumprt, PS_jmpretf, PS_jmprett
    O << ") jumpr:nt ";
    printOperand(MI, 1, O);
    return;
    break;
  case 382:
    // J2_jumprfnew, J2_jumprtnew, PS_jmpretfnew, PS_jmprettnew
    O << ".new) jumpr:nt ";
    printOperand(MI, 1, O);
    return;
    break;
  case 383:
    // J2_jumprfnewpt, J2_jumprtnewpt, PS_jmpretfnewpt, PS_jmprettnewpt
    O << ".new) jumpr:t ";
    printOperand(MI, 1, O);
    return;
    break;
  case 384:
    // J2_jumprfpt, J2_jumprtpt
    O << ") jumpr:t ";
    printOperand(MI, 1, O);
    return;
    break;
  case 385:
    // J2_jumprgtez
    O << ">=#0) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 386:
    // J2_jumprgtezpt
    O << ">=#0) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 387:
    // J2_jumprltez
    O << "<=#0) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 388:
    // J2_jumprltezpt
    O << "<=#0) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 389:
    // J2_jumprnz
    O << "==#0) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 390:
    // J2_jumprnzpt
    O << "==#0) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 391:
    // J2_jumprz
    O << "!=#0) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 392:
    // J2_jumprzpt
    O << "!=#0) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 393:
    // J2_loop0i, J2_loop0iext, J2_loop1i, J2_loop1iext, J2_ploop1si, J2_ploo...
    O << ",#";
    break;
  case 394:
    // J4_cmpeq_f_jumpnv_nt, J4_cmpeq_f_jumpnv_t, J4_cmpeq_t_jumpnv_nt, J4_cm...
    O << ".new,";
    printOperand(MI, 1, O);
    break;
  case 395:
    // J4_cmpeqi_f_jumpnv_nt, J4_cmpeqi_f_jumpnv_t, J4_cmpeqi_t_jumpnv_nt, J4...
    O << ".new,#";
    printOperand(MI, 1, O);
    break;
  case 396:
    // J4_tstbit0_f_jumpnv_nt, J4_tstbit0_t_jumpnv_nt
    O << ".new,#0)) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 397:
    // J4_tstbit0_f_jumpnv_t, J4_tstbit0_t_jumpnv_t
    O << ".new,#0)) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 398:
    // J4_tstbit0_fp0_jump_nt
    O << ",#0); if (!p0.new) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 399:
    // J4_tstbit0_fp0_jump_t
    O << ",#0); if (!p0.new) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 400:
    // J4_tstbit0_fp1_jump_nt
    O << ",#0); if (!p1.new) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 401:
    // J4_tstbit0_fp1_jump_t
    O << ",#0); if (!p1.new) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 402:
    // J4_tstbit0_tp0_jump_nt
    O << ",#0); if (p0.new) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 403:
    // J4_tstbit0_tp0_jump_t
    O << ",#0); if (p0.new) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 404:
    // J4_tstbit0_tp1_jump_nt
    O << ",#0); if (p1.new) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 405:
    // J4_tstbit0_tp1_jump_t
    O << ",#0); if (p1.new) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 406:
    // L2_deallocframe
    O << " = deallocframe(";
    printOperand(MI, 1, O);
    O << "):raw";
    return;
    break;
  case 407:
    // L2_loadrbgp
    O << " = memb(gp+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 408:
    // L2_loadrdgp
    O << " = memd(gp+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 409:
    // L2_loadrhgp
    O << " = memh(gp+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 410:
    // L2_loadrigp
    O << " = memw(gp+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 411:
    // L2_loadrubgp
    O << " = memub(gp+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 412:
    // L2_loadruhgp
    O << " = memuh(gp+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 413:
    // L2_loadw_locked
    O << " = memw_locked(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 414:
    // L4_add_memopb_io, L4_add_memoph_io, L4_add_memopw_io, L4_and_memopb_io...
    O << "+#";
    printOperand(MI, 1, O);
    break;
  case 415:
    // L4_loadd_locked
    O << " = memd_locked(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 416:
    // L4_return
    O << " = dealloc_return(";
    printOperand(MI, 1, O);
    O << "):raw";
    return;
    break;
  case 417:
    // M2_acci, M2_accii
    O << " += add(";
    printOperand(MI, 2, O);
    break;
  case 418:
    // M2_cmaci_s0
    O << " += cmpyi(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 419:
    // M2_cmacr_s0
    O << " += cmpyr(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 420:
    // M2_cmacs_s0, M2_cmacs_s1, M2_cmacsc_s0, M2_cmacsc_s1
    O << " += cmpy(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 421:
    // M2_cmpyi_s0
    O << " = cmpyi(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 422:
    // M2_cmpyr_s0
    O << " = cmpyr(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 423:
    // M2_cmpyrs_s0, M2_cmpyrs_s1, M2_cmpyrsc_s0, M2_cmpyrsc_s1, M2_cmpys_s0,...
    O << " = cmpy(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 424:
    // M2_cnacs_s0, M2_cnacs_s1, M2_cnacsc_s0, M2_cnacsc_s1
    O << " -= cmpy(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 425:
    // M2_dpmpyss_acc_s0, M2_mpy_acc_hh_s0, M2_mpy_acc_hh_s1, M2_mpy_acc_hl_s...
    O << " += mpy(";
    printOperand(MI, 2, O);
    break;
  case 426:
    // M2_dpmpyss_nac_s0, M2_mpy_nac_hh_s0, M2_mpy_nac_hh_s1, M2_mpy_nac_hl_s...
    O << " -= mpy(";
    printOperand(MI, 2, O);
    break;
  case 427:
    // M2_dpmpyss_rnd_s0, M2_dpmpyss_s0, M2_hmmpyh_rs1, M2_hmmpyh_s1, M2_hmmp...
    O << " = mpy(";
    printOperand(MI, 1, O);
    break;
  case 428:
    // M2_dpmpyuu_acc_s0, M2_mpyu_acc_hh_s0, M2_mpyu_acc_hh_s1, M2_mpyu_acc_h...
    O << " += mpyu(";
    printOperand(MI, 2, O);
    break;
  case 429:
    // M2_dpmpyuu_nac_s0, M2_mpyu_nac_hh_s0, M2_mpyu_nac_hh_s1, M2_mpyu_nac_h...
    O << " -= mpyu(";
    printOperand(MI, 2, O);
    break;
  case 430:
    // M2_dpmpyuu_s0, M2_mpyu_hh_s0, M2_mpyu_hh_s1, M2_mpyu_hl_s0, M2_mpyu_hl...
    O << " = mpyu(";
    printOperand(MI, 1, O);
    break;
  case 431:
    // M2_maci, M2_macsip
    O << " += mpyi(";
    printOperand(MI, 2, O);
    break;
  case 432:
    // M2_macsin, M2_mnaci
    O << " -= mpyi(";
    printOperand(MI, 2, O);
    break;
  case 433:
    // M2_mmachs_rs0, M2_mmachs_rs1, M2_mmachs_s0, M2_mmachs_s1
    O << " += vmpywoh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 434:
    // M2_mmacls_rs0, M2_mmacls_rs1, M2_mmacls_s0, M2_mmacls_s1
    O << " += vmpyweh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 435:
    // M2_mmacuhs_rs0, M2_mmacuhs_rs1, M2_mmacuhs_s0, M2_mmacuhs_s1
    O << " += vmpywouh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 436:
    // M2_mmaculs_rs0, M2_mmaculs_rs1, M2_mmaculs_s0, M2_mmaculs_s1
    O << " += vmpyweuh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 437:
    // M2_mmpyh_rs0, M2_mmpyh_rs1, M2_mmpyh_s0, M2_mmpyh_s1
    O << " = vmpywoh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 438:
    // M2_mmpyl_rs0, M2_mmpyl_rs1, M2_mmpyl_s0, M2_mmpyl_s1
    O << " = vmpyweh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 439:
    // M2_mmpyuh_rs0, M2_mmpyuh_rs1, M2_mmpyuh_s0, M2_mmpyuh_s1
    O << " = vmpywouh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 440:
    // M2_mmpyul_rs0, M2_mmpyul_rs1, M2_mmpyul_s0, M2_mmpyul_s1
    O << " = vmpyweuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 441:
    // M2_mpysin
    O << " = -mpyi(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 442:
    // M2_mpysip
    O << " = +mpyi(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 443:
    // M2_mpysu_up
    O << " = mpysu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 444:
    // M2_nacci, M2_naccii
    O << " -= add(";
    printOperand(MI, 2, O);
    break;
  case 445:
    // M2_subacc
    O << " += sub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 446:
    // M2_vcmac_s0_sat_i
    O << " += vcmpyi(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "):sat";
    return;
    break;
  case 447:
    // M2_vcmac_s0_sat_r
    O << " += vcmpyr(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "):sat";
    return;
    break;
  case 448:
    // M2_vcmpy_s0_sat_i, M2_vcmpy_s1_sat_i
    O << " = vcmpyi(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 449:
    // M2_vcmpy_s0_sat_r, M2_vcmpy_s1_sat_r
    O << " = vcmpyr(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 450:
    // M2_vdmacs_s0, M2_vdmacs_s1
    O << " += vdmpy(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 451:
    // M2_vdmpyrs_s0, M2_vdmpyrs_s1, M2_vdmpys_s0, M2_vdmpys_s1
    O << " = vdmpy(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 452:
    // M2_vmac2es, M2_vmac2es_s0, M2_vmac2es_s1
    O << " += vmpyeh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 453:
    // M2_vmac2su_s0, M2_vmac2su_s1
    O << " += vmpyhsu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 454:
    // M2_vmpy2es_s0, M2_vmpy2es_s1
    O << " = vmpyeh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 455:
    // M2_vmpy2su_s0, M2_vmpy2su_s1
    O << " = vmpyhsu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 456:
    // M2_vraddh
    O << " = vraddh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 457:
    // M2_vradduh
    O << " = vradduh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 458:
    // M2_vrcmaci_s0, M2_vrcmaci_s0c
    O << " += vrcmpyi(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 459:
    // M2_vrcmacr_s0, M2_vrcmacr_s0c
    O << " += vrcmpyr(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 460:
    // M2_vrcmpyi_s0, M2_vrcmpyi_s0c
    O << " = vrcmpyi(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 461:
    // M2_vrcmpyr_s0, M2_vrcmpyr_s0c
    O << " = vrcmpyr(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 462:
    // M2_vrmac_s0
    O << " += vrmpyh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 463:
    // M2_vrmpy_s0
    O << " = vrmpyh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 464:
    // M2_xor_xacc, M4_xor_xacc
    O << " ^= xor(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 465:
    // M4_and_and, M4_and_andn
    O << " &= and(";
    printOperand(MI, 2, O);
    break;
  case 466:
    // M4_and_or
    O << " &= or(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 467:
    // M4_and_xor
    O << " &= xor(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 468:
    // M4_cmpyi_wh, M4_cmpyi_whc
    O << " = cmpyiwh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 469:
    // M4_cmpyr_wh, M4_cmpyr_whc
    O << " = cmpyrwh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 470:
    // M4_mpyri_addi, M4_mpyrr_addi, S4_addi_asl_ri, S4_addi_lsr_ri
    O << " = add(#";
    printOperand(MI, 1, O);
    break;
  case 471:
    // M4_or_and, M4_or_andn, S4_or_andi
    O << " |= and(";
    printOperand(MI, 2, O);
    break;
  case 472:
    // M4_or_or, S4_or_ori
    O << " |= or(";
    printOperand(MI, 2, O);
    break;
  case 473:
    // M4_or_xor
    O << " |= xor(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 474:
    // M4_pmpyw
    O << " = pmpyw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 475:
    // M4_pmpyw_acc
    O << " ^= pmpyw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 476:
    // M4_vpmpyh
    O << " = vpmpyh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 477:
    // M4_vpmpyh_acc
    O << " ^= vpmpyh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 478:
    // M4_vrmpyeh_acc_s0, M4_vrmpyeh_acc_s1
    O << " += vrmpyweh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 479:
    // M4_vrmpyeh_s0, M4_vrmpyeh_s1
    O << " = vrmpyweh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 480:
    // M4_vrmpyoh_acc_s0, M4_vrmpyoh_acc_s1
    O << " += vrmpywoh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 481:
    // M4_vrmpyoh_s0, M4_vrmpyoh_s1
    O << " = vrmpywoh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 482:
    // M4_xor_and, M4_xor_andn
    O << " ^= and(";
    printOperand(MI, 2, O);
    break;
  case 483:
    // M4_xor_or
    O << " ^= or(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 484:
    // M5_vdmacbsu
    O << " += vdmpybsu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "):sat";
    return;
    break;
  case 485:
    // M5_vdmpybsu
    O << " = vdmpybsu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 486:
    // M5_vmacbsu
    O << " += vmpybsu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 487:
    // M5_vmacbuu
    O << " += vmpybu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 488:
    // M5_vmpybsu
    O << " = vmpybsu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 489:
    // M5_vmpybuu
    O << " = vmpybu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 490:
    // M5_vrmacbsu
    O << " += vrmpybsu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 491:
    // M5_vrmacbuu
    O << " += vrmpybu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 492:
    // M5_vrmpybsu
    O << " = vrmpybsu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 493:
    // M5_vrmpybuu
    O << " = vrmpybu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 494:
    // M6_vabsdiffb
    O << " = vabsdiffb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 495:
    // PS_loadrbabs
    O << " = memb(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 496:
    // PS_loadrdabs
    O << " = memd(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 497:
    // PS_loadrhabs
    O << " = memh(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 498:
    // PS_loadriabs
    O << " = memw(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 499:
    // PS_loadrubabs
    O << " = memub(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 500:
    // PS_loadruhabs
    O << " = memuh(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 501:
    // S2_addasl_rrri
    O << " = addasl(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 502:
    // S2_asl_i_p, S2_asl_i_r, S2_asl_i_r_sat, S2_asl_r_p, S2_asl_r_r, S2_asl...
    O << " = asl(";
    printOperand(MI, 1, O);
    break;
  case 503:
    // S2_asl_i_p_acc, S2_asl_i_r_acc, S2_asl_r_p_acc, S2_asl_r_r_acc
    O << " += asl(";
    printOperand(MI, 2, O);
    break;
  case 504:
    // S2_asl_i_p_and, S2_asl_i_r_and, S2_asl_r_p_and, S2_asl_r_r_and
    O << " &= asl(";
    printOperand(MI, 2, O);
    break;
  case 505:
    // S2_asl_i_p_nac, S2_asl_i_r_nac, S2_asl_r_p_nac, S2_asl_r_r_nac
    O << " -= asl(";
    printOperand(MI, 2, O);
    break;
  case 506:
    // S2_asl_i_p_or, S2_asl_i_r_or, S2_asl_r_p_or, S2_asl_r_r_or
    O << " |= asl(";
    printOperand(MI, 2, O);
    break;
  case 507:
    // S2_asl_i_p_xacc, S2_asl_i_r_xacc, S2_asl_r_p_xor
    O << " ^= asl(";
    printOperand(MI, 2, O);
    break;
  case 508:
    // S2_asr_i_p, S2_asr_i_p_rnd, S2_asr_i_r, S2_asr_i_r_rnd, S2_asr_r_p, S2...
    O << " = asr(";
    printOperand(MI, 1, O);
    break;
  case 509:
    // S2_asr_i_p_acc, S2_asr_i_r_acc, S2_asr_r_p_acc, S2_asr_r_r_acc
    O << " += asr(";
    printOperand(MI, 2, O);
    break;
  case 510:
    // S2_asr_i_p_and, S2_asr_i_r_and, S2_asr_r_p_and, S2_asr_r_r_and
    O << " &= asr(";
    printOperand(MI, 2, O);
    break;
  case 511:
    // S2_asr_i_p_nac, S2_asr_i_r_nac, S2_asr_r_p_nac, S2_asr_r_r_nac
    O << " -= asr(";
    printOperand(MI, 2, O);
    break;
  case 512:
    // S2_asr_i_p_or, S2_asr_i_r_or, S2_asr_r_p_or, S2_asr_r_r_or
    O << " |= asr(";
    printOperand(MI, 2, O);
    break;
  case 513:
    // S2_asr_r_p_xor
    O << " ^= asr(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 514:
    // S2_brev, S2_brevp
    O << " = brev(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 515:
    // S2_cabacdecbin
    O << " = decbin(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 516:
    // S2_cl0, S2_cl0p
    O << " = cl0(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 517:
    // S2_cl1, S2_cl1p
    O << " = cl1(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 518:
    // S2_clb, S2_clbp
    O << " = clb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 519:
    // S2_clbnorm, S4_clbpnorm
    O << " = normamt(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 520:
    // S2_clrbit_i, S2_clrbit_r
    O << " = clrbit(";
    printOperand(MI, 1, O);
    break;
  case 521:
    // S2_ct0, S2_ct0p
    O << " = ct0(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 522:
    // S2_ct1, S2_ct1p
    O << " = ct1(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 523:
    // S2_deinterleave
    O << " = deinterleave(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 524:
    // S2_extractu, S2_extractu_rp, S2_extractup, S2_extractup_rp
    O << " = extractu(";
    printOperand(MI, 1, O);
    break;
  case 525:
    // S2_insert, S2_insert_rp, S2_insertp, S2_insertp_rp
    O << " = insert(";
    printOperand(MI, 2, O);
    break;
  case 526:
    // S2_interleave
    O << " = interleave(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 527:
    // S2_lfsp
    O << " = lfs(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 528:
    // S2_lsl_r_p, S2_lsl_r_r
    O << " = lsl(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 529:
    // S2_lsl_r_p_acc, S2_lsl_r_r_acc
    O << " += lsl(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 530:
    // S2_lsl_r_p_and, S2_lsl_r_r_and
    O << " &= lsl(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 531:
    // S2_lsl_r_p_nac, S2_lsl_r_r_nac
    O << " -= lsl(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 532:
    // S2_lsl_r_p_or, S2_lsl_r_r_or
    O << " |= lsl(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 533:
    // S2_lsl_r_p_xor
    O << " ^= lsl(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 534:
    // S2_lsl_r_vh
    O << " = vlslh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 535:
    // S2_lsl_r_vw
    O << " = vlslw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 536:
    // S2_lsr_i_p, S2_lsr_i_r, S2_lsr_r_p, S2_lsr_r_r
    O << " = lsr(";
    printOperand(MI, 1, O);
    break;
  case 537:
    // S2_lsr_i_p_acc, S2_lsr_i_r_acc, S2_lsr_r_p_acc, S2_lsr_r_r_acc
    O << " += lsr(";
    printOperand(MI, 2, O);
    break;
  case 538:
    // S2_lsr_i_p_and, S2_lsr_i_r_and, S2_lsr_r_p_and, S2_lsr_r_r_and
    O << " &= lsr(";
    printOperand(MI, 2, O);
    break;
  case 539:
    // S2_lsr_i_p_nac, S2_lsr_i_r_nac, S2_lsr_r_p_nac, S2_lsr_r_r_nac
    O << " -= lsr(";
    printOperand(MI, 2, O);
    break;
  case 540:
    // S2_lsr_i_p_or, S2_lsr_i_r_or, S2_lsr_r_p_or, S2_lsr_r_r_or
    O << " |= lsr(";
    printOperand(MI, 2, O);
    break;
  case 541:
    // S2_lsr_i_p_xacc, S2_lsr_i_r_xacc, S2_lsr_r_p_xor
    O << " ^= lsr(";
    printOperand(MI, 2, O);
    break;
  case 542:
    // S2_mask
    O << " = mask(#";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 543:
    // S2_packhl, dep_S2_packhl
    O << " = packhl(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 544:
    // S2_parityp, S4_parity
    O << " = parity(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 545:
    // S2_setbit_i, S2_setbit_r
    O << " = setbit(";
    printOperand(MI, 1, O);
    break;
  case 546:
    // S2_shuffeb
    O << " = shuffeb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 547:
    // S2_shuffeh
    O << " = shuffeh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 548:
    // S2_shuffob
    O << " = shuffob(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 549:
    // S2_shuffoh
    O << " = shuffoh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 550:
    // S2_storerb_pbr, S2_storerb_pr, S2_storerbnew_pbr, S2_storerbnew_pr, S2...
    O << "++";
    printOperand(MI, 2, O);
    break;
  case 551:
    // S2_storerb_pci, S2_storerb_pi, S2_storerbnew_pci, S2_storerbnew_pi, S2...
    O << "++#";
    printOperand(MI, 2, O);
    break;
  case 552:
    // S2_storerb_pcr, S2_storerbnew_pcr, S2_storerd_pcr, S2_storerf_pcr, S2_...
    O << "++I:circ(";
    printOperand(MI, 2, O);
    O << ")) = ";
    printOperand(MI, 3, O);
    break;
  case 553:
    // S2_svsathb, S2_vsathb, S2_vsathb_nopack
    O << " = vsathb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 554:
    // S2_togglebit_i, S2_togglebit_r
    O << " = togglebit(";
    printOperand(MI, 1, O);
    break;
  case 555:
    // S2_tstbit_i, S2_tstbit_r
    O << " = tstbit(";
    printOperand(MI, 1, O);
    break;
  case 556:
    // S2_valignib, S2_valignrb
    O << " = valignb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 557:
    // S2_vcnegh
    O << " = vcnegh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 558:
    // S2_vcrotate
    O << " = vcrotate(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 559:
    // S2_vrcnegh
    O << " += vrcnegh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 560:
    // S2_vrndpackwh, S2_vrndpackwhs
    O << " = vrndwh(";
    printOperand(MI, 1, O);
    break;
  case 561:
    // S2_vsatwuh, S2_vsatwuh_nopack
    O << " = vsatwuh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 562:
    // S2_vsplatrb, S6_vsplatrbp
    O << " = vsplatb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 563:
    // S2_vsplatrh
    O << " = vsplath(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 564:
    // S2_vspliceib, S2_vsplicerb
    O << " = vspliceb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 565:
    // S2_vsxtbh
    O << " = vsxtbh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 566:
    // S2_vsxthw
    O << " = vsxthw(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 567:
    // S2_vtrunehb, S6_vtrunehb_ppp
    O << " = vtrunehb(";
    printOperand(MI, 1, O);
    break;
  case 568:
    // S2_vtrunewh
    O << " = vtrunewh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 569:
    // S2_vtrunohb, S6_vtrunohb_ppp
    O << " = vtrunohb(";
    printOperand(MI, 1, O);
    break;
  case 570:
    // S2_vtrunowh
    O << " = vtrunowh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 571:
    // S2_vzxtbh
    O << " = vzxtbh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 572:
    // S2_vzxthw
    O << " = vzxthw(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 573:
    // S4_andi_asl_ri, S4_andi_lsr_ri
    O << " = and(#";
    printOperand(MI, 1, O);
    break;
  case 574:
    // S4_clbaddi, S4_clbpaddi
    O << " = add(clb(";
    printOperand(MI, 1, O);
    O << "),#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 575:
    // S4_extract, S4_extract_rp, S4_extractp, S4_extractp_rp
    O << " = extract(";
    printOperand(MI, 1, O);
    break;
  case 576:
    // S4_lsli
    O << " = lsl(#";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 577:
    // S4_ntstbit_i, S4_ntstbit_r
    O << " = !tstbit(";
    printOperand(MI, 1, O);
    break;
  case 578:
    // S4_ori_asl_ri, S4_ori_lsr_ri
    O << " = or(#";
    printOperand(MI, 1, O);
    break;
  case 579:
    // S4_pstorerbf_abs, S4_pstorerbnewf_abs, S4_pstorerbnewt_abs, S4_pstorer...
    O << ") memb(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 580:
    // S4_pstorerbfnew_abs, S4_pstorerbnewfnew_abs, S4_pstorerbnewtnew_abs, S...
    O << ".new) memb(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 581:
    // S4_pstorerdf_abs, S4_pstorerdt_abs
    O << ") memd(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    return;
    break;
  case 582:
    // S4_pstorerdfnew_abs, S4_pstorerdtnew_abs
    O << ".new) memd(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    return;
    break;
  case 583:
    // S4_pstorerff_abs, S4_pstorerft_abs, S4_pstorerhf_abs, S4_pstorerhnewf_...
    O << ") memh(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 584:
    // S4_pstorerffnew_abs, S4_pstorerftnew_abs, S4_pstorerhfnew_abs, S4_psto...
    O << ".new) memh(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 585:
    // S4_pstorerif_abs, S4_pstorerinewf_abs, S4_pstorerinewt_abs, S4_pstorer...
    O << ") memw(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 586:
    // S4_pstorerifnew_abs, S4_pstorerinewfnew_abs, S4_pstorerinewtnew_abs, S...
    O << ".new) memw(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 587:
    // S4_storerb_ap, S4_storerbnew_ap, S4_storerd_ap, S4_storerf_ap, S4_stor...
    O << "=#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 588:
    // S4_storerb_rr, S4_storerbnew_rr, S4_storerd_rr, S4_storerf_rr, S4_stor...
    O << '+';
    printOperand(MI, 1, O);
    O << "<<#";
    printOperand(MI, 2, O);
    O << ") = ";
    printOperand(MI, 3, O);
    break;
  case 589:
    // S4_storerb_ur, S4_storerbnew_ur, S4_storerd_ur, S4_storerf_ur, S4_stor...
    O << "<<#";
    printOperand(MI, 1, O);
    O << "+#";
    printOperand(MI, 2, O);
    O << ") = ";
    printOperand(MI, 3, O);
    break;
  case 590:
    // S4_vrcrotate
    O << " = vrcrotate(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 591:
    // S4_vrcrotate_acc
    O << " += vrcrotate(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ",#";
    printOperand(MI, 4, O);
    O << ')';
    return;
    break;
  case 592:
    // S4_vxaddsubh, S4_vxaddsubhr
    O << " = vxaddsubh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 593:
    // S4_vxaddsubw
    O << " = vxaddsubw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 594:
    // S4_vxsubaddh, S4_vxsubaddhr
    O << " = vxsubaddh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 595:
    // S4_vxsubaddw
    O << " = vxsubaddw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 596:
    // S5_popcountp
    O << " = popcount(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 597:
    // S6_rol_i_p, S6_rol_i_r
    O << " = rol(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 598:
    // S6_rol_i_p_acc, S6_rol_i_r_acc
    O << " += rol(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 599:
    // S6_rol_i_p_and, S6_rol_i_r_and
    O << " &= rol(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 600:
    // S6_rol_i_p_nac, S6_rol_i_r_nac
    O << " -= rol(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 601:
    // S6_rol_i_p_or, S6_rol_i_r_or
    O << " |= rol(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 602:
    // S6_rol_i_p_xacc, S6_rol_i_r_xacc
    O << " ^= rol(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 603:
    // SA1_addsp
    O << " = add(r29,#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 604:
    // SA1_combine0i
    O << " = combine(#0,#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 605:
    // SA1_combine1i
    O << " = combine(#1,#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 606:
    // SA1_combine2i
    O << " = combine(#2,#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 607:
    // SA1_combine3i
    O << " = combine(#3,#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 608:
    // SA1_combinezr
    O << " = combine(#0,";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 609:
    // SL2_loadrd_sp
    O << " = memd(r29+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 610:
    // SL2_loadri_sp
    O << " = memw(r29+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 611:
    // V6_extractw
    O << " = vextract(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 612:
    // V6_lvsplatb
    O << ".b = vsplat(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 613:
    // V6_lvsplath
    O << ".h = vsplat(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 614:
    // V6_lvsplatw
    O << " = vsplat(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 615:
    // V6_pred_scalar2
    O << " = vsetq(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 616:
    // V6_pred_scalar2v2
    O << " = vsetq2(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 617:
    // V6_shuffeqh, V6_vshuffeb
    O << ".b = vshuffe(";
    printOperand(MI, 1, O);
    break;
  case 618:
    // V6_shuffeqw, V6_vshufeh
    O << ".h = vshuffe(";
    printOperand(MI, 1, O);
    break;
  case 619:
    // V6_vL32b_cur_ai, V6_vL32b_cur_pi, V6_vL32b_cur_ppu, V6_vL32b_nt_cur_ai...
    O << ".cur = vmem(";
    printOperand(MI, 1, O);
    break;
  case 620:
    // V6_vL32b_nt_tmp_ai, V6_vL32b_nt_tmp_pi, V6_vL32b_nt_tmp_ppu, V6_vL32b_...
    O << ".tmp = vmem(";
    printOperand(MI, 1, O);
    break;
  case 621:
    // V6_vabsb, V6_vabsb_sat
    O << ".b = vabs(";
    printOperand(MI, 1, O);
    break;
  case 622:
    // V6_vabsdiffh, V6_vabsdiffuh
    O << ".uh = vabsdiff(";
    printOperand(MI, 1, O);
    break;
  case 623:
    // V6_vabsdiffub
    O << ".ub = vabsdiff(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub)";
    return;
    break;
  case 624:
    // V6_vabsdiffw
    O << ".uw = vabsdiff(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 625:
    // V6_vabsh, V6_vabsh_sat
    O << ".h = vabs(";
    printOperand(MI, 1, O);
    break;
  case 626:
    // V6_vabsw, V6_vabsw_sat
    O << ".w = vabs(";
    printOperand(MI, 1, O);
    break;
  case 627:
    // V6_vaddb, V6_vaddb_dv, V6_vaddbsat, V6_vaddbsat_dv
    O << ".b = vadd(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    break;
  case 628:
    // V6_vaddcarry, V6_vaddcarrysat, V6_vaddhw, V6_vadduhw, V6_vaddw, V6_vad...
    O << ".w = vadd(";
    break;
  case 629:
    // V6_vaddcarryo, V6_vsubcarryo
    O << ".w,";
    printOperand(MI, 1, O);
    break;
  case 630:
    // V6_vaddclbh
    O << ".h = vadd(vclb(";
    printOperand(MI, 1, O);
    O << ".h),";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 631:
    // V6_vaddclbw
    O << ".w = vadd(vclb(";
    printOperand(MI, 1, O);
    O << ".w),";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 632:
    // V6_vaddh, V6_vaddh_dv, V6_vaddhsat, V6_vaddhsat_dv, V6_vaddubh
    O << ".h = vadd(";
    printOperand(MI, 1, O);
    break;
  case 633:
    // V6_vaddhw_acc, V6_vadduhw_acc
    O << ".w += vadd(";
    printOperand(MI, 2, O);
    break;
  case 634:
    // V6_vaddubh_acc
    O << ".h += vadd(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    O << ".ub)";
    return;
    break;
  case 635:
    // V6_vaddubsat, V6_vaddubsat_dv, V6_vaddububb_sat
    O << ".ub = vadd(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    break;
  case 636:
    // V6_vadduhsat, V6_vadduhsat_dv
    O << ".uh = vadd(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh):sat";
    return;
    break;
  case 637:
    // V6_vadduwsat, V6_vadduwsat_dv
    O << ".uw = vadd(";
    printOperand(MI, 1, O);
    O << ".uw,";
    printOperand(MI, 2, O);
    O << ".uw):sat";
    return;
    break;
  case 638:
    // V6_valignb, V6_valignbi
    O << " = valign(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 639:
    // V6_vand, V6_vandqrt, V6_vandvqv, V6_vandvrt
    O << " = vand(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 640:
    // V6_vandnqrt, V6_vandvnqv
    O << " = vand(!";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 641:
    // V6_vandnqrt_acc
    O << " |= vand(!";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 642:
    // V6_vandqrt_acc, V6_vandvrt_acc
    O << " |= vand(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 643:
    // V6_vaslh, V6_vaslhv
    O << ".h = vasl(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    break;
  case 644:
    // V6_vaslh_acc
    O << ".h += vasl(";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 645:
    // V6_vaslw, V6_vaslwv
    O << ".w = vasl(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    break;
  case 646:
    // V6_vaslw_acc
    O << ".w += vasl(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 647:
    // V6_vasr_into
    O << ".w = vasrinto(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    O << ".w)";
    return;
    break;
  case 648:
    // V6_vasrh, V6_vasrhv, V6_vasrwh, V6_vasrwhrndsat, V6_vasrwhsat
    O << ".h = vasr(";
    printOperand(MI, 1, O);
    break;
  case 649:
    // V6_vasrh_acc
    O << ".h += vasr(";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 650:
    // V6_vasrhbrndsat, V6_vasrhbsat
    O << ".b = vasr(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    break;
  case 651:
    // V6_vasrhubrndsat, V6_vasrhubsat, V6_vasruhubrndsat, V6_vasruhubsat
    O << ".ub = vasr(";
    printOperand(MI, 1, O);
    break;
  case 652:
    // V6_vasruwuhrndsat, V6_vasruwuhsat, V6_vasrwuhrndsat, V6_vasrwuhsat
    O << ".uh = vasr(";
    printOperand(MI, 1, O);
    break;
  case 653:
    // V6_vasrw, V6_vasrwv
    O << ".w = vasr(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    break;
  case 654:
    // V6_vasrw_acc
    O << ".w += vasr(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 655:
    // V6_vavgb, V6_vavgbrnd
    O << ".b = vavg(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    break;
  case 656:
    // V6_vavgh, V6_vavghrnd
    O << ".h = vavg(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    break;
  case 657:
    // V6_vavgub, V6_vavgubrnd
    O << ".ub = vavg(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    break;
  case 658:
    // V6_vavguh, V6_vavguhrnd
    O << ".uh = vavg(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    break;
  case 659:
    // V6_vavguw, V6_vavguwrnd
    O << ".uw = vavg(";
    printOperand(MI, 1, O);
    O << ".uw,";
    printOperand(MI, 2, O);
    break;
  case 660:
    // V6_vavgw, V6_vavgwrnd
    O << ".w = vavg(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    break;
  case 661:
    // V6_vcl0h
    O << ".uh = vcl0(";
    printOperand(MI, 1, O);
    O << ".uh)";
    return;
    break;
  case 662:
    // V6_vcl0w
    O << ".uw = vcl0(";
    printOperand(MI, 1, O);
    O << ".uw)";
    return;
    break;
  case 663:
    // V6_vcombine
    O << " = vcombine(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 664:
    // V6_vdealb
    O << ".b = vdeal(";
    printOperand(MI, 1, O);
    O << ".b)";
    return;
    break;
  case 665:
    // V6_vdealb4w
    O << ".b = vdeale(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 666:
    // V6_vdealh
    O << ".h = vdeal(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 667:
    // V6_vdealvdd
    O << " = vdeal(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 668:
    // V6_vdelta
    O << " = vdelta(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 669:
    // V6_vdmpybus, V6_vdmpybus_dv
    O << ".h = vdmpy(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 670:
    // V6_vdmpybus_acc, V6_vdmpybus_dv_acc
    O << ".h += vdmpy(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    O << ".b)";
    return;
    break;
  case 671:
    // V6_vdmpyhb, V6_vdmpyhb_dv, V6_vdmpyhisat, V6_vdmpyhsat, V6_vdmpyhsuisa...
    O << ".w = vdmpy(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    break;
  case 672:
    // V6_vdmpyhb_acc, V6_vdmpyhb_dv_acc, V6_vdmpyhisat_acc, V6_vdmpyhsat_acc...
    O << ".w += vdmpy(";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    break;
  case 673:
    // V6_vdsaduh
    O << ".uw = vdsad(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 674:
    // V6_vdsaduh_acc
    O << ".uw += vdsad(";
    printOperand(MI, 2, O);
    O << ".uh,";
    printOperand(MI, 3, O);
    O << ".uh)";
    return;
    break;
  case 675:
    // V6_vgathermhq, V6_vgathermhwq
    O << ") vtmp.h = vgather(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 676:
    // V6_vgathermwq
    O << ") vtmp.w = vgather(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ".w).w";
    return;
    break;
  case 677:
    // V6_vgtb, V6_vgth, V6_vgtub, V6_vgtuh, V6_vgtuw, V6_vgtw
    O << " = vcmp.gt(";
    printOperand(MI, 1, O);
    break;
  case 678:
    // V6_vgtb_and, V6_vgth_and, V6_vgtub_and, V6_vgtuh_and, V6_vgtuw_and, V6...
    O << " &= vcmp.gt(";
    printOperand(MI, 2, O);
    break;
  case 679:
    // V6_vgtb_or, V6_vgth_or, V6_vgtub_or, V6_vgtuh_or, V6_vgtuw_or, V6_vgtw...
    O << " |= vcmp.gt(";
    printOperand(MI, 2, O);
    break;
  case 680:
    // V6_vgtb_xor, V6_vgth_xor, V6_vgtub_xor, V6_vgtuh_xor, V6_vgtuw_xor, V6...
    O << " ^= vcmp.gt(";
    printOperand(MI, 2, O);
    break;
  case 681:
    // V6_vinsertwr
    O << ".w = vinsert(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 682:
    // V6_vlalignb, V6_vlalignbi
    O << " = vlalign(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 683:
    // V6_vlsrb
    O << ".ub = vlsr(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 684:
    // V6_vlsrh
    O << ".uh = vlsr(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 685:
    // V6_vlsrhv
    O << ".h = vlsr(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 686:
    // V6_vlsrw
    O << ".uw = vlsr(";
    printOperand(MI, 1, O);
    O << ".uw,";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 687:
    // V6_vlsrwv
    O << ".w = vlsr(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 688:
    // V6_vlut4
    O << ".h = vlut4(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 689:
    // V6_vlutvvb, V6_vlutvvb_nm, V6_vlutvvbi
    O << ".b = vlut32(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    break;
  case 690:
    // V6_vlutvvb_oracc, V6_vlutvvb_oracci
    O << ".b |= vlut32(";
    printOperand(MI, 2, O);
    O << ".b,";
    printOperand(MI, 3, O);
    break;
  case 691:
    // V6_vlutvwh, V6_vlutvwh_nm, V6_vlutvwhi
    O << ".h = vlut16(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    break;
  case 692:
    // V6_vlutvwh_oracc, V6_vlutvwh_oracci
    O << ".h |= vlut16(";
    printOperand(MI, 2, O);
    O << ".b,";
    printOperand(MI, 3, O);
    break;
  case 693:
    // V6_vmaxb
    O << ".b = vmax(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 694:
    // V6_vmaxh
    O << ".h = vmax(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 695:
    // V6_vmaxub
    O << ".ub = vmax(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub)";
    return;
    break;
  case 696:
    // V6_vmaxuh
    O << ".uh = vmax(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 697:
    // V6_vmaxw
    O << ".w = vmax(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 698:
    // V6_vminb
    O << ".b = vmin(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 699:
    // V6_vminh
    O << ".h = vmin(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 700:
    // V6_vminub
    O << ".ub = vmin(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub)";
    return;
    break;
  case 701:
    // V6_vminuh
    O << ".uh = vmin(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 702:
    // V6_vminw
    O << ".w = vmin(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 703:
    // V6_vmpabus, V6_vmpabusv, V6_vmpabuu, V6_vmpabuuv, V6_vmpahhsat, V6_vmp...
    O << ".h = vmpa(";
    printOperand(MI, 1, O);
    break;
  case 704:
    // V6_vmpabus_acc, V6_vmpabuu_acc
    O << ".h += vmpa(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    break;
  case 705:
    // V6_vmpahb, V6_vmpauhb
    O << ".w = vmpa(";
    printOperand(MI, 1, O);
    break;
  case 706:
    // V6_vmpahb_acc, V6_vmpauhb_acc
    O << ".w += vmpa(";
    printOperand(MI, 2, O);
    break;
  case 707:
    // V6_vmpsuhuhsat
    O << ".h = vmps(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".uh,";
    printOperand(MI, 3, O);
    O << ".uh):sat";
    return;
    break;
  case 708:
    // V6_vmpybus, V6_vmpybusv, V6_vmpybv, V6_vmpyhsrs, V6_vmpyhss, V6_vmpyhv...
    O << ".h = vmpy(";
    printOperand(MI, 1, O);
    break;
  case 709:
    // V6_vmpybus_acc, V6_vmpybusv_acc, V6_vmpybv_acc
    O << ".h += vmpy(";
    printOperand(MI, 2, O);
    break;
  case 710:
    // V6_vmpyewuh
    O << ".w = vmpye(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 711:
    // V6_vmpyewuh_64
    O << " = vmpye(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 712:
    // V6_vmpyh, V6_vmpyhus, V6_vmpyhv
    O << ".w = vmpy(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    break;
  case 713:
    // V6_vmpyh_acc, V6_vmpyhsat_acc, V6_vmpyhus_acc, V6_vmpyhv_acc
    O << ".w += vmpy(";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    break;
  case 714:
    // V6_vmpyieoh
    O << ".w = vmpyieo(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 715:
    // V6_vmpyiewh_acc, V6_vmpyiewuh_acc
    O << ".w += vmpyie(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    break;
  case 716:
    // V6_vmpyiewuh
    O << ".w = vmpyie(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 717:
    // V6_vmpyih, V6_vmpyihb
    O << ".h = vmpyi(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    break;
  case 718:
    // V6_vmpyih_acc, V6_vmpyihb_acc
    O << ".h += vmpyi(";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    break;
  case 719:
    // V6_vmpyiowh
    O << ".w = vmpyio(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 720:
    // V6_vmpyiwb, V6_vmpyiwh, V6_vmpyiwub
    O << ".w = vmpyi(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    break;
  case 721:
    // V6_vmpyiwb_acc, V6_vmpyiwh_acc, V6_vmpyiwub_acc
    O << ".w += vmpyi(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    break;
  case 722:
    // V6_vmpyowh, V6_vmpyowh_rnd
    O << ".w = vmpyo(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    break;
  case 723:
    // V6_vmpyowh_64_acc
    O << " += vmpyo(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    O << ".h)";
    return;
    break;
  case 724:
    // V6_vmpyowh_rnd_sacc, V6_vmpyowh_sacc
    O << ".w += vmpyo(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    break;
  case 725:
    // V6_vmpyub, V6_vmpyubv
    O << ".uh = vmpy(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub)";
    return;
    break;
  case 726:
    // V6_vmpyub_acc, V6_vmpyubv_acc
    O << ".uh += vmpy(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    O << ".ub)";
    return;
    break;
  case 727:
    // V6_vmpyuh, V6_vmpyuhv
    O << ".uw = vmpy(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 728:
    // V6_vmpyuh_acc, V6_vmpyuhv_acc
    O << ".uw += vmpy(";
    printOperand(MI, 2, O);
    O << ".uh,";
    printOperand(MI, 3, O);
    O << ".uh)";
    return;
    break;
  case 729:
    // V6_vmpyuhe
    O << ".uw = vmpye(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 730:
    // V6_vmpyuhe_acc
    O << ".uw += vmpye(";
    printOperand(MI, 2, O);
    O << ".uh,";
    printOperand(MI, 3, O);
    O << ".uh)";
    return;
    break;
  case 731:
    // V6_vnavgb, V6_vnavgub
    O << ".b = vnavg(";
    printOperand(MI, 1, O);
    break;
  case 732:
    // V6_vnavgh
    O << ".h = vnavg(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 733:
    // V6_vnavgw
    O << ".w = vnavg(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 734:
    // V6_vnormamth
    O << ".h = vnormamt(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 735:
    // V6_vnormamtw
    O << ".w = vnormamt(";
    printOperand(MI, 1, O);
    O << ".w)";
    return;
    break;
  case 736:
    // V6_vnot
    O << " = vnot(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 737:
    // V6_vor
    O << " = vor(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 738:
    // V6_vpackeb
    O << ".b = vpacke(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 739:
    // V6_vpackeh
    O << ".h = vpacke(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 740:
    // V6_vpackhb_sat
    O << ".b = vpack(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h):sat";
    return;
    break;
  case 741:
    // V6_vpackhub_sat
    O << ".ub = vpack(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h):sat";
    return;
    break;
  case 742:
    // V6_vpackob
    O << ".b = vpacko(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 743:
    // V6_vpackoh
    O << ".h = vpacko(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 744:
    // V6_vpackwh_sat
    O << ".h = vpack(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w):sat";
    return;
    break;
  case 745:
    // V6_vpackwuh_sat
    O << ".uh = vpack(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w):sat";
    return;
    break;
  case 746:
    // V6_vpopcounth
    O << ".h = vpopcount(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 747:
    // V6_vprefixqb
    O << ".b = prefixsum(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 748:
    // V6_vprefixqh
    O << ".h = prefixsum(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 749:
    // V6_vprefixqw
    O << ".w = prefixsum(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 750:
    // V6_vrdelta
    O << " = vrdelta(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 751:
    // V6_vrmpyzbb_rt, V6_vrmpyzbb_rx, V6_vrmpyzbub_rt, V6_vrmpyzbub_rx
    O << ".w = vrmpyz(";
    break;
  case 752:
    // V6_vrmpyzbb_rt_acc, V6_vrmpyzbb_rx_acc, V6_vrmpyzbub_rt_acc, V6_vrmpyz...
    O << ".w += vrmpyz(";
    break;
  case 753:
    // V6_vrmpyzcb_rt, V6_vrmpyzcb_rx
    O << ".w = vr16mpyz(";
    break;
  case 754:
    // V6_vrmpyzcb_rt_acc, V6_vrmpyzcb_rx_acc
    O << ".w += vr16mpyz(";
    break;
  case 755:
    // V6_vrmpyzcbs_rt, V6_vrmpyzcbs_rx
    O << ".w = vr16mpyzs(";
    break;
  case 756:
    // V6_vrmpyzcbs_rt_acc, V6_vrmpyzcbs_rx_acc
    O << ".w += vr16mpyzs(";
    break;
  case 757:
    // V6_vrmpyznb_rt, V6_vrmpyznb_rx
    O << ".w = vr8mpyz(";
    break;
  case 758:
    // V6_vrmpyznb_rt_acc, V6_vrmpyznb_rx_acc
    O << ".w += vr8mpyz(";
    break;
  case 759:
    // V6_vror
    O << " = vror(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 760:
    // V6_vrotr
    O << ".uw = vrotr(";
    printOperand(MI, 1, O);
    O << ".uw,";
    printOperand(MI, 2, O);
    O << ".uw)";
    return;
    break;
  case 761:
    // V6_vroundhb
    O << ".b = vround(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h):sat";
    return;
    break;
  case 762:
    // V6_vroundhub, V6_vrounduhub
    O << ".ub = vround(";
    printOperand(MI, 1, O);
    break;
  case 763:
    // V6_vrounduwuh, V6_vroundwuh
    O << ".uh = vround(";
    printOperand(MI, 1, O);
    break;
  case 764:
    // V6_vroundwh
    O << ".h = vround(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w):sat";
    return;
    break;
  case 765:
    // V6_vrsadubi
    O << ".uw = vrsad(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub,#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 766:
    // V6_vrsadubi_acc
    O << ".uw += vrsad(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    O << ".ub,#";
    printOperand(MI, 4, O);
    O << ')';
    return;
    break;
  case 767:
    // V6_vsatdw
    O << ".w = vsatdw(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 768:
    // V6_vsathub
    O << ".ub = vsat(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 769:
    // V6_vsatuwuh
    O << ".uh = vsat(";
    printOperand(MI, 1, O);
    O << ".uw,";
    printOperand(MI, 2, O);
    O << ".uw)";
    return;
    break;
  case 770:
    // V6_vsatwh
    O << ".h = vsat(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 771:
    // V6_vsb
    O << ".h = vsxt(";
    printOperand(MI, 1, O);
    O << ".b)";
    return;
    break;
  case 772:
    // V6_vsh
    O << ".w = vsxt(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 773:
    // V6_vshuffb
    O << ".b = vshuff(";
    printOperand(MI, 1, O);
    O << ".b)";
    return;
    break;
  case 774:
    // V6_vshuffh
    O << ".h = vshuff(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 775:
    // V6_vshuffob
    O << ".b = vshuffo(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 776:
    // V6_vshuffvdd
    O << " = vshuff(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 777:
    // V6_vshufoeb
    O << ".b = vshuffoe(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 778:
    // V6_vshufoeh
    O << ".h = vshuffoe(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 779:
    // V6_vshufoh
    O << ".h = vshuffo(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 780:
    // V6_vsubb, V6_vsubb_dv, V6_vsubbsat, V6_vsubbsat_dv
    O << ".b = vsub(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    break;
  case 781:
    // V6_vsubcarry, V6_vsubhw, V6_vsubuhw, V6_vsubw, V6_vsubw_dv, V6_vsubwsa...
    O << ".w = vsub(";
    break;
  case 782:
    // V6_vsubh, V6_vsubh_dv, V6_vsubhsat, V6_vsubhsat_dv, V6_vsububh
    O << ".h = vsub(";
    printOperand(MI, 1, O);
    break;
  case 783:
    // V6_vsububsat, V6_vsububsat_dv, V6_vsubububb_sat
    O << ".ub = vsub(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    break;
  case 784:
    // V6_vsubuhsat, V6_vsubuhsat_dv
    O << ".uh = vsub(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh):sat";
    return;
    break;
  case 785:
    // V6_vsubuwsat, V6_vsubuwsat_dv
    O << ".uw = vsub(";
    printOperand(MI, 1, O);
    O << ".uw,";
    printOperand(MI, 2, O);
    O << ".uw):sat";
    return;
    break;
  case 786:
    // V6_vswap
    O << " = vswap(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 787:
    // V6_vtmpyb, V6_vtmpybus
    O << ".h = vtmpy(";
    printOperand(MI, 1, O);
    break;
  case 788:
    // V6_vtmpyb_acc, V6_vtmpybus_acc
    O << ".h += vtmpy(";
    printOperand(MI, 2, O);
    break;
  case 789:
    // V6_vtmpyhb
    O << ".w = vtmpy(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 790:
    // V6_vtmpyhb_acc
    O << ".w += vtmpy(";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    O << ".b)";
    return;
    break;
  case 791:
    // V6_vunpackb
    O << ".h = vunpack(";
    printOperand(MI, 1, O);
    O << ".b)";
    return;
    break;
  case 792:
    // V6_vunpackh
    O << ".w = vunpack(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 793:
    // V6_vunpackob
    O << ".h |= vunpacko(";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 794:
    // V6_vunpackoh
    O << ".w |= vunpacko(";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 795:
    // V6_vunpackub
    O << ".uh = vunpack(";
    printOperand(MI, 1, O);
    O << ".ub)";
    return;
    break;
  case 796:
    // V6_vunpackuh
    O << ".uw = vunpack(";
    printOperand(MI, 1, O);
    O << ".uh)";
    return;
    break;
  case 797:
    // V6_vwhist256q_sat
    O << "):sat";
    return;
    break;
  case 798:
    // V6_vxor
    O << " = vxor(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 799:
    // V6_vzb
    O << ".uh = vzxt(";
    printOperand(MI, 1, O);
    O << ".ub)";
    return;
    break;
  case 800:
    // V6_vzh
    O << ".uw = vzxt(";
    printOperand(MI, 1, O);
    O << ".uh)";
    return;
    break;
  case 801:
    // V6_zextract
    O << " = zextract(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  }


  // Fragment 2 encoded into 8 bits for 154 unique commands.
  switch ((Bits >> 24) & 255) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A2_addsp, S2_pstorerbf_zomap, S2_pstorerbnewf_zomap, S2_pstorerbnewt_z...
    printOperand(MI, 1, O);
    break;
  case 1:
    // A2_neg, A2_vaddb_map, A2_vsubb_map, A4_boundscheck, L2_loadbsw2_zomap,...
    O << ')';
    return;
    break;
  case 2:
    // A2_tfrf, A2_tfrfnew, A2_tfrpf, A2_tfrpfnew, A2_tfrpt, A2_tfrptnew, A2_...
    O << " = ";
    printOperand(MI, 2, O);
    return;
    break;
  case 3:
    // A2_tfrp, A2_tfrpi, C2_pxfer_map, S2_storerb_zomap, S2_storerd_zomap, S...
    return;
    break;
  case 4:
    // L2_loadalignb_zomap, L2_loadalignh_zomap, A2_tfrih, A2_tfril, A4_addp_...
    printOperand(MI, 2, O);
    break;
  case 5:
    // L2_ploadrbf_zomap, L2_ploadrbfnew_zomap, L2_ploadrbt_zomap, L2_ploadrb...
    O << " = memb(";
    break;
  case 6:
    // L2_ploadrdf_zomap, L2_ploadrdfnew_zomap, L2_ploadrdt_zomap, L2_ploadrd...
    O << " = memd(";
    break;
  case 7:
    // L2_ploadrhf_zomap, L2_ploadrhfnew_zomap, L2_ploadrht_zomap, L2_ploadrh...
    O << " = memh(";
    break;
  case 8:
    // L2_ploadrif_zomap, L2_ploadrifnew_zomap, L2_ploadrit_zomap, L2_ploadri...
    O << " = memw(";
    break;
  case 9:
    // L2_ploadrubf_zomap, L2_ploadrubfnew_zomap, L2_ploadrubt_zomap, L2_ploa...
    O << " = memub(";
    break;
  case 10:
    // L2_ploadruhf_zomap, L2_ploadruhfnew_zomap, L2_ploadruht_zomap, L2_ploa...
    O << " = memuh(";
    break;
  case 11:
    // M2_mpysmi, S5_asrhub_rnd_sat_goodsyntax, S5_vasrhrnd_goodsyntax, V6_vr...
    O << ",#";
    break;
  case 12:
    // M2_vrcmpys_acc_s1, M2_vrcmpys_s1, V6_vmpyhss_alt, V6_vmpyowh_alt, M2_c...
    O << "):<<1:sat";
    return;
    break;
  case 13:
    // M2_vrcmpys_s1rp, V6_vmpyhsrs_alt, V6_vmpyhvsrs_alt, V6_vmpyowh_rnd_alt...
    O << "):<<1:rnd:sat";
    return;
    break;
  case 14:
    // S2_storerbnew_zomap, S2_storerhnew_zomap, S2_storerinew_zomap, V6_stn0...
    O << ".new";
    return;
    break;
  case 15:
    // S2_storerf_zomap, PS_storerfabs, S2_storerf_pcr, S2_storerfgp, S4_psto...
    O << ".h";
    return;
    break;
  case 16:
    // V6_MAP_equb, V6_MAP_equb_and, V6_MAP_equb_ior, V6_MAP_equb_xor, V6_vad...
    O << ".ub,";
    break;
  case 17:
    // V6_MAP_equh, V6_MAP_equh_and, V6_MAP_equh_ior, V6_MAP_equh_xor, V6_vab...
    O << ".uh,";
    break;
  case 18:
    // V6_MAP_equw, V6_MAP_equw_and, V6_MAP_equw_ior, V6_MAP_equw_xor, V6_vas...
    O << ".uw,";
    break;
  case 19:
    // V6_ldcnp0, V6_ldcnpnt0, V6_ldcp0, V6_ldcpnt0, V6_vL32b_cur_npred_ai, V...
    O << ".cur = vmem(";
    break;
  case 20:
    // V6_ldnp0, V6_ldnpnt0, V6_ldp0, V6_ldpnt0, V6_vL32b_npred_ai, V6_vL32b_...
    O << " = vmem(";
    break;
  case 21:
    // V6_ldnt0, V6_ldntnt0
    O << "):nt";
    return;
    break;
  case 22:
    // V6_ldtnp0, V6_ldtnpnt0, V6_ldtp0, V6_ldtpnt0, V6_vL32b_nt_tmp_npred_ai...
    O << ".tmp = vmem(";
    break;
  case 23:
    // V6_vabsb_sat_alt, V6_vabsh_sat_alt, V6_vabsw_sat_alt, V6_vaddbsat_alt,...
    O << "):sat";
    return;
    break;
  case 24:
    // V6_vaddbnq_alt, V6_vaddbq_alt, V6_vaddbnq, V6_vaddbq
    O << ".b += ";
    printOperand(MI, 3, O);
    O << ".b";
    return;
    break;
  case 25:
    // V6_vaddhnq_alt, V6_vaddhq_alt, V6_vaddhnq, V6_vaddhq
    O << ".h += ";
    printOperand(MI, 3, O);
    O << ".h";
    return;
    break;
  case 26:
    // V6_vaddwnq_alt, V6_vaddwq_alt, V6_vaddwnq, V6_vaddwq
    O << ".w += ";
    printOperand(MI, 3, O);
    O << ".w";
    return;
    break;
  case 27:
    // V6_vaslh_alt, V6_vaslhv_alt, V6_vaslw_alt, V6_vaslwv_alt, V6_vasrh_alt...
    O << ',';
    break;
  case 28:
    // V6_vasrwhrndsat_alt, A2_vnavghr, A2_vnavgwr, M2_cmpyrs_s0, M2_mmachs_r...
    O << "):rnd:sat";
    return;
    break;
  case 29:
    // V6_vavgbrnd_alt, V6_vavghrnd_alt, V6_vavgubrnd_alt, V6_vavguhrnd_alt, ...
    O << "):rnd";
    return;
    break;
  case 30:
    // V6_vdmpyhsuisat_acc_alt, V6_vdmpyhsuisat_alt
    O << ",#1):sat";
    return;
    break;
  case 31:
    // V6_vmpyowh_rnd_sacc_alt
    O << "):<<1:rnd:sat:shift";
    return;
    break;
  case 32:
    // V6_vmpyowh_sacc_alt
    O << "):<<1:sat:shift";
    return;
    break;
  case 33:
    // V6_vrmpybub_rtt_acc_alt, V6_vrmpybub_rtt_alt, V6_veqb, V6_veqb_and, V6...
    O << ".b,";
    break;
  case 34:
    // V6_vrmpyub_rtt_acc_alt, V6_vrmpyub_rtt_alt, V6_vavgub, V6_vmpabuu_acc,...
    O << ".ub)";
    return;
    break;
  case 35:
    // V6_vscattermhq_alt
    O << ".h) = ";
    printOperand(MI, 4, O);
    O << ".h";
    return;
    break;
  case 36:
    // V6_vscattermwhq_alt, V6_vscattermwq_alt
    O << ".w) = ";
    printOperand(MI, 4, O);
    break;
  case 37:
    // V6_vsubbnq_alt, V6_vsubbq_alt, V6_vsubbnq, V6_vsubbq
    O << ".b -= ";
    printOperand(MI, 3, O);
    O << ".b";
    return;
    break;
  case 38:
    // V6_vsubhnq_alt, V6_vsubhq_alt, V6_vsubhnq, V6_vsubhq
    O << ".h -= ";
    printOperand(MI, 3, O);
    O << ".h";
    return;
    break;
  case 39:
    // V6_vsubwnq_alt, V6_vsubwq_alt, V6_vsubwnq, V6_vsubwq
    O << ".w -= ";
    printOperand(MI, 3, O);
    O << ".w";
    return;
    break;
  case 40:
    // A2_combine_hh, A2_combine_hl, M2_mpy_acc_hh_s0, M2_mpy_acc_hh_s1, M2_m...
    O << ".h,";
    break;
  case 41:
    // A2_combine_lh, A2_combine_ll, M2_mpy_acc_lh_s0, M2_mpy_acc_lh_s1, M2_m...
    O << ".l,";
    break;
  case 42:
    // A2_paddf, A2_paddfnew, A2_paddif, A2_paddifnew, A2_paddit, A2_padditne...
    O << " = add(";
    printOperand(MI, 2, O);
    break;
  case 43:
    // A2_pandf, A2_pandfnew, A2_pandt, A2_pandtnew
    O << " = and(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 44:
    // A2_porf, A2_porfnew, A2_port, A2_portnew
    O << " = or(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 45:
    // A2_psubf, A2_psubfnew, A2_psubt, A2_psubtnew
    O << " = sub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 46:
    // A2_pxorf, A2_pxorfnew, A2_pxort, A2_pxortnew
    O << " = xor(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 47:
    // A2_vavghcr, A2_vavgwcr
    O << "):crnd";
    return;
    break;
  case 48:
    // A2_vnavghcr, A2_vnavgwcr
    O << "):crnd:sat";
    return;
    break;
  case 49:
    // A4_andn, A4_andnp, A4_orn, A4_ornp, M4_and_andn, M4_or_andn, M4_xor_an...
    O << ",~";
    break;
  case 50:
    // A4_boundscheck_hi
    O << "):raw:hi";
    return;
    break;
  case 51:
    // A4_boundscheck_lo
    O << "):raw:lo";
    return;
    break;
  case 52:
    // A4_paslhf, A4_paslhfnew, A4_paslht, A4_paslhtnew
    O << " = aslh(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 53:
    // A4_pasrhf, A4_pasrhfnew, A4_pasrht, A4_pasrhtnew
    O << " = asrh(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 54:
    // A4_psxtbf, A4_psxtbfnew, A4_psxtbt, A4_psxtbtnew
    O << " = sxtb(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 55:
    // A4_psxthf, A4_psxthfnew, A4_psxtht, A4_psxthtnew
    O << " = sxth(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 56:
    // A4_pzxtbf, A4_pzxtbfnew, A4_pzxtbt, A4_pzxtbtnew
    O << " = zxtb(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 57:
    // A4_pzxthf, A4_pzxthfnew, A4_pzxtht, A4_pzxthtnew
    O << " = zxth(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 58:
    // C2_andn, C2_orn, V6_pred_and_n, V6_pred_or_n
    O << ",!";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 59:
    // C2_ccombinewf, C2_ccombinewnewf, C2_ccombinewnewt, C2_ccombinewt
    O << " = combine(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 60:
    // C2_cmoveif, C2_cmoveit, C2_cmovenewif, C2_cmovenewit
    O << " = #";
    printOperand(MI, 2, O);
    return;
    break;
  case 61:
    // C4_and_and, C4_and_andn, C4_or_and, C4_or_andn, S4_or_andix
    O << ",and(";
    printOperand(MI, 2, O);
    break;
  case 62:
    // C4_and_or, C4_and_orn, C4_or_or, C4_or_orn
    O << ",or(";
    printOperand(MI, 2, O);
    break;
  case 63:
    // F2_conv_df2d_chop, F2_conv_df2ud_chop, F2_conv_df2uw_chop, F2_conv_df2...
    O << "):chop";
    return;
    break;
  case 64:
    // F2_dfimm_n, F2_sfimm_n
    O << "):neg";
    return;
    break;
  case 65:
    // F2_dfimm_p, F2_sfimm_p
    O << "):pos";
    return;
    break;
  case 66:
    // F2_sffma_lib, F2_sffms_lib
    O << "):lib";
    return;
    break;
  case 67:
    // J4_cmpeq_f_jumpnv_nt, J4_cmpeq_t_jumpnv_nt, J4_cmpeqi_f_jumpnv_nt, J4_...
    O << ")) jump:nt ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 68:
    // J4_cmpeq_f_jumpnv_t, J4_cmpeq_t_jumpnv_t, J4_cmpeqi_f_jumpnv_t, J4_cmp...
    O << ")) jump:t ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 69:
    // J4_jumpseti, J4_jumpsetr
    O << " ; jump ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 70:
    // L2_loadbsw2_io, L2_loadbsw4_io, L2_loadbzw2_io, L2_loadbzw4_io, L2_loa...
    O << "+#";
    printOperand(MI, 2, O);
    break;
  case 71:
    // L2_loadbsw2_pbr, L2_loadbsw2_pr, L2_loadbsw4_pbr, L2_loadbsw4_pr, L2_l...
    O << "++";
    printOperand(MI, 3, O);
    break;
  case 72:
    // L2_loadbsw2_pci, L2_loadbsw2_pi, L2_loadbsw4_pci, L2_loadbsw4_pi, L2_l...
    O << "++#";
    printOperand(MI, 3, O);
    break;
  case 73:
    // L2_loadbsw2_pcr, L2_loadbsw4_pcr, L2_loadbzw2_pcr, L2_loadbzw4_pcr, L2...
    O << "++I:circ(";
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 74:
    // L4_add_memopb_io, L4_add_memoph_io, L4_add_memopw_io
    O << ") += ";
    printOperand(MI, 2, O);
    return;
    break;
  case 75:
    // L4_and_memopb_io, L4_and_memoph_io, L4_and_memopw_io
    O << ") &= ";
    printOperand(MI, 2, O);
    return;
    break;
  case 76:
    // L4_iadd_memopb_io, L4_iadd_memoph_io, L4_iadd_memopw_io
    O << ") += #";
    printOperand(MI, 2, O);
    return;
    break;
  case 77:
    // L4_iand_memopb_io, L4_iand_memoph_io, L4_iand_memopw_io
    O << ") = clrbit(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 78:
    // L4_ior_memopb_io, L4_ior_memoph_io, L4_ior_memopw_io
    O << ") = setbit(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 79:
    // L4_isub_memopb_io, L4_isub_memoph_io, L4_isub_memopw_io
    O << ") -= #";
    printOperand(MI, 2, O);
    return;
    break;
  case 80:
    // L4_loadbsw2_ap, L4_loadbsw4_ap, L4_loadbzw2_ap, L4_loadbzw4_ap, L4_loa...
    O << "=#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 81:
    // L4_loadbsw2_ur, L4_loadbsw4_ur, L4_loadbzw2_ur, L4_loadbzw4_ur, L4_loa...
    O << "<<#";
    printOperand(MI, 2, O);
    O << "+#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 82:
    // L4_loadrb_rr, L4_loadrd_rr, L4_loadrh_rr, L4_loadri_rr, L4_loadrub_rr,...
    O << '+';
    printOperand(MI, 2, O);
    O << "<<#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 83:
    // L4_or_memopb_io, L4_or_memoph_io, L4_or_memopw_io
    O << ") |= ";
    printOperand(MI, 2, O);
    return;
    break;
  case 84:
    // L4_ploadrbf_abs, L4_ploadrbfnew_abs, L4_ploadrbt_abs, L4_ploadrbtnew_a...
    O << " = memb(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 85:
    // L4_ploadrdf_abs, L4_ploadrdfnew_abs, L4_ploadrdt_abs, L4_ploadrdtnew_a...
    O << " = memd(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 86:
    // L4_ploadrhf_abs, L4_ploadrhfnew_abs, L4_ploadrht_abs, L4_ploadrhtnew_a...
    O << " = memh(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 87:
    // L4_ploadrif_abs, L4_ploadrifnew_abs, L4_ploadrit_abs, L4_ploadritnew_a...
    O << " = memw(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 88:
    // L4_ploadrubf_abs, L4_ploadrubfnew_abs, L4_ploadrubt_abs, L4_ploadrubtn...
    O << " = memub(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 89:
    // L4_ploadruhf_abs, L4_ploadruhfnew_abs, L4_ploadruht_abs, L4_ploadruhtn...
    O << " = memuh(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 90:
    // L4_return_f, L4_return_fnew_pnt, L4_return_fnew_pt, L4_return_t, L4_re...
    O << " = dealloc_return(";
    printOperand(MI, 2, O);
    break;
  case 91:
    // L4_sub_memopb_io, L4_sub_memoph_io, L4_sub_memopw_io
    O << ") -= ";
    printOperand(MI, 2, O);
    return;
    break;
  case 92:
    // M2_cmacsc_s0, M2_cmpysc_s0, M2_cnacsc_s0
    O << "*):sat";
    return;
    break;
  case 93:
    // M2_cmacsc_s1, M2_cmpysc_s1, M2_cnacsc_s1
    O << "*):<<1:sat";
    return;
    break;
  case 94:
    // M2_cmpyrsc_s0
    O << "*):rnd:sat";
    return;
    break;
  case 95:
    // M2_cmpyrsc_s1, M4_cmpyi_whc, M4_cmpyr_whc
    O << "*):<<1:rnd:sat";
    return;
    break;
  case 96:
    // M2_vrcmaci_s0c, M2_vrcmacr_s0c, M2_vrcmpyi_s0c, M2_vrcmpyr_s0c
    O << "*)";
    return;
    break;
  case 97:
    // M2_vrcmpys_acc_s1_h, M2_vrcmpys_s1_h
    O << "):<<1:sat:raw:hi";
    return;
    break;
  case 98:
    // M2_vrcmpys_acc_s1_l, M2_vrcmpys_s1_l
    O << "):<<1:sat:raw:lo";
    return;
    break;
  case 99:
    // M2_vrcmpys_s1rp_h
    O << "):<<1:rnd:sat:raw:hi";
    return;
    break;
  case 100:
    // M2_vrcmpys_s1rp_l
    O << "):<<1:rnd:sat:raw:lo";
    return;
    break;
  case 101:
    // M4_mpyri_addi, M4_mpyrr_addi
    O << ",mpyi(";
    printOperand(MI, 2, O);
    break;
  case 102:
    // M4_vrmpyeh_acc_s1, M4_vrmpyeh_s1, M4_vrmpyoh_acc_s1, M4_vrmpyoh_s1
    O << "):<<1";
    return;
    break;
  case 103:
    // S2_pstorerbf_pi, S2_pstorerbfnew_pi, S2_pstorerbnewf_pi, S2_pstorerbne...
    printOperand(MI, 0, O);
    break;
  case 104:
    // S2_storerb_io, S2_storerb_pi, S2_storerb_pr, S2_storerbnew_io, S2_stor...
    O << ") = ";
    break;
  case 105:
    // S2_storerb_pbr, S2_storerbnew_pbr, S2_storerd_pbr, S2_storerf_pbr, S2_...
    O << ":brev) = ";
    printOperand(MI, 3, O);
    break;
  case 106:
    // S2_storerb_pci, S2_storerbnew_pci, S2_storerd_pci, S2_storerf_pci, S2_...
    O << ":circ(";
    printOperand(MI, 3, O);
    O << ")) = ";
    printOperand(MI, 4, O);
    break;
  case 107:
    // S2_tableidxb, S2_tableidxd, S2_tableidxh, S2_tableidxw
    O << "):raw";
    return;
    break;
  case 108:
    // S4_addi_asl_ri, S4_andi_asl_ri, S4_ori_asl_ri, S4_subi_asl_ri
    O << ",asl(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 109:
    // S4_addi_lsr_ri, S4_andi_lsr_ri, S4_ori_lsr_ri, S4_subi_lsr_ri
    O << ",lsr(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 110:
    // S4_storeirb_io, S4_storeirh_io, S4_storeiri_io
    O << ") = #";
    printOperand(MI, 2, O);
    return;
    break;
  case 111:
    // S4_vxaddsubhr, S4_vxsubaddhr
    O << "):rnd:>>1:sat";
    return;
    break;
  case 112:
    // SA1_and1
    O << ",#1)";
    return;
    break;
  case 113:
    // SA1_combinerz
    O << ",#0)";
    return;
    break;
  case 114:
    // SA1_zxtb
    O << ",#255)";
    return;
    break;
  case 115:
    // SS2_storebi0, SS2_storewi0
    O << ") = #0";
    return;
    break;
  case 116:
    // SS2_storebi1, SS2_storewi1
    O << ") = #1";
    return;
    break;
  case 117:
    // V6_shuffeqw, V6_vasrwh, V6_vasrwhrndsat, V6_vasrwhsat, V6_vasrwuhrndsa...
    O << ".w,";
    break;
  case 118:
    // V6_vS32b_nt_ai, V6_vS32b_nt_new_ai, V6_vS32b_nt_new_pi, V6_vS32b_nt_ne...
    O << "):nt = ";
    break;
  case 119:
    // V6_vS32b_srls_ai, V6_vS32b_srls_pi, V6_vS32b_srls_ppu
    O << "):scatter_release";
    return;
    break;
  case 120:
    // V6_vabsb, V6_vaddb, V6_vaddb_dv, V6_vavgb, V6_vdmpyhb, V6_vdmpyhb_acc,...
    O << ".b)";
    return;
    break;
  case 121:
    // V6_vabsb_sat, V6_vaddbsat, V6_vaddbsat_dv, V6_vaddububb_sat, V6_vsubbs...
    O << ".b):sat";
    return;
    break;
  case 122:
    // V6_vabsh, V6_vaslhv, V6_vavgh, V6_vmpyh, V6_vmpyh_acc, V6_vmpyhv, V6_v...
    O << ".h)";
    return;
    break;
  case 123:
    // V6_vabsh_sat, V6_vdmpyhisat, V6_vdmpyhisat_acc, V6_vdmpyhsat, V6_vdmpy...
    O << ".h):sat";
    return;
    break;
  case 124:
    // V6_vabsw, V6_vaslwv, V6_vasrwv, V6_vavgw
    O << ".w)";
    return;
    break;
  case 125:
    // V6_vabsw_sat
    O << ".w):sat";
    return;
    break;
  case 126:
    // V6_vaddcarryo
    O << " = vadd(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    O << ".w):carry";
    return;
    break;
  case 127:
    // V6_vaddubsat, V6_vaddubsat_dv, V6_vsububsat, V6_vsububsat_dv
    O << ".ub):sat";
    return;
    break;
  case 128:
    // V6_vavgbrnd
    O << ".b):rnd";
    return;
    break;
  case 129:
    // V6_vavghrnd
    O << ".h):rnd";
    return;
    break;
  case 130:
    // V6_vavgubrnd
    O << ".ub):rnd";
    return;
    break;
  case 131:
    // V6_vavguh, V6_vmpyhus, V6_vmpyhus_acc, V6_vmpyiewuh_acc
    O << ".uh)";
    return;
    break;
  case 132:
    // V6_vavguhrnd
    O << ".uh):rnd";
    return;
    break;
  case 133:
    // V6_vavguw
    O << ".uw)";
    return;
    break;
  case 134:
    // V6_vavguwrnd
    O << ".uw):rnd";
    return;
    break;
  case 135:
    // V6_vavgwrnd
    O << ".w):rnd";
    return;
    break;
  case 136:
    // V6_vccombine, V6_vnccombine
    O << " = vcombine(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 137:
    // V6_vdmpyhsuisat, V6_vdmpyhsuisat_acc
    O << ".uh,#1):sat";
    return;
    break;
  case 138:
    // V6_vdmpyhsusat, V6_vdmpyhsusat_acc
    O << ".uh):sat";
    return;
    break;
  case 139:
    // V6_vgathermhq
    O << ".h).h";
    return;
    break;
  case 140:
    // V6_vgathermhwq
    O << ".w).h";
    return;
    break;
  case 141:
    // V6_vlutvvb_oracci, V6_vlutvvbi
    O << ".b,#";
    break;
  case 142:
    // V6_vlutvwh_oracci, V6_vlutvwhi
    O << ".h,#";
    break;
  case 143:
    // V6_vmpyowh
    O << ".h):<<1:sat";
    return;
    break;
  case 144:
    // V6_vmpyowh_rnd
    O << ".h):<<1:rnd:sat";
    return;
    break;
  case 145:
    // V6_vmpyowh_rnd_sacc
    O << ".h):<<1:rnd:sat:shift";
    return;
    break;
  case 146:
    // V6_vmpyowh_sacc
    O << ".h):<<1:sat:shift";
    return;
    break;
  case 147:
    // V6_vrmpyubi, V6_vrmpyubi_acc
    O << ".ub,#";
    break;
  case 148:
    // V6_vrmpyzbb_rx_acc, V6_vrmpyzbub_rx_acc, V6_vrmpyzcb_rx_acc, V6_vrmpyz...
    printOperand(MI, 3, O);
    break;
  case 149:
    // V6_vscattermhq
    O << ".h).h = ";
    printOperand(MI, 4, O);
    return;
    break;
  case 150:
    // V6_vscattermhwq
    O << ".w).h = ";
    printOperand(MI, 4, O);
    return;
    break;
  case 151:
    // V6_vscattermwq
    O << ".w).w = ";
    printOperand(MI, 4, O);
    return;
    break;
  case 152:
    // V6_vsubcarryo
    O << " = vsub(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    O << ".w):carry";
    return;
    break;
  case 153:
    // dep_S2_packhl
    O << "):deprecated";
    return;
    break;
  }


  // Fragment 3 encoded into 6 bits for 54 unique commands.
  switch ((Bits >> 32) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A2_addsp, V6_vscattermh_add_alt, V6_vscattermh_alt, V6_vscattermw_add_...
    O << ',';
    break;
  case 1:
    // L2_loadalignb_zomap, L2_loadalignh_zomap, V6_zldp0, J2_loop0i, J2_loop...
    O << ')';
    return;
    break;
  case 2:
    // L2_ploadrbf_zomap, L2_ploadrbfnew_zomap, L2_ploadrbt_zomap, L2_ploadrb...
    printOperand(MI, 2, O);
    break;
  case 3:
    // S2_pstorerbf_zomap, S2_pstorerbnewf_zomap, S2_pstorerbnewt_zomap, S2_p...
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 4:
    // S4_storeirbf_zomap, S4_storeirbfnew_zomap, S4_storeirbt_zomap, S4_stor...
    O << ") = #";
    printOperand(MI, 2, O);
    return;
    break;
  case 5:
    // V6_MAP_equb_and, V6_MAP_equb_ior, V6_MAP_equb_xor, V6_MAP_equh_and, V6...
    printOperand(MI, 3, O);
    break;
  case 6:
    // V6_stnpnt0, V6_stnqnt0, V6_stpnt0, V6_stqnt0
    O << "):nt = ";
    printOperand(MI, 2, O);
    return;
    break;
  case 7:
    // V6_vrmpybusi_acc_alt, V6_vrmpyubi_acc_alt, V6_vrsadubi_acc_alt, F2_sff...
    printOperand(MI, 4, O);
    break;
  case 8:
    // V6_vscattermwhq_alt, S2_storerf_pbr, S2_storerf_pci
    O << ".h";
    return;
    break;
  case 9:
    // V6_vscattermwq_alt
    O << ".w";
    return;
    break;
  case 10:
    // A2_addh_h16_hh, A2_addh_h16_hl, A2_addh_h16_sat_hh, A2_addh_h16_sat_hl...
    O << ".h,";
    printOperand(MI, 2, O);
    break;
  case 11:
    // A2_addh_h16_lh, A2_addh_h16_ll, A2_addh_h16_sat_lh, A2_addh_h16_sat_ll...
    O << ".l,";
    printOperand(MI, 2, O);
    break;
  case 12:
    // A2_addi, A2_paddif, A2_paddifnew, A2_paddit, A2_padditnew, M4_mpyri_ad...
    O << ",#";
    break;
  case 13:
    // A2_tfrih, A2_tfril, HI, LO, S2_storerb_pbr, S2_storerb_pci, S2_storerd...
    return;
    break;
  case 14:
    // A5_ACS
    O << " = vacsh(";
    printOperand(MI, 3, O);
    O << ',';
    printOperand(MI, 4, O);
    O << ')';
    return;
    break;
  case 15:
    // A6_vminub_RdP
    O << " = vminub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 16:
    // C4_and_andn, C4_and_orn, C4_or_andn, C4_or_orn
    O << ",!";
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 17:
    // F2_sfinvsqrta
    O << " = sfinvsqrta(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 18:
    // F2_sfrecipa
    O << " = sfrecipa(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 19:
    // J4_cmpeq_fp0_jump_nt, J4_cmpeqi_fp0_jump_nt, J4_cmpeqn1_fp0_jump_nt, J...
    O << "); if (!p0.new) jump:nt ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 20:
    // J4_cmpeq_fp0_jump_t, J4_cmpeqi_fp0_jump_t, J4_cmpeqn1_fp0_jump_t, J4_c...
    O << "); if (!p0.new) jump:t ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 21:
    // J4_cmpeq_fp1_jump_nt, J4_cmpeqi_fp1_jump_nt, J4_cmpeqn1_fp1_jump_nt, J...
    O << "); if (!p1.new) jump:nt ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 22:
    // J4_cmpeq_fp1_jump_t, J4_cmpeqi_fp1_jump_t, J4_cmpeqn1_fp1_jump_t, J4_c...
    O << "); if (!p1.new) jump:t ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 23:
    // J4_cmpeq_tp0_jump_nt, J4_cmpeqi_tp0_jump_nt, J4_cmpeqn1_tp0_jump_nt, J...
    O << "); if (p0.new) jump:nt ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 24:
    // J4_cmpeq_tp0_jump_t, J4_cmpeqi_tp0_jump_t, J4_cmpeqn1_tp0_jump_t, J4_c...
    O << "); if (p0.new) jump:t ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 25:
    // J4_cmpeq_tp1_jump_nt, J4_cmpeqi_tp1_jump_nt, J4_cmpeqn1_tp1_jump_nt, J...
    O << "); if (p1.new) jump:nt ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 26:
    // J4_cmpeq_tp1_jump_t, J4_cmpeqi_tp1_jump_t, J4_cmpeqn1_tp1_jump_t, J4_c...
    O << "); if (p1.new) jump:t ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 27:
    // J4_cmplt_f_jumpnv_nt, J4_cmplt_t_jumpnv_nt, J4_cmpltu_f_jumpnv_nt, J4_...
    O << ".new)) jump:nt ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 28:
    // J4_cmplt_f_jumpnv_t, J4_cmplt_t_jumpnv_t, J4_cmpltu_f_jumpnv_t, J4_cmp...
    O << ".new)) jump:t ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 29:
    // L2_loadalignb_io, L2_loadalignh_io, S2_pstorerbf_io, S2_pstorerbnewf_i...
    O << "+#";
    break;
  case 30:
    // L2_loadalignb_pbr, L2_loadalignb_pr, L2_loadalignh_pbr, L2_loadalignh_...
    O << "++";
    break;
  case 31:
    // L2_loadalignb_pci, L2_loadalignb_pi, L2_loadalignh_pci, L2_loadalignh_...
    O << "++#";
    break;
  case 32:
    // L2_loadalignb_pcr, L2_loadalignh_pcr
    O << "++I:circ(";
    printOperand(MI, 4, O);
    O << "))";
    return;
    break;
  case 33:
    // L2_loadbsw2_pbr, L2_loadbsw4_pbr, L2_loadbzw2_pbr, L2_loadbzw4_pbr, L2...
    O << ":brev)";
    return;
    break;
  case 34:
    // L2_loadbsw2_pci, L2_loadbsw4_pci, L2_loadbzw2_pci, L2_loadbzw4_pci, L2...
    O << ":circ(";
    printOperand(MI, 4, O);
    O << "))";
    return;
    break;
  case 35:
    // L2_ploadrbf_pi, L2_ploadrbfnew_pi, L2_ploadrbt_pi, L2_ploadrbtnew_pi, ...
    printOperand(MI, 1, O);
    break;
  case 36:
    // L4_loadalignb_ap, L4_loadalignh_ap
    O << "=#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 37:
    // L4_loadalignb_ur, L4_loadalignh_ur
    O << "<<#";
    printOperand(MI, 3, O);
    O << "+#";
    printOperand(MI, 4, O);
    O << ')';
    return;
    break;
  case 38:
    // L4_return_f, L4_return_t, S2_allocframe
    O << "):raw";
    return;
    break;
  case 39:
    // L4_return_fnew_pnt, L4_return_tnew_pnt
    O << "):nt:raw";
    return;
    break;
  case 40:
    // L4_return_fnew_pt, L4_return_tnew_pt
    O << "):t:raw";
    return;
    break;
  case 41:
    // M4_mpyri_addr, M4_mpyrr_addr
    O << ",mpyi(";
    printOperand(MI, 2, O);
    break;
  case 42:
    // M4_mpyri_addr_u2
    O << ",mpyi(#";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 43:
    // S2_storerbnew_pbr, S2_storerbnew_pci, S2_storerhnew_pbr, S2_storerhnew...
    O << ".new";
    return;
    break;
  case 44:
    // S4_addaddi
    O << ",add(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 45:
    // S4_pstorerbf_rr, S4_pstorerbfnew_rr, S4_pstorerbnewf_rr, S4_pstorerbne...
    O << '+';
    printOperand(MI, 2, O);
    O << "<<#";
    printOperand(MI, 3, O);
    O << ") = ";
    printOperand(MI, 4, O);
    break;
  case 46:
    // S4_subaddi
    O << ",sub(#";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 47:
    // SA1_inc
    O << ",#1)";
    return;
    break;
  case 48:
    // V6_vL32b_nt_ai, V6_vL32b_nt_cur_ai, V6_vL32b_nt_cur_pi, V6_vL32b_nt_cu...
    O << "):nt";
    return;
    break;
  case 49:
    // V6_vaddcarry, V6_vaddcarrysat, V6_vaddw, V6_vaddw_dv, V6_vaddwsat, V6_...
    O << ".w,";
    break;
  case 50:
    // V6_vadduhw, V6_vsubuhw
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 51:
    // V6_vrmpyzbb_rt, V6_vrmpyzbb_rt_acc, V6_vrmpyzbb_rx, V6_vrmpyzbb_rx_acc...
    O << ".b,";
    break;
  case 52:
    // V6_vrmpyzcb_rt, V6_vrmpyzcb_rt_acc, V6_vrmpyzcb_rx, V6_vrmpyzcb_rx_acc...
    O << ".c,";
    break;
  case 53:
    // V6_vrmpyznb_rt, V6_vrmpyznb_rt_acc, V6_vrmpyznb_rx, V6_vrmpyznb_rx_acc
    O << ".n,";
    break;
  }


  // Fragment 4 encoded into 6 bits for 56 unique commands.
  switch ((Bits >> 38) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A2_addsp, V6_vscattermh_add_alt, V6_vscattermh_alt, V6_vscattermw_add_...
    printOperand(MI, 2, O);
    break;
  case 1:
    // L2_ploadrbf_zomap, L2_ploadrbfnew_zomap, L2_ploadrbt_zomap, L2_ploadrb...
    O << ')';
    return;
    break;
  case 2:
    // S2_pstorerbf_zomap, S2_pstorerbt_zomap, S2_pstorerdf_zomap, S2_pstorer...
    return;
    break;
  case 3:
    // S2_pstorerbnewf_zomap, S2_pstorerbnewt_zomap, S2_pstorerhnewf_zomap, S...
    O << ".new";
    return;
    break;
  case 4:
    // S2_pstorerff_zomap, S2_pstorerft_zomap, S4_pstorerffnew_zomap, S4_psto...
    O << ".h";
    return;
    break;
  case 5:
    // S5_asrhub_rnd_sat_goodsyntax
    O << "):rnd:sat";
    return;
    break;
  case 6:
    // S5_vasrhrnd_goodsyntax, M2_dpmpyss_rnd_s0, S2_asr_i_p_rnd, S2_asr_i_r_...
    O << "):rnd";
    return;
    break;
  case 7:
    // V6_MAP_equb, V6_MAP_equb_and, V6_MAP_equb_ior, V6_MAP_equb_xor, V6_vrm...
    O << ".ub)";
    return;
    break;
  case 8:
    // V6_MAP_equh, V6_MAP_equh_and, V6_MAP_equh_ior, V6_MAP_equh_xor, V6_vab...
    O << ".uh)";
    return;
    break;
  case 9:
    // V6_MAP_equw, V6_MAP_equw_and, V6_MAP_equw_ior, V6_MAP_equw_xor, V6_vgt...
    O << ".uw)";
    return;
    break;
  case 10:
    // V6_ldcnpnt0, V6_ldcpnt0, V6_ldnpnt0, V6_ldpnt0, V6_ldtnpnt0, V6_ldtpnt...
    O << "):nt";
    return;
    break;
  case 11:
    // V6_vasrhubrndsat_alt, V6_vasrhubsat_alt, C2_mux, C2_muxri, M4_mpyrr_ad...
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 12:
    // V6_vtran2x2_map, L2_loadalignb_pbr, L2_loadalignb_pci, L2_loadalignb_p...
    printOperand(MI, 4, O);
    break;
  case 13:
    // A2_addh_h16_hh, A2_addh_h16_lh, A2_subh_h16_hh, A2_subh_h16_lh
    O << ".h):<<16";
    return;
    break;
  case 14:
    // A2_addh_h16_hl, A2_addh_h16_ll, A2_subh_h16_hl, A2_subh_h16_ll
    O << ".l):<<16";
    return;
    break;
  case 15:
    // A2_addh_h16_sat_hh, A2_addh_h16_sat_lh, A2_subh_h16_sat_hh, A2_subh_h1...
    O << ".h):sat:<<16";
    return;
    break;
  case 16:
    // A2_addh_h16_sat_hl, A2_addh_h16_sat_ll, A2_subh_h16_sat_hl, A2_subh_h1...
    O << ".l):sat:<<16";
    return;
    break;
  case 17:
    // A2_addh_l16_hl, A2_combine_hh, A2_combine_lh, A2_subh_l16_hl, M2_mpy_a...
    O << ".h)";
    return;
    break;
  case 18:
    // A2_addh_l16_ll, A2_combine_hl, A2_combine_ll, A2_subh_l16_ll, M2_mpy_a...
    O << ".l)";
    return;
    break;
  case 19:
    // A2_addh_l16_sat_hl, A2_subh_l16_sat_hl, M2_mpy_acc_sat_hh_s0, M2_mpy_a...
    O << ".h):sat";
    return;
    break;
  case 20:
    // A2_addh_l16_sat_ll, A2_subh_l16_sat_ll, M2_mpy_acc_sat_hl_s0, M2_mpy_a...
    O << ".l):sat";
    return;
    break;
  case 21:
    // A2_paddf, A2_paddfnew, A2_paddif, A2_paddifnew, A2_paddit, A2_padditne...
    printOperand(MI, 3, O);
    break;
  case 22:
    // A4_round_ri_sat, A4_round_rr_sat, S2_asl_i_r_sat, S2_asl_r_r_sat, S2_a...
    O << "):sat";
    return;
    break;
  case 23:
    // C2_muxii, C2_muxir, M4_mpyri_addr, S2_extractu, S2_extractup, S2_inser...
    O << ",#";
    break;
  case 24:
    // F2_sffma_sc
    O << "):scale";
    return;
    break;
  case 25:
    // L2_ploadrbf_io, L2_ploadrbfnew_io, L2_ploadrbt_io, L2_ploadrbtnew_io, ...
    O << "+#";
    printOperand(MI, 3, O);
    break;
  case 26:
    // L2_ploadrbf_pi, L2_ploadrbfnew_pi, L2_ploadrbt_pi, L2_ploadrbtnew_pi, ...
    O << "++#";
    printOperand(MI, 4, O);
    break;
  case 27:
    // L4_ploadrbf_rr, L4_ploadrbfnew_rr, L4_ploadrbt_rr, L4_ploadrbtnew_rr, ...
    O << '+';
    printOperand(MI, 3, O);
    O << "<<#";
    printOperand(MI, 4, O);
    O << ')';
    return;
    break;
  case 28:
    // M2_hmmpyh_rs1, M2_mpy_sat_rnd_hh_s1, M2_mpy_sat_rnd_lh_s1, V6_vmpyhsrs...
    O << ".h):<<1:rnd:sat";
    return;
    break;
  case 29:
    // M2_hmmpyh_s1, M2_mpy_acc_sat_hh_s1, M2_mpy_acc_sat_lh_s1, M2_mpy_nac_s...
    O << ".h):<<1:sat";
    return;
    break;
  case 30:
    // M2_hmmpyl_rs1, M2_mpy_sat_rnd_hl_s1, M2_mpy_sat_rnd_ll_s1
    O << ".l):<<1:rnd:sat";
    return;
    break;
  case 31:
    // M2_hmmpyl_s1, M2_mpy_acc_sat_hl_s1, M2_mpy_acc_sat_ll_s1, M2_mpy_nac_s...
    O << ".l):<<1:sat";
    return;
    break;
  case 32:
    // M2_mpy_acc_hh_s1, M2_mpy_acc_lh_s1, M2_mpy_hh_s1, M2_mpy_lh_s1, M2_mpy...
    O << ".h):<<1";
    return;
    break;
  case 33:
    // M2_mpy_acc_hl_s1, M2_mpy_acc_ll_s1, M2_mpy_hl_s1, M2_mpy_ll_s1, M2_mpy...
    O << ".l):<<1";
    return;
    break;
  case 34:
    // M2_mpy_rnd_hh_s0, M2_mpy_rnd_lh_s0, M2_mpyd_rnd_hh_s0, M2_mpyd_rnd_lh_...
    O << ".h):rnd";
    return;
    break;
  case 35:
    // M2_mpy_rnd_hh_s1, M2_mpy_rnd_lh_s1, M2_mpyd_rnd_hh_s1, M2_mpyd_rnd_lh_...
    O << ".h):<<1:rnd";
    return;
    break;
  case 36:
    // M2_mpy_rnd_hl_s0, M2_mpy_rnd_ll_s0, M2_mpyd_rnd_hl_s0, M2_mpyd_rnd_ll_...
    O << ".l):rnd";
    return;
    break;
  case 37:
    // M2_mpy_rnd_hl_s1, M2_mpy_rnd_ll_s1, M2_mpyd_rnd_hl_s1, M2_mpyd_rnd_ll_...
    O << ".l):<<1:rnd";
    return;
    break;
  case 38:
    // M2_mpy_sat_rnd_hh_s0, M2_mpy_sat_rnd_lh_s0
    O << ".h):rnd:sat";
    return;
    break;
  case 39:
    // M2_mpy_sat_rnd_hl_s0, M2_mpy_sat_rnd_ll_s0
    O << ".l):rnd:sat";
    return;
    break;
  case 40:
    // M2_mpy_up_s1
    O << "):<<1";
    return;
    break;
  case 41:
    // M2_mpy_up_s1_sat, M4_mac_up_s1_sat, M4_nac_up_s1_sat
    O << "):<<1:sat";
    return;
    break;
  case 42:
    // S5_asrhub_rnd_sat, S5_vasrhrnd
    O << "):raw";
    return;
    break;
  case 43:
    // V6_shuffeqw, V6_veqw, V6_veqw_and, V6_veqw_or, V6_veqw_xor, V6_vgtw, V...
    O << ".w)";
    return;
    break;
  case 44:
    // V6_vL32b_cur_npred_ppu, V6_vL32b_cur_pred_ppu, V6_vL32b_npred_ppu, V6_...
    O << "++";
    printOperand(MI, 4, O);
    break;
  case 45:
    // V6_vasrhubrndsat, V6_vasrhubsat, V6_vmpahhsat
    O << ".h,";
    printOperand(MI, 3, O);
    break;
  case 46:
    // V6_vasruhubrndsat, V6_vasruhubsat, V6_vmpauhuhsat
    O << ".uh,";
    printOperand(MI, 3, O);
    break;
  case 47:
    // V6_vasruwuhrndsat, V6_vasruwuhsat
    O << ".uw,";
    printOperand(MI, 3, O);
    break;
  case 48:
    // V6_vasrwh, V6_vasrwhrndsat, V6_vasrwhsat, V6_vasrwuhrndsat, V6_vasrwuh...
    O << ".w,";
    printOperand(MI, 3, O);
    break;
  case 49:
    // V6_veqb, V6_veqb_and, V6_veqb_or, V6_veqb_xor, V6_vgtb, V6_vgtb_and, V...
    O << ".b)";
    return;
    break;
  case 50:
    // V6_vlutvvb_nm, V6_vlutvwh_nm
    O << "):nomatch";
    return;
    break;
  case 51:
    // V6_vrmpybusi, V6_vrmpybusi_acc
    O << ".b,#";
    break;
  case 52:
    // V6_vrmpyzbb_rx, V6_vrmpyzbb_rx_acc, V6_vrmpyzbub_rx, V6_vrmpyzbub_rx_a...
    printOperand(MI, 1, O);
    break;
  case 53:
    // V6_vrounduhub
    O << ".uh):sat";
    return;
    break;
  case 54:
    // V6_vrounduwuh
    O << ".uw):sat";
    return;
    break;
  case 55:
    // V6_vroundwuh
    O << ".w):sat";
    return;
    break;
  }


  // Fragment 5 encoded into 6 bits for 38 unique commands.
  switch ((Bits >> 44) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A2_addsp, V6_vtran2x2_map, A2_add, A2_addi, A2_addp, A2_paddf, A2_padd...
    O << ')';
    return;
    break;
  case 1:
    // V6_vasrhubrndsat_alt, V6_vasrhubrndsat, V6_vasruhubrndsat, V6_vasruwuh...
    O << "):rnd:sat";
    return;
    break;
  case 2:
    // V6_vasrhubsat_alt, A2_addpsat, A2_addsat, A2_subsat, V6_vasrhubsat, V6...
    O << "):sat";
    return;
    break;
  case 3:
    // V6_vscattermh_add_alt
    O << ".h) += ";
    printOperand(MI, 3, O);
    O << ".h";
    return;
    break;
  case 4:
    // V6_vscattermh_alt
    O << ".h) = ";
    printOperand(MI, 3, O);
    O << ".h";
    return;
    break;
  case 5:
    // V6_vscattermw_add_alt, V6_vscattermwh_add_alt
    O << ".w) += ";
    printOperand(MI, 3, O);
    break;
  case 6:
    // V6_vscattermw_alt, V6_vscattermwh_alt
    O << ".w) = ";
    printOperand(MI, 3, O);
    break;
  case 7:
    // A2_addsph
    O << "):raw:hi";
    return;
    break;
  case 8:
    // A2_addspl
    O << "):raw:lo";
    return;
    break;
  case 9:
    // A4_addp_c, A4_subp_c
    O << ',';
    printOperand(MI, 1, O);
    O << "):carry";
    return;
    break;
  case 10:
    // C2_muxii, C2_muxir, M4_mpyri_addr, S2_extractu, S2_extractup, S4_extra...
    printOperand(MI, 3, O);
    break;
  case 11:
    // C4_and_and, C4_and_or, C4_or_and, C4_or_or, M4_mpyri_addi, M4_mpyrr_ad...
    O << "))";
    return;
    break;
  case 12:
    // L2_loadalignb_pbr, L2_loadalignh_pbr
    O << ":brev)";
    return;
    break;
  case 13:
    // L2_loadalignb_pci, L2_loadalignh_pci
    O << ":circ(";
    printOperand(MI, 5, O);
    O << "))";
    return;
    break;
  case 14:
    // S2_insert, S2_insertp, V6_vrmpybusi_acc
    printOperand(MI, 4, O);
    O << ')';
    return;
    break;
  case 15:
    // S2_pstorerbf_io, S2_pstorerbf_pi, S2_pstorerbfnew_pi, S2_pstorerbnewf_...
    O << ") = ";
    break;
  case 16:
    // S4_storeirbf_io, S4_storeirbfnew_io, S4_storeirbt_io, S4_storeirbtnew_...
    O << ") = #";
    printOperand(MI, 3, O);
    return;
    break;
  case 17:
    // V6_vL32b_nt_cur_npred_ai, V6_vL32b_nt_cur_npred_pi, V6_vL32b_nt_cur_np...
    O << "):nt";
    return;
    break;
  case 18:
    // V6_vS32b_nt_new_npred_ai, V6_vS32b_nt_new_npred_pi, V6_vS32b_nt_new_np...
    O << "):nt = ";
    break;
  case 19:
    // V6_vaddcarry, V6_vaddcarrysat, V6_vsubcarry
    O << ".w,";
    break;
  case 20:
    // V6_vaddw, V6_vaddw_dv, V6_vsubw, V6_vsubw_dv
    O << ".w)";
    return;
    break;
  case 21:
    // V6_vaddwsat, V6_vaddwsat_dv, V6_vsubwsat, V6_vsubwsat_dv
    O << ".w):sat";
    return;
    break;
  case 22:
    // V6_vgathermh
    O << ".h).h";
    return;
    break;
  case 23:
    // V6_vgathermhw
    O << ".w).h";
    return;
    break;
  case 24:
    // V6_vgathermw
    O << ".w).w";
    return;
    break;
  case 25:
    // V6_vmpahhsat
    O << ".h):sat";
    return;
    break;
  case 26:
    // V6_vmpauhuhsat
    O << ".uh):sat";
    return;
    break;
  case 27:
    // V6_vrmpyzbb_rt, V6_vrmpyzbb_rt_acc, V6_vrmpyzcb_rt, V6_vrmpyzcb_rt_acc...
    O << ".b)";
    return;
    break;
  case 28:
    // V6_vrmpyzbb_rx, V6_vrmpyzbb_rx_acc, V6_vrmpyzcb_rx, V6_vrmpyzcb_rx_acc...
    O << ".b++)";
    return;
    break;
  case 29:
    // V6_vrmpyzbub_rt, V6_vrmpyzbub_rt_acc
    O << ".ub)";
    return;
    break;
  case 30:
    // V6_vrmpyzbub_rx, V6_vrmpyzbub_rx_acc
    O << ".ub++)";
    return;
    break;
  case 31:
    // V6_vscattermh
    O << ".h).h = ";
    printOperand(MI, 3, O);
    return;
    break;
  case 32:
    // V6_vscattermh_add
    O << ".h).h += ";
    printOperand(MI, 3, O);
    return;
    break;
  case 33:
    // V6_vscattermhw
    O << ".w).h = ";
    printOperand(MI, 3, O);
    return;
    break;
  case 34:
    // V6_vscattermhw_add
    O << ".w).h += ";
    printOperand(MI, 3, O);
    return;
    break;
  case 35:
    // V6_vscattermw
    O << ".w).w = ";
    printOperand(MI, 3, O);
    return;
    break;
  case 36:
    // V6_vscattermw_add
    O << ".w).w += ";
    printOperand(MI, 3, O);
    return;
    break;
  case 37:
    // dep_A2_addsat, dep_A2_subsat
    O << "):sat:deprecated";
    return;
    break;
  }


  // Fragment 6 encoded into 3 bits for 7 unique commands.
  switch ((Bits >> 50) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // V6_vscattermw_add_alt, V6_vscattermw_alt
    O << ".w";
    return;
    break;
  case 1:
    // V6_vscattermwh_add_alt, V6_vscattermwh_alt
    O << ".h";
    return;
    break;
  case 2:
    // C2_muxii, C2_muxir, S2_extractu, S2_extractup, S4_extract, S4_extractp...
    O << ')';
    return;
    break;
  case 3:
    // M4_mpyri_addr
    O << "))";
    return;
    break;
  case 4:
    // S2_pstorerbf_io, S2_pstorerbnewf_io, S2_pstorerbnewt_io, S2_pstorerbt_...
    printOperand(MI, 3, O);
    break;
  case 5:
    // S2_pstorerbf_pi, S2_pstorerbfnew_pi, S2_pstorerbnewf_pi, S2_pstorerbne...
    printOperand(MI, 4, O);
    break;
  case 6:
    // V6_vaddcarry, V6_vsubcarry
    printOperand(MI, 1, O);
    O << "):carry";
    return;
    break;
  }


  // Fragment 7 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 53) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // S2_pstorerbf_io, S2_pstorerbf_pi, S2_pstorerbfnew_pi, S2_pstorerbt_io,...
    return;
    break;
  case 1:
    // S2_pstorerbnewf_io, S2_pstorerbnewf_pi, S2_pstorerbnewfnew_pi, S2_psto...
    O << ".new";
    return;
    break;
  case 2:
    // S2_pstorerff_io, S2_pstorerff_pi, S2_pstorerffnew_pi, S2_pstorerft_io,...
    O << ".h";
    return;
    break;
  case 3:
    // V6_vaddcarrysat
    O << "):carry:sat";
    return;
    break;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *HexagonInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 197 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ 'c', '1', '1', ':', '1', '0', 0,
  /* 7 */ 'g', '1', '1', ':', '1', '0', 0,
  /* 14 */ 'r', '1', '1', ':', '1', '0', 0,
  /* 21 */ 'v', '1', '1', ':', '1', '0', 0,
  /* 28 */ 'g', '1', '0', 0,
  /* 32 */ 'r', '1', '0', 0,
  /* 36 */ 'v', '1', '0', 0,
  /* 40 */ 'g', '2', '1', ':', '2', '0', 0,
  /* 47 */ 'r', '2', '1', ':', '2', '0', 0,
  /* 54 */ 'v', '2', '1', ':', '2', '0', 0,
  /* 61 */ 'v', '2', '3', ':', '2', '0', 0,
  /* 68 */ 'g', '2', '0', 0,
  /* 72 */ 'r', '2', '0', 0,
  /* 76 */ 'v', '2', '0', 0,
  /* 80 */ 'c', '3', '1', ':', '3', '0', 0,
  /* 87 */ 'g', '3', '1', ':', '3', '0', 0,
  /* 94 */ 'r', '3', '1', ':', '3', '0', 0,
  /* 101 */ 'v', '3', '1', ':', '3', '0', 0,
  /* 108 */ 'g', '3', '0', 0,
  /* 112 */ 'r', '3', '0', 0,
  /* 116 */ 'v', '3', '0', 0,
  /* 120 */ 'c', '1', ':', '0', 0,
  /* 125 */ 'g', '1', ':', '0', 0,
  /* 130 */ 'r', '1', ':', '0', 0,
  /* 135 */ 'v', '1', ':', '0', 0,
  /* 140 */ 'p', '3', ':', '0', 0,
  /* 145 */ 'v', '3', ':', '0', 0,
  /* 150 */ 's', 'a', '0', 0,
  /* 154 */ 'l', 'c', '0', 0,
  /* 158 */ 'm', '0', 0,
  /* 161 */ 'p', '0', 0,
  /* 164 */ 'q', '0', 0,
  /* 167 */ 'r', '0', 0,
  /* 170 */ 'c', 's', '0', 0,
  /* 174 */ 'g', 'p', 'm', 'u', 'c', 'n', 't', '0', 0,
  /* 183 */ 'v', '0', 0,
  /* 186 */ 'g', '1', '1', 0,
  /* 190 */ 'r', '1', '1', 0,
  /* 194 */ 'v', '1', '1', 0,
  /* 198 */ 'g', '2', '1', 0,
  /* 202 */ 'r', '2', '1', 0,
  /* 206 */ 'v', '2', '1', 0,
  /* 210 */ 'g', '3', '1', 0,
  /* 214 */ 'r', '3', '1', 0,
  /* 218 */ 'v', '3', '1', 0,
  /* 222 */ 's', 'a', '1', 0,
  /* 226 */ 'l', 'c', '1', 0,
  /* 230 */ 'm', '1', 0,
  /* 233 */ 'p', '1', 0,
  /* 236 */ 'q', '1', 0,
  /* 239 */ 'r', '1', 0,
  /* 242 */ 'c', 's', '1', 0,
  /* 246 */ 'g', 'p', 'm', 'u', 'c', 'n', 't', '1', 0,
  /* 255 */ 'v', '1', 0,
  /* 258 */ 'c', '1', '3', ':', '1', '2', 0,
  /* 265 */ 'g', '1', '3', ':', '1', '2', 0,
  /* 272 */ 'r', '1', '3', ':', '1', '2', 0,
  /* 279 */ 'v', '1', '3', ':', '1', '2', 0,
  /* 286 */ 'v', '1', '5', ':', '1', '2', 0,
  /* 293 */ 'g', '1', '2', 0,
  /* 297 */ 'r', '1', '2', 0,
  /* 301 */ 'v', '1', '2', 0,
  /* 305 */ 'g', '2', '3', ':', '2', '2', 0,
  /* 312 */ 'r', '2', '3', ':', '2', '2', 0,
  /* 319 */ 'v', '2', '3', ':', '2', '2', 0,
  /* 326 */ 'g', '2', '2', 0,
  /* 330 */ 'r', '2', '2', 0,
  /* 334 */ 'v', '2', '2', 0,
  /* 338 */ 'c', '3', ':', '2', 0,
  /* 343 */ 'g', '3', ':', '2', 0,
  /* 348 */ 'r', '3', ':', '2', 0,
  /* 353 */ 'v', '3', ':', '2', 0,
  /* 358 */ 'p', '2', 0,
  /* 361 */ 'q', '2', 0,
  /* 364 */ 'r', '2', 0,
  /* 367 */ 'g', 'p', 'm', 'u', 'c', 'n', 't', '2', 0,
  /* 376 */ 'v', '2', 0,
  /* 379 */ 'g', '1', '3', 0,
  /* 383 */ 'r', '1', '3', 0,
  /* 387 */ 'v', '1', '3', 0,
  /* 391 */ 'g', '2', '3', 0,
  /* 395 */ 'r', '2', '3', 0,
  /* 399 */ 'v', '2', '3', 0,
  /* 403 */ 'p', '3', 0,
  /* 406 */ 'q', '3', 0,
  /* 409 */ 'r', '3', 0,
  /* 412 */ 'g', 'p', 'm', 'u', 'c', 'n', 't', '3', 0,
  /* 421 */ 'v', '3', 0,
  /* 424 */ 'c', '1', '5', ':', '1', '4', 0,
  /* 431 */ 'g', '1', '5', ':', '1', '4', 0,
  /* 438 */ 'r', '1', '5', ':', '1', '4', 0,
  /* 445 */ 'v', '1', '5', ':', '1', '4', 0,
  /* 452 */ 'g', '1', '4', 0,
  /* 456 */ 'r', '1', '4', 0,
  /* 460 */ 'v', '1', '4', 0,
  /* 464 */ 'g', '2', '5', ':', '2', '4', 0,
  /* 471 */ 'r', '2', '5', ':', '2', '4', 0,
  /* 478 */ 'v', '2', '5', ':', '2', '4', 0,
  /* 485 */ 'v', '2', '7', ':', '2', '4', 0,
  /* 492 */ 'r', '2', '4', 0,
  /* 496 */ 'v', '2', '4', 0,
  /* 500 */ 'c', '5', ':', '4', 0,
  /* 505 */ 'g', '5', ':', '4', 0,
  /* 510 */ 'r', '5', ':', '4', 0,
  /* 515 */ 'v', '5', ':', '4', 0,
  /* 520 */ 'v', '7', ':', '4', 0,
  /* 525 */ 'g', '4', 0,
  /* 528 */ 'r', '4', 0,
  /* 531 */ 'g', 'p', 'm', 'u', 'c', 'n', 't', '4', 0,
  /* 540 */ 'v', '4', 0,
  /* 543 */ 'g', '1', '5', 0,
  /* 547 */ 'r', '1', '5', 0,
  /* 551 */ 'v', '1', '5', 0,
  /* 555 */ 'r', '2', '5', 0,
  /* 559 */ 'v', '2', '5', 0,
  /* 563 */ 'c', '5', 0,
  /* 566 */ 'g', '5', 0,
  /* 569 */ 'r', '5', 0,
  /* 572 */ 'g', 'p', 'm', 'u', 'c', 'n', 't', '5', 0,
  /* 581 */ 'v', '5', 0,
  /* 584 */ 'c', '1', '7', ':', '1', '6', 0,
  /* 591 */ 'g', '1', '7', ':', '1', '6', 0,
  /* 598 */ 'r', '1', '7', ':', '1', '6', 0,
  /* 605 */ 'v', '1', '7', ':', '1', '6', 0,
  /* 612 */ 'v', '1', '9', ':', '1', '6', 0,
  /* 619 */ 'r', '1', '6', 0,
  /* 623 */ 'v', '1', '6', 0,
  /* 627 */ 'g', '2', '7', ':', '2', '6', 0,
  /* 634 */ 'r', '2', '7', ':', '2', '6', 0,
  /* 641 */ 'v', '2', '7', ':', '2', '6', 0,
  /* 648 */ 'r', '2', '6', 0,
  /* 652 */ 'v', '2', '6', 0,
  /* 656 */ 'c', '7', ':', '6', 0,
  /* 661 */ 'g', '7', ':', '6', 0,
  /* 666 */ 'r', '7', ':', '6', 0,
  /* 671 */ 'v', '7', ':', '6', 0,
  /* 676 */ 'g', '6', 0,
  /* 679 */ 'r', '6', 0,
  /* 682 */ 'g', 'p', 'm', 'u', 'c', 'n', 't', '6', 0,
  /* 691 */ 'v', '6', 0,
  /* 694 */ 'r', '1', '7', 0,
  /* 698 */ 'v', '1', '7', 0,
  /* 702 */ 'r', '2', '7', 0,
  /* 706 */ 'v', '2', '7', 0,
  /* 710 */ 'g', '7', 0,
  /* 713 */ 'r', '7', 0,
  /* 716 */ 'g', 'p', 'm', 'u', 'c', 'n', 't', '7', 0,
  /* 725 */ 'v', '7', 0,
  /* 728 */ 'c', '1', '9', ':', '1', '8', 0,
  /* 735 */ 'g', '1', '9', ':', '1', '8', 0,
  /* 742 */ 'r', '1', '9', ':', '1', '8', 0,
  /* 749 */ 'v', '1', '9', ':', '1', '8', 0,
  /* 756 */ 'r', '1', '8', 0,
  /* 760 */ 'v', '1', '8', 0,
  /* 764 */ 'v', '3', '1', ':', '2', '8', 0,
  /* 771 */ 'g', '2', '9', ':', '2', '8', 0,
  /* 778 */ 'r', '2', '9', ':', '2', '8', 0,
  /* 785 */ 'v', '2', '9', ':', '2', '8', 0,
  /* 792 */ 'r', '2', '8', 0,
  /* 796 */ 'v', '2', '8', 0,
  /* 800 */ 'v', '1', '1', ':', '8', 0,
  /* 806 */ 'c', '9', ':', '8', 0,
  /* 811 */ 'g', '9', ':', '8', 0,
  /* 816 */ 'r', '9', ':', '8', 0,
  /* 821 */ 'v', '9', ':', '8', 0,
  /* 826 */ 'c', '8', 0,
  /* 829 */ 'g', '8', 0,
  /* 832 */ 'r', '8', 0,
  /* 835 */ 'v', '8', 0,
  /* 838 */ 'r', '1', '9', 0,
  /* 842 */ 'v', '1', '9', 0,
  /* 846 */ 'r', '2', '9', 0,
  /* 850 */ 'v', '2', '9', 0,
  /* 854 */ 'g', '9', 0,
  /* 857 */ 'r', '9', 0,
  /* 860 */ 'v', '9', 0,
  /* 863 */ 'g', 'b', 'a', 'd', 'v', 'a', 0,
  /* 870 */ 'p', 'c', 0,
  /* 873 */ 'u', 's', 'r', '.', 'o', 'v', 'f', 0,
  /* 881 */ 'g', 'p', 'c', 'y', 'c', 'l', 'e', 'h', 'i', 0,
  /* 891 */ 'u', 'p', 'c', 'y', 'c', 'l', 'e', 'h', 'i', 0,
  /* 901 */ 'u', 't', 'i', 'm', 'e', 'r', 'h', 'i', 0,
  /* 910 */ 'p', 'k', 't', 'c', 'o', 'u', 'n', 't', 'h', 'i', 0,
  /* 921 */ 'g', 'p', 'c', 'y', 'c', 'l', 'e', 'l', 'o', 0,
  /* 931 */ 'u', 'p', 'c', 'y', 'c', 'l', 'e', 'l', 'o', 0,
  /* 941 */ 'u', 't', 'i', 'm', 'e', 'r', 'l', 'o', 0,
  /* 950 */ 'p', 'k', 't', 'c', 'o', 'u', 'n', 't', 'l', 'o', 0,
  /* 961 */ 'u', 'g', 'p', 0,
  /* 965 */ 'v', 't', 'm', 'p', 0,
  /* 970 */ 'g', 'o', 's', 'p', 0,
  /* 975 */ 'g', 'e', 'l', 'r', 0,
  /* 980 */ 'g', 's', 'r', 0,
  /* 984 */ 'u', 's', 'r', 0,
  /* 988 */ 'f', 'r', 'a', 'm', 'e', 'l', 'i', 'm', 'i', 't', 0,
  /* 999 */ 'f', 'r', 'a', 'm', 'e', 'k', 'e', 'y', 0,
  };

  static const uint16_t RegAsmOffset[] = {
    258, 999, 988, 975, 970, 962, 881, 921, 980, 870, 728, 910, 950, 961, 
    424, 891, 931, 984, 873, 80, 901, 941, 965, 563, 826, 170, 242, 130, 
    348, 510, 666, 816, 14, 272, 438, 598, 742, 47, 312, 471, 634, 778, 
    94, 863, 525, 566, 676, 710, 829, 854, 28, 186, 293, 379, 452, 543, 
    68, 198, 326, 391, 108, 210, 174, 246, 367, 412, 531, 572, 682, 716, 
    154, 226, 158, 230, 161, 233, 358, 403, 164, 236, 361, 406, 167, 239, 
    364, 409, 528, 569, 679, 713, 832, 857, 32, 190, 297, 383, 456, 547, 
    619, 694, 756, 838, 72, 202, 330, 395, 492, 555, 648, 702, 792, 846, 
    112, 214, 150, 222, 183, 255, 376, 421, 540, 581, 691, 725, 835, 860, 
    36, 194, 301, 387, 460, 551, 623, 698, 760, 842, 76, 206, 334, 399, 
    496, 559, 652, 706, 796, 850, 116, 218, 145, 520, 800, 286, 612, 61, 
    485, 764, 135, 353, 515, 671, 821, 21, 279, 445, 605, 749, 54, 319, 
    478, 641, 785, 101, 120, 338, 500, 656, 806, 0, 584, 125, 343, 505, 
    661, 811, 7, 265, 431, 591, 735, 40, 305, 464, 627, 771, 87, 140, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool HexagonInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
  static const PatternsForOpcode OpToPatterns[] = {
    {Hexagon::A2_andir, 0, 1 },
    {Hexagon::A2_paddif, 1, 1 },
    {Hexagon::A2_paddifnew, 2, 1 },
    {Hexagon::A2_paddit, 3, 1 },
    {Hexagon::A2_padditnew, 4, 1 },
    {Hexagon::A2_subri, 5, 2 },
    {Hexagon::A2_vaddub, 7, 1 },
    {Hexagon::A2_vsubub, 8, 1 },
    {Hexagon::C2_cmpgt, 9, 1 },
    {Hexagon::C2_cmpgtu, 10, 1 },
    {Hexagon::C2_or, 11, 1 },
    {Hexagon::J2_jumpf, 12, 1 },
    {Hexagon::J2_jumprf, 13, 1 },
    {Hexagon::J2_jumprt, 14, 1 },
    {Hexagon::J2_jumpt, 15, 1 },
    {Hexagon::J2_trap1, 16, 1 },
    {Hexagon::L2_deallocframe, 17, 1 },
    {Hexagon::L2_loadalignb_io, 18, 1 },
    {Hexagon::L2_loadalignh_io, 19, 1 },
    {Hexagon::L2_loadbsw2_io, 20, 1 },
    {Hexagon::L2_loadbsw4_io, 21, 1 },
    {Hexagon::L2_loadbzw2_io, 22, 1 },
    {Hexagon::L2_loadbzw4_io, 23, 1 },
    {Hexagon::L2_loadrb_io, 24, 1 },
    {Hexagon::L2_loadrd_io, 25, 1 },
    {Hexagon::L2_loadrh_io, 26, 1 },
    {Hexagon::L2_loadri_io, 27, 1 },
    {Hexagon::L2_loadrub_io, 28, 1 },
    {Hexagon::L2_loadruh_io, 29, 1 },
    {Hexagon::L2_ploadrbf_io, 30, 1 },
    {Hexagon::L2_ploadrbfnew_io, 31, 1 },
    {Hexagon::L2_ploadrbt_io, 32, 1 },
    {Hexagon::L2_ploadrbtnew_io, 33, 1 },
    {Hexagon::L2_ploadrdf_io, 34, 1 },
    {Hexagon::L2_ploadrdfnew_io, 35, 1 },
    {Hexagon::L2_ploadrdt_io, 36, 1 },
    {Hexagon::L2_ploadrdtnew_io, 37, 1 },
    {Hexagon::L2_ploadrhf_io, 38, 1 },
    {Hexagon::L2_ploadrhfnew_io, 39, 1 },
    {Hexagon::L2_ploadrht_io, 40, 1 },
    {Hexagon::L2_ploadrhtnew_io, 41, 1 },
    {Hexagon::L2_ploadrif_io, 42, 1 },
    {Hexagon::L2_ploadrifnew_io, 43, 1 },
    {Hexagon::L2_ploadrit_io, 44, 1 },
    {Hexagon::L2_ploadritnew_io, 45, 1 },
    {Hexagon::L2_ploadrubf_io, 46, 1 },
    {Hexagon::L2_ploadrubfnew_io, 47, 1 },
    {Hexagon::L2_ploadrubt_io, 48, 1 },
    {Hexagon::L2_ploadrubtnew_io, 49, 1 },
    {Hexagon::L2_ploadruhf_io, 50, 1 },
    {Hexagon::L2_ploadruhfnew_io, 51, 1 },
    {Hexagon::L2_ploadruht_io, 52, 1 },
    {Hexagon::L2_ploadruhtnew_io, 53, 1 },
    {Hexagon::L4_add_memopb_io, 54, 1 },
    {Hexagon::L4_add_memoph_io, 55, 1 },
    {Hexagon::L4_add_memopw_io, 56, 1 },
    {Hexagon::L4_and_memopb_io, 57, 1 },
    {Hexagon::L4_and_memoph_io, 58, 1 },
    {Hexagon::L4_and_memopw_io, 59, 1 },
    {Hexagon::L4_iadd_memopb_io, 60, 1 },
    {Hexagon::L4_iadd_memoph_io, 61, 1 },
    {Hexagon::L4_iadd_memopw_io, 62, 1 },
    {Hexagon::L4_iand_memopb_io, 63, 1 },
    {Hexagon::L4_iand_memoph_io, 64, 1 },
    {Hexagon::L4_iand_memopw_io, 65, 1 },
    {Hexagon::L4_ior_memopb_io, 66, 1 },
    {Hexagon::L4_ior_memoph_io, 67, 1 },
    {Hexagon::L4_ior_memopw_io, 68, 1 },
    {Hexagon::L4_isub_memopb_io, 69, 1 },
    {Hexagon::L4_isub_memoph_io, 70, 1 },
    {Hexagon::L4_isub_memopw_io, 71, 1 },
    {Hexagon::L4_or_memopb_io, 72, 1 },
    {Hexagon::L4_or_memoph_io, 73, 1 },
    {Hexagon::L4_or_memopw_io, 74, 1 },
    {Hexagon::L4_return, 75, 1 },
    {Hexagon::L4_return_f, 76, 1 },
    {Hexagon::L4_return_fnew_pnt, 77, 1 },
    {Hexagon::L4_return_fnew_pt, 78, 1 },
    {Hexagon::L4_return_t, 79, 1 },
    {Hexagon::L4_return_tnew_pnt, 80, 1 },
    {Hexagon::L4_return_tnew_pt, 81, 1 },
    {Hexagon::L4_sub_memopb_io, 82, 1 },
    {Hexagon::L4_sub_memoph_io, 83, 1 },
    {Hexagon::L4_sub_memopw_io, 84, 1 },
    {Hexagon::M2_mpyi, 85, 1 },
    {Hexagon::S2_allocframe, 86, 1 },
    {Hexagon::S2_pstorerbf_io, 87, 1 },
    {Hexagon::S2_pstorerbnewf_io, 88, 1 },
    {Hexagon::S2_pstorerbnewt_io, 89, 1 },
    {Hexagon::S2_pstorerbt_io, 90, 1 },
    {Hexagon::S2_pstorerdf_io, 91, 1 },
    {Hexagon::S2_pstorerdt_io, 92, 1 },
    {Hexagon::S2_pstorerff_io, 93, 1 },
    {Hexagon::S2_pstorerft_io, 94, 1 },
    {Hexagon::S2_pstorerhf_io, 95, 1 },
    {Hexagon::S2_pstorerhnewf_io, 96, 1 },
    {Hexagon::S2_pstorerhnewt_io, 97, 1 },
    {Hexagon::S2_pstorerht_io, 98, 1 },
    {Hexagon::S2_pstorerif_io, 99, 1 },
    {Hexagon::S2_pstorerinewf_io, 100, 1 },
    {Hexagon::S2_pstorerinewt_io, 101, 1 },
    {Hexagon::S2_pstorerit_io, 102, 1 },
    {Hexagon::S2_storerb_io, 103, 1 },
    {Hexagon::S2_storerbnew_io, 104, 1 },
    {Hexagon::S2_storerd_io, 105, 1 },
    {Hexagon::S2_storerf_io, 106, 1 },
    {Hexagon::S2_storerh_io, 107, 1 },
    {Hexagon::S2_storerhnew_io, 108, 1 },
    {Hexagon::S2_storeri_io, 109, 1 },
    {Hexagon::S2_storerinew_io, 110, 1 },
    {Hexagon::S2_tableidxb, 111, 1 },
    {Hexagon::S4_pstorerbfnew_io, 112, 1 },
    {Hexagon::S4_pstorerbnewfnew_io, 113, 1 },
    {Hexagon::S4_pstorerbnewtnew_io, 114, 1 },
    {Hexagon::S4_pstorerbtnew_io, 115, 1 },
    {Hexagon::S4_pstorerdfnew_io, 116, 1 },
    {Hexagon::S4_pstorerdtnew_io, 117, 1 },
    {Hexagon::S4_pstorerffnew_io, 118, 1 },
    {Hexagon::S4_pstorerftnew_io, 119, 1 },
    {Hexagon::S4_pstorerhfnew_io, 120, 1 },
    {Hexagon::S4_pstorerhnewfnew_io, 121, 1 },
    {Hexagon::S4_pstorerhnewtnew_io, 122, 1 },
    {Hexagon::S4_pstorerhtnew_io, 123, 1 },
    {Hexagon::S4_pstorerifnew_io, 124, 1 },
    {Hexagon::S4_pstorerinewfnew_io, 125, 1 },
    {Hexagon::S4_pstorerinewtnew_io, 126, 1 },
    {Hexagon::S4_pstoreritnew_io, 127, 1 },
    {Hexagon::S4_storeirb_io, 128, 1 },
    {Hexagon::S4_storeirbf_io, 129, 1 },
    {Hexagon::S4_storeirbfnew_io, 130, 1 },
    {Hexagon::S4_storeirbt_io, 131, 1 },
    {Hexagon::S4_storeirbtnew_io, 132, 1 },
    {Hexagon::S4_storeirh_io, 133, 1 },
    {Hexagon::S4_storeirhf_io, 134, 1 },
    {Hexagon::S4_storeirhfnew_io, 135, 1 },
    {Hexagon::S4_storeirht_io, 136, 1 },
    {Hexagon::S4_storeirhtnew_io, 137, 1 },
    {Hexagon::S4_storeiri_io, 138, 1 },
    {Hexagon::S4_storeirif_io, 139, 1 },
    {Hexagon::S4_storeirifnew_io, 140, 1 },
    {Hexagon::S4_storeirit_io, 141, 1 },
    {Hexagon::S4_storeiritnew_io, 142, 1 },
    {Hexagon::V6_extractw, 143, 1 },
    {Hexagon::V6_vL32Ub_ai, 144, 1 },
    {Hexagon::V6_vL32b_ai, 145, 1 },
    {Hexagon::V6_vL32b_cur_npred_pi, 146, 1 },
    {Hexagon::V6_vL32b_cur_pred_pi, 147, 1 },
    {Hexagon::V6_vL32b_npred_ai, 148, 1 },
    {Hexagon::V6_vL32b_npred_pi, 149, 1 },
    {Hexagon::V6_vL32b_nt_cur_npred_pi, 150, 1 },
    {Hexagon::V6_vL32b_nt_cur_pred_pi, 151, 1 },
    {Hexagon::V6_vL32b_nt_npred_ai, 152, 1 },
    {Hexagon::V6_vL32b_nt_npred_pi, 153, 1 },
    {Hexagon::V6_vL32b_nt_pred_ai, 154, 1 },
    {Hexagon::V6_vL32b_nt_tmp_pred_ai, 155, 1 },
    {Hexagon::V6_vL32b_pred_ai, 156, 1 },
    {Hexagon::V6_vL32b_tmp_pred_ai, 157, 1 },
    {Hexagon::V6_vS32Ub_ai, 158, 1 },
    {Hexagon::V6_vS32Ub_npred_ai, 159, 1 },
    {Hexagon::V6_vS32Ub_pred_ai, 160, 1 },
    {Hexagon::V6_vS32b_ai, 161, 1 },
    {Hexagon::V6_vS32b_new_ai, 162, 1 },
    {Hexagon::V6_vS32b_npred_ai, 163, 1 },
    {Hexagon::V6_vS32b_nqpred_ai, 164, 1 },
    {Hexagon::V6_vS32b_nt_ai, 165, 1 },
    {Hexagon::V6_vS32b_nt_new_ai, 166, 1 },
    {Hexagon::V6_vS32b_nt_npred_ai, 167, 1 },
    {Hexagon::V6_vS32b_nt_nqpred_ai, 168, 1 },
    {Hexagon::V6_vS32b_nt_pred_ai, 169, 1 },
    {Hexagon::V6_vS32b_nt_qpred_ai, 170, 1 },
    {Hexagon::V6_vS32b_pred_ai, 171, 1 },
    {Hexagon::V6_vS32b_qpred_ai, 172, 1 },
    {Hexagon::V6_vabsb_sat, 173, 1 },
    {Hexagon::V6_vabsdiffh, 174, 1 },
    {Hexagon::V6_vabsdiffub, 175, 1 },
    {Hexagon::V6_vabsdiffuh, 176, 1 },
    {Hexagon::V6_vabsdiffw, 177, 1 },
    {Hexagon::V6_vabsh_sat, 178, 1 },
    {Hexagon::V6_vabsw_sat, 179, 1 },
    {Hexagon::V6_vaddb, 180, 1 },
    {Hexagon::V6_vaddb_dv, 181, 1 },
    {Hexagon::V6_vaddbnq, 182, 1 },
    {Hexagon::V6_vaddbq, 183, 1 },
    {Hexagon::V6_vaddbsat, 184, 1 },
    {Hexagon::V6_vaddbsat_dv, 185, 1 },
    {Hexagon::V6_vaddh, 186, 1 },
    {Hexagon::V6_vaddh_dv, 187, 1 },
    {Hexagon::V6_vaddhnq, 188, 1 },
    {Hexagon::V6_vaddhq, 189, 1 },
    {Hexagon::V6_vaddhsat, 190, 1 },
    {Hexagon::V6_vaddhsat_dv, 191, 1 },
    {Hexagon::V6_vaddhw, 192, 1 },
    {Hexagon::V6_vaddhw_acc, 193, 1 },
    {Hexagon::V6_vaddubh, 194, 1 },
    {Hexagon::V6_vaddubh_acc, 195, 1 },
    {Hexagon::V6_vaddubsat, 196, 1 },
    {Hexagon::V6_vaddubsat_dv, 197, 1 },
    {Hexagon::V6_vadduhsat, 198, 1 },
    {Hexagon::V6_vadduhsat_dv, 199, 1 },
    {Hexagon::V6_vadduhw, 200, 1 },
    {Hexagon::V6_vadduhw_acc, 201, 1 },
    {Hexagon::V6_vadduwsat, 202, 1 },
    {Hexagon::V6_vadduwsat_dv, 203, 1 },
    {Hexagon::V6_vaddw, 204, 1 },
    {Hexagon::V6_vaddw_dv, 205, 1 },
    {Hexagon::V6_vaddwnq, 206, 1 },
    {Hexagon::V6_vaddwq, 207, 1 },
    {Hexagon::V6_vaddwsat, 208, 1 },
    {Hexagon::V6_vaddwsat_dv, 209, 1 },
    {Hexagon::V6_vandnqrt, 210, 1 },
    {Hexagon::V6_vandnqrt_acc, 211, 1 },
    {Hexagon::V6_vandqrt, 212, 1 },
    {Hexagon::V6_vandqrt_acc, 213, 1 },
    {Hexagon::V6_vandvrt, 214, 1 },
    {Hexagon::V6_vandvrt_acc, 215, 1 },
    {Hexagon::V6_vaslh, 216, 1 },
    {Hexagon::V6_vaslh_acc, 217, 1 },
    {Hexagon::V6_vaslhv, 218, 1 },
    {Hexagon::V6_vaslw, 219, 1 },
    {Hexagon::V6_vaslw_acc, 220, 1 },
    {Hexagon::V6_vaslwv, 221, 1 },
    {Hexagon::V6_vasr_into, 222, 1 },
    {Hexagon::V6_vasrh, 223, 1 },
    {Hexagon::V6_vasrh_acc, 224, 1 },
    {Hexagon::V6_vasrhbrndsat, 225, 1 },
    {Hexagon::V6_vasrhubrndsat, 226, 1 },
    {Hexagon::V6_vasrhubsat, 227, 1 },
    {Hexagon::V6_vasrhv, 228, 1 },
    {Hexagon::V6_vasrw, 229, 1 },
    {Hexagon::V6_vasrw_acc, 230, 1 },
    {Hexagon::V6_vasrwhrndsat, 231, 1 },
    {Hexagon::V6_vasrwuhsat, 232, 1 },
    {Hexagon::V6_vasrwv, 233, 1 },
    {Hexagon::V6_vavgb, 234, 1 },
    {Hexagon::V6_vavgbrnd, 235, 1 },
    {Hexagon::V6_vavgh, 236, 1 },
    {Hexagon::V6_vavghrnd, 237, 1 },
    {Hexagon::V6_vavgub, 238, 1 },
    {Hexagon::V6_vavgubrnd, 239, 1 },
    {Hexagon::V6_vavguh, 240, 1 },
    {Hexagon::V6_vavguhrnd, 241, 1 },
    {Hexagon::V6_vavguw, 242, 1 },
    {Hexagon::V6_vavguwrnd, 243, 1 },
    {Hexagon::V6_vavgw, 244, 1 },
    {Hexagon::V6_vavgwrnd, 245, 1 },
    {Hexagon::V6_vcl0h, 246, 1 },
    {Hexagon::V6_vcl0w, 247, 1 },
    {Hexagon::V6_vdealb, 248, 1 },
    {Hexagon::V6_vdealb4w, 249, 1 },
    {Hexagon::V6_vdealh, 250, 1 },
    {Hexagon::V6_vdmpybus, 251, 1 },
    {Hexagon::V6_vdmpybus_acc, 252, 1 },
    {Hexagon::V6_vdmpybus_dv, 253, 1 },
    {Hexagon::V6_vdmpybus_dv_acc, 254, 1 },
    {Hexagon::V6_vdmpyhb, 255, 1 },
    {Hexagon::V6_vdmpyhb_acc, 256, 1 },
    {Hexagon::V6_vdmpyhb_dv, 257, 1 },
    {Hexagon::V6_vdmpyhb_dv_acc, 258, 1 },
    {Hexagon::V6_vdmpyhisat, 259, 1 },
    {Hexagon::V6_vdmpyhisat_acc, 260, 1 },
    {Hexagon::V6_vdmpyhsat, 261, 1 },
    {Hexagon::V6_vdmpyhsat_acc, 262, 1 },
    {Hexagon::V6_vdmpyhsuisat, 263, 1 },
    {Hexagon::V6_vdmpyhsuisat_acc, 264, 1 },
    {Hexagon::V6_vdmpyhsusat, 265, 1 },
    {Hexagon::V6_vdmpyhsusat_acc, 266, 1 },
    {Hexagon::V6_vdmpyhvsat, 267, 1 },
    {Hexagon::V6_vdmpyhvsat_acc, 268, 1 },
    {Hexagon::V6_vdsaduh, 269, 1 },
    {Hexagon::V6_vdsaduh_acc, 270, 1 },
    {Hexagon::V6_veqb, 271, 1 },
    {Hexagon::V6_veqb_and, 272, 1 },
    {Hexagon::V6_veqb_or, 273, 1 },
    {Hexagon::V6_veqb_xor, 274, 1 },
    {Hexagon::V6_veqh, 275, 1 },
    {Hexagon::V6_veqh_and, 276, 1 },
    {Hexagon::V6_veqh_or, 277, 1 },
    {Hexagon::V6_veqh_xor, 278, 1 },
    {Hexagon::V6_veqw, 279, 1 },
    {Hexagon::V6_veqw_and, 280, 1 },
    {Hexagon::V6_veqw_or, 281, 1 },
    {Hexagon::V6_veqw_xor, 282, 1 },
    {Hexagon::V6_vlsrh, 283, 1 },
    {Hexagon::V6_vlsrhv, 284, 1 },
    {Hexagon::V6_vlsrw, 285, 1 },
    {Hexagon::V6_vlsrwv, 286, 1 },
    {Hexagon::V6_vmaxb, 287, 1 },
    {Hexagon::V6_vmaxh, 288, 1 },
    {Hexagon::V6_vmaxub, 289, 1 },
    {Hexagon::V6_vmaxuh, 290, 1 },
    {Hexagon::V6_vmaxw, 291, 1 },
    {Hexagon::V6_vminb, 292, 1 },
    {Hexagon::V6_vminh, 293, 1 },
    {Hexagon::V6_vminub, 294, 1 },
    {Hexagon::V6_vminuh, 295, 1 },
    {Hexagon::V6_vminw, 296, 1 },
    {Hexagon::V6_vmpabus, 297, 1 },
    {Hexagon::V6_vmpabus_acc, 298, 1 },
    {Hexagon::V6_vmpabusv, 299, 1 },
    {Hexagon::V6_vmpabuu, 300, 1 },
    {Hexagon::V6_vmpabuu_acc, 301, 1 },
    {Hexagon::V6_vmpabuuv, 302, 1 },
    {Hexagon::V6_vmpahb, 303, 1 },
    {Hexagon::V6_vmpahb_acc, 304, 1 },
    {Hexagon::V6_vmpauhb, 305, 1 },
    {Hexagon::V6_vmpauhb_acc, 306, 1 },
    {Hexagon::V6_vmpybus, 307, 1 },
    {Hexagon::V6_vmpybus_acc, 308, 1 },
    {Hexagon::V6_vmpybusv, 309, 1 },
    {Hexagon::V6_vmpybusv_acc, 310, 1 },
    {Hexagon::V6_vmpybv, 311, 1 },
    {Hexagon::V6_vmpybv_acc, 312, 1 },
    {Hexagon::V6_vmpyewuh, 313, 1 },
    {Hexagon::V6_vmpyh, 314, 1 },
    {Hexagon::V6_vmpyh_acc, 315, 1 },
    {Hexagon::V6_vmpyhsat_acc, 316, 1 },
    {Hexagon::V6_vmpyhsrs, 317, 1 },
    {Hexagon::V6_vmpyhss, 318, 1 },
    {Hexagon::V6_vmpyhus, 319, 1 },
    {Hexagon::V6_vmpyhus_acc, 320, 1 },
    {Hexagon::V6_vmpyhv, 321, 1 },
    {Hexagon::V6_vmpyhv_acc, 322, 1 },
    {Hexagon::V6_vmpyhvsrs, 323, 1 },
    {Hexagon::V6_vmpyiewh_acc, 324, 1 },
    {Hexagon::V6_vmpyiewuh, 325, 1 },
    {Hexagon::V6_vmpyiewuh_acc, 326, 1 },
    {Hexagon::V6_vmpyih, 327, 1 },
    {Hexagon::V6_vmpyih_acc, 328, 1 },
    {Hexagon::V6_vmpyihb, 329, 1 },
    {Hexagon::V6_vmpyihb_acc, 330, 1 },
    {Hexagon::V6_vmpyiowh, 331, 1 },
    {Hexagon::V6_vmpyiwb, 332, 1 },
    {Hexagon::V6_vmpyiwb_acc, 333, 1 },
    {Hexagon::V6_vmpyiwh, 334, 1 },
    {Hexagon::V6_vmpyiwh_acc, 335, 1 },
    {Hexagon::V6_vmpyiwub, 336, 1 },
    {Hexagon::V6_vmpyiwub_acc, 337, 1 },
    {Hexagon::V6_vmpyowh, 338, 1 },
    {Hexagon::V6_vmpyowh_rnd, 339, 1 },
    {Hexagon::V6_vmpyub, 340, 1 },
    {Hexagon::V6_vmpyub_acc, 341, 1 },
    {Hexagon::V6_vmpyubv, 342, 1 },
    {Hexagon::V6_vmpyubv_acc, 343, 1 },
    {Hexagon::V6_vmpyuh, 344, 1 },
    {Hexagon::V6_vmpyuh_acc, 345, 1 },
    {Hexagon::V6_vmpyuhv, 346, 1 },
    {Hexagon::V6_vmpyuhv_acc, 347, 1 },
    {Hexagon::V6_vnavgb, 348, 1 },
    {Hexagon::V6_vnavgh, 349, 1 },
    {Hexagon::V6_vnavgub, 350, 1 },
    {Hexagon::V6_vnavgw, 351, 1 },
    {Hexagon::V6_vnormamth, 352, 1 },
    {Hexagon::V6_vnormamtw, 353, 1 },
    {Hexagon::V6_vpackeb, 354, 1 },
    {Hexagon::V6_vpackeh, 355, 1 },
    {Hexagon::V6_vpackhb_sat, 356, 1 },
    {Hexagon::V6_vpackhub_sat, 357, 1 },
    {Hexagon::V6_vpackob, 358, 1 },
    {Hexagon::V6_vpackoh, 359, 1 },
    {Hexagon::V6_vpackwh_sat, 360, 1 },
    {Hexagon::V6_vpackwuh_sat, 361, 1 },
    {Hexagon::V6_vpopcounth, 362, 1 },
    {Hexagon::V6_vrmpybub_rtt, 363, 1 },
    {Hexagon::V6_vrmpybub_rtt_acc, 364, 1 },
    {Hexagon::V6_vrmpybus, 365, 1 },
    {Hexagon::V6_vrmpybus_acc, 366, 1 },
    {Hexagon::V6_vrmpybusi, 367, 1 },
    {Hexagon::V6_vrmpybusi_acc, 368, 1 },
    {Hexagon::V6_vrmpybusv, 369, 1 },
    {Hexagon::V6_vrmpybusv_acc, 370, 1 },
    {Hexagon::V6_vrmpybv, 371, 1 },
    {Hexagon::V6_vrmpybv_acc, 372, 1 },
    {Hexagon::V6_vrmpyub, 373, 1 },
    {Hexagon::V6_vrmpyub_acc, 374, 1 },
    {Hexagon::V6_vrmpyub_rtt, 375, 1 },
    {Hexagon::V6_vrmpyub_rtt_acc, 376, 1 },
    {Hexagon::V6_vrmpyubi, 377, 1 },
    {Hexagon::V6_vrmpyubi_acc, 378, 1 },
    {Hexagon::V6_vrmpyubv, 379, 1 },
    {Hexagon::V6_vrmpyubv_acc, 380, 1 },
    {Hexagon::V6_vrotr, 381, 1 },
    {Hexagon::V6_vroundhb, 382, 1 },
    {Hexagon::V6_vroundhub, 383, 1 },
    {Hexagon::V6_vrounduhub, 384, 1 },
    {Hexagon::V6_vrounduwuh, 385, 1 },
    {Hexagon::V6_vroundwh, 386, 1 },
    {Hexagon::V6_vroundwuh, 387, 1 },
    {Hexagon::V6_vrsadubi, 388, 1 },
    {Hexagon::V6_vrsadubi_acc, 389, 1 },
    {Hexagon::V6_vsathub, 390, 1 },
    {Hexagon::V6_vsatuwuh, 391, 1 },
    {Hexagon::V6_vsatwh, 392, 1 },
    {Hexagon::V6_vsb, 393, 1 },
    {Hexagon::V6_vscattermh, 394, 1 },
    {Hexagon::V6_vscattermh_add, 395, 1 },
    {Hexagon::V6_vscattermhq, 396, 1 },
    {Hexagon::V6_vscattermhw, 397, 1 },
    {Hexagon::V6_vscattermhw_add, 398, 1 },
    {Hexagon::V6_vscattermhwq, 399, 1 },
    {Hexagon::V6_vscattermw, 400, 1 },
    {Hexagon::V6_vscattermw_add, 401, 1 },
    {Hexagon::V6_vscattermwq, 402, 1 },
    {Hexagon::V6_vsh, 403, 1 },
    {Hexagon::V6_vshufeh, 404, 1 },
    {Hexagon::V6_vshuff, 405, 1 },
    {Hexagon::V6_vshuffb, 406, 1 },
    {Hexagon::V6_vshuffeb, 407, 1 },
    {Hexagon::V6_vshuffh, 408, 1 },
    {Hexagon::V6_vshuffob, 409, 1 },
    {Hexagon::V6_vshufoeb, 410, 1 },
    {Hexagon::V6_vshufoeh, 411, 1 },
    {Hexagon::V6_vshufoh, 412, 1 },
    {Hexagon::V6_vsubb, 413, 1 },
    {Hexagon::V6_vsubb_dv, 414, 1 },
    {Hexagon::V6_vsubbnq, 415, 1 },
    {Hexagon::V6_vsubbq, 416, 1 },
    {Hexagon::V6_vsubbsat, 417, 1 },
    {Hexagon::V6_vsubbsat_dv, 418, 1 },
    {Hexagon::V6_vsubh, 419, 1 },
    {Hexagon::V6_vsubh_dv, 420, 1 },
    {Hexagon::V6_vsubhnq, 421, 1 },
    {Hexagon::V6_vsubhq, 422, 1 },
    {Hexagon::V6_vsubhsat, 423, 1 },
    {Hexagon::V6_vsubhsat_dv, 424, 1 },
    {Hexagon::V6_vsubhw, 425, 1 },
    {Hexagon::V6_vsububh, 426, 1 },
    {Hexagon::V6_vsububsat, 427, 1 },
    {Hexagon::V6_vsububsat_dv, 428, 1 },
    {Hexagon::V6_vsubuhsat, 429, 1 },
    {Hexagon::V6_vsubuhsat_dv, 430, 1 },
    {Hexagon::V6_vsubuhw, 431, 1 },
    {Hexagon::V6_vsubuwsat, 432, 1 },
    {Hexagon::V6_vsubuwsat_dv, 433, 1 },
    {Hexagon::V6_vsubw, 434, 1 },
    {Hexagon::V6_vsubw_dv, 435, 2 },
    {Hexagon::V6_vsubwnq, 437, 1 },
    {Hexagon::V6_vsubwq, 438, 1 },
    {Hexagon::V6_vsubwsat, 439, 1 },
    {Hexagon::V6_vsubwsat_dv, 440, 1 },
    {Hexagon::V6_vtmpyb, 441, 1 },
    {Hexagon::V6_vtmpyb_acc, 442, 1 },
    {Hexagon::V6_vtmpybus, 443, 1 },
    {Hexagon::V6_vtmpybus_acc, 444, 1 },
    {Hexagon::V6_vtmpyhb, 445, 1 },
    {Hexagon::V6_vtmpyhb_acc, 446, 1 },
    {Hexagon::V6_vunpackb, 447, 1 },
    {Hexagon::V6_vunpackh, 448, 1 },
    {Hexagon::V6_vunpackoh, 449, 1 },
    {Hexagon::V6_vunpackub, 450, 1 },
    {Hexagon::V6_vunpackuh, 451, 1 },
    {Hexagon::V6_vxor, 452, 1 },
    {Hexagon::V6_vzb, 453, 1 },
    {Hexagon::V6_vzh, 454, 1 },
    {Hexagon::V6_zLd_ai, 455, 1 },
    {Hexagon::V6_zLd_pred_ai, 456, 1 },
    {Hexagon::Y2_dcfetchbo, 457, 1 },
  };

  static const AliasPattern Patterns[] = {
    // Hexagon::A2_andir - 0
    {0, 0, 3, 3 },
    // Hexagon::A2_paddif - 1
    {14, 3, 4, 4 },
    // Hexagon::A2_paddifnew - 2
    {31, 7, 4, 4 },
    // Hexagon::A2_paddit - 3
    {52, 11, 4, 4 },
    // Hexagon::A2_padditnew - 4
    {68, 15, 4, 4 },
    // Hexagon::A2_subri - 5
    {88, 19, 3, 3 },
    {101, 22, 3, 3 },
    // Hexagon::A2_vaddub - 7
    {114, 25, 3, 3 },
    // Hexagon::A2_vsubub - 8
    {132, 28, 3, 3 },
    // Hexagon::C2_cmpgt - 9
    {150, 31, 3, 3 },
    // Hexagon::C2_cmpgtu - 10
    {169, 34, 3, 3 },
    // Hexagon::C2_or - 11
    {189, 37, 3, 3 },
    // Hexagon::J2_jumpf - 12
    {197, 40, 2, 1 },
    // Hexagon::J2_jumprf - 13
    {216, 41, 2, 2 },
    // Hexagon::J2_jumprt - 14
    {234, 43, 2, 2 },
    // Hexagon::J2_jumpt - 15
    {251, 45, 2, 1 },
    // Hexagon::J2_trap1 - 16
    {269, 46, 3, 2 },
    // Hexagon::L2_deallocframe - 17
    {280, 48, 2, 2 },
    // Hexagon::L2_loadalignb_io - 18
    {293, 50, 4, 4 },
    // Hexagon::L2_loadalignh_io - 19
    {312, 54, 4, 4 },
    // Hexagon::L2_loadbsw2_io - 20
    {331, 58, 3, 3 },
    // Hexagon::L2_loadbsw4_io - 21
    {331, 61, 3, 3 },
    // Hexagon::L2_loadbzw2_io - 22
    {346, 64, 3, 3 },
    // Hexagon::L2_loadbzw4_io - 23
    {346, 67, 3, 3 },
    // Hexagon::L2_loadrb_io - 24
    {362, 70, 3, 3 },
    // Hexagon::L2_loadrd_io - 25
    {376, 73, 3, 3 },
    // Hexagon::L2_loadrh_io - 26
    {390, 76, 3, 3 },
    // Hexagon::L2_loadri_io - 27
    {404, 79, 3, 3 },
    // Hexagon::L2_loadrub_io - 28
    {418, 82, 3, 3 },
    // Hexagon::L2_loadruh_io - 29
    {433, 85, 3, 3 },
    // Hexagon::L2_ploadrbf_io - 30
    {448, 88, 4, 4 },
    // Hexagon::L2_ploadrbfnew_io - 31
    {471, 92, 4, 4 },
    // Hexagon::L2_ploadrbt_io - 32
    {498, 96, 4, 4 },
    // Hexagon::L2_ploadrbtnew_io - 33
    {520, 100, 4, 4 },
    // Hexagon::L2_ploadrdf_io - 34
    {546, 104, 4, 4 },
    // Hexagon::L2_ploadrdfnew_io - 35
    {569, 108, 4, 4 },
    // Hexagon::L2_ploadrdt_io - 36
    {596, 112, 4, 4 },
    // Hexagon::L2_ploadrdtnew_io - 37
    {618, 116, 4, 4 },
    // Hexagon::L2_ploadrhf_io - 38
    {644, 120, 4, 4 },
    // Hexagon::L2_ploadrhfnew_io - 39
    {667, 124, 4, 4 },
    // Hexagon::L2_ploadrht_io - 40
    {694, 128, 4, 4 },
    // Hexagon::L2_ploadrhtnew_io - 41
    {716, 132, 4, 4 },
    // Hexagon::L2_ploadrif_io - 42
    {742, 136, 4, 4 },
    // Hexagon::L2_ploadrifnew_io - 43
    {765, 140, 4, 4 },
    // Hexagon::L2_ploadrit_io - 44
    {792, 144, 4, 4 },
    // Hexagon::L2_ploadritnew_io - 45
    {814, 148, 4, 4 },
    // Hexagon::L2_ploadrubf_io - 46
    {840, 152, 4, 4 },
    // Hexagon::L2_ploadrubfnew_io - 47
    {864, 156, 4, 4 },
    // Hexagon::L2_ploadrubt_io - 48
    {892, 160, 4, 4 },
    // Hexagon::L2_ploadrubtnew_io - 49
    {915, 164, 4, 4 },
    // Hexagon::L2_ploadruhf_io - 50
    {942, 168, 4, 4 },
    // Hexagon::L2_ploadruhfnew_io - 51
    {966, 172, 4, 4 },
    // Hexagon::L2_ploadruht_io - 52
    {994, 176, 4, 4 },
    // Hexagon::L2_ploadruhtnew_io - 53
    {1017, 180, 4, 4 },
    // Hexagon::L4_add_memopb_io - 54
    {1044, 184, 3, 3 },
    // Hexagon::L4_add_memoph_io - 55
    {1059, 187, 3, 3 },
    // Hexagon::L4_add_memopw_io - 56
    {1074, 190, 3, 3 },
    // Hexagon::L4_and_memopb_io - 57
    {1089, 193, 3, 3 },
    // Hexagon::L4_and_memoph_io - 58
    {1104, 196, 3, 3 },
    // Hexagon::L4_and_memopw_io - 59
    {1119, 199, 3, 3 },
    // Hexagon::L4_iadd_memopb_io - 60
    {1134, 202, 3, 2 },
    // Hexagon::L4_iadd_memoph_io - 61
    {1150, 204, 3, 2 },
    // Hexagon::L4_iadd_memopw_io - 62
    {1166, 206, 3, 2 },
    // Hexagon::L4_iand_memopb_io - 63
    {1182, 208, 3, 2 },
    // Hexagon::L4_iand_memoph_io - 64
    {1205, 210, 3, 2 },
    // Hexagon::L4_iand_memopw_io - 65
    {1228, 212, 3, 2 },
    // Hexagon::L4_ior_memopb_io - 66
    {1251, 214, 3, 2 },
    // Hexagon::L4_ior_memoph_io - 67
    {1274, 216, 3, 2 },
    // Hexagon::L4_ior_memopw_io - 68
    {1297, 218, 3, 2 },
    // Hexagon::L4_isub_memopb_io - 69
    {1320, 220, 3, 2 },
    // Hexagon::L4_isub_memoph_io - 70
    {1336, 222, 3, 2 },
    // Hexagon::L4_isub_memopw_io - 71
    {1352, 224, 3, 2 },
    // Hexagon::L4_or_memopb_io - 72
    {1368, 226, 3, 3 },
    // Hexagon::L4_or_memoph_io - 73
    {1383, 229, 3, 3 },
    // Hexagon::L4_or_memopw_io - 74
    {1398, 232, 3, 3 },
    // Hexagon::L4_return - 75
    {1413, 235, 2, 2 },
    // Hexagon::L4_return_f - 76
    {1428, 237, 3, 3 },
    // Hexagon::L4_return_fnew_pnt - 77
    {1452, 240, 3, 3 },
    // Hexagon::L4_return_fnew_pt - 78
    {1483, 243, 3, 3 },
    // Hexagon::L4_return_t - 79
    {1513, 246, 3, 3 },
    // Hexagon::L4_return_tnew_pnt - 80
    {1536, 249, 3, 3 },
    // Hexagon::L4_return_tnew_pt - 81
    {1566, 252, 3, 3 },
    // Hexagon::L4_sub_memopb_io - 82
    {1595, 255, 3, 3 },
    // Hexagon::L4_sub_memoph_io - 83
    {1610, 258, 3, 3 },
    // Hexagon::L4_sub_memopw_io - 84
    {1625, 261, 3, 3 },
    // Hexagon::M2_mpyi - 85
    {1640, 264, 3, 3 },
    // Hexagon::S2_allocframe - 86
    {1658, 267, 3, 2 },
    // Hexagon::S2_pstorerbf_io - 87
    {1674, 269, 4, 4 },
    // Hexagon::S2_pstorerbnewf_io - 88
    {1697, 273, 4, 4 },
    // Hexagon::S2_pstorerbnewt_io - 89
    {1724, 277, 4, 4 },
    // Hexagon::S2_pstorerbt_io - 90
    {1750, 281, 4, 4 },
    // Hexagon::S2_pstorerdf_io - 91
    {1772, 285, 4, 4 },
    // Hexagon::S2_pstorerdt_io - 92
    {1795, 289, 4, 4 },
    // Hexagon::S2_pstorerff_io - 93
    {1817, 293, 4, 4 },
    // Hexagon::S2_pstorerft_io - 94
    {1842, 297, 4, 4 },
    // Hexagon::S2_pstorerhf_io - 95
    {1866, 301, 4, 4 },
    // Hexagon::S2_pstorerhnewf_io - 96
    {1889, 305, 4, 4 },
    // Hexagon::S2_pstorerhnewt_io - 97
    {1916, 309, 4, 4 },
    // Hexagon::S2_pstorerht_io - 98
    {1942, 313, 4, 4 },
    // Hexagon::S2_pstorerif_io - 99
    {1964, 317, 4, 4 },
    // Hexagon::S2_pstorerinewf_io - 100
    {1987, 321, 4, 4 },
    // Hexagon::S2_pstorerinewt_io - 101
    {2014, 325, 4, 4 },
    // Hexagon::S2_pstorerit_io - 102
    {2040, 329, 4, 4 },
    // Hexagon::S2_storerb_io - 103
    {2062, 333, 3, 3 },
    // Hexagon::S2_storerbnew_io - 104
    {2076, 336, 3, 3 },
    // Hexagon::S2_storerd_io - 105
    {2094, 339, 3, 3 },
    // Hexagon::S2_storerf_io - 106
    {2108, 342, 3, 3 },
    // Hexagon::S2_storerh_io - 107
    {2124, 345, 3, 3 },
    // Hexagon::S2_storerhnew_io - 108
    {2138, 348, 3, 3 },
    // Hexagon::S2_storeri_io - 109
    {2156, 351, 3, 3 },
    // Hexagon::S2_storerinew_io - 110
    {2170, 354, 3, 3 },
    // Hexagon::S2_tableidxb - 111
    {2188, 357, 5, 4 },
    // Hexagon::S4_pstorerbfnew_io - 112
    {2215, 361, 4, 4 },
    // Hexagon::S4_pstorerbnewfnew_io - 113
    {2242, 365, 4, 4 },
    // Hexagon::S4_pstorerbnewtnew_io - 114
    {2273, 369, 4, 4 },
    // Hexagon::S4_pstorerbtnew_io - 115
    {2303, 373, 4, 4 },
    // Hexagon::S4_pstorerdfnew_io - 116
    {2329, 377, 4, 4 },
    // Hexagon::S4_pstorerdtnew_io - 117
    {2356, 381, 4, 4 },
    // Hexagon::S4_pstorerffnew_io - 118
    {2382, 385, 4, 4 },
    // Hexagon::S4_pstorerftnew_io - 119
    {2411, 389, 4, 4 },
    // Hexagon::S4_pstorerhfnew_io - 120
    {2439, 393, 4, 4 },
    // Hexagon::S4_pstorerhnewfnew_io - 121
    {2466, 397, 4, 4 },
    // Hexagon::S4_pstorerhnewtnew_io - 122
    {2497, 401, 4, 4 },
    // Hexagon::S4_pstorerhtnew_io - 123
    {2527, 405, 4, 4 },
    // Hexagon::S4_pstorerifnew_io - 124
    {2553, 409, 4, 4 },
    // Hexagon::S4_pstorerinewfnew_io - 125
    {2580, 413, 4, 4 },
    // Hexagon::S4_pstorerinewtnew_io - 126
    {2611, 417, 4, 4 },
    // Hexagon::S4_pstoreritnew_io - 127
    {2641, 421, 4, 4 },
    // Hexagon::S4_storeirb_io - 128
    {2667, 425, 3, 2 },
    // Hexagon::S4_storeirbf_io - 129
    {2682, 427, 4, 3 },
    // Hexagon::S4_storeirbfnew_io - 130
    {2706, 430, 4, 3 },
    // Hexagon::S4_storeirbt_io - 131
    {2734, 433, 4, 3 },
    // Hexagon::S4_storeirbtnew_io - 132
    {2757, 436, 4, 3 },
    // Hexagon::S4_storeirh_io - 133
    {2784, 439, 3, 2 },
    // Hexagon::S4_storeirhf_io - 134
    {2799, 441, 4, 3 },
    // Hexagon::S4_storeirhfnew_io - 135
    {2823, 444, 4, 3 },
    // Hexagon::S4_storeirht_io - 136
    {2851, 447, 4, 3 },
    // Hexagon::S4_storeirhtnew_io - 137
    {2874, 450, 4, 3 },
    // Hexagon::S4_storeiri_io - 138
    {2901, 453, 3, 2 },
    // Hexagon::S4_storeirif_io - 139
    {2916, 455, 4, 3 },
    // Hexagon::S4_storeirifnew_io - 140
    {2940, 458, 4, 3 },
    // Hexagon::S4_storeirit_io - 141
    {2968, 461, 4, 3 },
    // Hexagon::S4_storeiritnew_io - 142
    {2991, 464, 4, 3 },
    // Hexagon::V6_extractw - 143
    {3018, 467, 3, 3 },
    // Hexagon::V6_vL32Ub_ai - 144
    {3041, 470, 3, 3 },
    // Hexagon::V6_vL32b_ai - 145
    {3056, 473, 3, 3 },
    // Hexagon::V6_vL32b_cur_npred_pi - 146
    {3070, 476, 5, 5 },
    // Hexagon::V6_vL32b_cur_pred_pi - 147
    {3097, 481, 5, 5 },
    // Hexagon::V6_vL32b_npred_ai - 148
    {3123, 486, 4, 4 },
    // Hexagon::V6_vL32b_npred_pi - 149
    {3150, 490, 5, 5 },
    // Hexagon::V6_vL32b_nt_cur_npred_pi - 150
    {3173, 495, 5, 5 },
    // Hexagon::V6_vL32b_nt_cur_pred_pi - 151
    {3203, 500, 5, 5 },
    // Hexagon::V6_vL32b_nt_npred_ai - 152
    {3232, 505, 4, 4 },
    // Hexagon::V6_vL32b_nt_npred_pi - 153
    {3262, 509, 5, 5 },
    // Hexagon::V6_vL32b_nt_pred_ai - 154
    {3288, 514, 4, 4 },
    // Hexagon::V6_vL32b_nt_tmp_pred_ai - 155
    {3313, 518, 4, 4 },
    // Hexagon::V6_vL32b_pred_ai - 156
    {3342, 522, 4, 4 },
    // Hexagon::V6_vL32b_tmp_pred_ai - 157
    {3364, 526, 4, 4 },
    // Hexagon::V6_vS32Ub_ai - 158
    {3390, 530, 3, 3 },
    // Hexagon::V6_vS32Ub_npred_ai - 159
    {3405, 533, 4, 4 },
    // Hexagon::V6_vS32Ub_pred_ai - 160
    {3429, 537, 4, 4 },
    // Hexagon::V6_vS32b_ai - 161
    {3452, 541, 3, 3 },
    // Hexagon::V6_vS32b_new_ai - 162
    {3466, 544, 3, 3 },
    // Hexagon::V6_vS32b_npred_ai - 163
    {3484, 547, 4, 4 },
    // Hexagon::V6_vS32b_nqpred_ai - 164
    {3484, 551, 4, 4 },
    // Hexagon::V6_vS32b_nt_ai - 165
    {3507, 555, 3, 3 },
    // Hexagon::V6_vS32b_nt_new_ai - 166
    {3524, 558, 3, 3 },
    // Hexagon::V6_vS32b_nt_npred_ai - 167
    {3545, 561, 4, 4 },
    // Hexagon::V6_vS32b_nt_nqpred_ai - 168
    {3545, 565, 4, 4 },
    // Hexagon::V6_vS32b_nt_pred_ai - 169
    {3571, 569, 4, 4 },
    // Hexagon::V6_vS32b_nt_qpred_ai - 170
    {3571, 573, 4, 4 },
    // Hexagon::V6_vS32b_pred_ai - 171
    {3596, 577, 4, 4 },
    // Hexagon::V6_vS32b_qpred_ai - 172
    {3596, 581, 4, 4 },
    // Hexagon::V6_vabsb_sat - 173
    {3618, 585, 2, 2 },
    // Hexagon::V6_vabsdiffh - 174
    {3637, 587, 3, 3 },
    // Hexagon::V6_vabsdiffub - 175
    {3659, 590, 3, 3 },
    // Hexagon::V6_vabsdiffuh - 176
    {3682, 593, 3, 3 },
    // Hexagon::V6_vabsdiffw - 177
    {3705, 596, 3, 3 },
    // Hexagon::V6_vabsh_sat - 178
    {3727, 599, 2, 2 },
    // Hexagon::V6_vabsw_sat - 179
    {3746, 601, 2, 2 },
    // Hexagon::V6_vaddb - 180
    {114, 603, 3, 3 },
    // Hexagon::V6_vaddb_dv - 181
    {114, 606, 3, 3 },
    // Hexagon::V6_vaddbnq - 182
    {3765, 609, 4, 4 },
    // Hexagon::V6_vaddbq - 183
    {3789, 613, 4, 4 },
    // Hexagon::V6_vaddbsat - 184
    {3812, 617, 3, 3 },
    // Hexagon::V6_vaddbsat_dv - 185
    {3812, 620, 3, 3 },
    // Hexagon::V6_vaddh - 186
    {3834, 623, 3, 3 },
    // Hexagon::V6_vaddh_dv - 187
    {3834, 626, 3, 3 },
    // Hexagon::V6_vaddhnq - 188
    {3852, 629, 4, 4 },
    // Hexagon::V6_vaddhq - 189
    {3876, 633, 4, 4 },
    // Hexagon::V6_vaddhsat - 190
    {3899, 637, 3, 3 },
    // Hexagon::V6_vaddhsat_dv - 191
    {3899, 640, 3, 3 },
    // Hexagon::V6_vaddhw - 192
    {3834, 643, 3, 3 },
    // Hexagon::V6_vaddhw_acc - 193
    {3921, 646, 4, 4 },
    // Hexagon::V6_vaddubh - 194
    {3940, 650, 3, 3 },
    // Hexagon::V6_vaddubh_acc - 195
    {3959, 653, 4, 4 },
    // Hexagon::V6_vaddubsat - 196
    {3979, 657, 3, 3 },
    // Hexagon::V6_vaddubsat_dv - 197
    {3979, 660, 3, 3 },
    // Hexagon::V6_vadduhsat - 198
    {4002, 663, 3, 3 },
    // Hexagon::V6_vadduhsat_dv - 199
    {4002, 666, 3, 3 },
    // Hexagon::V6_vadduhw - 200
    {4025, 669, 3, 3 },
    // Hexagon::V6_vadduhw_acc - 201
    {4044, 672, 4, 4 },
    // Hexagon::V6_vadduwsat - 202
    {4064, 676, 3, 3 },
    // Hexagon::V6_vadduwsat_dv - 203
    {4064, 679, 3, 3 },
    // Hexagon::V6_vaddw - 204
    {4087, 682, 3, 3 },
    // Hexagon::V6_vaddw_dv - 205
    {4087, 685, 3, 3 },
    // Hexagon::V6_vaddwnq - 206
    {4105, 688, 4, 4 },
    // Hexagon::V6_vaddwq - 207
    {4129, 692, 4, 4 },
    // Hexagon::V6_vaddwsat - 208
    {4152, 696, 3, 3 },
    // Hexagon::V6_vaddwsat_dv - 209
    {4152, 699, 3, 3 },
    // Hexagon::V6_vandnqrt - 210
    {4174, 702, 3, 3 },
    // Hexagon::V6_vandnqrt_acc - 211
    {4201, 705, 4, 4 },
    // Hexagon::V6_vandqrt - 212
    {4229, 709, 3, 3 },
    // Hexagon::V6_vandqrt_acc - 213
    {4255, 712, 4, 4 },
    // Hexagon::V6_vandvrt - 214
    {4229, 716, 3, 3 },
    // Hexagon::V6_vandvrt_acc - 215
    {4255, 719, 4, 4 },
    // Hexagon::V6_vaslh - 216
    {4282, 723, 3, 3 },
    // Hexagon::V6_vaslh_acc - 217
    {4300, 726, 4, 4 },
    // Hexagon::V6_vaslhv - 218
    {4282, 730, 3, 3 },
    // Hexagon::V6_vaslw - 219
    {4319, 733, 3, 3 },
    // Hexagon::V6_vaslw_acc - 220
    {4337, 736, 4, 4 },
    // Hexagon::V6_vaslwv - 221
    {4319, 740, 3, 3 },
    // Hexagon::V6_vasr_into - 222
    {4356, 743, 4, 4 },
    // Hexagon::V6_vasrh - 223
    {4377, 747, 3, 3 },
    // Hexagon::V6_vasrh_acc - 224
    {4395, 750, 4, 4 },
    // Hexagon::V6_vasrhbrndsat - 225
    {4414, 754, 4, 4 },
    // Hexagon::V6_vasrhubrndsat - 226
    {4444, 758, 4, 4 },
    // Hexagon::V6_vasrhubsat - 227
    {4475, 762, 4, 4 },
    // Hexagon::V6_vasrhv - 228
    {4377, 766, 3, 3 },
    // Hexagon::V6_vasrw - 229
    {4502, 769, 3, 3 },
    // Hexagon::V6_vasrw_acc - 230
    {4520, 772, 4, 4 },
    // Hexagon::V6_vasrwhrndsat - 231
    {4539, 776, 4, 4 },
    // Hexagon::V6_vasrwuhsat - 232
    {4569, 780, 4, 4 },
    // Hexagon::V6_vasrwv - 233
    {4502, 784, 3, 3 },
    // Hexagon::V6_vavgb - 234
    {4596, 787, 3, 3 },
    // Hexagon::V6_vavgbrnd - 235
    {4614, 790, 3, 3 },
    // Hexagon::V6_vavgh - 236
    {4636, 793, 3, 3 },
    // Hexagon::V6_vavghrnd - 237
    {4654, 796, 3, 3 },
    // Hexagon::V6_vavgub - 238
    {4676, 799, 3, 3 },
    // Hexagon::V6_vavgubrnd - 239
    {4695, 802, 3, 3 },
    // Hexagon::V6_vavguh - 240
    {4718, 805, 3, 3 },
    // Hexagon::V6_vavguhrnd - 241
    {4737, 808, 3, 3 },
    // Hexagon::V6_vavguw - 242
    {4760, 811, 3, 3 },
    // Hexagon::V6_vavguwrnd - 243
    {4779, 814, 3, 3 },
    // Hexagon::V6_vavgw - 244
    {4802, 817, 3, 3 },
    // Hexagon::V6_vavgwrnd - 245
    {4820, 820, 3, 3 },
    // Hexagon::V6_vcl0h - 246
    {4842, 823, 2, 2 },
    // Hexagon::V6_vcl0w - 247
    {4857, 825, 2, 2 },
    // Hexagon::V6_vdealb - 248
    {4872, 827, 2, 2 },
    // Hexagon::V6_vdealb4w - 249
    {4888, 829, 3, 3 },
    // Hexagon::V6_vdealh - 250
    {4909, 832, 2, 2 },
    // Hexagon::V6_vdmpybus - 251
    {4925, 834, 3, 3 },
    // Hexagon::V6_vdmpybus_acc - 252
    {4946, 837, 4, 4 },
    // Hexagon::V6_vdmpybus_dv - 253
    {4925, 841, 3, 3 },
    // Hexagon::V6_vdmpybus_dv_acc - 254
    {4946, 844, 4, 4 },
    // Hexagon::V6_vdmpyhb - 255
    {4968, 848, 3, 3 },
    // Hexagon::V6_vdmpyhb_acc - 256
    {4988, 851, 4, 4 },
    // Hexagon::V6_vdmpyhb_dv - 257
    {4968, 855, 3, 3 },
    // Hexagon::V6_vdmpyhb_dv_acc - 258
    {4988, 858, 4, 4 },
    // Hexagon::V6_vdmpyhisat - 259
    {5009, 862, 3, 3 },
    // Hexagon::V6_vdmpyhisat_acc - 260
    {5032, 865, 4, 4 },
    // Hexagon::V6_vdmpyhsat - 261
    {5009, 869, 3, 3 },
    // Hexagon::V6_vdmpyhsat_acc - 262
    {5032, 872, 4, 4 },
    // Hexagon::V6_vdmpyhsuisat - 263
    {5056, 876, 3, 3 },
    // Hexagon::V6_vdmpyhsuisat_acc - 264
    {5084, 879, 4, 4 },
    // Hexagon::V6_vdmpyhsusat - 265
    {5113, 883, 3, 3 },
    // Hexagon::V6_vdmpyhsusat_acc - 266
    {5138, 886, 4, 4 },
    // Hexagon::V6_vdmpyhvsat - 267
    {5009, 890, 3, 3 },
    // Hexagon::V6_vdmpyhvsat_acc - 268
    {5032, 893, 4, 4 },
    // Hexagon::V6_vdsaduh - 269
    {5164, 897, 3, 3 },
    // Hexagon::V6_vdsaduh_acc - 270
    {5184, 900, 4, 4 },
    // Hexagon::V6_veqb - 271
    {5205, 904, 3, 3 },
    // Hexagon::V6_veqb_and - 272
    {5231, 907, 4, 4 },
    // Hexagon::V6_veqb_or - 273
    {5258, 911, 4, 4 },
    // Hexagon::V6_veqb_xor - 274
    {5285, 915, 4, 4 },
    // Hexagon::V6_veqh - 275
    {5312, 919, 3, 3 },
    // Hexagon::V6_veqh_and - 276
    {5338, 922, 4, 4 },
    // Hexagon::V6_veqh_or - 277
    {5365, 926, 4, 4 },
    // Hexagon::V6_veqh_xor - 278
    {5392, 930, 4, 4 },
    // Hexagon::V6_veqw - 279
    {5419, 934, 3, 3 },
    // Hexagon::V6_veqw_and - 280
    {5445, 937, 4, 4 },
    // Hexagon::V6_veqw_or - 281
    {5472, 941, 4, 4 },
    // Hexagon::V6_veqw_xor - 282
    {5499, 945, 4, 4 },
    // Hexagon::V6_vlsrh - 283
    {5526, 949, 3, 3 },
    // Hexagon::V6_vlsrhv - 284
    {5526, 952, 3, 3 },
    // Hexagon::V6_vlsrw - 285
    {5544, 955, 3, 3 },
    // Hexagon::V6_vlsrwv - 286
    {5544, 958, 3, 3 },
    // Hexagon::V6_vmaxb - 287
    {5562, 961, 3, 3 },
    // Hexagon::V6_vmaxh - 288
    {5580, 964, 3, 3 },
    // Hexagon::V6_vmaxub - 289
    {5598, 967, 3, 3 },
    // Hexagon::V6_vmaxuh - 290
    {5617, 970, 3, 3 },
    // Hexagon::V6_vmaxw - 291
    {5636, 973, 3, 3 },
    // Hexagon::V6_vminb - 292
    {5654, 976, 3, 3 },
    // Hexagon::V6_vminh - 293
    {5672, 979, 3, 3 },
    // Hexagon::V6_vminub - 294
    {5690, 982, 3, 3 },
    // Hexagon::V6_vminuh - 295
    {5709, 985, 3, 3 },
    // Hexagon::V6_vminw - 296
    {5728, 988, 3, 3 },
    // Hexagon::V6_vmpabus - 297
    {5746, 991, 3, 3 },
    // Hexagon::V6_vmpabus_acc - 298
    {5766, 994, 4, 4 },
    // Hexagon::V6_vmpabusv - 299
    {5746, 998, 3, 3 },
    // Hexagon::V6_vmpabuu - 300
    {5787, 1001, 3, 3 },
    // Hexagon::V6_vmpabuu_acc - 301
    {5807, 1004, 4, 4 },
    // Hexagon::V6_vmpabuuv - 302
    {5787, 1008, 3, 3 },
    // Hexagon::V6_vmpahb - 303
    {5828, 1011, 3, 3 },
    // Hexagon::V6_vmpahb_acc - 304
    {5847, 1014, 4, 4 },
    // Hexagon::V6_vmpauhb - 305
    {5867, 1018, 3, 3 },
    // Hexagon::V6_vmpauhb_acc - 306
    {5887, 1021, 4, 4 },
    // Hexagon::V6_vmpybus - 307
    {5908, 1025, 3, 3 },
    // Hexagon::V6_vmpybus_acc - 308
    {5928, 1028, 4, 4 },
    // Hexagon::V6_vmpybusv - 309
    {5908, 1032, 3, 3 },
    // Hexagon::V6_vmpybusv_acc - 310
    {5928, 1035, 4, 4 },
    // Hexagon::V6_vmpybv - 311
    {5949, 1039, 3, 3 },
    // Hexagon::V6_vmpybv_acc - 312
    {5967, 1042, 4, 4 },
    // Hexagon::V6_vmpyewuh - 313
    {5986, 1046, 3, 3 },
    // Hexagon::V6_vmpyh - 314
    {6007, 1049, 3, 3 },
    // Hexagon::V6_vmpyh_acc - 315
    {6025, 1052, 4, 4 },
    // Hexagon::V6_vmpyhsat_acc - 316
    {6044, 1056, 4, 4 },
    // Hexagon::V6_vmpyhsrs - 317
    {6067, 1060, 3, 3 },
    // Hexagon::V6_vmpyhss - 318
    {6097, 1063, 3, 3 },
    // Hexagon::V6_vmpyhus - 319
    {6123, 1066, 3, 3 },
    // Hexagon::V6_vmpyhus_acc - 320
    {6143, 1069, 4, 4 },
    // Hexagon::V6_vmpyhv - 321
    {6007, 1073, 3, 3 },
    // Hexagon::V6_vmpyhv_acc - 322
    {6025, 1076, 4, 4 },
    // Hexagon::V6_vmpyhvsrs - 323
    {6067, 1080, 3, 3 },
    // Hexagon::V6_vmpyiewh_acc - 324
    {6164, 1083, 4, 4 },
    // Hexagon::V6_vmpyiewuh - 325
    {6186, 1087, 3, 3 },
    // Hexagon::V6_vmpyiewuh_acc - 326
    {6208, 1090, 4, 4 },
    // Hexagon::V6_vmpyih - 327
    {6231, 1094, 3, 3 },
    // Hexagon::V6_vmpyih_acc - 328
    {6250, 1097, 4, 4 },
    // Hexagon::V6_vmpyihb - 329
    {6270, 1101, 3, 3 },
    // Hexagon::V6_vmpyihb_acc - 330
    {6290, 1104, 4, 4 },
    // Hexagon::V6_vmpyiowh - 331
    {6311, 1108, 3, 3 },
    // Hexagon::V6_vmpyiwb - 332
    {6332, 1111, 3, 3 },
    // Hexagon::V6_vmpyiwb_acc - 333
    {6352, 1114, 4, 4 },
    // Hexagon::V6_vmpyiwh - 334
    {6373, 1118, 3, 3 },
    // Hexagon::V6_vmpyiwh_acc - 335
    {6393, 1121, 4, 4 },
    // Hexagon::V6_vmpyiwub - 336
    {6414, 1125, 3, 3 },
    // Hexagon::V6_vmpyiwub_acc - 337
    {6435, 1128, 4, 4 },
    // Hexagon::V6_vmpyowh - 338
    {6457, 1132, 3, 3 },
    // Hexagon::V6_vmpyowh_rnd - 339
    {6485, 1135, 3, 3 },
    // Hexagon::V6_vmpyub - 340
    {6517, 1138, 3, 3 },
    // Hexagon::V6_vmpyub_acc - 341
    {6536, 1141, 4, 4 },
    // Hexagon::V6_vmpyubv - 342
    {6517, 1145, 3, 3 },
    // Hexagon::V6_vmpyubv_acc - 343
    {6536, 1148, 4, 4 },
    // Hexagon::V6_vmpyuh - 344
    {6556, 1152, 3, 3 },
    // Hexagon::V6_vmpyuh_acc - 345
    {6575, 1155, 4, 4 },
    // Hexagon::V6_vmpyuhv - 346
    {6556, 1159, 3, 3 },
    // Hexagon::V6_vmpyuhv_acc - 347
    {6575, 1162, 4, 4 },
    // Hexagon::V6_vnavgb - 348
    {6595, 1166, 3, 3 },
    // Hexagon::V6_vnavgh - 349
    {6614, 1169, 3, 3 },
    // Hexagon::V6_vnavgub - 350
    {6633, 1172, 3, 3 },
    // Hexagon::V6_vnavgw - 351
    {6653, 1175, 3, 3 },
    // Hexagon::V6_vnormamth - 352
    {6672, 1178, 2, 2 },
    // Hexagon::V6_vnormamtw - 353
    {6691, 1180, 2, 2 },
    // Hexagon::V6_vpackeb - 354
    {6710, 1182, 3, 3 },
    // Hexagon::V6_vpackeh - 355
    {6730, 1185, 3, 3 },
    // Hexagon::V6_vpackhb_sat - 356
    {6750, 1188, 3, 3 },
    // Hexagon::V6_vpackhub_sat - 357
    {6774, 1191, 3, 3 },
    // Hexagon::V6_vpackob - 358
    {6799, 1194, 3, 3 },
    // Hexagon::V6_vpackoh - 359
    {6819, 1197, 3, 3 },
    // Hexagon::V6_vpackwh_sat - 360
    {6839, 1200, 3, 3 },
    // Hexagon::V6_vpackwuh_sat - 361
    {6863, 1203, 3, 3 },
    // Hexagon::V6_vpopcounth - 362
    {6888, 1206, 2, 2 },
    // Hexagon::V6_vrmpybub_rtt - 363
    {6908, 1208, 3, 3 },
    // Hexagon::V6_vrmpybub_rtt_acc - 364
    {6933, 1211, 4, 4 },
    // Hexagon::V6_vrmpybus - 365
    {6959, 1215, 3, 3 },
    // Hexagon::V6_vrmpybus_acc - 366
    {6980, 1218, 4, 4 },
    // Hexagon::V6_vrmpybusi - 367
    {7002, 1222, 4, 3 },
    // Hexagon::V6_vrmpybusi_acc - 368
    {7027, 1225, 5, 4 },
    // Hexagon::V6_vrmpybusv - 369
    {6959, 1229, 3, 3 },
    // Hexagon::V6_vrmpybusv_acc - 370
    {6980, 1232, 4, 4 },
    // Hexagon::V6_vrmpybv - 371
    {7053, 1236, 3, 3 },
    // Hexagon::V6_vrmpybv_acc - 372
    {7072, 1239, 4, 4 },
    // Hexagon::V6_vrmpyub - 373
    {7092, 1243, 3, 3 },
    // Hexagon::V6_vrmpyub_acc - 374
    {7112, 1246, 4, 4 },
    // Hexagon::V6_vrmpyub_rtt - 375
    {7133, 1250, 3, 3 },
    // Hexagon::V6_vrmpyub_rtt_acc - 376
    {7160, 1253, 4, 4 },
    // Hexagon::V6_vrmpyubi - 377
    {7188, 1257, 4, 3 },
    // Hexagon::V6_vrmpyubi_acc - 378
    {7212, 1260, 5, 4 },
    // Hexagon::V6_vrmpyubv - 379
    {7092, 1264, 3, 3 },
    // Hexagon::V6_vrmpyubv_acc - 380
    {7112, 1267, 4, 4 },
    // Hexagon::V6_vrotr - 381
    {7237, 1271, 3, 3 },
    // Hexagon::V6_vroundhb - 382
    {7255, 1274, 3, 3 },
    // Hexagon::V6_vroundhub - 383
    {7280, 1277, 3, 3 },
    // Hexagon::V6_vrounduhub - 384
    {7306, 1280, 3, 3 },
    // Hexagon::V6_vrounduwuh - 385
    {7333, 1283, 3, 3 },
    // Hexagon::V6_vroundwh - 386
    {7360, 1286, 3, 3 },
    // Hexagon::V6_vroundwuh - 387
    {7385, 1289, 3, 3 },
    // Hexagon::V6_vrsadubi - 388
    {7411, 1292, 4, 3 },
    // Hexagon::V6_vrsadubi_acc - 389
    {7435, 1295, 5, 4 },
    // Hexagon::V6_vsathub - 390
    {7460, 1299, 3, 3 },
    // Hexagon::V6_vsatuwuh - 391
    {7480, 1302, 3, 3 },
    // Hexagon::V6_vsatwh - 392
    {7501, 1305, 3, 3 },
    // Hexagon::V6_vsb - 393
    {7520, 1308, 2, 2 },
    // Hexagon::V6_vscattermh - 394
    {7535, 1310, 4, 4 },
    // Hexagon::V6_vscattermh_add - 395
    {7563, 1314, 4, 4 },
    // Hexagon::V6_vscattermhq - 396
    {7592, 1318, 5, 5 },
    // Hexagon::V6_vscattermhw - 397
    {7628, 1323, 4, 4 },
    // Hexagon::V6_vscattermhw_add - 398
    {7656, 1327, 4, 4 },
    // Hexagon::V6_vscattermhwq - 399
    {7685, 1331, 5, 5 },
    // Hexagon::V6_vscattermw - 400
    {7721, 1336, 4, 4 },
    // Hexagon::V6_vscattermw_add - 401
    {7749, 1340, 4, 4 },
    // Hexagon::V6_vscattermwq - 402
    {7778, 1344, 5, 5 },
    // Hexagon::V6_vsh - 403
    {7814, 1349, 2, 2 },
    // Hexagon::V6_vshufeh - 404
    {7829, 1351, 3, 3 },
    // Hexagon::V6_vshuff - 405
    {7850, 1354, 5, 5 },
    // Hexagon::V6_vshuffb - 406
    {7870, 1359, 2, 2 },
    // Hexagon::V6_vshuffeb - 407
    {7887, 1361, 3, 3 },
    // Hexagon::V6_vshuffh - 408
    {7908, 1364, 2, 2 },
    // Hexagon::V6_vshuffob - 409
    {7925, 1366, 3, 3 },
    // Hexagon::V6_vshufoeb - 410
    {7946, 1369, 3, 3 },
    // Hexagon::V6_vshufoeh - 411
    {7968, 1372, 3, 3 },
    // Hexagon::V6_vshufoh - 412
    {7990, 1375, 3, 3 },
    // Hexagon::V6_vsubb - 413
    {132, 1378, 3, 3 },
    // Hexagon::V6_vsubb_dv - 414
    {132, 1381, 3, 3 },
    // Hexagon::V6_vsubbnq - 415
    {8011, 1384, 4, 4 },
    // Hexagon::V6_vsubbq - 416
    {8035, 1388, 4, 4 },
    // Hexagon::V6_vsubbsat - 417
    {8058, 1392, 3, 3 },
    // Hexagon::V6_vsubbsat_dv - 418
    {8058, 1395, 3, 3 },
    // Hexagon::V6_vsubh - 419
    {8080, 1398, 3, 3 },
    // Hexagon::V6_vsubh_dv - 420
    {8080, 1401, 3, 3 },
    // Hexagon::V6_vsubhnq - 421
    {8098, 1404, 4, 4 },
    // Hexagon::V6_vsubhq - 422
    {8122, 1408, 4, 4 },
    // Hexagon::V6_vsubhsat - 423
    {8145, 1412, 3, 3 },
    // Hexagon::V6_vsubhsat_dv - 424
    {8145, 1415, 3, 3 },
    // Hexagon::V6_vsubhw - 425
    {8080, 1418, 3, 3 },
    // Hexagon::V6_vsububh - 426
    {8167, 1421, 3, 3 },
    // Hexagon::V6_vsububsat - 427
    {8186, 1424, 3, 3 },
    // Hexagon::V6_vsububsat_dv - 428
    {8186, 1427, 3, 3 },
    // Hexagon::V6_vsubuhsat - 429
    {8209, 1430, 3, 3 },
    // Hexagon::V6_vsubuhsat_dv - 430
    {8209, 1433, 3, 3 },
    // Hexagon::V6_vsubuhw - 431
    {8232, 1436, 3, 3 },
    // Hexagon::V6_vsubuwsat - 432
    {8251, 1439, 3, 3 },
    // Hexagon::V6_vsubuwsat_dv - 433
    {8251, 1442, 3, 3 },
    // Hexagon::V6_vsubw - 434
    {8274, 1445, 3, 3 },
    // Hexagon::V6_vsubw_dv - 435
    {8292, 1448, 3, 3 },
    {8274, 1451, 3, 3 },
    // Hexagon::V6_vsubwnq - 437
    {8300, 1454, 4, 4 },
    // Hexagon::V6_vsubwq - 438
    {8324, 1458, 4, 4 },
    // Hexagon::V6_vsubwsat - 439
    {8347, 1462, 3, 3 },
    // Hexagon::V6_vsubwsat_dv - 440
    {8347, 1465, 3, 3 },
    // Hexagon::V6_vtmpyb - 441
    {8369, 1468, 3, 3 },
    // Hexagon::V6_vtmpyb_acc - 442
    {8388, 1471, 4, 4 },
    // Hexagon::V6_vtmpybus - 443
    {8408, 1475, 3, 3 },
    // Hexagon::V6_vtmpybus_acc - 444
    {8429, 1478, 4, 4 },
    // Hexagon::V6_vtmpyhb - 445
    {8451, 1482, 3, 3 },
    // Hexagon::V6_vtmpyhb_acc - 446
    {8471, 1485, 4, 4 },
    // Hexagon::V6_vunpackb - 447
    {8492, 1489, 2, 2 },
    // Hexagon::V6_vunpackh - 448
    {8510, 1491, 2, 2 },
    // Hexagon::V6_vunpackoh - 449
    {8528, 1493, 3, 3 },
    // Hexagon::V6_vunpackub - 450
    {8548, 1496, 2, 2 },
    // Hexagon::V6_vunpackuh - 451
    {8567, 1498, 2, 2 },
    // Hexagon::V6_vxor - 452
    {8292, 1500, 3, 3 },
    // Hexagon::V6_vzb - 453
    {8586, 1503, 2, 2 },
    // Hexagon::V6_vzh - 454
    {8601, 1505, 2, 2 },
    // Hexagon::V6_zLd_ai - 455
    {8616, 1507, 2, 2 },
    // Hexagon::V6_zLd_pred_ai - 456
    {8629, 1509, 3, 3 },
    // Hexagon::Y2_dcfetchbo - 457
    {8650, 1512, 2, 2 },
  };

  static const AliasPatternCond Conds[] = {
    // (A2_andir IntRegs:$Rd32, IntRegs:$Rs32, 255) - 0
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(255)},
    // (A2_paddif IntRegs:$Rd32, PredRegs:$Pu4, IntRegs:$Rs32, 0) - 3
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (A2_paddifnew IntRegs:$Rd32, PredRegs:$Pu4, IntRegs:$Rs32, 0) - 7
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (A2_paddit IntRegs:$Rd32, PredRegs:$Pu4, IntRegs:$Rs32, 0) - 11
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (A2_padditnew IntRegs:$Rd32, PredRegs:$Pu4, IntRegs:$Rs32, 0) - 15
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (A2_subri IntRegs:$Rd32, 0, IntRegs:$Rs32) - 19
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (A2_subri IntRegs:$Rd32, -1, IntRegs:$Rs32) - 22
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(-1)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (A2_vaddub DoubleRegs:$Rdd32, DoubleRegs:$Rss32, DoubleRegs:$Rtt32) - 25
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (A2_vsubub DoubleRegs:$Rdd32, DoubleRegs:$Rss32, DoubleRegs:$Rtt32) - 28
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (C2_cmpgt PredRegs:$Pd4, IntRegs:$Rt32, IntRegs:$Rs32) - 31
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (C2_cmpgtu PredRegs:$Pd4, IntRegs:$Rt32, IntRegs:$Rs32) - 34
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (C2_or PredRegs:$Pd4, PredRegs:$Ps4, PredRegs:$Ps4) - 37
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (J2_jumpf PredRegs:$Pu4, b30_2Imm:$Ii) - 40
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    // (J2_jumprf PredRegs:$Pu4, IntRegs:$Rs32) - 41
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (J2_jumprt PredRegs:$Pu4, IntRegs:$Rs32) - 43
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (J2_jumpt PredRegs:$Pu4, b30_2Imm:$Ii) - 45
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    // (J2_trap1 R0, u8_0Imm:$Ii) - 46
    {AliasPatternCond::K_Reg, Hexagon::R0},
    {AliasPatternCond::K_Ignore, 0},
    // (L2_deallocframe D15, R30) - 48
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L2_loadalignb_io DoubleRegs:$Ryy32, IntRegs:$Rs32, 0) - 50
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadalignh_io DoubleRegs:$Ryy32, IntRegs:$Rs32, 0) - 54
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadbsw2_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 58
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadbsw4_io DoubleRegs:$Rdd32, IntRegs:$Rs32, 0) - 61
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadbzw2_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 64
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadbzw4_io DoubleRegs:$Rdd32, IntRegs:$Rs32, 0) - 67
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadrb_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 70
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadrd_io DoubleRegs:$Rdd32, IntRegs:$Rs32, 0) - 73
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadrh_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 76
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadri_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 79
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadrub_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 82
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadruh_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 85
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrbf_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 88
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrbfnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 92
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrbt_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 96
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrbtnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 100
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrdf_io DoubleRegs:$Rdd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 104
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrdfnew_io DoubleRegs:$Rdd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 108
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrdt_io DoubleRegs:$Rdd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 112
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrdtnew_io DoubleRegs:$Rdd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 116
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrhf_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 120
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrhfnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 124
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrht_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 128
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrhtnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 132
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrif_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 136
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrifnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 140
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrit_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 144
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadritnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 148
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrubf_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 152
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrubfnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 156
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrubt_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 160
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrubtnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 164
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadruhf_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 168
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadruhfnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 172
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadruht_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 176
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadruhtnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 180
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_add_memopb_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 184
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_add_memoph_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 187
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_add_memopw_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 190
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_and_memopb_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 193
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_and_memoph_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 196
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_and_memopw_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 199
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_iadd_memopb_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 202
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_iadd_memoph_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 204
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_iadd_memopw_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 206
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_iand_memopb_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 208
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_iand_memoph_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 210
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_iand_memopw_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 212
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_ior_memopb_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 214
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_ior_memoph_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 216
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_ior_memopw_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 218
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_isub_memopb_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 220
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_isub_memoph_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 222
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_isub_memopw_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 224
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_or_memopb_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 226
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_or_memoph_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 229
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_or_memopw_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 232
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_return D15, R30) - 235
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_return_f D15, PredRegs:$Pv4, R30) - 237
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_return_fnew_pnt D15, PredRegs:$Pv4, R30) - 240
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_return_fnew_pt D15, PredRegs:$Pv4, R30) - 243
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_return_t D15, PredRegs:$Pv4, R30) - 246
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_return_tnew_pnt D15, PredRegs:$Pv4, R30) - 249
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_return_tnew_pt D15, PredRegs:$Pv4, R30) - 252
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_sub_memopb_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 255
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_sub_memoph_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 258
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_sub_memopw_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 261
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (M2_mpyi IntRegs:$Rd32, IntRegs:$Rs32, IntRegs:$Rt32) - 264
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_allocframe R29, u11_3Imm:$Ii) - 267
    {AliasPatternCond::K_Reg, Hexagon::R29},
    {AliasPatternCond::K_Ignore, 0},
    // (S2_pstorerbf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 269
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerbnewf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 273
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerbnewt_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 277
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerbt_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 281
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerdf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, DoubleRegs:$Rtt32) - 285
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (S2_pstorerdt_io PredRegs:$Pv4, IntRegs:$Rs32, 0, DoubleRegs:$Rtt32) - 289
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (S2_pstorerff_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 293
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerft_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 297
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerhf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 301
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerhnewf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 305
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerhnewt_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 309
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerht_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 313
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerif_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 317
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerinewf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 321
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerinewt_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 325
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerit_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 329
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storerb_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 333
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storerbnew_io IntRegs:$Rs32, 0, IntRegs:$Nt8) - 336
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storerd_io IntRegs:$Rs32, 0, DoubleRegs:$Rtt32) - 339
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (S2_storerf_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 342
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storerh_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 345
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storerhnew_io IntRegs:$Rs32, 0, IntRegs:$Nt8) - 348
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storeri_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 351
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storerinew_io IntRegs:$Rs32, 0, IntRegs:$Nt8) - 354
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_tableidxb IntRegs:$Rx32, IntRegs:$Rs32, u4_0Imm:$Ii, u5_0Imm:$II) - 357
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    // (S4_pstorerbfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 361
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerbnewfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 365
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerbnewtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 369
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerbtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 373
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerdfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, DoubleRegs:$Rtt32) - 377
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (S4_pstorerdtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, DoubleRegs:$Rtt32) - 381
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (S4_pstorerffnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 385
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerftnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 389
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerhfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 393
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerhnewfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 397
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerhnewtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 401
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerhtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 405
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerifnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 409
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerinewfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 413
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerinewtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 417
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstoreritnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 421
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_storeirb_io IntRegs:$Rs32, 0, s32_0Imm:$II) - 425
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirbf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 427
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirbfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 430
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirbt_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 433
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirbtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 436
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirh_io IntRegs:$Rs32, 0, s32_0Imm:$II) - 439
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirhf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 441
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirhfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 444
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirht_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 447
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirhtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 450
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeiri_io IntRegs:$Rs32, 0, s32_0Imm:$II) - 453
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirif_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 455
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirifnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 458
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirit_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 461
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeiritnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 464
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_extractw IntRegs:$Rd32, HvxVR:$Vu32, IntRegs:$Rs32) - 467
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vL32Ub_ai HvxVR:$Vd32, IntRegs:$Rt32, 0) - 470
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_ai HvxVR:$Vd32, IntRegs:$Rt32, 0) - 473
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_cur_npred_pi HvxVR:$Vd32, IntRegs:$Rt32, PredRegs:$Pv4, 0) - 476
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_cur_pred_pi HvxVR:$Vd32, IntRegs:$Rt32, PredRegs:$Pv4, 0) - 481
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_npred_ai HvxVR:$Vd32, PredRegs:$Pv4, IntRegs:$Rt32, 0) - 486
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_npred_pi HvxVR:$Vd32, IntRegs:$Rt32, PredRegs:$Pv4, 0) - 490
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_nt_cur_npred_pi HvxVR:$Vd32, IntRegs:$Rt32, PredRegs:$Pv4, 0) - 495
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_nt_cur_pred_pi HvxVR:$Vd32, IntRegs:$Rt32, PredRegs:$Pv4, 0) - 500
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_nt_npred_ai HvxVR:$Vd32, PredRegs:$Pv4, IntRegs:$Rt32, 0) - 505
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_nt_npred_pi HvxVR:$Vd32, IntRegs:$Rt32, PredRegs:$Pv4, 0) - 509
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_nt_pred_ai HvxVR:$Vd32, PredRegs:$Pv4, IntRegs:$Rt32, 0) - 514
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_nt_tmp_pred_ai HvxVR:$Vd32, PredRegs:$Pv4, IntRegs:$Rt32, 0) - 518
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_pred_ai HvxVR:$Vd32, PredRegs:$Pv4, IntRegs:$Rt32, 0) - 522
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_tmp_pred_ai HvxVR:$Vd32, PredRegs:$Pv4, IntRegs:$Rt32, 0) - 526
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vS32Ub_ai IntRegs:$Rt32, 0, HvxVR:$Vs32) - 530
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32Ub_npred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 533
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32Ub_pred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 537
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_ai IntRegs:$Rt32, 0, HvxVR:$Vs32) - 541
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_new_ai IntRegs:$Rt32, 0, HvxVR:$Os8) - 544
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_npred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 547
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nqpred_ai HvxQR:$Qv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 551
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nt_ai IntRegs:$Rt32, 0, HvxVR:$Vs32) - 555
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nt_new_ai IntRegs:$Rt32, 0, HvxVR:$Os8) - 558
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nt_npred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 561
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nt_nqpred_ai HvxQR:$Qv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 565
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nt_pred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 569
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nt_qpred_ai HvxQR:$Qv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 573
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_pred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 577
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_qpred_ai HvxQR:$Qv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 581
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsb_sat HvxVR:$Vd32, HvxVR:$Vu32) - 585
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsdiffh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 587
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsdiffub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 590
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsdiffuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 593
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsdiffw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 596
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsh_sat HvxVR:$Vd32, HvxVR:$Vu32) - 599
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsw_sat HvxVR:$Vd32, HvxVR:$Vu32) - 601
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 603
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddb_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 606
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vaddbnq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 609
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddbq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 613
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddbsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 617
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddbsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 620
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vaddh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 623
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddh_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 626
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vaddhnq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 629
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddhq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 633
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddhsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 637
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddhsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 640
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vaddhw HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 643
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddhw_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 646
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddubh HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 650
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddubh_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 653
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddubsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 657
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddubsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 660
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vadduhsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 663
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vadduhsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 666
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vadduhw HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 669
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vadduhw_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 672
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vadduwsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 676
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vadduwsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 679
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vaddw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 682
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddw_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 685
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vaddwnq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 688
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddwq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 692
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddwsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 696
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddwsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 699
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vandnqrt HvxVR:$Vd32, HvxQR:$Qu4, IntRegs:$Rt32) - 702
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vandnqrt_acc HvxVR:$Vx32, HvxQR:$Qu4, IntRegs:$Rt32) - 705
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vandqrt HvxVR:$Vd32, HvxQR:$Qu4, IntRegs:$Rt32) - 709
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vandqrt_acc HvxVR:$Vx32, HvxQR:$Qu4, IntRegs:$Rt32) - 712
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vandvrt HvxQR:$Qd4, HvxVR:$Vu32, IntRegs:$Rt32) - 716
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vandvrt_acc HvxQR:$Qx4, HvxVR:$Vu32, IntRegs:$Rt32) - 719
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vaslh HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 723
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vaslh_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 726
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vaslhv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 730
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaslw HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 733
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vaslw_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 736
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vaslwv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 740
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vasr_into HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 743
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vasrh HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 747
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vasrh_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 750
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vasrhbrndsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32, IntRegsLow8:$Rt8) - 754
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsLow8RegClassID},
    // (V6_vasrhubrndsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32, IntRegsLow8:$Rt8) - 758
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsLow8RegClassID},
    // (V6_vasrhubsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32, IntRegsLow8:$Rt8) - 762
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsLow8RegClassID},
    // (V6_vasrhv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 766
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vasrw HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 769
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vasrw_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 772
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vasrwhrndsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32, IntRegsLow8:$Rt8) - 776
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsLow8RegClassID},
    // (V6_vasrwuhsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32, IntRegsLow8:$Rt8) - 780
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsLow8RegClassID},
    // (V6_vasrwv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 784
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 787
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgbrnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 790
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 793
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavghrnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 796
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 799
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgubrnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 802
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavguh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 805
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavguhrnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 808
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavguw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 811
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavguwrnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 814
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 817
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgwrnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 820
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vcl0h HvxVR:$Vd32, HvxVR:$Vu32) - 823
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vcl0w HvxVR:$Vd32, HvxVR:$Vu32) - 825
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vdealb HvxVR:$Vd32, HvxVR:$Vu32) - 827
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vdealb4w HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 829
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vdealh HvxVR:$Vd32, HvxVR:$Vu32) - 832
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vdmpybus HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 834
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpybus_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 837
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpybus_dv HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 841
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpybus_dv_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 844
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhb HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 848
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhb_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 851
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhb_dv HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 855
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhb_dv_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 858
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhisat HvxVR:$Vd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 862
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhisat_acc HvxVR:$Vx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 865
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhsat HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 869
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhsat_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 872
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhsuisat HvxVR:$Vd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 876
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhsuisat_acc HvxVR:$Vx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 879
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhsusat HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 883
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhsusat_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 886
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhvsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 890
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vdmpyhvsat_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 893
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vdsaduh HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 897
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdsaduh_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 900
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_veqb HvxQR:$Qd4, HvxVR:$Vu32, HvxVR:$Vv32) - 904
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqb_and HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 907
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqb_or HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 911
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqb_xor HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 915
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqh HvxQR:$Qd4, HvxVR:$Vu32, HvxVR:$Vv32) - 919
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqh_and HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 922
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqh_or HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 926
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqh_xor HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 930
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqw HvxQR:$Qd4, HvxVR:$Vu32, HvxVR:$Vv32) - 934
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqw_and HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 937
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqw_or HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 941
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqw_xor HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 945
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vlsrh HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 949
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vlsrhv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 952
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vlsrw HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 955
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vlsrwv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 958
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmaxb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 961
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmaxh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 964
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmaxub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 967
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmaxuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 970
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmaxw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 973
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vminb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 976
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vminh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 979
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vminub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 982
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vminuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 985
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vminw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 988
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpabus HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 991
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpabus_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 994
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpabusv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 998
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vmpabuu HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1001
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpabuu_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1004
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpabuuv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1008
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vmpahb HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1011
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpahb_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1014
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpauhb HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1018
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpauhb_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1021
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpybus HvxWR:$Vdd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1025
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpybus_acc HvxWR:$Vxx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1028
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpybusv HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1032
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpybusv_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1035
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpybv HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1039
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpybv_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1042
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyewuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1046
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyh HvxWR:$Vdd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1049
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyh_acc HvxWR:$Vxx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1052
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyhsat_acc HvxWR:$Vxx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1056
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyhsrs HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1060
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyhss HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1063
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyhus HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1066
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyhus_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1069
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyhv HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1073
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyhv_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1076
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyhvsrs HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1080
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyiewh_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1083
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyiewuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1087
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyiewuh_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1090
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyih HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1094
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyih_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1097
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyihb HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1101
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyihb_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1104
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyiowh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1108
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyiwb HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1111
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyiwb_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1114
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyiwh HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1118
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyiwh_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1121
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyiwub HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1125
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyiwub_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1128
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyowh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1132
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyowh_rnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1135
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyub HvxWR:$Vdd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1138
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyub_acc HvxWR:$Vxx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1141
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyubv HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1145
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyubv_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1148
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyuh HvxWR:$Vdd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1152
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyuh_acc HvxWR:$Vxx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1155
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyuhv HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1159
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyuhv_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1162
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vnavgb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1166
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vnavgh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1169
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vnavgub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1172
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vnavgw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1175
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vnormamth HvxVR:$Vd32, HvxVR:$Vu32) - 1178
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vnormamtw HvxVR:$Vd32, HvxVR:$Vu32) - 1180
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackeb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1182
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackeh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1185
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackhb_sat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1188
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackhub_sat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1191
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackob HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1194
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackoh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1197
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackwh_sat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1200
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackwuh_sat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1203
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpopcounth HvxVR:$Vd32, HvxVR:$Vu32) - 1206
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrmpybub_rtt HvxWR:$Vdd32, HvxVR:$Vu32, DoubleRegs:$Rtt32) - 1208
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (V6_vrmpybub_rtt_acc HvxWR:$Vxx32, HvxVR:$Vu32, DoubleRegs:$Rtt32) - 1211
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (V6_vrmpybus HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1215
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpybus_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1218
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpybusi HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32, u1_0Imm:$Ii) - 1222
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpybusi_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32, u1_0Imm:$Ii) - 1225
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpybusv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1229
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrmpybusv_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1232
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrmpybv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1236
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrmpybv_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1239
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrmpyub HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1243
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpyub_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1246
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpyub_rtt HvxWR:$Vdd32, HvxVR:$Vu32, DoubleRegs:$Rtt32) - 1250
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (V6_vrmpyub_rtt_acc HvxWR:$Vxx32, HvxVR:$Vu32, DoubleRegs:$Rtt32) - 1253
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (V6_vrmpyubi HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32, u1_0Imm:$Ii) - 1257
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpyubi_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32, u1_0Imm:$Ii) - 1260
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpyubv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1264
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrmpyubv_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1267
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrotr HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1271
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vroundhb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1274
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vroundhub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1277
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrounduhub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1280
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrounduwuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1283
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vroundwh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1286
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vroundwuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1289
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrsadubi HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32, u1_0Imm:$Ii) - 1292
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrsadubi_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32, u1_0Imm:$Ii) - 1295
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vsathub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1299
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsatuwuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1302
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsatwh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1305
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsb HvxWR:$Vdd32, HvxVR:$Vu32) - 1308
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermh IntRegs:$Rt32, ModRegs:$Mu2, HvxVR:$Vv32, HvxVR:$Vw32) - 1310
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermh_add IntRegs:$Rt32, ModRegs:$Mu2, HvxVR:$Vv32, HvxVR:$Vw32) - 1314
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermhq HvxQR:$Qs4, IntRegs:$Rt32, ModRegs:$Mu2, HvxVR:$Vv32, HvxVR:$Vw32) - 1318
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermhw IntRegs:$Rt32, ModRegs:$Mu2, HvxWR:$Vvv32, HvxVR:$Vw32) - 1323
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermhw_add IntRegs:$Rt32, ModRegs:$Mu2, HvxWR:$Vvv32, HvxVR:$Vw32) - 1327
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermhwq HvxQR:$Qs4, IntRegs:$Rt32, ModRegs:$Mu2, HvxWR:$Vvv32, HvxVR:$Vw32) - 1331
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermw IntRegs:$Rt32, ModRegs:$Mu2, HvxVR:$Vv32, HvxVR:$Vw32) - 1336
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermw_add IntRegs:$Rt32, ModRegs:$Mu2, HvxVR:$Vv32, HvxVR:$Vw32) - 1340
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermwq HvxQR:$Qs4, IntRegs:$Rt32, ModRegs:$Mu2, HvxVR:$Vv32, HvxVR:$Vw32) - 1344
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsh HvxWR:$Vdd32, HvxVR:$Vu32) - 1349
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshufeh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1351
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshuff HvxVR:$Vy32, HvxVR:$Vx32, IntRegs:$Rt32) - 1354
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vshuffb HvxVR:$Vd32, HvxVR:$Vu32) - 1359
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshuffeb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1361
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshuffh HvxVR:$Vd32, HvxVR:$Vu32) - 1364
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshuffob HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1366
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshufoeb HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1369
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshufoeh HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1372
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshufoh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1375
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1378
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubb_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1381
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubbnq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 1384
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubbq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 1388
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubbsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1392
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubbsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1395
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1398
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubh_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1401
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubhnq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 1404
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubhq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 1408
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubhsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1412
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubhsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1415
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubhw HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1418
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsububh HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1421
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsububsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1424
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsububsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1427
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubuhsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1430
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubuhsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1433
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubuhw HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1436
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubuwsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1439
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubuwsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1442
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1445
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubw_dv HvxWR:$Vdd32, W15, W15) - 1448
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::W15},
    {AliasPatternCond::K_Reg, Hexagon::W15},
    // (V6_vsubw_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1451
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubwnq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 1454
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubwq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 1458
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubwsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1462
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubwsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1465
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vtmpyb HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1468
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vtmpyb_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1471
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vtmpybus HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1475
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vtmpybus_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1478
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vtmpyhb HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1482
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vtmpyhb_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1485
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vunpackb HvxWR:$Vdd32, HvxVR:$Vu32) - 1489
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vunpackh HvxWR:$Vdd32, HvxVR:$Vu32) - 1491
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vunpackoh HvxWR:$Vxx32, HvxVR:$Vu32) - 1493
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vunpackub HvxWR:$Vdd32, HvxVR:$Vu32) - 1496
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vunpackuh HvxWR:$Vdd32, HvxVR:$Vu32) - 1498
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vxor HvxVR:$Vd32, HvxVR:$Vd32, HvxVR:$Vd32) - 1500
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_TiedReg, 0},
    // (V6_vzb HvxWR:$Vdd32, HvxVR:$Vu32) - 1503
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vzh HvxWR:$Vdd32, HvxVR:$Vu32) - 1505
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_zLd_ai IntRegs:$Rt32, 0) - 1507
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_zLd_pred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0) - 1509
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (Y2_dcfetchbo IntRegs:$Rs32, 0) - 1512
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
  };

  static const char AsmStrings[] =
    /* 0 */ "$\x01 = zxtb($\x02)\0"
    /* 14 */ "if (!$\x02) $\x01 = $\x03\0"
    /* 31 */ "if (!$\x02.new) $\x01 = $\x03\0"
    /* 52 */ "if ($\x02) $\x01 = $\x03\0"
    /* 68 */ "if ($\x02.new) $\x01 = $\x03\0"
    /* 88 */ "$\x01 = neg($\x03)\0"
    /* 101 */ "$\x01 = not($\x03)\0"
    /* 114 */ "$\x01 = vaddb($\x02,$\x03)\0"
    /* 132 */ "$\x01 = vsubb($\x02,$\x03)\0"
    /* 150 */ "$\x01 = cmp.lt($\x03,$\x02)\0"
    /* 169 */ "$\x01 = cmp.ltu($\x03,$\x02)\0"
    /* 189 */ "$\x01 = $\x02\0"
    /* 197 */ "if (!$\x01) jump $\xFF\x02\x01\0"
    /* 216 */ "if (!$\x01) jumpr $\x02\0"
    /* 234 */ "if ($\x01) jumpr $\x02\0"
    /* 251 */ "if ($\x01) jump $\xFF\x02\x01\0"
    /* 269 */ "trap1(#$\x03)\0"
    /* 280 */ "deallocframe\0"
    /* 293 */ "$\x01 = memb_fifo($\x03)\0"
    /* 312 */ "$\x01 = memh_fifo($\x03)\0"
    /* 331 */ "$\x01 = membh($\x02)\0"
    /* 346 */ "$\x01 = memubh($\x02)\0"
    /* 362 */ "$\x01 = memb($\x02)\0"
    /* 376 */ "$\x01 = memd($\x02)\0"
    /* 390 */ "$\x01 = memh($\x02)\0"
    /* 404 */ "$\x01 = memw($\x02)\0"
    /* 418 */ "$\x01 = memub($\x02)\0"
    /* 433 */ "$\x01 = memuh($\x02)\0"
    /* 448 */ "if (!$\x02) $\x01 = memb($\x03)\0"
    /* 471 */ "if (!$\x02.new) $\x01 = memb($\x03)\0"
    /* 498 */ "if ($\x02) $\x01 = memb($\x03)\0"
    /* 520 */ "if ($\x02.new) $\x01 = memb($\x03)\0"
    /* 546 */ "if (!$\x02) $\x01 = memd($\x03)\0"
    /* 569 */ "if (!$\x02.new) $\x01 = memd($\x03)\0"
    /* 596 */ "if ($\x02) $\x01 = memd($\x03)\0"
    /* 618 */ "if ($\x02.new) $\x01 = memd($\x03)\0"
    /* 644 */ "if (!$\x02) $\x01 = memh($\x03)\0"
    /* 667 */ "if (!$\x02.new) $\x01 = memh($\x03)\0"
    /* 694 */ "if ($\x02) $\x01 = memh($\x03)\0"
    /* 716 */ "if ($\x02.new) $\x01 = memh($\x03)\0"
    /* 742 */ "if (!$\x02) $\x01 = memw($\x03)\0"
    /* 765 */ "if (!$\x02.new) $\x01 = memw($\x03)\0"
    /* 792 */ "if ($\x02) $\x01 = memw($\x03)\0"
    /* 814 */ "if ($\x02.new) $\x01 = memw($\x03)\0"
    /* 840 */ "if (!$\x02) $\x01 = memub($\x03)\0"
    /* 864 */ "if (!$\x02.new) $\x01 = memub($\x03)\0"
    /* 892 */ "if ($\x02) $\x01 = memub($\x03)\0"
    /* 915 */ "if ($\x02.new) $\x01 = memub($\x03)\0"
    /* 942 */ "if (!$\x02) $\x01 = memuh($\x03)\0"
    /* 966 */ "if (!$\x02.new) $\x01 = memuh($\x03)\0"
    /* 994 */ "if ($\x02) $\x01 = memuh($\x03)\0"
    /* 1017 */ "if ($\x02.new) $\x01 = memuh($\x03)\0"
    /* 1044 */ "memb($\x01) += $\x03\0"
    /* 1059 */ "memh($\x01) += $\x03\0"
    /* 1074 */ "memw($\x01) += $\x03\0"
    /* 1089 */ "memb($\x01) &= $\x03\0"
    /* 1104 */ "memh($\x01) &= $\x03\0"
    /* 1119 */ "memw($\x01) &= $\x03\0"
    /* 1134 */ "memb($\x01) += #$\x03\0"
    /* 1150 */ "memh($\x01) += #$\x03\0"
    /* 1166 */ "memw($\x01) += #$\x03\0"
    /* 1182 */ "memb($\x01) = clrbit(#$\x03)\0"
    /* 1205 */ "memh($\x01) = clrbit(#$\x03)\0"
    /* 1228 */ "memw($\x01) = clrbit(#$\x03)\0"
    /* 1251 */ "memb($\x01) = setbit(#$\x03)\0"
    /* 1274 */ "memh($\x01) = setbit(#$\x03)\0"
    /* 1297 */ "memw($\x01) = setbit(#$\x03)\0"
    /* 1320 */ "memb($\x01) -= #$\x03\0"
    /* 1336 */ "memh($\x01) -= #$\x03\0"
    /* 1352 */ "memw($\x01) -= #$\x03\0"
    /* 1368 */ "memb($\x01) |= $\x03\0"
    /* 1383 */ "memh($\x01) |= $\x03\0"
    /* 1398 */ "memw($\x01) |= $\x03\0"
    /* 1413 */ "dealloc_return\0"
    /* 1428 */ "if (!$\x02) dealloc_return\0"
    /* 1452 */ "if (!$\x02.new) dealloc_return:nt\0"
    /* 1483 */ "if (!$\x02.new) dealloc_return:t\0"
    /* 1513 */ "if ($\x02) dealloc_return\0"
    /* 1536 */ "if ($\x02.new) dealloc_return:nt\0"
    /* 1566 */ "if ($\x02.new) dealloc_return:t\0"
    /* 1595 */ "memb($\x01) -= $\x03\0"
    /* 1610 */ "memh($\x01) -= $\x03\0"
    /* 1625 */ "memw($\x01) -= $\x03\0"
    /* 1640 */ "$\x01 = mpyui($\x02,$\x03)\0"
    /* 1658 */ "allocframe(#$\x03)\0"
    /* 1674 */ "if (!$\x01) memb($\x02) = $\x04\0"
    /* 1697 */ "if (!$\x01) memb($\x02) = $\x04.new\0"
    /* 1724 */ "if ($\x01) memb($\x02) = $\x04.new\0"
    /* 1750 */ "if ($\x01) memb($\x02) = $\x04\0"
    /* 1772 */ "if (!$\x01) memd($\x02) = $\x04\0"
    /* 1795 */ "if ($\x01) memd($\x02) = $\x04\0"
    /* 1817 */ "if (!$\x01) memh($\x02) = $\x04.h\0"
    /* 1842 */ "if ($\x01) memh($\x02) = $\x04.h\0"
    /* 1866 */ "if (!$\x01) memh($\x02) = $\x04\0"
    /* 1889 */ "if (!$\x01) memh($\x02) = $\x04.new\0"
    /* 1916 */ "if ($\x01) memh($\x02) = $\x04.new\0"
    /* 1942 */ "if ($\x01) memh($\x02) = $\x04\0"
    /* 1964 */ "if (!$\x01) memw($\x02) = $\x04\0"
    /* 1987 */ "if (!$\x01) memw($\x02) = $\x04.new\0"
    /* 2014 */ "if ($\x01) memw($\x02) = $\x04.new\0"
    /* 2040 */ "if ($\x01) memw($\x02) = $\x04\0"
    /* 2062 */ "memb($\x01) = $\x03\0"
    /* 2076 */ "memb($\x01) = $\x03.new\0"
    /* 2094 */ "memd($\x01) = $\x03\0"
    /* 2108 */ "memh($\x01) = $\x03.h\0"
    /* 2124 */ "memh($\x01) = $\x03\0"
    /* 2138 */ "memh($\x01) = $\x03.new\0"
    /* 2156 */ "memw($\x01) = $\x03\0"
    /* 2170 */ "memw($\x01) = $\x03.new\0"
    /* 2188 */ "$\x01 = tableidxb($\x03,#$\x04,#$\x05)\0"
    /* 2215 */ "if (!$\x01.new) memb($\x02) = $\x04\0"
    /* 2242 */ "if (!$\x01.new) memb($\x02) = $\x04.new\0"
    /* 2273 */ "if ($\x01.new) memb($\x02) = $\x04.new\0"
    /* 2303 */ "if ($\x01.new) memb($\x02) = $\x04\0"
    /* 2329 */ "if (!$\x01.new) memd($\x02) = $\x04\0"
    /* 2356 */ "if ($\x01.new) memd($\x02) = $\x04\0"
    /* 2382 */ "if (!$\x01.new) memh($\x02) = $\x04.h\0"
    /* 2411 */ "if ($\x01.new) memh($\x02) = $\x04.h\0"
    /* 2439 */ "if (!$\x01.new) memh($\x02) = $\x04\0"
    /* 2466 */ "if (!$\x01.new) memh($\x02) = $\x04.new\0"
    /* 2497 */ "if ($\x01.new) memh($\x02) = $\x04.new\0"
    /* 2527 */ "if ($\x01.new) memh($\x02) = $\x04\0"
    /* 2553 */ "if (!$\x01.new) memw($\x02) = $\x04\0"
    /* 2580 */ "if (!$\x01.new) memw($\x02) = $\x04.new\0"
    /* 2611 */ "if ($\x01.new) memw($\x02) = $\x04.new\0"
    /* 2641 */ "if ($\x01.new) memw($\x02) = $\x04\0"
    /* 2667 */ "memb($\x01) = #$\x03\0"
    /* 2682 */ "if (!$\x01) memb($\x02) = #$\x04\0"
    /* 2706 */ "if (!$\x01.new) memb($\x02) = #$\x04\0"
    /* 2734 */ "if ($\x01) memb($\x02) = #$\x04\0"
    /* 2757 */ "if ($\x01.new) memb($\x02) = #$\x04\0"
    /* 2784 */ "memh($\x01) = #$\x03\0"
    /* 2799 */ "if (!$\x01) memh($\x02) = #$\x04\0"
    /* 2823 */ "if (!$\x01.new) memh($\x02) = #$\x04\0"
    /* 2851 */ "if ($\x01) memh($\x02) = #$\x04\0"
    /* 2874 */ "if ($\x01.new) memh($\x02) = #$\x04\0"
    /* 2901 */ "memw($\x01) = #$\x03\0"
    /* 2916 */ "if (!$\x01) memw($\x02) = #$\x04\0"
    /* 2940 */ "if (!$\x01.new) memw($\x02) = #$\x04\0"
    /* 2968 */ "if ($\x01) memw($\x02) = #$\x04\0"
    /* 2991 */ "if ($\x01.new) memw($\x02) = #$\x04\0"
    /* 3018 */ "$\x01.w = vextract($\x02,$\x03)\0"
    /* 3041 */ "$\x01 = vmemu($\x02)\0"
    /* 3056 */ "$\x01 = vmem($\x02)\0"
    /* 3070 */ "if (!$\x03) $\x01.cur = vmem($\x02)\0"
    /* 3097 */ "if ($\x03) $\x01.cur = vmem($\x02)\0"
    /* 3123 */ "if (!$\x02) $\x01.tmp = vmem($\x03)\0"
    /* 3150 */ "if (!$\x03) $\x01 = vmem($\x02)\0"
    /* 3173 */ "if (!$\x03) $\x01.cur = vmem($\x02):nt\0"
    /* 3203 */ "if ($\x03) $\x01.cur = vmem($\x02):nt\0"
    /* 3232 */ "if (!$\x02) $\x01.tmp = vmem($\x03):nt\0"
    /* 3262 */ "if (!$\x03) $\x01 = vmem($\x02):nt\0"
    /* 3288 */ "if ($\x02) $\x01 = vmem($\x03):nt\0"
    /* 3313 */ "if ($\x02) $\x01.tmp = vmem($\x03):nt\0"
    /* 3342 */ "if ($\x02) $\x01 = vmem($\x03)\0"
    /* 3364 */ "if ($\x02) $\x01.tmp = vmem($\x03)\0"
    /* 3390 */ "vmemu($\x01) = $\x03\0"
    /* 3405 */ "if (!$\x01) vmemu($\x02) = $\x04\0"
    /* 3429 */ "if ($\x01) vmemu($\x02) = $\x04\0"
    /* 3452 */ "vmem($\x01) = $\x03\0"
    /* 3466 */ "vmem($\x01) = $\x03.new\0"
    /* 3484 */ "if (!$\x01) vmem($\x02) = $\x04\0"
    /* 3507 */ "vmem($\x01):nt = $\x03\0"
    /* 3524 */ "vmem($\x01):nt = $\x03.new\0"
    /* 3545 */ "if (!$\x01) vmem($\x02):nt = $\x04\0"
    /* 3571 */ "if ($\x01) vmem($\x02):nt = $\x04\0"
    /* 3596 */ "if ($\x01) vmem($\x02) = $\x04\0"
    /* 3618 */ "$\x01 = vabsb($\x02):sat\0"
    /* 3637 */ "$\x01 = vabsdiffh($\x02,$\x03)\0"
    /* 3659 */ "$\x01 = vabsdiffub($\x02,$\x03)\0"
    /* 3682 */ "$\x01 = vabsdiffuh($\x02,$\x03)\0"
    /* 3705 */ "$\x01 = vabsdiffw($\x02,$\x03)\0"
    /* 3727 */ "$\x01 = vabsh($\x02):sat\0"
    /* 3746 */ "$\x01 = vabsw($\x02):sat\0"
    /* 3765 */ "if (!$\x02.b) $\x01.b += $\x04.b\0"
    /* 3789 */ "if ($\x02.b) $\x01.b += $\x04.b\0"
    /* 3812 */ "$\x01 = vaddb($\x02,$\x03):sat\0"
    /* 3834 */ "$\x01 = vaddh($\x02,$\x03)\0"
    /* 3852 */ "if (!$\x02.h) $\x01.h += $\x04.h\0"
    /* 3876 */ "if ($\x02.h) $\x01.h += $\x04.h\0"
    /* 3899 */ "$\x01 = vaddh($\x02,$\x03):sat\0"
    /* 3921 */ "$\x01 += vaddh($\x03,$\x04)\0"
    /* 3940 */ "$\x01 = vaddub($\x02,$\x03)\0"
    /* 3959 */ "$\x01 += vaddub($\x03,$\x04)\0"
    /* 3979 */ "$\x01 = vaddub($\x02,$\x03):sat\0"
    /* 4002 */ "$\x01 = vadduh($\x02,$\x03):sat\0"
    /* 4025 */ "$\x01 = vadduh($\x02,$\x03)\0"
    /* 4044 */ "$\x01 += vadduh($\x03,$\x04)\0"
    /* 4064 */ "$\x01 = vadduw($\x02,$\x03):sat\0"
    /* 4087 */ "$\x01 = vaddw($\x02,$\x03)\0"
    /* 4105 */ "if (!$\x02.w) $\x01.w += $\x04.w\0"
    /* 4129 */ "if ($\x02.w) $\x01.w += $\x04.w\0"
    /* 4152 */ "$\x01 = vaddw($\x02,$\x03):sat\0"
    /* 4174 */ "$\x01.ub = vand(!$\x02.ub,$\x03.ub)\0"
    /* 4201 */ "$\x01.ub |= vand(!$\x03.ub,$\x04.ub)\0"
    /* 4229 */ "$\x01.ub = vand($\x02.ub,$\x03.ub)\0"
    /* 4255 */ "$\x01.ub |= vand($\x03.ub,$\x04.ub)\0"
    /* 4282 */ "$\x01 = vaslh($\x02,$\x03)\0"
    /* 4300 */ "$\x01 += vaslh($\x03,$\x04)\0"
    /* 4319 */ "$\x01 = vaslw($\x02,$\x03)\0"
    /* 4337 */ "$\x01 += vaslw($\x03,$\x04)\0"
    /* 4356 */ "$\x01 = vasrinto($\x03,$\x04)\0"
    /* 4377 */ "$\x01 = vasrh($\x02,$\x03)\0"
    /* 4395 */ "$\x01 += vasrh($\x03,$\x04)\0"
    /* 4414 */ "$\x01 = vasrhb($\x02,$\x03,$\x04):rnd:sat\0"
    /* 4444 */ "$\x01 = vasrhub($\x02,$\x03,$\x04):rnd:sat\0"
    /* 4475 */ "$\x01 = vasrhub($\x02,$\x03,$\x04):sat\0"
    /* 4502 */ "$\x01 = vasrw($\x02,$\x03)\0"
    /* 4520 */ "$\x01 += vasrw($\x03,$\x04)\0"
    /* 4539 */ "$\x01 = vasrwh($\x02,$\x03,$\x04):rnd:sat\0"
    /* 4569 */ "$\x01 = vasrwuh($\x02,$\x03,$\x04):sat\0"
    /* 4596 */ "$\x01 = vavgb($\x02,$\x03)\0"
    /* 4614 */ "$\x01 = vavgb($\x02,$\x03):rnd\0"
    /* 4636 */ "$\x01 = vavgh($\x02,$\x03)\0"
    /* 4654 */ "$\x01 = vavgh($\x02,$\x03):rnd\0"
    /* 4676 */ "$\x01 = vavgub($\x02,$\x03)\0"
    /* 4695 */ "$\x01 = vavgub($\x02,$\x03):rnd\0"
    /* 4718 */ "$\x01 = vavguh($\x02,$\x03)\0"
    /* 4737 */ "$\x01 = vavguh($\x02,$\x03):rnd\0"
    /* 4760 */ "$\x01 = vavguw($\x02,$\x03)\0"
    /* 4779 */ "$\x01 = vavguw($\x02,$\x03):rnd\0"
    /* 4802 */ "$\x01 = vavgw($\x02,$\x03)\0"
    /* 4820 */ "$\x01 = vavgw($\x02,$\x03):rnd\0"
    /* 4842 */ "$\x01 = vcl0h($\x02)\0"
    /* 4857 */ "$\x01 = vcl0w($\x02)\0"
    /* 4872 */ "$\x01 = vdealb($\x02)\0"
    /* 4888 */ "$\x01 = vdealb4w($\x02,$\x03)\0"
    /* 4909 */ "$\x01 = vdealh($\x02)\0"
    /* 4925 */ "$\x01 = vdmpybus($\x02,$\x03)\0"
    /* 4946 */ "$\x01 += vdmpybus($\x03,$\x04)\0"
    /* 4968 */ "$\x01 = vdmpyhb($\x02,$\x03)\0"
    /* 4988 */ "$\x01 += vdmpyhb($\x03,$\x04)\0"
    /* 5009 */ "$\x01 = vdmpyh($\x02,$\x03):sat\0"
    /* 5032 */ "$\x01 += vdmpyh($\x03,$\x04):sat\0"
    /* 5056 */ "$\x01 = vdmpyhsu($\x02,$\x03,#1):sat\0"
    /* 5084 */ "$\x01 += vdmpyhsu($\x03,$\x04,#1):sat\0"
    /* 5113 */ "$\x01 = vdmpyhsu($\x02,$\x03):sat\0"
    /* 5138 */ "$\x01 += vdmpyhsu($\x03,$\x04):sat\0"
    /* 5164 */ "$\x01 = vdsaduh($\x02,$\x03)\0"
    /* 5184 */ "$\x01 += vdsaduh($\x03,$\x04)\0"
    /* 5205 */ "$\x01 = vcmp.eq($\x02.ub,$\x03.ub)\0"
    /* 5231 */ "$\x01 &= vcmp.eq($\x03.ub,$\x04.ub)\0"
    /* 5258 */ "$\x01 |= vcmp.eq($\x03.ub,$\x04.ub)\0"
    /* 5285 */ "$\x01 ^= vcmp.eq($\x03.ub,$\x04.ub)\0"
    /* 5312 */ "$\x01 = vcmp.eq($\x02.uh,$\x03.uh)\0"
    /* 5338 */ "$\x01 &= vcmp.eq($\x03.uh,$\x04.uh)\0"
    /* 5365 */ "$\x01 |= vcmp.eq($\x03.uh,$\x04.uh)\0"
    /* 5392 */ "$\x01 ^= vcmp.eq($\x03.uh,$\x04.uh)\0"
    /* 5419 */ "$\x01 = vcmp.eq($\x02.uw,$\x03.uw)\0"
    /* 5445 */ "$\x01 &= vcmp.eq($\x03.uw,$\x04.uw)\0"
    /* 5472 */ "$\x01 |= vcmp.eq($\x03.uw,$\x04.uw)\0"
    /* 5499 */ "$\x01 ^= vcmp.eq($\x03.uw,$\x04.uw)\0"
    /* 5526 */ "$\x01 = vlsrh($\x02,$\x03)\0"
    /* 5544 */ "$\x01 = vlsrw($\x02,$\x03)\0"
    /* 5562 */ "$\x01 = vmaxb($\x02,$\x03)\0"
    /* 5580 */ "$\x01 = vmaxh($\x02,$\x03)\0"
    /* 5598 */ "$\x01 = vmaxub($\x02,$\x03)\0"
    /* 5617 */ "$\x01 = vmaxuh($\x02,$\x03)\0"
    /* 5636 */ "$\x01 = vmaxw($\x02,$\x03)\0"
    /* 5654 */ "$\x01 = vminb($\x02,$\x03)\0"
    /* 5672 */ "$\x01 = vminh($\x02,$\x03)\0"
    /* 5690 */ "$\x01 = vminub($\x02,$\x03)\0"
    /* 5709 */ "$\x01 = vminuh($\x02,$\x03)\0"
    /* 5728 */ "$\x01 = vminw($\x02,$\x03)\0"
    /* 5746 */ "$\x01 = vmpabus($\x02,$\x03)\0"
    /* 5766 */ "$\x01 += vmpabus($\x03,$\x04)\0"
    /* 5787 */ "$\x01 = vmpabuu($\x02,$\x03)\0"
    /* 5807 */ "$\x01 += vmpabuu($\x03,$\x04)\0"
    /* 5828 */ "$\x01 = vmpahb($\x02,$\x03)\0"
    /* 5847 */ "$\x01 += vmpahb($\x03,$\x04)\0"
    /* 5867 */ "$\x01 = vmpauhb($\x02,$\x03)\0"
    /* 5887 */ "$\x01 += vmpauhb($\x03,$\x04)\0"
    /* 5908 */ "$\x01 = vmpybus($\x02,$\x03)\0"
    /* 5928 */ "$\x01 += vmpybus($\x03,$\x04)\0"
    /* 5949 */ "$\x01 = vmpyb($\x02,$\x03)\0"
    /* 5967 */ "$\x01 += vmpyb($\x03,$\x04)\0"
    /* 5986 */ "$\x01 = vmpyewuh($\x02,$\x03)\0"
    /* 6007 */ "$\x01 = vmpyh($\x02,$\x03)\0"
    /* 6025 */ "$\x01 += vmpyh($\x03,$\x04)\0"
    /* 6044 */ "$\x01 += vmpyh($\x03,$\x04):sat\0"
    /* 6067 */ "$\x01 = vmpyh($\x02,$\x03):<<1:rnd:sat\0"
    /* 6097 */ "$\x01 = vmpyh($\x02,$\x03):<<1:sat\0"
    /* 6123 */ "$\x01 = vmpyhus($\x02,$\x03)\0"
    /* 6143 */ "$\x01 += vmpyhus($\x03,$\x04)\0"
    /* 6164 */ "$\x01 += vmpyiewh($\x03,$\x04)\0"
    /* 6186 */ "$\x01 = vmpyiewuh($\x02,$\x03)\0"
    /* 6208 */ "$\x01 += vmpyiewuh($\x03,$\x04)\0"
    /* 6231 */ "$\x01 = vmpyih($\x02,$\x03)\0"
    /* 6250 */ "$\x01 += vmpyih($\x03,$\x04)\0"
    /* 6270 */ "$\x01 = vmpyihb($\x02,$\x03)\0"
    /* 6290 */ "$\x01 += vmpyihb($\x03,$\x04)\0"
    /* 6311 */ "$\x01 = vmpyiowh($\x02,$\x03)\0"
    /* 6332 */ "$\x01 = vmpyiwb($\x02,$\x03)\0"
    /* 6352 */ "$\x01 += vmpyiwb($\x03,$\x04)\0"
    /* 6373 */ "$\x01 = vmpyiwh($\x02,$\x03)\0"
    /* 6393 */ "$\x01 += vmpyiwh($\x03,$\x04)\0"
    /* 6414 */ "$\x01 = vmpyiwub($\x02,$\x03)\0"
    /* 6435 */ "$\x01 += vmpyiwub($\x03,$\x04)\0"
    /* 6457 */ "$\x01 = vmpyowh($\x02,$\x03):<<1:sat\0"
    /* 6485 */ "$\x01 = vmpyowh($\x02,$\x03):<<1:rnd:sat\0"
    /* 6517 */ "$\x01 = vmpyub($\x02,$\x03)\0"
    /* 6536 */ "$\x01 += vmpyub($\x03,$\x04)\0"
    /* 6556 */ "$\x01 = vmpyuh($\x02,$\x03)\0"
    /* 6575 */ "$\x01 += vmpyuh($\x03,$\x04)\0"
    /* 6595 */ "$\x01 = vnavgb($\x02,$\x03)\0"
    /* 6614 */ "$\x01 = vnavgh($\x02,$\x03)\0"
    /* 6633 */ "$\x01 = vnavgub($\x02,$\x03)\0"
    /* 6653 */ "$\x01 = vnavgw($\x02,$\x03)\0"
    /* 6672 */ "$\x01 = vnormamth($\x02)\0"
    /* 6691 */ "$\x01 = vnormamtw($\x02)\0"
    /* 6710 */ "$\x01 = vpackeb($\x02,$\x03)\0"
    /* 6730 */ "$\x01 = vpackeh($\x02,$\x03)\0"
    /* 6750 */ "$\x01 = vpackhb($\x02,$\x03):sat\0"
    /* 6774 */ "$\x01 = vpackhub($\x02,$\x03):sat\0"
    /* 6799 */ "$\x01 = vpackob($\x02,$\x03)\0"
    /* 6819 */ "$\x01 = vpackoh($\x02,$\x03)\0"
    /* 6839 */ "$\x01 = vpackwh($\x02,$\x03):sat\0"
    /* 6863 */ "$\x01 = vpackwuh($\x02,$\x03):sat\0"
    /* 6888 */ "$\x01 = vpopcounth($\x02)\0"
    /* 6908 */ "$\x01.w = vrmpy($\x02.b,$\x03.ub)\0"
    /* 6933 */ "$\x01.w += vrmpy($\x03.b,$\x04.ub)\0"
    /* 6959 */ "$\x01 = vrmpybus($\x02,$\x03)\0"
    /* 6980 */ "$\x01 += vrmpybus($\x03,$\x04)\0"
    /* 7002 */ "$\x01 = vrmpybus($\x02,$\x03,#$\x04)\0"
    /* 7027 */ "$\x01 += vrmpybus($\x03,$\x04,#$\x05)\0"
    /* 7053 */ "$\x01 = vrmpyb($\x02,$\x03)\0"
    /* 7072 */ "$\x01 += vrmpyb($\x03,$\x04)\0"
    /* 7092 */ "$\x01 = vrmpyub($\x02,$\x03)\0"
    /* 7112 */ "$\x01 += vrmpyub($\x03,$\x04)\0"
    /* 7133 */ "$\x01.uw = vrmpy($\x02.ub,$\x03.ub)\0"
    /* 7160 */ "$\x01.uw += vrmpy($\x03.ub,$\x04.ub)\0"
    /* 7188 */ "$\x01 = vrmpyub($\x02,$\x03,#$\x04)\0"
    /* 7212 */ "$\x01 += vrmpyub($\x03,$\x04,#$\x05)\0"
    /* 7237 */ "$\x01 = vrotr($\x02,$\x03)\0"
    /* 7255 */ "$\x01 = vroundhb($\x02,$\x03):sat\0"
    /* 7280 */ "$\x01 = vroundhub($\x02,$\x03):sat\0"
    /* 7306 */ "$\x01 = vrounduhub($\x02,$\x03):sat\0"
    /* 7333 */ "$\x01 = vrounduwuh($\x02,$\x03):sat\0"
    /* 7360 */ "$\x01 = vroundwh($\x02,$\x03):sat\0"
    /* 7385 */ "$\x01 = vroundwuh($\x02,$\x03):sat\0"
    /* 7411 */ "$\x01 = vrsadub($\x02,$\x03,#$\x04)\0"
    /* 7435 */ "$\x01 += vrsadub($\x03,$\x04,#$\x05)\0"
    /* 7460 */ "$\x01 = vsathub($\x02,$\x03)\0"
    /* 7480 */ "$\x01 = vsatuwuh($\x02,$\x03)\0"
    /* 7501 */ "$\x01 = vsatwh($\x02,$\x03)\0"
    /* 7520 */ "$\x01 = vsxtb($\x02)\0"
    /* 7535 */ "vscatter($\x01,$\x02,$\x03.h) = $\x04.h\0"
    /* 7563 */ "vscatter($\x01,$\x02,$\x03.h) += $\x04.h\0"
    /* 7592 */ "if ($\x01) vscatter($\x02,$\x03,$\x04.h) = $\x05.h\0"
    /* 7628 */ "vscatter($\x01,$\x02,$\x03.w) = $\x04.h\0"
    /* 7656 */ "vscatter($\x01,$\x02,$\x03.w) += $\x04.h\0"
    /* 7685 */ "if ($\x01) vscatter($\x02,$\x03,$\x04.w) = $\x05.h\0"
    /* 7721 */ "vscatter($\x01,$\x02,$\x03.w) = $\x04.w\0"
    /* 7749 */ "vscatter($\x01,$\x02,$\x03.w) += $\x04.w\0"
    /* 7778 */ "if ($\x01) vscatter($\x02,$\x03,$\x04.w) = $\x05.w\0"
    /* 7814 */ "$\x01 = vsxth($\x02)\0"
    /* 7829 */ "$\x01 = vshuffeh($\x02,$\x03)\0"
    /* 7850 */ "vtrans2x2($\x01,$\x02,$\x05)\0"
    /* 7870 */ "$\x01 = vshuffb($\x02)\0"
    /* 7887 */ "$\x01 = vshuffeb($\x02,$\x03)\0"
    /* 7908 */ "$\x01 = vshuffh($\x02)\0"
    /* 7925 */ "$\x01 = vshuffob($\x02,$\x03)\0"
    /* 7946 */ "$\x01 = vshuffoeb($\x02,$\x03)\0"
    /* 7968 */ "$\x01 = vshuffoeh($\x02,$\x03)\0"
    /* 7990 */ "$\x01 = vshuffoh($\x02,$\x03)\0"
    /* 8011 */ "if (!$\x02.b) $\x01.b -= $\x04.b\0"
    /* 8035 */ "if ($\x02.b) $\x01.b -= $\x04.b\0"
    /* 8058 */ "$\x01 = vsubb($\x02,$\x03):sat\0"
    /* 8080 */ "$\x01 = vsubh($\x02,$\x03)\0"
    /* 8098 */ "if (!$\x02.h) $\x01.h -= $\x04.h\0"
    /* 8122 */ "if ($\x02.h) $\x01.h -= $\x04.h\0"
    /* 8145 */ "$\x01 = vsubh($\x02,$\x03):sat\0"
    /* 8167 */ "$\x01 = vsubub($\x02,$\x03)\0"
    /* 8186 */ "$\x01 = vsubub($\x02,$\x03):sat\0"
    /* 8209 */ "$\x01 = vsubuh($\x02,$\x03):sat\0"
    /* 8232 */ "$\x01 = vsubuh($\x02,$\x03)\0"
    /* 8251 */ "$\x01 = vsubuw($\x02,$\x03):sat\0"
    /* 8274 */ "$\x01 = vsubw($\x02,$\x03)\0"
    /* 8292 */ "$\x01 = #0\0"
    /* 8300 */ "if (!$\x02.w) $\x01.w -= $\x04.w\0"
    /* 8324 */ "if ($\x02.w) $\x01.w -= $\x04.w\0"
    /* 8347 */ "$\x01 = vsubw($\x02,$\x03):sat\0"
    /* 8369 */ "$\x01 = vtmpyb($\x02,$\x03)\0"
    /* 8388 */ "$\x01 += vtmpyb($\x03,$\x04)\0"
    /* 8408 */ "$\x01 = vtmpybus($\x02,$\x03)\0"
    /* 8429 */ "$\x01 += vtmpybus($\x03,$\x04)\0"
    /* 8451 */ "$\x01 = vtmpyhb($\x02,$\x03)\0"
    /* 8471 */ "$\x01 += vtmpyhb($\x03,$\x04)\0"
    /* 8492 */ "$\x01 = vunpackb($\x02)\0"
    /* 8510 */ "$\x01 = vunpackh($\x02)\0"
    /* 8528 */ "$\x01 |= vunpackoh($\x03)\0"
    /* 8548 */ "$\x01 = vunpackub($\x02)\0"
    /* 8567 */ "$\x01 = vunpackuh($\x02)\0"
    /* 8586 */ "$\x01 = vzxtb($\x02)\0"
    /* 8601 */ "$\x01 = vzxth($\x02)\0"
    /* 8616 */ "z = vmem($\x01)\0"
    /* 8629 */ "if ($\x01) z = vmem($\x02)\0"
    /* 8650 */ "dcfetch($\x01)\0"
  ;

#ifndef NDEBUG
  static struct SortCheck {
    SortCheck(ArrayRef<PatternsForOpcode> OpToPatterns) {
      assert(std::is_sorted(
                 OpToPatterns.begin(), OpToPatterns.end(),
                 [](const PatternsForOpcode &L, const PatternsForOpcode &R) {
                   return L.Opcode < R.Opcode;
                 }) &&
             "tablegen failed to sort opcode patterns");
    }
  } sortCheckVar(OpToPatterns);
#endif

  AliasMatchingData M {
    makeArrayRef(OpToPatterns),
    makeArrayRef(Patterns),
    makeArrayRef(Conds),
    StringRef(AsmStrings, array_lengthof(AsmStrings)),
    nullptr,
  };
  const char *AsmString = matchAliasPatterns(MI, nullptr, M);
  if (!AsmString) return false;

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  OS << '\t' << StringRef(AsmString, I);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t') {
      OS << '\t';
      ++I;
    }
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, OpIdx, PrintMethodIdx, OS);
        } else
          printOperand(MI, unsigned(AsmString[I++]) - 1, OS);
      } else {
        OS << AsmString[I++];
      }
    } while (AsmString[I] != '\0');
  }

  return true;
}

void HexagonInstPrinter::printCustomAliasOperand(
         const MCInst *MI, unsigned OpIdx,
         unsigned PrintMethodIdx,
         raw_ostream &OS) {
  switch (PrintMethodIdx) {
  default:
    llvm_unreachable("Unknown PrintMethod kind");
    break;
  case 0:
    printBrtarget(MI, OpIdx, OS);
    break;
  }
}

#endif // PRINT_ALIAS_INSTR
