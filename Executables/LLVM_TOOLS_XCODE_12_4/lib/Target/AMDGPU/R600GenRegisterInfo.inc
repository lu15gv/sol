/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Register Enum Values                                                *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_REGINFO_ENUM
#undef GET_REGINFO_ENUM

namespace llvm {

class MCRegisterClass;
extern const MCRegisterClass R600MCRegisterClasses[];

namespace R600 {
enum {
  NoRegister,
  ALU_CONST = 1,
  ALU_LITERAL_W = 2,
  ALU_LITERAL_X = 3,
  ALU_LITERAL_Y = 4,
  ALU_LITERAL_Z = 5,
  ALU_PARAM = 6,
  AR_X = 7,
  HALF = 8,
  INDIRECT_BASE_ADDR = 9,
  LDS_DIRECT_A = 10,
  LDS_DIRECT_B = 11,
  NEG_HALF = 12,
  NEG_ONE = 13,
  ONE = 14,
  ONE_INT = 15,
  OQA = 16,
  OQAP = 17,
  OQB = 18,
  OQBP = 19,
  PREDICATE_BIT = 20,
  PRED_SEL_OFF = 21,
  PRED_SEL_ONE = 22,
  PRED_SEL_ZERO = 23,
  PS = 24,
  PV_W = 25,
  PV_X = 26,
  PV_Y = 27,
  PV_Z = 28,
  ZERO = 29,
  ArrayBase448 = 30,
  ArrayBase449 = 31,
  ArrayBase450 = 32,
  ArrayBase451 = 33,
  ArrayBase452 = 34,
  ArrayBase453 = 35,
  ArrayBase454 = 36,
  ArrayBase455 = 37,
  ArrayBase456 = 38,
  ArrayBase457 = 39,
  ArrayBase458 = 40,
  ArrayBase459 = 41,
  ArrayBase460 = 42,
  ArrayBase461 = 43,
  ArrayBase462 = 44,
  ArrayBase463 = 45,
  ArrayBase464 = 46,
  ArrayBase465 = 47,
  ArrayBase466 = 48,
  ArrayBase467 = 49,
  ArrayBase468 = 50,
  ArrayBase469 = 51,
  ArrayBase470 = 52,
  ArrayBase471 = 53,
  ArrayBase472 = 54,
  ArrayBase473 = 55,
  ArrayBase474 = 56,
  ArrayBase475 = 57,
  ArrayBase476 = 58,
  ArrayBase477 = 59,
  ArrayBase478 = 60,
  ArrayBase479 = 61,
  ArrayBase480 = 62,
  Addr0_W = 63,
  Addr1_W = 64,
  Addr2_W = 65,
  Addr3_W = 66,
  Addr4_W = 67,
  Addr5_W = 68,
  Addr6_W = 69,
  Addr7_W = 70,
  Addr8_W = 71,
  Addr9_W = 72,
  Addr10_W = 73,
  Addr11_W = 74,
  Addr12_W = 75,
  Addr13_W = 76,
  Addr14_W = 77,
  Addr15_W = 78,
  Addr16_W = 79,
  Addr17_W = 80,
  Addr18_W = 81,
  Addr19_W = 82,
  Addr20_W = 83,
  Addr21_W = 84,
  Addr22_W = 85,
  Addr23_W = 86,
  Addr24_W = 87,
  Addr25_W = 88,
  Addr26_W = 89,
  Addr27_W = 90,
  Addr28_W = 91,
  Addr29_W = 92,
  Addr30_W = 93,
  Addr31_W = 94,
  Addr32_W = 95,
  Addr33_W = 96,
  Addr34_W = 97,
  Addr35_W = 98,
  Addr36_W = 99,
  Addr37_W = 100,
  Addr38_W = 101,
  Addr39_W = 102,
  Addr40_W = 103,
  Addr41_W = 104,
  Addr42_W = 105,
  Addr43_W = 106,
  Addr44_W = 107,
  Addr45_W = 108,
  Addr46_W = 109,
  Addr47_W = 110,
  Addr48_W = 111,
  Addr49_W = 112,
  Addr50_W = 113,
  Addr51_W = 114,
  Addr52_W = 115,
  Addr53_W = 116,
  Addr54_W = 117,
  Addr55_W = 118,
  Addr56_W = 119,
  Addr57_W = 120,
  Addr58_W = 121,
  Addr59_W = 122,
  Addr60_W = 123,
  Addr61_W = 124,
  Addr62_W = 125,
  Addr63_W = 126,
  Addr64_W = 127,
  Addr65_W = 128,
  Addr66_W = 129,
  Addr67_W = 130,
  Addr68_W = 131,
  Addr69_W = 132,
  Addr70_W = 133,
  Addr71_W = 134,
  Addr72_W = 135,
  Addr73_W = 136,
  Addr74_W = 137,
  Addr75_W = 138,
  Addr76_W = 139,
  Addr77_W = 140,
  Addr78_W = 141,
  Addr79_W = 142,
  Addr80_W = 143,
  Addr81_W = 144,
  Addr82_W = 145,
  Addr83_W = 146,
  Addr84_W = 147,
  Addr85_W = 148,
  Addr86_W = 149,
  Addr87_W = 150,
  Addr88_W = 151,
  Addr89_W = 152,
  Addr90_W = 153,
  Addr91_W = 154,
  Addr92_W = 155,
  Addr93_W = 156,
  Addr94_W = 157,
  Addr95_W = 158,
  Addr96_W = 159,
  Addr97_W = 160,
  Addr98_W = 161,
  Addr99_W = 162,
  Addr100_W = 163,
  Addr101_W = 164,
  Addr102_W = 165,
  Addr103_W = 166,
  Addr104_W = 167,
  Addr105_W = 168,
  Addr106_W = 169,
  Addr107_W = 170,
  Addr108_W = 171,
  Addr109_W = 172,
  Addr110_W = 173,
  Addr111_W = 174,
  Addr112_W = 175,
  Addr113_W = 176,
  Addr114_W = 177,
  Addr115_W = 178,
  Addr116_W = 179,
  Addr117_W = 180,
  Addr118_W = 181,
  Addr119_W = 182,
  Addr120_W = 183,
  Addr121_W = 184,
  Addr122_W = 185,
  Addr123_W = 186,
  Addr124_W = 187,
  Addr125_W = 188,
  Addr126_W = 189,
  Addr127_W = 190,
  Addr0_X = 191,
  Addr1_X = 192,
  Addr2_X = 193,
  Addr3_X = 194,
  Addr4_X = 195,
  Addr5_X = 196,
  Addr6_X = 197,
  Addr7_X = 198,
  Addr8_X = 199,
  Addr9_X = 200,
  Addr10_X = 201,
  Addr11_X = 202,
  Addr12_X = 203,
  Addr13_X = 204,
  Addr14_X = 205,
  Addr15_X = 206,
  Addr16_X = 207,
  Addr17_X = 208,
  Addr18_X = 209,
  Addr19_X = 210,
  Addr20_X = 211,
  Addr21_X = 212,
  Addr22_X = 213,
  Addr23_X = 214,
  Addr24_X = 215,
  Addr25_X = 216,
  Addr26_X = 217,
  Addr27_X = 218,
  Addr28_X = 219,
  Addr29_X = 220,
  Addr30_X = 221,
  Addr31_X = 222,
  Addr32_X = 223,
  Addr33_X = 224,
  Addr34_X = 225,
  Addr35_X = 226,
  Addr36_X = 227,
  Addr37_X = 228,
  Addr38_X = 229,
  Addr39_X = 230,
  Addr40_X = 231,
  Addr41_X = 232,
  Addr42_X = 233,
  Addr43_X = 234,
  Addr44_X = 235,
  Addr45_X = 236,
  Addr46_X = 237,
  Addr47_X = 238,
  Addr48_X = 239,
  Addr49_X = 240,
  Addr50_X = 241,
  Addr51_X = 242,
  Addr52_X = 243,
  Addr53_X = 244,
  Addr54_X = 245,
  Addr55_X = 246,
  Addr56_X = 247,
  Addr57_X = 248,
  Addr58_X = 249,
  Addr59_X = 250,
  Addr60_X = 251,
  Addr61_X = 252,
  Addr62_X = 253,
  Addr63_X = 254,
  Addr64_X = 255,
  Addr65_X = 256,
  Addr66_X = 257,
  Addr67_X = 258,
  Addr68_X = 259,
  Addr69_X = 260,
  Addr70_X = 261,
  Addr71_X = 262,
  Addr72_X = 263,
  Addr73_X = 264,
  Addr74_X = 265,
  Addr75_X = 266,
  Addr76_X = 267,
  Addr77_X = 268,
  Addr78_X = 269,
  Addr79_X = 270,
  Addr80_X = 271,
  Addr81_X = 272,
  Addr82_X = 273,
  Addr83_X = 274,
  Addr84_X = 275,
  Addr85_X = 276,
  Addr86_X = 277,
  Addr87_X = 278,
  Addr88_X = 279,
  Addr89_X = 280,
  Addr90_X = 281,
  Addr91_X = 282,
  Addr92_X = 283,
  Addr93_X = 284,
  Addr94_X = 285,
  Addr95_X = 286,
  Addr96_X = 287,
  Addr97_X = 288,
  Addr98_X = 289,
  Addr99_X = 290,
  Addr100_X = 291,
  Addr101_X = 292,
  Addr102_X = 293,
  Addr103_X = 294,
  Addr104_X = 295,
  Addr105_X = 296,
  Addr106_X = 297,
  Addr107_X = 298,
  Addr108_X = 299,
  Addr109_X = 300,
  Addr110_X = 301,
  Addr111_X = 302,
  Addr112_X = 303,
  Addr113_X = 304,
  Addr114_X = 305,
  Addr115_X = 306,
  Addr116_X = 307,
  Addr117_X = 308,
  Addr118_X = 309,
  Addr119_X = 310,
  Addr120_X = 311,
  Addr121_X = 312,
  Addr122_X = 313,
  Addr123_X = 314,
  Addr124_X = 315,
  Addr125_X = 316,
  Addr126_X = 317,
  Addr127_X = 318,
  Addr0_Y = 319,
  Addr1_Y = 320,
  Addr2_Y = 321,
  Addr3_Y = 322,
  Addr4_Y = 323,
  Addr5_Y = 324,
  Addr6_Y = 325,
  Addr7_Y = 326,
  Addr8_Y = 327,
  Addr9_Y = 328,
  Addr10_Y = 329,
  Addr11_Y = 330,
  Addr12_Y = 331,
  Addr13_Y = 332,
  Addr14_Y = 333,
  Addr15_Y = 334,
  Addr16_Y = 335,
  Addr17_Y = 336,
  Addr18_Y = 337,
  Addr19_Y = 338,
  Addr20_Y = 339,
  Addr21_Y = 340,
  Addr22_Y = 341,
  Addr23_Y = 342,
  Addr24_Y = 343,
  Addr25_Y = 344,
  Addr26_Y = 345,
  Addr27_Y = 346,
  Addr28_Y = 347,
  Addr29_Y = 348,
  Addr30_Y = 349,
  Addr31_Y = 350,
  Addr32_Y = 351,
  Addr33_Y = 352,
  Addr34_Y = 353,
  Addr35_Y = 354,
  Addr36_Y = 355,
  Addr37_Y = 356,
  Addr38_Y = 357,
  Addr39_Y = 358,
  Addr40_Y = 359,
  Addr41_Y = 360,
  Addr42_Y = 361,
  Addr43_Y = 362,
  Addr44_Y = 363,
  Addr45_Y = 364,
  Addr46_Y = 365,
  Addr47_Y = 366,
  Addr48_Y = 367,
  Addr49_Y = 368,
  Addr50_Y = 369,
  Addr51_Y = 370,
  Addr52_Y = 371,
  Addr53_Y = 372,
  Addr54_Y = 373,
  Addr55_Y = 374,
  Addr56_Y = 375,
  Addr57_Y = 376,
  Addr58_Y = 377,
  Addr59_Y = 378,
  Addr60_Y = 379,
  Addr61_Y = 380,
  Addr62_Y = 381,
  Addr63_Y = 382,
  Addr64_Y = 383,
  Addr65_Y = 384,
  Addr66_Y = 385,
  Addr67_Y = 386,
  Addr68_Y = 387,
  Addr69_Y = 388,
  Addr70_Y = 389,
  Addr71_Y = 390,
  Addr72_Y = 391,
  Addr73_Y = 392,
  Addr74_Y = 393,
  Addr75_Y = 394,
  Addr76_Y = 395,
  Addr77_Y = 396,
  Addr78_Y = 397,
  Addr79_Y = 398,
  Addr80_Y = 399,
  Addr81_Y = 400,
  Addr82_Y = 401,
  Addr83_Y = 402,
  Addr84_Y = 403,
  Addr85_Y = 404,
  Addr86_Y = 405,
  Addr87_Y = 406,
  Addr88_Y = 407,
  Addr89_Y = 408,
  Addr90_Y = 409,
  Addr91_Y = 410,
  Addr92_Y = 411,
  Addr93_Y = 412,
  Addr94_Y = 413,
  Addr95_Y = 414,
  Addr96_Y = 415,
  Addr97_Y = 416,
  Addr98_Y = 417,
  Addr99_Y = 418,
  Addr100_Y = 419,
  Addr101_Y = 420,
  Addr102_Y = 421,
  Addr103_Y = 422,
  Addr104_Y = 423,
  Addr105_Y = 424,
  Addr106_Y = 425,
  Addr107_Y = 426,
  Addr108_Y = 427,
  Addr109_Y = 428,
  Addr110_Y = 429,
  Addr111_Y = 430,
  Addr112_Y = 431,
  Addr113_Y = 432,
  Addr114_Y = 433,
  Addr115_Y = 434,
  Addr116_Y = 435,
  Addr117_Y = 436,
  Addr118_Y = 437,
  Addr119_Y = 438,
  Addr120_Y = 439,
  Addr121_Y = 440,
  Addr122_Y = 441,
  Addr123_Y = 442,
  Addr124_Y = 443,
  Addr125_Y = 444,
  Addr126_Y = 445,
  Addr127_Y = 446,
  Addr0_Z = 447,
  Addr1_Z = 448,
  Addr2_Z = 449,
  Addr3_Z = 450,
  Addr4_Z = 451,
  Addr5_Z = 452,
  Addr6_Z = 453,
  Addr7_Z = 454,
  Addr8_Z = 455,
  Addr9_Z = 456,
  Addr10_Z = 457,
  Addr11_Z = 458,
  Addr12_Z = 459,
  Addr13_Z = 460,
  Addr14_Z = 461,
  Addr15_Z = 462,
  Addr16_Z = 463,
  Addr17_Z = 464,
  Addr18_Z = 465,
  Addr19_Z = 466,
  Addr20_Z = 467,
  Addr21_Z = 468,
  Addr22_Z = 469,
  Addr23_Z = 470,
  Addr24_Z = 471,
  Addr25_Z = 472,
  Addr26_Z = 473,
  Addr27_Z = 474,
  Addr28_Z = 475,
  Addr29_Z = 476,
  Addr30_Z = 477,
  Addr31_Z = 478,
  Addr32_Z = 479,
  Addr33_Z = 480,
  Addr34_Z = 481,
  Addr35_Z = 482,
  Addr36_Z = 483,
  Addr37_Z = 484,
  Addr38_Z = 485,
  Addr39_Z = 486,
  Addr40_Z = 487,
  Addr41_Z = 488,
  Addr42_Z = 489,
  Addr43_Z = 490,
  Addr44_Z = 491,
  Addr45_Z = 492,
  Addr46_Z = 493,
  Addr47_Z = 494,
  Addr48_Z = 495,
  Addr49_Z = 496,
  Addr50_Z = 497,
  Addr51_Z = 498,
  Addr52_Z = 499,
  Addr53_Z = 500,
  Addr54_Z = 501,
  Addr55_Z = 502,
  Addr56_Z = 503,
  Addr57_Z = 504,
  Addr58_Z = 505,
  Addr59_Z = 506,
  Addr60_Z = 507,
  Addr61_Z = 508,
  Addr62_Z = 509,
  Addr63_Z = 510,
  Addr64_Z = 511,
  Addr65_Z = 512,
  Addr66_Z = 513,
  Addr67_Z = 514,
  Addr68_Z = 515,
  Addr69_Z = 516,
  Addr70_Z = 517,
  Addr71_Z = 518,
  Addr72_Z = 519,
  Addr73_Z = 520,
  Addr74_Z = 521,
  Addr75_Z = 522,
  Addr76_Z = 523,
  Addr77_Z = 524,
  Addr78_Z = 525,
  Addr79_Z = 526,
  Addr80_Z = 527,
  Addr81_Z = 528,
  Addr82_Z = 529,
  Addr83_Z = 530,
  Addr84_Z = 531,
  Addr85_Z = 532,
  Addr86_Z = 533,
  Addr87_Z = 534,
  Addr88_Z = 535,
  Addr89_Z = 536,
  Addr90_Z = 537,
  Addr91_Z = 538,
  Addr92_Z = 539,
  Addr93_Z = 540,
  Addr94_Z = 541,
  Addr95_Z = 542,
  Addr96_Z = 543,
  Addr97_Z = 544,
  Addr98_Z = 545,
  Addr99_Z = 546,
  Addr100_Z = 547,
  Addr101_Z = 548,
  Addr102_Z = 549,
  Addr103_Z = 550,
  Addr104_Z = 551,
  Addr105_Z = 552,
  Addr106_Z = 553,
  Addr107_Z = 554,
  Addr108_Z = 555,
  Addr109_Z = 556,
  Addr110_Z = 557,
  Addr111_Z = 558,
  Addr112_Z = 559,
  Addr113_Z = 560,
  Addr114_Z = 561,
  Addr115_Z = 562,
  Addr116_Z = 563,
  Addr117_Z = 564,
  Addr118_Z = 565,
  Addr119_Z = 566,
  Addr120_Z = 567,
  Addr121_Z = 568,
  Addr122_Z = 569,
  Addr123_Z = 570,
  Addr124_Z = 571,
  Addr125_Z = 572,
  Addr126_Z = 573,
  Addr127_Z = 574,
  T0_W = 575,
  T1_W = 576,
  T2_W = 577,
  T3_W = 578,
  T4_W = 579,
  T5_W = 580,
  T6_W = 581,
  T7_W = 582,
  T8_W = 583,
  T9_W = 584,
  T10_W = 585,
  T11_W = 586,
  T12_W = 587,
  T13_W = 588,
  T14_W = 589,
  T15_W = 590,
  T16_W = 591,
  T17_W = 592,
  T18_W = 593,
  T19_W = 594,
  T20_W = 595,
  T21_W = 596,
  T22_W = 597,
  T23_W = 598,
  T24_W = 599,
  T25_W = 600,
  T26_W = 601,
  T27_W = 602,
  T28_W = 603,
  T29_W = 604,
  T30_W = 605,
  T31_W = 606,
  T32_W = 607,
  T33_W = 608,
  T34_W = 609,
  T35_W = 610,
  T36_W = 611,
  T37_W = 612,
  T38_W = 613,
  T39_W = 614,
  T40_W = 615,
  T41_W = 616,
  T42_W = 617,
  T43_W = 618,
  T44_W = 619,
  T45_W = 620,
  T46_W = 621,
  T47_W = 622,
  T48_W = 623,
  T49_W = 624,
  T50_W = 625,
  T51_W = 626,
  T52_W = 627,
  T53_W = 628,
  T54_W = 629,
  T55_W = 630,
  T56_W = 631,
  T57_W = 632,
  T58_W = 633,
  T59_W = 634,
  T60_W = 635,
  T61_W = 636,
  T62_W = 637,
  T63_W = 638,
  T64_W = 639,
  T65_W = 640,
  T66_W = 641,
  T67_W = 642,
  T68_W = 643,
  T69_W = 644,
  T70_W = 645,
  T71_W = 646,
  T72_W = 647,
  T73_W = 648,
  T74_W = 649,
  T75_W = 650,
  T76_W = 651,
  T77_W = 652,
  T78_W = 653,
  T79_W = 654,
  T80_W = 655,
  T81_W = 656,
  T82_W = 657,
  T83_W = 658,
  T84_W = 659,
  T85_W = 660,
  T86_W = 661,
  T87_W = 662,
  T88_W = 663,
  T89_W = 664,
  T90_W = 665,
  T91_W = 666,
  T92_W = 667,
  T93_W = 668,
  T94_W = 669,
  T95_W = 670,
  T96_W = 671,
  T97_W = 672,
  T98_W = 673,
  T99_W = 674,
  T100_W = 675,
  T101_W = 676,
  T102_W = 677,
  T103_W = 678,
  T104_W = 679,
  T105_W = 680,
  T106_W = 681,
  T107_W = 682,
  T108_W = 683,
  T109_W = 684,
  T110_W = 685,
  T111_W = 686,
  T112_W = 687,
  T113_W = 688,
  T114_W = 689,
  T115_W = 690,
  T116_W = 691,
  T117_W = 692,
  T118_W = 693,
  T119_W = 694,
  T120_W = 695,
  T121_W = 696,
  T122_W = 697,
  T123_W = 698,
  T124_W = 699,
  T125_W = 700,
  T126_W = 701,
  T127_W = 702,
  T0_X = 703,
  T1_X = 704,
  T2_X = 705,
  T3_X = 706,
  T4_X = 707,
  T5_X = 708,
  T6_X = 709,
  T7_X = 710,
  T8_X = 711,
  T9_X = 712,
  T10_X = 713,
  T11_X = 714,
  T12_X = 715,
  T13_X = 716,
  T14_X = 717,
  T15_X = 718,
  T16_X = 719,
  T17_X = 720,
  T18_X = 721,
  T19_X = 722,
  T20_X = 723,
  T21_X = 724,
  T22_X = 725,
  T23_X = 726,
  T24_X = 727,
  T25_X = 728,
  T26_X = 729,
  T27_X = 730,
  T28_X = 731,
  T29_X = 732,
  T30_X = 733,
  T31_X = 734,
  T32_X = 735,
  T33_X = 736,
  T34_X = 737,
  T35_X = 738,
  T36_X = 739,
  T37_X = 740,
  T38_X = 741,
  T39_X = 742,
  T40_X = 743,
  T41_X = 744,
  T42_X = 745,
  T43_X = 746,
  T44_X = 747,
  T45_X = 748,
  T46_X = 749,
  T47_X = 750,
  T48_X = 751,
  T49_X = 752,
  T50_X = 753,
  T51_X = 754,
  T52_X = 755,
  T53_X = 756,
  T54_X = 757,
  T55_X = 758,
  T56_X = 759,
  T57_X = 760,
  T58_X = 761,
  T59_X = 762,
  T60_X = 763,
  T61_X = 764,
  T62_X = 765,
  T63_X = 766,
  T64_X = 767,
  T65_X = 768,
  T66_X = 769,
  T67_X = 770,
  T68_X = 771,
  T69_X = 772,
  T70_X = 773,
  T71_X = 774,
  T72_X = 775,
  T73_X = 776,
  T74_X = 777,
  T75_X = 778,
  T76_X = 779,
  T77_X = 780,
  T78_X = 781,
  T79_X = 782,
  T80_X = 783,
  T81_X = 784,
  T82_X = 785,
  T83_X = 786,
  T84_X = 787,
  T85_X = 788,
  T86_X = 789,
  T87_X = 790,
  T88_X = 791,
  T89_X = 792,
  T90_X = 793,
  T91_X = 794,
  T92_X = 795,
  T93_X = 796,
  T94_X = 797,
  T95_X = 798,
  T96_X = 799,
  T97_X = 800,
  T98_X = 801,
  T99_X = 802,
  T100_X = 803,
  T101_X = 804,
  T102_X = 805,
  T103_X = 806,
  T104_X = 807,
  T105_X = 808,
  T106_X = 809,
  T107_X = 810,
  T108_X = 811,
  T109_X = 812,
  T110_X = 813,
  T111_X = 814,
  T112_X = 815,
  T113_X = 816,
  T114_X = 817,
  T115_X = 818,
  T116_X = 819,
  T117_X = 820,
  T118_X = 821,
  T119_X = 822,
  T120_X = 823,
  T121_X = 824,
  T122_X = 825,
  T123_X = 826,
  T124_X = 827,
  T125_X = 828,
  T126_X = 829,
  T127_X = 830,
  T0_XY = 831,
  T1_XY = 832,
  T2_XY = 833,
  T3_XY = 834,
  T4_XY = 835,
  T5_XY = 836,
  T6_XY = 837,
  T7_XY = 838,
  T8_XY = 839,
  T9_XY = 840,
  T10_XY = 841,
  T11_XY = 842,
  T12_XY = 843,
  T13_XY = 844,
  T14_XY = 845,
  T15_XY = 846,
  T16_XY = 847,
  T17_XY = 848,
  T18_XY = 849,
  T19_XY = 850,
  T20_XY = 851,
  T21_XY = 852,
  T22_XY = 853,
  T23_XY = 854,
  T24_XY = 855,
  T25_XY = 856,
  T26_XY = 857,
  T27_XY = 858,
  T28_XY = 859,
  T29_XY = 860,
  T30_XY = 861,
  T31_XY = 862,
  T32_XY = 863,
  T33_XY = 864,
  T34_XY = 865,
  T35_XY = 866,
  T36_XY = 867,
  T37_XY = 868,
  T38_XY = 869,
  T39_XY = 870,
  T40_XY = 871,
  T41_XY = 872,
  T42_XY = 873,
  T43_XY = 874,
  T44_XY = 875,
  T45_XY = 876,
  T46_XY = 877,
  T47_XY = 878,
  T48_XY = 879,
  T49_XY = 880,
  T50_XY = 881,
  T51_XY = 882,
  T52_XY = 883,
  T53_XY = 884,
  T54_XY = 885,
  T55_XY = 886,
  T56_XY = 887,
  T57_XY = 888,
  T58_XY = 889,
  T59_XY = 890,
  T60_XY = 891,
  T61_XY = 892,
  T62_XY = 893,
  T63_XY = 894,
  T64_XY = 895,
  T65_XY = 896,
  T66_XY = 897,
  T67_XY = 898,
  T68_XY = 899,
  T69_XY = 900,
  T70_XY = 901,
  T71_XY = 902,
  T72_XY = 903,
  T73_XY = 904,
  T74_XY = 905,
  T75_XY = 906,
  T76_XY = 907,
  T77_XY = 908,
  T78_XY = 909,
  T79_XY = 910,
  T80_XY = 911,
  T81_XY = 912,
  T82_XY = 913,
  T83_XY = 914,
  T84_XY = 915,
  T85_XY = 916,
  T86_XY = 917,
  T87_XY = 918,
  T88_XY = 919,
  T89_XY = 920,
  T90_XY = 921,
  T91_XY = 922,
  T92_XY = 923,
  T93_XY = 924,
  T94_XY = 925,
  T95_XY = 926,
  T96_XY = 927,
  T97_XY = 928,
  T98_XY = 929,
  T99_XY = 930,
  T100_XY = 931,
  T101_XY = 932,
  T102_XY = 933,
  T103_XY = 934,
  T104_XY = 935,
  T105_XY = 936,
  T106_XY = 937,
  T107_XY = 938,
  T108_XY = 939,
  T109_XY = 940,
  T110_XY = 941,
  T111_XY = 942,
  T112_XY = 943,
  T113_XY = 944,
  T114_XY = 945,
  T115_XY = 946,
  T116_XY = 947,
  T117_XY = 948,
  T118_XY = 949,
  T119_XY = 950,
  T120_XY = 951,
  T121_XY = 952,
  T122_XY = 953,
  T123_XY = 954,
  T124_XY = 955,
  T125_XY = 956,
  T126_XY = 957,
  T127_XY = 958,
  T0_XYZW = 959,
  T1_XYZW = 960,
  T2_XYZW = 961,
  T3_XYZW = 962,
  T4_XYZW = 963,
  T5_XYZW = 964,
  T6_XYZW = 965,
  T7_XYZW = 966,
  T8_XYZW = 967,
  T9_XYZW = 968,
  T10_XYZW = 969,
  T11_XYZW = 970,
  T12_XYZW = 971,
  T13_XYZW = 972,
  T14_XYZW = 973,
  T15_XYZW = 974,
  T16_XYZW = 975,
  T17_XYZW = 976,
  T18_XYZW = 977,
  T19_XYZW = 978,
  T20_XYZW = 979,
  T21_XYZW = 980,
  T22_XYZW = 981,
  T23_XYZW = 982,
  T24_XYZW = 983,
  T25_XYZW = 984,
  T26_XYZW = 985,
  T27_XYZW = 986,
  T28_XYZW = 987,
  T29_XYZW = 988,
  T30_XYZW = 989,
  T31_XYZW = 990,
  T32_XYZW = 991,
  T33_XYZW = 992,
  T34_XYZW = 993,
  T35_XYZW = 994,
  T36_XYZW = 995,
  T37_XYZW = 996,
  T38_XYZW = 997,
  T39_XYZW = 998,
  T40_XYZW = 999,
  T41_XYZW = 1000,
  T42_XYZW = 1001,
  T43_XYZW = 1002,
  T44_XYZW = 1003,
  T45_XYZW = 1004,
  T46_XYZW = 1005,
  T47_XYZW = 1006,
  T48_XYZW = 1007,
  T49_XYZW = 1008,
  T50_XYZW = 1009,
  T51_XYZW = 1010,
  T52_XYZW = 1011,
  T53_XYZW = 1012,
  T54_XYZW = 1013,
  T55_XYZW = 1014,
  T56_XYZW = 1015,
  T57_XYZW = 1016,
  T58_XYZW = 1017,
  T59_XYZW = 1018,
  T60_XYZW = 1019,
  T61_XYZW = 1020,
  T62_XYZW = 1021,
  T63_XYZW = 1022,
  T64_XYZW = 1023,
  T65_XYZW = 1024,
  T66_XYZW = 1025,
  T67_XYZW = 1026,
  T68_XYZW = 1027,
  T69_XYZW = 1028,
  T70_XYZW = 1029,
  T71_XYZW = 1030,
  T72_XYZW = 1031,
  T73_XYZW = 1032,
  T74_XYZW = 1033,
  T75_XYZW = 1034,
  T76_XYZW = 1035,
  T77_XYZW = 1036,
  T78_XYZW = 1037,
  T79_XYZW = 1038,
  T80_XYZW = 1039,
  T81_XYZW = 1040,
  T82_XYZW = 1041,
  T83_XYZW = 1042,
  T84_XYZW = 1043,
  T85_XYZW = 1044,
  T86_XYZW = 1045,
  T87_XYZW = 1046,
  T88_XYZW = 1047,
  T89_XYZW = 1048,
  T90_XYZW = 1049,
  T91_XYZW = 1050,
  T92_XYZW = 1051,
  T93_XYZW = 1052,
  T94_XYZW = 1053,
  T95_XYZW = 1054,
  T96_XYZW = 1055,
  T97_XYZW = 1056,
  T98_XYZW = 1057,
  T99_XYZW = 1058,
  T100_XYZW = 1059,
  T101_XYZW = 1060,
  T102_XYZW = 1061,
  T103_XYZW = 1062,
  T104_XYZW = 1063,
  T105_XYZW = 1064,
  T106_XYZW = 1065,
  T107_XYZW = 1066,
  T108_XYZW = 1067,
  T109_XYZW = 1068,
  T110_XYZW = 1069,
  T111_XYZW = 1070,
  T112_XYZW = 1071,
  T113_XYZW = 1072,
  T114_XYZW = 1073,
  T115_XYZW = 1074,
  T116_XYZW = 1075,
  T117_XYZW = 1076,
  T118_XYZW = 1077,
  T119_XYZW = 1078,
  T120_XYZW = 1079,
  T121_XYZW = 1080,
  T122_XYZW = 1081,
  T123_XYZW = 1082,
  T124_XYZW = 1083,
  T125_XYZW = 1084,
  T126_XYZW = 1085,
  T127_XYZW = 1086,
  T0_Y = 1087,
  T1_Y = 1088,
  T2_Y = 1089,
  T3_Y = 1090,
  T4_Y = 1091,
  T5_Y = 1092,
  T6_Y = 1093,
  T7_Y = 1094,
  T8_Y = 1095,
  T9_Y = 1096,
  T10_Y = 1097,
  T11_Y = 1098,
  T12_Y = 1099,
  T13_Y = 1100,
  T14_Y = 1101,
  T15_Y = 1102,
  T16_Y = 1103,
  T17_Y = 1104,
  T18_Y = 1105,
  T19_Y = 1106,
  T20_Y = 1107,
  T21_Y = 1108,
  T22_Y = 1109,
  T23_Y = 1110,
  T24_Y = 1111,
  T25_Y = 1112,
  T26_Y = 1113,
  T27_Y = 1114,
  T28_Y = 1115,
  T29_Y = 1116,
  T30_Y = 1117,
  T31_Y = 1118,
  T32_Y = 1119,
  T33_Y = 1120,
  T34_Y = 1121,
  T35_Y = 1122,
  T36_Y = 1123,
  T37_Y = 1124,
  T38_Y = 1125,
  T39_Y = 1126,
  T40_Y = 1127,
  T41_Y = 1128,
  T42_Y = 1129,
  T43_Y = 1130,
  T44_Y = 1131,
  T45_Y = 1132,
  T46_Y = 1133,
  T47_Y = 1134,
  T48_Y = 1135,
  T49_Y = 1136,
  T50_Y = 1137,
  T51_Y = 1138,
  T52_Y = 1139,
  T53_Y = 1140,
  T54_Y = 1141,
  T55_Y = 1142,
  T56_Y = 1143,
  T57_Y = 1144,
  T58_Y = 1145,
  T59_Y = 1146,
  T60_Y = 1147,
  T61_Y = 1148,
  T62_Y = 1149,
  T63_Y = 1150,
  T64_Y = 1151,
  T65_Y = 1152,
  T66_Y = 1153,
  T67_Y = 1154,
  T68_Y = 1155,
  T69_Y = 1156,
  T70_Y = 1157,
  T71_Y = 1158,
  T72_Y = 1159,
  T73_Y = 1160,
  T74_Y = 1161,
  T75_Y = 1162,
  T76_Y = 1163,
  T77_Y = 1164,
  T78_Y = 1165,
  T79_Y = 1166,
  T80_Y = 1167,
  T81_Y = 1168,
  T82_Y = 1169,
  T83_Y = 1170,
  T84_Y = 1171,
  T85_Y = 1172,
  T86_Y = 1173,
  T87_Y = 1174,
  T88_Y = 1175,
  T89_Y = 1176,
  T90_Y = 1177,
  T91_Y = 1178,
  T92_Y = 1179,
  T93_Y = 1180,
  T94_Y = 1181,
  T95_Y = 1182,
  T96_Y = 1183,
  T97_Y = 1184,
  T98_Y = 1185,
  T99_Y = 1186,
  T100_Y = 1187,
  T101_Y = 1188,
  T102_Y = 1189,
  T103_Y = 1190,
  T104_Y = 1191,
  T105_Y = 1192,
  T106_Y = 1193,
  T107_Y = 1194,
  T108_Y = 1195,
  T109_Y = 1196,
  T110_Y = 1197,
  T111_Y = 1198,
  T112_Y = 1199,
  T113_Y = 1200,
  T114_Y = 1201,
  T115_Y = 1202,
  T116_Y = 1203,
  T117_Y = 1204,
  T118_Y = 1205,
  T119_Y = 1206,
  T120_Y = 1207,
  T121_Y = 1208,
  T122_Y = 1209,
  T123_Y = 1210,
  T124_Y = 1211,
  T125_Y = 1212,
  T126_Y = 1213,
  T127_Y = 1214,
  T0_Z = 1215,
  T1_Z = 1216,
  T2_Z = 1217,
  T3_Z = 1218,
  T4_Z = 1219,
  T5_Z = 1220,
  T6_Z = 1221,
  T7_Z = 1222,
  T8_Z = 1223,
  T9_Z = 1224,
  T10_Z = 1225,
  T11_Z = 1226,
  T12_Z = 1227,
  T13_Z = 1228,
  T14_Z = 1229,
  T15_Z = 1230,
  T16_Z = 1231,
  T17_Z = 1232,
  T18_Z = 1233,
  T19_Z = 1234,
  T20_Z = 1235,
  T21_Z = 1236,
  T22_Z = 1237,
  T23_Z = 1238,
  T24_Z = 1239,
  T25_Z = 1240,
  T26_Z = 1241,
  T27_Z = 1242,
  T28_Z = 1243,
  T29_Z = 1244,
  T30_Z = 1245,
  T31_Z = 1246,
  T32_Z = 1247,
  T33_Z = 1248,
  T34_Z = 1249,
  T35_Z = 1250,
  T36_Z = 1251,
  T37_Z = 1252,
  T38_Z = 1253,
  T39_Z = 1254,
  T40_Z = 1255,
  T41_Z = 1256,
  T42_Z = 1257,
  T43_Z = 1258,
  T44_Z = 1259,
  T45_Z = 1260,
  T46_Z = 1261,
  T47_Z = 1262,
  T48_Z = 1263,
  T49_Z = 1264,
  T50_Z = 1265,
  T51_Z = 1266,
  T52_Z = 1267,
  T53_Z = 1268,
  T54_Z = 1269,
  T55_Z = 1270,
  T56_Z = 1271,
  T57_Z = 1272,
  T58_Z = 1273,
  T59_Z = 1274,
  T60_Z = 1275,
  T61_Z = 1276,
  T62_Z = 1277,
  T63_Z = 1278,
  T64_Z = 1279,
  T65_Z = 1280,
  T66_Z = 1281,
  T67_Z = 1282,
  T68_Z = 1283,
  T69_Z = 1284,
  T70_Z = 1285,
  T71_Z = 1286,
  T72_Z = 1287,
  T73_Z = 1288,
  T74_Z = 1289,
  T75_Z = 1290,
  T76_Z = 1291,
  T77_Z = 1292,
  T78_Z = 1293,
  T79_Z = 1294,
  T80_Z = 1295,
  T81_Z = 1296,
  T82_Z = 1297,
  T83_Z = 1298,
  T84_Z = 1299,
  T85_Z = 1300,
  T86_Z = 1301,
  T87_Z = 1302,
  T88_Z = 1303,
  T89_Z = 1304,
  T90_Z = 1305,
  T91_Z = 1306,
  T92_Z = 1307,
  T93_Z = 1308,
  T94_Z = 1309,
  T95_Z = 1310,
  T96_Z = 1311,
  T97_Z = 1312,
  T98_Z = 1313,
  T99_Z = 1314,
  T100_Z = 1315,
  T101_Z = 1316,
  T102_Z = 1317,
  T103_Z = 1318,
  T104_Z = 1319,
  T105_Z = 1320,
  T106_Z = 1321,
  T107_Z = 1322,
  T108_Z = 1323,
  T109_Z = 1324,
  T110_Z = 1325,
  T111_Z = 1326,
  T112_Z = 1327,
  T113_Z = 1328,
  T114_Z = 1329,
  T115_Z = 1330,
  T116_Z = 1331,
  T117_Z = 1332,
  T118_Z = 1333,
  T119_Z = 1334,
  T120_Z = 1335,
  T121_Z = 1336,
  T122_Z = 1337,
  T123_Z = 1338,
  T124_Z = 1339,
  T125_Z = 1340,
  T126_Z = 1341,
  T127_Z = 1342,
  V01_W = 1343,
  V23_W = 1344,
  V0123_W = 1345,
  V01_X = 1346,
  V23_X = 1347,
  V0123_X = 1348,
  V01_Y = 1349,
  V23_Y = 1350,
  V0123_Y = 1351,
  V01_Z = 1352,
  V23_Z = 1353,
  V0123_Z = 1354,
  KC0_128_W = 1355,
  KC0_129_W = 1356,
  KC0_130_W = 1357,
  KC0_131_W = 1358,
  KC0_132_W = 1359,
  KC0_133_W = 1360,
  KC0_134_W = 1361,
  KC0_135_W = 1362,
  KC0_136_W = 1363,
  KC0_137_W = 1364,
  KC0_138_W = 1365,
  KC0_139_W = 1366,
  KC0_140_W = 1367,
  KC0_141_W = 1368,
  KC0_142_W = 1369,
  KC0_143_W = 1370,
  KC0_144_W = 1371,
  KC0_145_W = 1372,
  KC0_146_W = 1373,
  KC0_147_W = 1374,
  KC0_148_W = 1375,
  KC0_149_W = 1376,
  KC0_150_W = 1377,
  KC0_151_W = 1378,
  KC0_152_W = 1379,
  KC0_153_W = 1380,
  KC0_154_W = 1381,
  KC0_155_W = 1382,
  KC0_156_W = 1383,
  KC0_157_W = 1384,
  KC0_158_W = 1385,
  KC0_159_W = 1386,
  KC1_160_W = 1387,
  KC1_161_W = 1388,
  KC1_162_W = 1389,
  KC1_163_W = 1390,
  KC1_164_W = 1391,
  KC1_165_W = 1392,
  KC1_166_W = 1393,
  KC1_167_W = 1394,
  KC1_168_W = 1395,
  KC1_169_W = 1396,
  KC1_170_W = 1397,
  KC1_171_W = 1398,
  KC1_172_W = 1399,
  KC1_173_W = 1400,
  KC1_174_W = 1401,
  KC1_175_W = 1402,
  KC1_176_W = 1403,
  KC1_177_W = 1404,
  KC1_178_W = 1405,
  KC1_179_W = 1406,
  KC1_180_W = 1407,
  KC1_181_W = 1408,
  KC1_182_W = 1409,
  KC1_183_W = 1410,
  KC1_184_W = 1411,
  KC1_185_W = 1412,
  KC1_186_W = 1413,
  KC1_187_W = 1414,
  KC1_188_W = 1415,
  KC1_189_W = 1416,
  KC1_190_W = 1417,
  KC1_191_W = 1418,
  KC0_128_X = 1419,
  KC0_129_X = 1420,
  KC0_130_X = 1421,
  KC0_131_X = 1422,
  KC0_132_X = 1423,
  KC0_133_X = 1424,
  KC0_134_X = 1425,
  KC0_135_X = 1426,
  KC0_136_X = 1427,
  KC0_137_X = 1428,
  KC0_138_X = 1429,
  KC0_139_X = 1430,
  KC0_140_X = 1431,
  KC0_141_X = 1432,
  KC0_142_X = 1433,
  KC0_143_X = 1434,
  KC0_144_X = 1435,
  KC0_145_X = 1436,
  KC0_146_X = 1437,
  KC0_147_X = 1438,
  KC0_148_X = 1439,
  KC0_149_X = 1440,
  KC0_150_X = 1441,
  KC0_151_X = 1442,
  KC0_152_X = 1443,
  KC0_153_X = 1444,
  KC0_154_X = 1445,
  KC0_155_X = 1446,
  KC0_156_X = 1447,
  KC0_157_X = 1448,
  KC0_158_X = 1449,
  KC0_159_X = 1450,
  KC1_160_X = 1451,
  KC1_161_X = 1452,
  KC1_162_X = 1453,
  KC1_163_X = 1454,
  KC1_164_X = 1455,
  KC1_165_X = 1456,
  KC1_166_X = 1457,
  KC1_167_X = 1458,
  KC1_168_X = 1459,
  KC1_169_X = 1460,
  KC1_170_X = 1461,
  KC1_171_X = 1462,
  KC1_172_X = 1463,
  KC1_173_X = 1464,
  KC1_174_X = 1465,
  KC1_175_X = 1466,
  KC1_176_X = 1467,
  KC1_177_X = 1468,
  KC1_178_X = 1469,
  KC1_179_X = 1470,
  KC1_180_X = 1471,
  KC1_181_X = 1472,
  KC1_182_X = 1473,
  KC1_183_X = 1474,
  KC1_184_X = 1475,
  KC1_185_X = 1476,
  KC1_186_X = 1477,
  KC1_187_X = 1478,
  KC1_188_X = 1479,
  KC1_189_X = 1480,
  KC1_190_X = 1481,
  KC1_191_X = 1482,
  KC0_128_XYZW = 1483,
  KC0_129_XYZW = 1484,
  KC0_130_XYZW = 1485,
  KC0_131_XYZW = 1486,
  KC0_132_XYZW = 1487,
  KC0_133_XYZW = 1488,
  KC0_134_XYZW = 1489,
  KC0_135_XYZW = 1490,
  KC0_136_XYZW = 1491,
  KC0_137_XYZW = 1492,
  KC0_138_XYZW = 1493,
  KC0_139_XYZW = 1494,
  KC0_140_XYZW = 1495,
  KC0_141_XYZW = 1496,
  KC0_142_XYZW = 1497,
  KC0_143_XYZW = 1498,
  KC0_144_XYZW = 1499,
  KC0_145_XYZW = 1500,
  KC0_146_XYZW = 1501,
  KC0_147_XYZW = 1502,
  KC0_148_XYZW = 1503,
  KC0_149_XYZW = 1504,
  KC0_150_XYZW = 1505,
  KC0_151_XYZW = 1506,
  KC0_152_XYZW = 1507,
  KC0_153_XYZW = 1508,
  KC0_154_XYZW = 1509,
  KC0_155_XYZW = 1510,
  KC0_156_XYZW = 1511,
  KC0_157_XYZW = 1512,
  KC0_158_XYZW = 1513,
  KC0_159_XYZW = 1514,
  KC1_160_XYZW = 1515,
  KC1_161_XYZW = 1516,
  KC1_162_XYZW = 1517,
  KC1_163_XYZW = 1518,
  KC1_164_XYZW = 1519,
  KC1_165_XYZW = 1520,
  KC1_166_XYZW = 1521,
  KC1_167_XYZW = 1522,
  KC1_168_XYZW = 1523,
  KC1_169_XYZW = 1524,
  KC1_170_XYZW = 1525,
  KC1_171_XYZW = 1526,
  KC1_172_XYZW = 1527,
  KC1_173_XYZW = 1528,
  KC1_174_XYZW = 1529,
  KC1_175_XYZW = 1530,
  KC1_176_XYZW = 1531,
  KC1_177_XYZW = 1532,
  KC1_178_XYZW = 1533,
  KC1_179_XYZW = 1534,
  KC1_180_XYZW = 1535,
  KC1_181_XYZW = 1536,
  KC1_182_XYZW = 1537,
  KC1_183_XYZW = 1538,
  KC1_184_XYZW = 1539,
  KC1_185_XYZW = 1540,
  KC1_186_XYZW = 1541,
  KC1_187_XYZW = 1542,
  KC1_188_XYZW = 1543,
  KC1_189_XYZW = 1544,
  KC1_190_XYZW = 1545,
  KC1_191_XYZW = 1546,
  KC0_128_Y = 1547,
  KC0_129_Y = 1548,
  KC0_130_Y = 1549,
  KC0_131_Y = 1550,
  KC0_132_Y = 1551,
  KC0_133_Y = 1552,
  KC0_134_Y = 1553,
  KC0_135_Y = 1554,
  KC0_136_Y = 1555,
  KC0_137_Y = 1556,
  KC0_138_Y = 1557,
  KC0_139_Y = 1558,
  KC0_140_Y = 1559,
  KC0_141_Y = 1560,
  KC0_142_Y = 1561,
  KC0_143_Y = 1562,
  KC0_144_Y = 1563,
  KC0_145_Y = 1564,
  KC0_146_Y = 1565,
  KC0_147_Y = 1566,
  KC0_148_Y = 1567,
  KC0_149_Y = 1568,
  KC0_150_Y = 1569,
  KC0_151_Y = 1570,
  KC0_152_Y = 1571,
  KC0_153_Y = 1572,
  KC0_154_Y = 1573,
  KC0_155_Y = 1574,
  KC0_156_Y = 1575,
  KC0_157_Y = 1576,
  KC0_158_Y = 1577,
  KC0_159_Y = 1578,
  KC1_160_Y = 1579,
  KC1_161_Y = 1580,
  KC1_162_Y = 1581,
  KC1_163_Y = 1582,
  KC1_164_Y = 1583,
  KC1_165_Y = 1584,
  KC1_166_Y = 1585,
  KC1_167_Y = 1586,
  KC1_168_Y = 1587,
  KC1_169_Y = 1588,
  KC1_170_Y = 1589,
  KC1_171_Y = 1590,
  KC1_172_Y = 1591,
  KC1_173_Y = 1592,
  KC1_174_Y = 1593,
  KC1_175_Y = 1594,
  KC1_176_Y = 1595,
  KC1_177_Y = 1596,
  KC1_178_Y = 1597,
  KC1_179_Y = 1598,
  KC1_180_Y = 1599,
  KC1_181_Y = 1600,
  KC1_182_Y = 1601,
  KC1_183_Y = 1602,
  KC1_184_Y = 1603,
  KC1_185_Y = 1604,
  KC1_186_Y = 1605,
  KC1_187_Y = 1606,
  KC1_188_Y = 1607,
  KC1_189_Y = 1608,
  KC1_190_Y = 1609,
  KC1_191_Y = 1610,
  KC0_128_Z = 1611,
  KC0_129_Z = 1612,
  KC0_130_Z = 1613,
  KC0_131_Z = 1614,
  KC0_132_Z = 1615,
  KC0_133_Z = 1616,
  KC0_134_Z = 1617,
  KC0_135_Z = 1618,
  KC0_136_Z = 1619,
  KC0_137_Z = 1620,
  KC0_138_Z = 1621,
  KC0_139_Z = 1622,
  KC0_140_Z = 1623,
  KC0_141_Z = 1624,
  KC0_142_Z = 1625,
  KC0_143_Z = 1626,
  KC0_144_Z = 1627,
  KC0_145_Z = 1628,
  KC0_146_Z = 1629,
  KC0_147_Z = 1630,
  KC0_148_Z = 1631,
  KC0_149_Z = 1632,
  KC0_150_Z = 1633,
  KC0_151_Z = 1634,
  KC0_152_Z = 1635,
  KC0_153_Z = 1636,
  KC0_154_Z = 1637,
  KC0_155_Z = 1638,
  KC0_156_Z = 1639,
  KC0_157_Z = 1640,
  KC0_158_Z = 1641,
  KC0_159_Z = 1642,
  KC1_160_Z = 1643,
  KC1_161_Z = 1644,
  KC1_162_Z = 1645,
  KC1_163_Z = 1646,
  KC1_164_Z = 1647,
  KC1_165_Z = 1648,
  KC1_166_Z = 1649,
  KC1_167_Z = 1650,
  KC1_168_Z = 1651,
  KC1_169_Z = 1652,
  KC1_170_Z = 1653,
  KC1_171_Z = 1654,
  KC1_172_Z = 1655,
  KC1_173_Z = 1656,
  KC1_174_Z = 1657,
  KC1_175_Z = 1658,
  KC1_176_Z = 1659,
  KC1_177_Z = 1660,
  KC1_178_Z = 1661,
  KC1_179_Z = 1662,
  KC1_180_Z = 1663,
  KC1_181_Z = 1664,
  KC1_182_Z = 1665,
  KC1_183_Z = 1666,
  KC1_184_Z = 1667,
  KC1_185_Z = 1668,
  KC1_186_Z = 1669,
  KC1_187_Z = 1670,
  KC1_188_Z = 1671,
  KC1_189_Z = 1672,
  KC1_190_Z = 1673,
  KC1_191_Z = 1674,
  NUM_TARGET_REGS 	// 1675
};
} // end namespace R600

// Register classes

namespace R600 {
enum {
  R600_Reg32RegClassID = 0,
  R600_TReg32RegClassID = 1,
  R600_TReg32_XRegClassID = 2,
  R600_AddrRegClassID = 3,
  R600_KC0RegClassID = 4,
  R600_KC1RegClassID = 5,
  R600_TReg32_WRegClassID = 6,
  R600_TReg32_YRegClassID = 7,
  R600_TReg32_ZRegClassID = 8,
  R600_ArrayBaseRegClassID = 9,
  R600_KC0_WRegClassID = 10,
  R600_KC0_XRegClassID = 11,
  R600_KC0_YRegClassID = 12,
  R600_KC0_ZRegClassID = 13,
  R600_KC1_WRegClassID = 14,
  R600_KC1_XRegClassID = 15,
  R600_KC1_YRegClassID = 16,
  R600_KC1_ZRegClassID = 17,
  R600_LDS_SRC_REGRegClassID = 18,
  R600_PredicateRegClassID = 19,
  R600_Addr_WRegClassID = 20,
  R600_Addr_YRegClassID = 21,
  R600_Addr_ZRegClassID = 22,
  R600_LDS_SRC_REG_and_R600_Reg32RegClassID = 23,
  R600_Predicate_BitRegClassID = 24,
  R600_Reg64RegClassID = 25,
  R600_Reg64VerticalRegClassID = 26,
  R600_Reg64Vertical_with_sub0_in_R600_TReg32_WRegClassID = 27,
  R600_Reg64Vertical_with_sub0_in_R600_TReg32_XRegClassID = 28,
  R600_Reg64Vertical_with_sub0_in_R600_TReg32_YRegClassID = 29,
  R600_Reg64Vertical_with_sub0_in_R600_TReg32_ZRegClassID = 30,
  R600_Reg128RegClassID = 31,
  R600_Reg128VerticalRegClassID = 32,
  R600_Reg128Vertical_with_sub0_in_R600_TReg32_WRegClassID = 33,
  R600_Reg128Vertical_with_sub0_in_R600_TReg32_XRegClassID = 34,
  R600_Reg128Vertical_with_sub0_in_R600_TReg32_YRegClassID = 35,
  R600_Reg128Vertical_with_sub0_in_R600_TReg32_ZRegClassID = 36,

  };
} // end namespace R600


// Subregister indices

namespace R600 {
enum {
  NoSubRegister,
  sub0,	// 1
  sub1,	// 2
  sub2,	// 3
  sub3,	// 4
  sub4,	// 5
  sub5,	// 6
  sub6,	// 7
  sub7,	// 8
  sub8,	// 9
  sub9,	// 10
  sub10,	// 11
  sub11,	// 12
  sub12,	// 13
  sub13,	// 14
  sub14,	// 15
  sub15,	// 16
  NUM_TARGET_SUBREGS
};
} // end namespace R600

} // end namespace llvm

#endif // GET_REGINFO_ENUM

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* MC Register Information                                                    *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_REGINFO_MC_DESC
#undef GET_REGINFO_MC_DESC

namespace llvm {

extern const MCPhysReg R600RegDiffLists[] = {
  /* 0 */ 574, 1, 1, 1, 0,
  /* 5 */ 702, 1, 1, 1, 0,
  /* 10 */ 830, 1, 1, 1, 0,
  /* 15 */ 958, 1, 1, 1, 0,
  /* 20 */ 64766, 1, 1, 1, 0,
  /* 25 */ 64891, 1, 1, 1, 0,
  /* 30 */ 65272, 1, 1, 1, 0,
  /* 35 */ 65397, 1, 1, 1, 0,
  /* 40 */ 65139, 64, 64, 1, 0,
  /* 45 */ 65139, 64, 65, 1, 0,
  /* 50 */ 65139, 64, 66, 1, 0,
  /* 55 */ 65139, 64, 67, 1, 0,
  /* 60 */ 65139, 64, 68, 1, 0,
  /* 65 */ 65139, 64, 69, 1, 0,
  /* 70 */ 65139, 64, 70, 1, 0,
  /* 75 */ 65139, 64, 71, 1, 0,
  /* 80 */ 65139, 64, 72, 1, 0,
  /* 85 */ 65139, 64, 73, 1, 0,
  /* 90 */ 65139, 64, 74, 1, 0,
  /* 95 */ 65139, 64, 75, 1, 0,
  /* 100 */ 65139, 64, 76, 1, 0,
  /* 105 */ 65139, 64, 77, 1, 0,
  /* 110 */ 65139, 64, 78, 1, 0,
  /* 115 */ 65139, 64, 79, 1, 0,
  /* 120 */ 65139, 64, 80, 1, 0,
  /* 125 */ 65139, 64, 81, 1, 0,
  /* 130 */ 65139, 64, 82, 1, 0,
  /* 135 */ 65139, 64, 83, 1, 0,
  /* 140 */ 65139, 64, 84, 1, 0,
  /* 145 */ 65139, 64, 85, 1, 0,
  /* 150 */ 65139, 64, 86, 1, 0,
  /* 155 */ 65139, 64, 87, 1, 0,
  /* 160 */ 65139, 64, 88, 1, 0,
  /* 165 */ 65139, 64, 89, 1, 0,
  /* 170 */ 65139, 64, 90, 1, 0,
  /* 175 */ 65139, 64, 91, 1, 0,
  /* 180 */ 65139, 64, 92, 1, 0,
  /* 185 */ 65139, 64, 93, 1, 0,
  /* 190 */ 65139, 64, 94, 1, 0,
  /* 195 */ 65139, 64, 95, 1, 0,
  /* 200 */ 65139, 64, 96, 1, 0,
  /* 205 */ 65139, 64, 97, 1, 0,
  /* 210 */ 65139, 64, 98, 1, 0,
  /* 215 */ 65139, 64, 99, 1, 0,
  /* 220 */ 65139, 64, 100, 1, 0,
  /* 225 */ 65139, 64, 101, 1, 0,
  /* 230 */ 65139, 64, 102, 1, 0,
  /* 235 */ 65139, 64, 103, 1, 0,
  /* 240 */ 65139, 64, 104, 1, 0,
  /* 245 */ 65139, 64, 105, 1, 0,
  /* 250 */ 65139, 64, 106, 1, 0,
  /* 255 */ 65139, 64, 107, 1, 0,
  /* 260 */ 65139, 64, 108, 1, 0,
  /* 265 */ 65139, 64, 109, 1, 0,
  /* 270 */ 65139, 64, 110, 1, 0,
  /* 275 */ 65139, 64, 111, 1, 0,
  /* 280 */ 65139, 64, 112, 1, 0,
  /* 285 */ 65139, 64, 113, 1, 0,
  /* 290 */ 65139, 64, 114, 1, 0,
  /* 295 */ 65139, 64, 115, 1, 0,
  /* 300 */ 65139, 64, 116, 1, 0,
  /* 305 */ 65139, 64, 117, 1, 0,
  /* 310 */ 65139, 64, 118, 1, 0,
  /* 315 */ 65139, 64, 119, 1, 0,
  /* 320 */ 65139, 64, 120, 1, 0,
  /* 325 */ 65139, 64, 121, 1, 0,
  /* 330 */ 65139, 64, 122, 1, 0,
  /* 335 */ 65139, 64, 123, 1, 0,
  /* 340 */ 65139, 64, 124, 1, 0,
  /* 345 */ 65139, 64, 125, 1, 0,
  /* 350 */ 65139, 64, 126, 1, 0,
  /* 355 */ 65139, 64, 127, 1, 0,
  /* 360 */ 384, 382, 1, 0,
  /* 364 */ 384, 383, 1, 0,
  /* 368 */ 128, 128, 385, 1, 0,
  /* 373 */ 128, 128, 386, 1, 0,
  /* 378 */ 65280, 128, 388, 1, 0,
  /* 383 */ 65280, 128, 389, 1, 0,
  /* 388 */ 65280, 391, 1, 0,
  /* 392 */ 65280, 392, 1, 0,
  /* 396 */ 63424, 1, 0,
  /* 399 */ 63546, 1, 0,
  /* 402 */ 63668, 1, 0,
  /* 405 */ 63790, 1, 0,
  /* 408 */ 64768, 1, 0,
  /* 411 */ 64769, 1, 0,
  /* 414 */ 64893, 1, 0,
  /* 417 */ 64894, 1, 0,
  /* 420 */ 65274, 1, 0,
  /* 423 */ 65275, 1, 0,
  /* 426 */ 65399, 1, 0,
  /* 429 */ 65400, 1, 0,
  /* 432 */ 384, 383, 2, 0,
  /* 436 */ 384, 384, 2, 0,
  /* 440 */ 128, 128, 386, 2, 0,
  /* 445 */ 128, 128, 387, 2, 0,
  /* 450 */ 65280, 128, 389, 2, 0,
  /* 455 */ 65280, 128, 390, 2, 0,
  /* 460 */ 65280, 392, 2, 0,
  /* 464 */ 65280, 393, 2, 0,
  /* 468 */ 64, 0,
  /* 470 */ 65151, 128, 128, 128, 0,
  /* 475 */ 65280, 128, 0,
  /* 478 */ 65407, 128, 0,
  /* 481 */ 65408, 384, 0,
  /* 484 */ 63529, 0,
  /* 486 */ 63656, 0,
  /* 488 */ 65280, 384, 128, 64896, 0,
  /* 493 */ 65267, 0,
  /* 495 */ 65279, 0,
  /* 497 */ 65472, 128, 64, 65280, 0,
  /* 502 */ 65408, 0,
  /* 504 */ 65472, 0,
  /* 506 */ 65535, 0,
};

extern const LaneBitmask R600LaneMaskLists[] = {
  /* 0 */ LaneBitmask(0x00000000), LaneBitmask::getAll(),
  /* 2 */ LaneBitmask(0x00000001), LaneBitmask(0x00000002), LaneBitmask::getAll(),
  /* 5 */ LaneBitmask(0x00000008), LaneBitmask(0x00000001), LaneBitmask(0x00000002), LaneBitmask(0x00000004), LaneBitmask::getAll(),
  /* 10 */ LaneBitmask(0x00000001), LaneBitmask(0x00000002), LaneBitmask(0x00000004), LaneBitmask(0x00000008), LaneBitmask::getAll(),
};

extern const uint16_t R600SubRegIdxLists[] = {
  /* 0 */ 1, 2, 0,
  /* 3 */ 1, 2, 3, 4, 0,
};

extern const MCRegisterInfo::SubRegCoveredBits R600SubRegIdxRanges[] = {
  { 65535, 65535 },
  { 0, 32 },	// sub0
  { 32, 32 },	// sub1
  { 64, 32 },	// sub2
  { 96, 32 },	// sub3
  { 128, 32 },	// sub4
  { 160, 32 },	// sub5
  { 192, 32 },	// sub6
  { 224, 32 },	// sub7
  { 256, 32 },	// sub8
  { 288, 32 },	// sub9
  { 320, 32 },	// sub10
  { 352, 32 },	// sub11
  { 384, 32 },	// sub12
  { 416, 32 },	// sub13
  { 448, 32 },	// sub14
  { 480, 32 },	// sub15
};

extern const char R600RegStrings[] = {
  /* 0 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '5', '0', 0,
  /* 13 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '6', '0', 0,
  /* 26 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '7', '0', 0,
  /* 39 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '8', '0', 0,
  /* 52 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '5', '1', 0,
  /* 65 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '6', '1', 0,
  /* 78 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '7', '1', 0,
  /* 91 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '5', '2', 0,
  /* 104 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '6', '2', 0,
  /* 117 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '7', '2', 0,
  /* 130 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '5', '3', 0,
  /* 143 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '6', '3', 0,
  /* 156 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '7', '3', 0,
  /* 169 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '5', '4', 0,
  /* 182 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '6', '4', 0,
  /* 195 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '7', '4', 0,
  /* 208 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '5', '5', 0,
  /* 221 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '6', '5', 0,
  /* 234 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '7', '5', 0,
  /* 247 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '5', '6', 0,
  /* 260 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '6', '6', 0,
  /* 273 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '7', '6', 0,
  /* 286 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '5', '7', 0,
  /* 299 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '6', '7', 0,
  /* 312 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '7', '7', 0,
  /* 325 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '4', '8', 0,
  /* 338 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '5', '8', 0,
  /* 351 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '6', '8', 0,
  /* 364 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '7', '8', 0,
  /* 377 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '4', '9', 0,
  /* 390 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '5', '9', 0,
  /* 403 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '6', '9', 0,
  /* 416 */ 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', '4', '7', '9', 0,
  /* 429 */ 'O', 'Q', 'A', 0,
  /* 433 */ 'L', 'D', 'S', '_', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'A', 0,
  /* 446 */ 'O', 'Q', 'B', 0,
  /* 450 */ 'L', 'D', 'S', '_', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'B', 0,
  /* 463 */ 'N', 'E', 'G', '_', 'O', 'N', 'E', 0,
  /* 471 */ 'P', 'R', 'E', 'D', '_', 'S', 'E', 'L', '_', 'O', 'N', 'E', 0,
  /* 484 */ 'P', 'R', 'E', 'D', '_', 'S', 'E', 'L', '_', 'O', 'F', 'F', 0,
  /* 497 */ 'N', 'E', 'G', '_', 'H', 'A', 'L', 'F', 0,
  /* 506 */ 'A', 'L', 'U', '_', 'P', 'A', 'R', 'A', 'M', 0,
  /* 516 */ 'P', 'R', 'E', 'D', '_', 'S', 'E', 'L', '_', 'Z', 'E', 'R', 'O', 0,
  /* 530 */ 'O', 'Q', 'A', 'P', 0,
  /* 535 */ 'O', 'Q', 'B', 'P', 0,
  /* 540 */ 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'B', 'A', 'S', 'E', '_', 'A', 'D', 'D', 'R', 0,
  /* 559 */ 'P', 'S', 0,
  /* 562 */ 'P', 'R', 'E', 'D', 'I', 'C', 'A', 'T', 'E', '_', 'B', 'I', 'T', 0,
  /* 576 */ 'O', 'N', 'E', '_', 'I', 'N', 'T', 0,
  /* 584 */ 'A', 'L', 'U', '_', 'C', 'O', 'N', 'S', 'T', 0,
  /* 594 */ 'T', '1', '0', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 604 */ 'T', '1', '1', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 614 */ 'T', '1', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 623 */ 'T', '1', '2', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 633 */ 'T', '2', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 642 */ 'K', 'C', '0', '_', '1', '3', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 655 */ 'T', '3', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 664 */ 'K', 'C', '0', '_', '1', '4', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 677 */ 'T', '4', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 686 */ 'K', 'C', '0', '_', '1', '5', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 699 */ 'T', '5', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 708 */ 'K', 'C', '1', '_', '1', '6', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 721 */ 'T', '6', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 730 */ 'K', 'C', '1', '_', '1', '7', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 743 */ 'T', '7', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 752 */ 'K', 'C', '1', '_', '1', '8', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 765 */ 'T', '8', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 774 */ 'K', 'C', '1', '_', '1', '9', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 787 */ 'T', '9', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 796 */ 'T', '0', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 804 */ 'T', '1', '0', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 814 */ 'T', '1', '1', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 824 */ 'T', '1', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 833 */ 'T', '1', '2', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 843 */ 'T', '2', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 852 */ 'K', 'C', '0', '_', '1', '3', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 865 */ 'T', '3', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 874 */ 'K', 'C', '0', '_', '1', '4', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 887 */ 'T', '4', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 896 */ 'K', 'C', '0', '_', '1', '5', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 909 */ 'T', '5', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 918 */ 'K', 'C', '1', '_', '1', '6', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 931 */ 'T', '6', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 940 */ 'K', 'C', '1', '_', '1', '7', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 953 */ 'T', '7', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 962 */ 'K', 'C', '1', '_', '1', '8', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 975 */ 'T', '8', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 984 */ 'K', 'C', '1', '_', '1', '9', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 997 */ 'T', '9', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1006 */ 'T', '1', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1014 */ 'T', '1', '0', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1024 */ 'T', '1', '1', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1034 */ 'T', '1', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1043 */ 'T', '1', '2', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1053 */ 'T', '2', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1062 */ 'K', 'C', '0', '_', '1', '3', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1075 */ 'T', '3', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1084 */ 'K', 'C', '0', '_', '1', '4', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1097 */ 'T', '4', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1106 */ 'K', 'C', '0', '_', '1', '5', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1119 */ 'T', '5', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1128 */ 'K', 'C', '1', '_', '1', '6', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1141 */ 'T', '6', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1150 */ 'K', 'C', '1', '_', '1', '7', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1163 */ 'T', '7', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1172 */ 'K', 'C', '1', '_', '1', '8', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1185 */ 'T', '8', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1194 */ 'T', '9', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1203 */ 'T', '2', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1211 */ 'T', '1', '0', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1221 */ 'T', '1', '1', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1231 */ 'T', '1', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1240 */ 'T', '1', '2', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1250 */ 'T', '2', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1259 */ 'K', 'C', '0', '_', '1', '3', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1272 */ 'T', '3', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1281 */ 'K', 'C', '0', '_', '1', '4', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1294 */ 'T', '4', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1303 */ 'K', 'C', '0', '_', '1', '5', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1316 */ 'T', '5', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1325 */ 'K', 'C', '1', '_', '1', '6', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1338 */ 'T', '6', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1347 */ 'K', 'C', '1', '_', '1', '7', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1360 */ 'T', '7', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1369 */ 'K', 'C', '1', '_', '1', '8', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1382 */ 'T', '8', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1391 */ 'T', '9', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1400 */ 'T', '3', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1408 */ 'T', '1', '0', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1418 */ 'T', '1', '1', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1428 */ 'T', '1', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1437 */ 'T', '1', '2', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1447 */ 'T', '2', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1456 */ 'K', 'C', '0', '_', '1', '3', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1469 */ 'T', '3', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1478 */ 'K', 'C', '0', '_', '1', '4', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1491 */ 'T', '4', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1500 */ 'K', 'C', '0', '_', '1', '5', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1513 */ 'T', '5', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1522 */ 'K', 'C', '1', '_', '1', '6', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1535 */ 'T', '6', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1544 */ 'K', 'C', '1', '_', '1', '7', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1557 */ 'T', '7', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1566 */ 'K', 'C', '1', '_', '1', '8', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1579 */ 'T', '8', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1588 */ 'T', '9', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1597 */ 'T', '4', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1605 */ 'T', '1', '0', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1615 */ 'T', '1', '1', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1625 */ 'T', '1', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1634 */ 'T', '1', '2', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1644 */ 'T', '2', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1653 */ 'K', 'C', '0', '_', '1', '3', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1666 */ 'T', '3', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1675 */ 'K', 'C', '0', '_', '1', '4', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1688 */ 'T', '4', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1697 */ 'K', 'C', '0', '_', '1', '5', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1710 */ 'T', '5', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1719 */ 'K', 'C', '1', '_', '1', '6', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1732 */ 'T', '6', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1741 */ 'K', 'C', '1', '_', '1', '7', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1754 */ 'T', '7', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1763 */ 'K', 'C', '1', '_', '1', '8', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1776 */ 'T', '8', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1785 */ 'T', '9', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1794 */ 'T', '5', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1802 */ 'T', '1', '0', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1812 */ 'T', '1', '1', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1822 */ 'T', '1', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1831 */ 'T', '1', '2', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1841 */ 'T', '2', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1850 */ 'K', 'C', '0', '_', '1', '3', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1863 */ 'T', '3', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1872 */ 'K', 'C', '0', '_', '1', '4', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1885 */ 'T', '4', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1894 */ 'K', 'C', '0', '_', '1', '5', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1907 */ 'T', '5', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1916 */ 'K', 'C', '1', '_', '1', '6', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1929 */ 'T', '6', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1938 */ 'K', 'C', '1', '_', '1', '7', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1951 */ 'T', '7', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1960 */ 'K', 'C', '1', '_', '1', '8', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1973 */ 'T', '8', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1982 */ 'T', '9', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1991 */ 'T', '6', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 1999 */ 'T', '1', '0', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2009 */ 'T', '1', '1', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2019 */ 'T', '1', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2028 */ 'T', '1', '2', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2038 */ 'T', '2', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2047 */ 'K', 'C', '0', '_', '1', '3', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2060 */ 'T', '3', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2069 */ 'K', 'C', '0', '_', '1', '4', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2082 */ 'T', '4', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2091 */ 'K', 'C', '0', '_', '1', '5', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2104 */ 'T', '5', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2113 */ 'K', 'C', '1', '_', '1', '6', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2126 */ 'T', '6', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2135 */ 'K', 'C', '1', '_', '1', '7', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2148 */ 'T', '7', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2157 */ 'K', 'C', '1', '_', '1', '8', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2170 */ 'T', '8', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2179 */ 'T', '9', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2188 */ 'T', '7', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2196 */ 'T', '1', '0', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2206 */ 'T', '1', '1', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2216 */ 'T', '1', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2225 */ 'K', 'C', '0', '_', '1', '2', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2238 */ 'T', '2', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2247 */ 'K', 'C', '0', '_', '1', '3', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2260 */ 'T', '3', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2269 */ 'K', 'C', '0', '_', '1', '4', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2282 */ 'T', '4', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2291 */ 'K', 'C', '0', '_', '1', '5', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2304 */ 'T', '5', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2313 */ 'K', 'C', '1', '_', '1', '6', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2326 */ 'T', '6', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2335 */ 'K', 'C', '1', '_', '1', '7', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2348 */ 'T', '7', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2357 */ 'K', 'C', '1', '_', '1', '8', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2370 */ 'T', '8', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2379 */ 'T', '9', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2388 */ 'T', '8', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2396 */ 'T', '1', '0', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2406 */ 'T', '1', '1', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2416 */ 'T', '1', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2425 */ 'K', 'C', '0', '_', '1', '2', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2438 */ 'T', '2', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2447 */ 'K', 'C', '0', '_', '1', '3', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2460 */ 'T', '3', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2469 */ 'K', 'C', '0', '_', '1', '4', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2482 */ 'T', '4', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2491 */ 'K', 'C', '0', '_', '1', '5', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2504 */ 'T', '5', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2513 */ 'K', 'C', '1', '_', '1', '6', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2526 */ 'T', '6', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2535 */ 'K', 'C', '1', '_', '1', '7', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2548 */ 'T', '7', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2557 */ 'K', 'C', '1', '_', '1', '8', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2570 */ 'T', '8', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2579 */ 'T', '9', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2588 */ 'T', '9', '_', 'X', 'Y', 'Z', 'W', 0,
  /* 2596 */ 'T', '1', '0', '0', '_', 'W', 0,
  /* 2603 */ 'A', 'd', 'd', 'r', '1', '0', '0', '_', 'W', 0,
  /* 2613 */ 'T', '1', '1', '0', '_', 'W', 0,
  /* 2620 */ 'A', 'd', 'd', 'r', '1', '1', '0', '_', 'W', 0,
  /* 2630 */ 'T', '1', '0', '_', 'W', 0,
  /* 2636 */ 'A', 'd', 'd', 'r', '1', '0', '_', 'W', 0,
  /* 2645 */ 'T', '1', '2', '0', '_', 'W', 0,
  /* 2652 */ 'A', 'd', 'd', 'r', '1', '2', '0', '_', 'W', 0,
  /* 2662 */ 'T', '2', '0', '_', 'W', 0,
  /* 2668 */ 'A', 'd', 'd', 'r', '2', '0', '_', 'W', 0,
  /* 2677 */ 'K', 'C', '0', '_', '1', '3', '0', '_', 'W', 0,
  /* 2687 */ 'T', '3', '0', '_', 'W', 0,
  /* 2693 */ 'A', 'd', 'd', 'r', '3', '0', '_', 'W', 0,
  /* 2702 */ 'K', 'C', '0', '_', '1', '4', '0', '_', 'W', 0,
  /* 2712 */ 'T', '4', '0', '_', 'W', 0,
  /* 2718 */ 'A', 'd', 'd', 'r', '4', '0', '_', 'W', 0,
  /* 2727 */ 'K', 'C', '0', '_', '1', '5', '0', '_', 'W', 0,
  /* 2737 */ 'T', '5', '0', '_', 'W', 0,
  /* 2743 */ 'A', 'd', 'd', 'r', '5', '0', '_', 'W', 0,
  /* 2752 */ 'K', 'C', '1', '_', '1', '6', '0', '_', 'W', 0,
  /* 2762 */ 'T', '6', '0', '_', 'W', 0,
  /* 2768 */ 'A', 'd', 'd', 'r', '6', '0', '_', 'W', 0,
  /* 2777 */ 'K', 'C', '1', '_', '1', '7', '0', '_', 'W', 0,
  /* 2787 */ 'T', '7', '0', '_', 'W', 0,
  /* 2793 */ 'A', 'd', 'd', 'r', '7', '0', '_', 'W', 0,
  /* 2802 */ 'K', 'C', '1', '_', '1', '8', '0', '_', 'W', 0,
  /* 2812 */ 'T', '8', '0', '_', 'W', 0,
  /* 2818 */ 'A', 'd', 'd', 'r', '8', '0', '_', 'W', 0,
  /* 2827 */ 'K', 'C', '1', '_', '1', '9', '0', '_', 'W', 0,
  /* 2837 */ 'T', '9', '0', '_', 'W', 0,
  /* 2843 */ 'A', 'd', 'd', 'r', '9', '0', '_', 'W', 0,
  /* 2852 */ 'T', '0', '_', 'W', 0,
  /* 2857 */ 'A', 'd', 'd', 'r', '0', '_', 'W', 0,
  /* 2865 */ 'T', '1', '0', '1', '_', 'W', 0,
  /* 2872 */ 'A', 'd', 'd', 'r', '1', '0', '1', '_', 'W', 0,
  /* 2882 */ 'V', '0', '1', '_', 'W', 0,
  /* 2888 */ 'T', '1', '1', '1', '_', 'W', 0,
  /* 2895 */ 'A', 'd', 'd', 'r', '1', '1', '1', '_', 'W', 0,
  /* 2905 */ 'T', '1', '1', '_', 'W', 0,
  /* 2911 */ 'A', 'd', 'd', 'r', '1', '1', '_', 'W', 0,
  /* 2920 */ 'T', '1', '2', '1', '_', 'W', 0,
  /* 2927 */ 'A', 'd', 'd', 'r', '1', '2', '1', '_', 'W', 0,
  /* 2937 */ 'T', '2', '1', '_', 'W', 0,
  /* 2943 */ 'A', 'd', 'd', 'r', '2', '1', '_', 'W', 0,
  /* 2952 */ 'K', 'C', '0', '_', '1', '3', '1', '_', 'W', 0,
  /* 2962 */ 'T', '3', '1', '_', 'W', 0,
  /* 2968 */ 'A', 'd', 'd', 'r', '3', '1', '_', 'W', 0,
  /* 2977 */ 'K', 'C', '0', '_', '1', '4', '1', '_', 'W', 0,
  /* 2987 */ 'T', '4', '1', '_', 'W', 0,
  /* 2993 */ 'A', 'd', 'd', 'r', '4', '1', '_', 'W', 0,
  /* 3002 */ 'K', 'C', '0', '_', '1', '5', '1', '_', 'W', 0,
  /* 3012 */ 'T', '5', '1', '_', 'W', 0,
  /* 3018 */ 'A', 'd', 'd', 'r', '5', '1', '_', 'W', 0,
  /* 3027 */ 'K', 'C', '1', '_', '1', '6', '1', '_', 'W', 0,
  /* 3037 */ 'T', '6', '1', '_', 'W', 0,
  /* 3043 */ 'A', 'd', 'd', 'r', '6', '1', '_', 'W', 0,
  /* 3052 */ 'K', 'C', '1', '_', '1', '7', '1', '_', 'W', 0,
  /* 3062 */ 'T', '7', '1', '_', 'W', 0,
  /* 3068 */ 'A', 'd', 'd', 'r', '7', '1', '_', 'W', 0,
  /* 3077 */ 'K', 'C', '1', '_', '1', '8', '1', '_', 'W', 0,
  /* 3087 */ 'T', '8', '1', '_', 'W', 0,
  /* 3093 */ 'A', 'd', 'd', 'r', '8', '1', '_', 'W', 0,
  /* 3102 */ 'K', 'C', '1', '_', '1', '9', '1', '_', 'W', 0,
  /* 3112 */ 'T', '9', '1', '_', 'W', 0,
  /* 3118 */ 'A', 'd', 'd', 'r', '9', '1', '_', 'W', 0,
  /* 3127 */ 'T', '1', '_', 'W', 0,
  /* 3132 */ 'A', 'd', 'd', 'r', '1', '_', 'W', 0,
  /* 3140 */ 'T', '1', '0', '2', '_', 'W', 0,
  /* 3147 */ 'A', 'd', 'd', 'r', '1', '0', '2', '_', 'W', 0,
  /* 3157 */ 'T', '1', '1', '2', '_', 'W', 0,
  /* 3164 */ 'A', 'd', 'd', 'r', '1', '1', '2', '_', 'W', 0,
  /* 3174 */ 'T', '1', '2', '_', 'W', 0,
  /* 3180 */ 'A', 'd', 'd', 'r', '1', '2', '_', 'W', 0,
  /* 3189 */ 'T', '1', '2', '2', '_', 'W', 0,
  /* 3196 */ 'A', 'd', 'd', 'r', '1', '2', '2', '_', 'W', 0,
  /* 3206 */ 'T', '2', '2', '_', 'W', 0,
  /* 3212 */ 'A', 'd', 'd', 'r', '2', '2', '_', 'W', 0,
  /* 3221 */ 'K', 'C', '0', '_', '1', '3', '2', '_', 'W', 0,
  /* 3231 */ 'T', '3', '2', '_', 'W', 0,
  /* 3237 */ 'A', 'd', 'd', 'r', '3', '2', '_', 'W', 0,
  /* 3246 */ 'K', 'C', '0', '_', '1', '4', '2', '_', 'W', 0,
  /* 3256 */ 'T', '4', '2', '_', 'W', 0,
  /* 3262 */ 'A', 'd', 'd', 'r', '4', '2', '_', 'W', 0,
  /* 3271 */ 'K', 'C', '0', '_', '1', '5', '2', '_', 'W', 0,
  /* 3281 */ 'T', '5', '2', '_', 'W', 0,
  /* 3287 */ 'A', 'd', 'd', 'r', '5', '2', '_', 'W', 0,
  /* 3296 */ 'K', 'C', '1', '_', '1', '6', '2', '_', 'W', 0,
  /* 3306 */ 'T', '6', '2', '_', 'W', 0,
  /* 3312 */ 'A', 'd', 'd', 'r', '6', '2', '_', 'W', 0,
  /* 3321 */ 'K', 'C', '1', '_', '1', '7', '2', '_', 'W', 0,
  /* 3331 */ 'T', '7', '2', '_', 'W', 0,
  /* 3337 */ 'A', 'd', 'd', 'r', '7', '2', '_', 'W', 0,
  /* 3346 */ 'K', 'C', '1', '_', '1', '8', '2', '_', 'W', 0,
  /* 3356 */ 'T', '8', '2', '_', 'W', 0,
  /* 3362 */ 'A', 'd', 'd', 'r', '8', '2', '_', 'W', 0,
  /* 3371 */ 'T', '9', '2', '_', 'W', 0,
  /* 3377 */ 'A', 'd', 'd', 'r', '9', '2', '_', 'W', 0,
  /* 3386 */ 'T', '2', '_', 'W', 0,
  /* 3391 */ 'A', 'd', 'd', 'r', '2', '_', 'W', 0,
  /* 3399 */ 'T', '1', '0', '3', '_', 'W', 0,
  /* 3406 */ 'A', 'd', 'd', 'r', '1', '0', '3', '_', 'W', 0,
  /* 3416 */ 'T', '1', '1', '3', '_', 'W', 0,
  /* 3423 */ 'A', 'd', 'd', 'r', '1', '1', '3', '_', 'W', 0,
  /* 3433 */ 'T', '1', '3', '_', 'W', 0,
  /* 3439 */ 'A', 'd', 'd', 'r', '1', '3', '_', 'W', 0,
  /* 3448 */ 'V', '0', '1', '2', '3', '_', 'W', 0,
  /* 3456 */ 'T', '1', '2', '3', '_', 'W', 0,
  /* 3463 */ 'A', 'd', 'd', 'r', '1', '2', '3', '_', 'W', 0,
  /* 3473 */ 'T', '2', '3', '_', 'W', 0,
  /* 3479 */ 'V', '2', '3', '_', 'W', 0,
  /* 3485 */ 'A', 'd', 'd', 'r', '2', '3', '_', 'W', 0,
  /* 3494 */ 'K', 'C', '0', '_', '1', '3', '3', '_', 'W', 0,
  /* 3504 */ 'T', '3', '3', '_', 'W', 0,
  /* 3510 */ 'A', 'd', 'd', 'r', '3', '3', '_', 'W', 0,
  /* 3519 */ 'K', 'C', '0', '_', '1', '4', '3', '_', 'W', 0,
  /* 3529 */ 'T', '4', '3', '_', 'W', 0,
  /* 3535 */ 'A', 'd', 'd', 'r', '4', '3', '_', 'W', 0,
  /* 3544 */ 'K', 'C', '0', '_', '1', '5', '3', '_', 'W', 0,
  /* 3554 */ 'T', '5', '3', '_', 'W', 0,
  /* 3560 */ 'A', 'd', 'd', 'r', '5', '3', '_', 'W', 0,
  /* 3569 */ 'K', 'C', '1', '_', '1', '6', '3', '_', 'W', 0,
  /* 3579 */ 'T', '6', '3', '_', 'W', 0,
  /* 3585 */ 'A', 'd', 'd', 'r', '6', '3', '_', 'W', 0,
  /* 3594 */ 'K', 'C', '1', '_', '1', '7', '3', '_', 'W', 0,
  /* 3604 */ 'T', '7', '3', '_', 'W', 0,
  /* 3610 */ 'A', 'd', 'd', 'r', '7', '3', '_', 'W', 0,
  /* 3619 */ 'K', 'C', '1', '_', '1', '8', '3', '_', 'W', 0,
  /* 3629 */ 'T', '8', '3', '_', 'W', 0,
  /* 3635 */ 'A', 'd', 'd', 'r', '8', '3', '_', 'W', 0,
  /* 3644 */ 'T', '9', '3', '_', 'W', 0,
  /* 3650 */ 'A', 'd', 'd', 'r', '9', '3', '_', 'W', 0,
  /* 3659 */ 'T', '3', '_', 'W', 0,
  /* 3664 */ 'A', 'd', 'd', 'r', '3', '_', 'W', 0,
  /* 3672 */ 'T', '1', '0', '4', '_', 'W', 0,
  /* 3679 */ 'A', 'd', 'd', 'r', '1', '0', '4', '_', 'W', 0,
  /* 3689 */ 'T', '1', '1', '4', '_', 'W', 0,
  /* 3696 */ 'A', 'd', 'd', 'r', '1', '1', '4', '_', 'W', 0,
  /* 3706 */ 'T', '1', '4', '_', 'W', 0,
  /* 3712 */ 'A', 'd', 'd', 'r', '1', '4', '_', 'W', 0,
  /* 3721 */ 'T', '1', '2', '4', '_', 'W', 0,
  /* 3728 */ 'A', 'd', 'd', 'r', '1', '2', '4', '_', 'W', 0,
  /* 3738 */ 'T', '2', '4', '_', 'W', 0,
  /* 3744 */ 'A', 'd', 'd', 'r', '2', '4', '_', 'W', 0,
  /* 3753 */ 'K', 'C', '0', '_', '1', '3', '4', '_', 'W', 0,
  /* 3763 */ 'T', '3', '4', '_', 'W', 0,
  /* 3769 */ 'A', 'd', 'd', 'r', '3', '4', '_', 'W', 0,
  /* 3778 */ 'K', 'C', '0', '_', '1', '4', '4', '_', 'W', 0,
  /* 3788 */ 'T', '4', '4', '_', 'W', 0,
  /* 3794 */ 'A', 'd', 'd', 'r', '4', '4', '_', 'W', 0,
  /* 3803 */ 'K', 'C', '0', '_', '1', '5', '4', '_', 'W', 0,
  /* 3813 */ 'T', '5', '4', '_', 'W', 0,
  /* 3819 */ 'A', 'd', 'd', 'r', '5', '4', '_', 'W', 0,
  /* 3828 */ 'K', 'C', '1', '_', '1', '6', '4', '_', 'W', 0,
  /* 3838 */ 'T', '6', '4', '_', 'W', 0,
  /* 3844 */ 'A', 'd', 'd', 'r', '6', '4', '_', 'W', 0,
  /* 3853 */ 'K', 'C', '1', '_', '1', '7', '4', '_', 'W', 0,
  /* 3863 */ 'T', '7', '4', '_', 'W', 0,
  /* 3869 */ 'A', 'd', 'd', 'r', '7', '4', '_', 'W', 0,
  /* 3878 */ 'K', 'C', '1', '_', '1', '8', '4', '_', 'W', 0,
  /* 3888 */ 'T', '8', '4', '_', 'W', 0,
  /* 3894 */ 'A', 'd', 'd', 'r', '8', '4', '_', 'W', 0,
  /* 3903 */ 'T', '9', '4', '_', 'W', 0,
  /* 3909 */ 'A', 'd', 'd', 'r', '9', '4', '_', 'W', 0,
  /* 3918 */ 'T', '4', '_', 'W', 0,
  /* 3923 */ 'A', 'd', 'd', 'r', '4', '_', 'W', 0,
  /* 3931 */ 'T', '1', '0', '5', '_', 'W', 0,
  /* 3938 */ 'A', 'd', 'd', 'r', '1', '0', '5', '_', 'W', 0,
  /* 3948 */ 'T', '1', '1', '5', '_', 'W', 0,
  /* 3955 */ 'A', 'd', 'd', 'r', '1', '1', '5', '_', 'W', 0,
  /* 3965 */ 'T', '1', '5', '_', 'W', 0,
  /* 3971 */ 'A', 'd', 'd', 'r', '1', '5', '_', 'W', 0,
  /* 3980 */ 'T', '1', '2', '5', '_', 'W', 0,
  /* 3987 */ 'A', 'd', 'd', 'r', '1', '2', '5', '_', 'W', 0,
  /* 3997 */ 'T', '2', '5', '_', 'W', 0,
  /* 4003 */ 'A', 'd', 'd', 'r', '2', '5', '_', 'W', 0,
  /* 4012 */ 'K', 'C', '0', '_', '1', '3', '5', '_', 'W', 0,
  /* 4022 */ 'T', '3', '5', '_', 'W', 0,
  /* 4028 */ 'A', 'd', 'd', 'r', '3', '5', '_', 'W', 0,
  /* 4037 */ 'K', 'C', '0', '_', '1', '4', '5', '_', 'W', 0,
  /* 4047 */ 'T', '4', '5', '_', 'W', 0,
  /* 4053 */ 'A', 'd', 'd', 'r', '4', '5', '_', 'W', 0,
  /* 4062 */ 'K', 'C', '0', '_', '1', '5', '5', '_', 'W', 0,
  /* 4072 */ 'T', '5', '5', '_', 'W', 0,
  /* 4078 */ 'A', 'd', 'd', 'r', '5', '5', '_', 'W', 0,
  /* 4087 */ 'K', 'C', '1', '_', '1', '6', '5', '_', 'W', 0,
  /* 4097 */ 'T', '6', '5', '_', 'W', 0,
  /* 4103 */ 'A', 'd', 'd', 'r', '6', '5', '_', 'W', 0,
  /* 4112 */ 'K', 'C', '1', '_', '1', '7', '5', '_', 'W', 0,
  /* 4122 */ 'T', '7', '5', '_', 'W', 0,
  /* 4128 */ 'A', 'd', 'd', 'r', '7', '5', '_', 'W', 0,
  /* 4137 */ 'K', 'C', '1', '_', '1', '8', '5', '_', 'W', 0,
  /* 4147 */ 'T', '8', '5', '_', 'W', 0,
  /* 4153 */ 'A', 'd', 'd', 'r', '8', '5', '_', 'W', 0,
  /* 4162 */ 'T', '9', '5', '_', 'W', 0,
  /* 4168 */ 'A', 'd', 'd', 'r', '9', '5', '_', 'W', 0,
  /* 4177 */ 'T', '5', '_', 'W', 0,
  /* 4182 */ 'A', 'd', 'd', 'r', '5', '_', 'W', 0,
  /* 4190 */ 'T', '1', '0', '6', '_', 'W', 0,
  /* 4197 */ 'A', 'd', 'd', 'r', '1', '0', '6', '_', 'W', 0,
  /* 4207 */ 'T', '1', '1', '6', '_', 'W', 0,
  /* 4214 */ 'A', 'd', 'd', 'r', '1', '1', '6', '_', 'W', 0,
  /* 4224 */ 'T', '1', '6', '_', 'W', 0,
  /* 4230 */ 'A', 'd', 'd', 'r', '1', '6', '_', 'W', 0,
  /* 4239 */ 'T', '1', '2', '6', '_', 'W', 0,
  /* 4246 */ 'A', 'd', 'd', 'r', '1', '2', '6', '_', 'W', 0,
  /* 4256 */ 'T', '2', '6', '_', 'W', 0,
  /* 4262 */ 'A', 'd', 'd', 'r', '2', '6', '_', 'W', 0,
  /* 4271 */ 'K', 'C', '0', '_', '1', '3', '6', '_', 'W', 0,
  /* 4281 */ 'T', '3', '6', '_', 'W', 0,
  /* 4287 */ 'A', 'd', 'd', 'r', '3', '6', '_', 'W', 0,
  /* 4296 */ 'K', 'C', '0', '_', '1', '4', '6', '_', 'W', 0,
  /* 4306 */ 'T', '4', '6', '_', 'W', 0,
  /* 4312 */ 'A', 'd', 'd', 'r', '4', '6', '_', 'W', 0,
  /* 4321 */ 'K', 'C', '0', '_', '1', '5', '6', '_', 'W', 0,
  /* 4331 */ 'T', '5', '6', '_', 'W', 0,
  /* 4337 */ 'A', 'd', 'd', 'r', '5', '6', '_', 'W', 0,
  /* 4346 */ 'K', 'C', '1', '_', '1', '6', '6', '_', 'W', 0,
  /* 4356 */ 'T', '6', '6', '_', 'W', 0,
  /* 4362 */ 'A', 'd', 'd', 'r', '6', '6', '_', 'W', 0,
  /* 4371 */ 'K', 'C', '1', '_', '1', '7', '6', '_', 'W', 0,
  /* 4381 */ 'T', '7', '6', '_', 'W', 0,
  /* 4387 */ 'A', 'd', 'd', 'r', '7', '6', '_', 'W', 0,
  /* 4396 */ 'K', 'C', '1', '_', '1', '8', '6', '_', 'W', 0,
  /* 4406 */ 'T', '8', '6', '_', 'W', 0,
  /* 4412 */ 'A', 'd', 'd', 'r', '8', '6', '_', 'W', 0,
  /* 4421 */ 'T', '9', '6', '_', 'W', 0,
  /* 4427 */ 'A', 'd', 'd', 'r', '9', '6', '_', 'W', 0,
  /* 4436 */ 'T', '6', '_', 'W', 0,
  /* 4441 */ 'A', 'd', 'd', 'r', '6', '_', 'W', 0,
  /* 4449 */ 'T', '1', '0', '7', '_', 'W', 0,
  /* 4456 */ 'A', 'd', 'd', 'r', '1', '0', '7', '_', 'W', 0,
  /* 4466 */ 'T', '1', '1', '7', '_', 'W', 0,
  /* 4473 */ 'A', 'd', 'd', 'r', '1', '1', '7', '_', 'W', 0,
  /* 4483 */ 'T', '1', '7', '_', 'W', 0,
  /* 4489 */ 'A', 'd', 'd', 'r', '1', '7', '_', 'W', 0,
  /* 4498 */ 'T', '1', '2', '7', '_', 'W', 0,
  /* 4505 */ 'A', 'd', 'd', 'r', '1', '2', '7', '_', 'W', 0,
  /* 4515 */ 'T', '2', '7', '_', 'W', 0,
  /* 4521 */ 'A', 'd', 'd', 'r', '2', '7', '_', 'W', 0,
  /* 4530 */ 'K', 'C', '0', '_', '1', '3', '7', '_', 'W', 0,
  /* 4540 */ 'T', '3', '7', '_', 'W', 0,
  /* 4546 */ 'A', 'd', 'd', 'r', '3', '7', '_', 'W', 0,
  /* 4555 */ 'K', 'C', '0', '_', '1', '4', '7', '_', 'W', 0,
  /* 4565 */ 'T', '4', '7', '_', 'W', 0,
  /* 4571 */ 'A', 'd', 'd', 'r', '4', '7', '_', 'W', 0,
  /* 4580 */ 'K', 'C', '0', '_', '1', '5', '7', '_', 'W', 0,
  /* 4590 */ 'T', '5', '7', '_', 'W', 0,
  /* 4596 */ 'A', 'd', 'd', 'r', '5', '7', '_', 'W', 0,
  /* 4605 */ 'K', 'C', '1', '_', '1', '6', '7', '_', 'W', 0,
  /* 4615 */ 'T', '6', '7', '_', 'W', 0,
  /* 4621 */ 'A', 'd', 'd', 'r', '6', '7', '_', 'W', 0,
  /* 4630 */ 'K', 'C', '1', '_', '1', '7', '7', '_', 'W', 0,
  /* 4640 */ 'T', '7', '7', '_', 'W', 0,
  /* 4646 */ 'A', 'd', 'd', 'r', '7', '7', '_', 'W', 0,
  /* 4655 */ 'K', 'C', '1', '_', '1', '8', '7', '_', 'W', 0,
  /* 4665 */ 'T', '8', '7', '_', 'W', 0,
  /* 4671 */ 'A', 'd', 'd', 'r', '8', '7', '_', 'W', 0,
  /* 4680 */ 'T', '9', '7', '_', 'W', 0,
  /* 4686 */ 'A', 'd', 'd', 'r', '9', '7', '_', 'W', 0,
  /* 4695 */ 'T', '7', '_', 'W', 0,
  /* 4700 */ 'A', 'd', 'd', 'r', '7', '_', 'W', 0,
  /* 4708 */ 'T', '1', '0', '8', '_', 'W', 0,
  /* 4715 */ 'A', 'd', 'd', 'r', '1', '0', '8', '_', 'W', 0,
  /* 4725 */ 'T', '1', '1', '8', '_', 'W', 0,
  /* 4732 */ 'A', 'd', 'd', 'r', '1', '1', '8', '_', 'W', 0,
  /* 4742 */ 'T', '1', '8', '_', 'W', 0,
  /* 4748 */ 'A', 'd', 'd', 'r', '1', '8', '_', 'W', 0,
  /* 4757 */ 'K', 'C', '0', '_', '1', '2', '8', '_', 'W', 0,
  /* 4767 */ 'T', '2', '8', '_', 'W', 0,
  /* 4773 */ 'A', 'd', 'd', 'r', '2', '8', '_', 'W', 0,
  /* 4782 */ 'K', 'C', '0', '_', '1', '3', '8', '_', 'W', 0,
  /* 4792 */ 'T', '3', '8', '_', 'W', 0,
  /* 4798 */ 'A', 'd', 'd', 'r', '3', '8', '_', 'W', 0,
  /* 4807 */ 'K', 'C', '0', '_', '1', '4', '8', '_', 'W', 0,
  /* 4817 */ 'T', '4', '8', '_', 'W', 0,
  /* 4823 */ 'A', 'd', 'd', 'r', '4', '8', '_', 'W', 0,
  /* 4832 */ 'K', 'C', '0', '_', '1', '5', '8', '_', 'W', 0,
  /* 4842 */ 'T', '5', '8', '_', 'W', 0,
  /* 4848 */ 'A', 'd', 'd', 'r', '5', '8', '_', 'W', 0,
  /* 4857 */ 'K', 'C', '1', '_', '1', '6', '8', '_', 'W', 0,
  /* 4867 */ 'T', '6', '8', '_', 'W', 0,
  /* 4873 */ 'A', 'd', 'd', 'r', '6', '8', '_', 'W', 0,
  /* 4882 */ 'K', 'C', '1', '_', '1', '7', '8', '_', 'W', 0,
  /* 4892 */ 'T', '7', '8', '_', 'W', 0,
  /* 4898 */ 'A', 'd', 'd', 'r', '7', '8', '_', 'W', 0,
  /* 4907 */ 'K', 'C', '1', '_', '1', '8', '8', '_', 'W', 0,
  /* 4917 */ 'T', '8', '8', '_', 'W', 0,
  /* 4923 */ 'A', 'd', 'd', 'r', '8', '8', '_', 'W', 0,
  /* 4932 */ 'T', '9', '8', '_', 'W', 0,
  /* 4938 */ 'A', 'd', 'd', 'r', '9', '8', '_', 'W', 0,
  /* 4947 */ 'T', '8', '_', 'W', 0,
  /* 4952 */ 'A', 'd', 'd', 'r', '8', '_', 'W', 0,
  /* 4960 */ 'T', '1', '0', '9', '_', 'W', 0,
  /* 4967 */ 'A', 'd', 'd', 'r', '1', '0', '9', '_', 'W', 0,
  /* 4977 */ 'T', '1', '1', '9', '_', 'W', 0,
  /* 4984 */ 'A', 'd', 'd', 'r', '1', '1', '9', '_', 'W', 0,
  /* 4994 */ 'T', '1', '9', '_', 'W', 0,
  /* 5000 */ 'A', 'd', 'd', 'r', '1', '9', '_', 'W', 0,
  /* 5009 */ 'K', 'C', '0', '_', '1', '2', '9', '_', 'W', 0,
  /* 5019 */ 'T', '2', '9', '_', 'W', 0,
  /* 5025 */ 'A', 'd', 'd', 'r', '2', '9', '_', 'W', 0,
  /* 5034 */ 'K', 'C', '0', '_', '1', '3', '9', '_', 'W', 0,
  /* 5044 */ 'T', '3', '9', '_', 'W', 0,
  /* 5050 */ 'A', 'd', 'd', 'r', '3', '9', '_', 'W', 0,
  /* 5059 */ 'K', 'C', '0', '_', '1', '4', '9', '_', 'W', 0,
  /* 5069 */ 'T', '4', '9', '_', 'W', 0,
  /* 5075 */ 'A', 'd', 'd', 'r', '4', '9', '_', 'W', 0,
  /* 5084 */ 'K', 'C', '0', '_', '1', '5', '9', '_', 'W', 0,
  /* 5094 */ 'T', '5', '9', '_', 'W', 0,
  /* 5100 */ 'A', 'd', 'd', 'r', '5', '9', '_', 'W', 0,
  /* 5109 */ 'K', 'C', '1', '_', '1', '6', '9', '_', 'W', 0,
  /* 5119 */ 'T', '6', '9', '_', 'W', 0,
  /* 5125 */ 'A', 'd', 'd', 'r', '6', '9', '_', 'W', 0,
  /* 5134 */ 'K', 'C', '1', '_', '1', '7', '9', '_', 'W', 0,
  /* 5144 */ 'T', '7', '9', '_', 'W', 0,
  /* 5150 */ 'A', 'd', 'd', 'r', '7', '9', '_', 'W', 0,
  /* 5159 */ 'K', 'C', '1', '_', '1', '8', '9', '_', 'W', 0,
  /* 5169 */ 'T', '8', '9', '_', 'W', 0,
  /* 5175 */ 'A', 'd', 'd', 'r', '8', '9', '_', 'W', 0,
  /* 5184 */ 'T', '9', '9', '_', 'W', 0,
  /* 5190 */ 'A', 'd', 'd', 'r', '9', '9', '_', 'W', 0,
  /* 5199 */ 'T', '9', '_', 'W', 0,
  /* 5204 */ 'A', 'd', 'd', 'r', '9', '_', 'W', 0,
  /* 5212 */ 'A', 'L', 'U', '_', 'L', 'I', 'T', 'E', 'R', 'A', 'L', '_', 'W', 0,
  /* 5226 */ 'P', 'V', '_', 'W', 0,
  /* 5231 */ 'T', '1', '0', '0', '_', 'X', 0,
  /* 5238 */ 'A', 'd', 'd', 'r', '1', '0', '0', '_', 'X', 0,
  /* 5248 */ 'T', '1', '1', '0', '_', 'X', 0,
  /* 5255 */ 'A', 'd', 'd', 'r', '1', '1', '0', '_', 'X', 0,
  /* 5265 */ 'T', '1', '0', '_', 'X', 0,
  /* 5271 */ 'A', 'd', 'd', 'r', '1', '0', '_', 'X', 0,
  /* 5280 */ 'T', '1', '2', '0', '_', 'X', 0,
  /* 5287 */ 'A', 'd', 'd', 'r', '1', '2', '0', '_', 'X', 0,
  /* 5297 */ 'T', '2', '0', '_', 'X', 0,
  /* 5303 */ 'A', 'd', 'd', 'r', '2', '0', '_', 'X', 0,
  /* 5312 */ 'K', 'C', '0', '_', '1', '3', '0', '_', 'X', 0,
  /* 5322 */ 'T', '3', '0', '_', 'X', 0,
  /* 5328 */ 'A', 'd', 'd', 'r', '3', '0', '_', 'X', 0,
  /* 5337 */ 'K', 'C', '0', '_', '1', '4', '0', '_', 'X', 0,
  /* 5347 */ 'T', '4', '0', '_', 'X', 0,
  /* 5353 */ 'A', 'd', 'd', 'r', '4', '0', '_', 'X', 0,
  /* 5362 */ 'K', 'C', '0', '_', '1', '5', '0', '_', 'X', 0,
  /* 5372 */ 'T', '5', '0', '_', 'X', 0,
  /* 5378 */ 'A', 'd', 'd', 'r', '5', '0', '_', 'X', 0,
  /* 5387 */ 'K', 'C', '1', '_', '1', '6', '0', '_', 'X', 0,
  /* 5397 */ 'T', '6', '0', '_', 'X', 0,
  /* 5403 */ 'A', 'd', 'd', 'r', '6', '0', '_', 'X', 0,
  /* 5412 */ 'K', 'C', '1', '_', '1', '7', '0', '_', 'X', 0,
  /* 5422 */ 'T', '7', '0', '_', 'X', 0,
  /* 5428 */ 'A', 'd', 'd', 'r', '7', '0', '_', 'X', 0,
  /* 5437 */ 'K', 'C', '1', '_', '1', '8', '0', '_', 'X', 0,
  /* 5447 */ 'T', '8', '0', '_', 'X', 0,
  /* 5453 */ 'A', 'd', 'd', 'r', '8', '0', '_', 'X', 0,
  /* 5462 */ 'K', 'C', '1', '_', '1', '9', '0', '_', 'X', 0,
  /* 5472 */ 'T', '9', '0', '_', 'X', 0,
  /* 5478 */ 'A', 'd', 'd', 'r', '9', '0', '_', 'X', 0,
  /* 5487 */ 'T', '0', '_', 'X', 0,
  /* 5492 */ 'A', 'd', 'd', 'r', '0', '_', 'X', 0,
  /* 5500 */ 'T', '1', '0', '1', '_', 'X', 0,
  /* 5507 */ 'A', 'd', 'd', 'r', '1', '0', '1', '_', 'X', 0,
  /* 5517 */ 'V', '0', '1', '_', 'X', 0,
  /* 5523 */ 'T', '1', '1', '1', '_', 'X', 0,
  /* 5530 */ 'A', 'd', 'd', 'r', '1', '1', '1', '_', 'X', 0,
  /* 5540 */ 'T', '1', '1', '_', 'X', 0,
  /* 5546 */ 'A', 'd', 'd', 'r', '1', '1', '_', 'X', 0,
  /* 5555 */ 'T', '1', '2', '1', '_', 'X', 0,
  /* 5562 */ 'A', 'd', 'd', 'r', '1', '2', '1', '_', 'X', 0,
  /* 5572 */ 'T', '2', '1', '_', 'X', 0,
  /* 5578 */ 'A', 'd', 'd', 'r', '2', '1', '_', 'X', 0,
  /* 5587 */ 'K', 'C', '0', '_', '1', '3', '1', '_', 'X', 0,
  /* 5597 */ 'T', '3', '1', '_', 'X', 0,
  /* 5603 */ 'A', 'd', 'd', 'r', '3', '1', '_', 'X', 0,
  /* 5612 */ 'K', 'C', '0', '_', '1', '4', '1', '_', 'X', 0,
  /* 5622 */ 'T', '4', '1', '_', 'X', 0,
  /* 5628 */ 'A', 'd', 'd', 'r', '4', '1', '_', 'X', 0,
  /* 5637 */ 'K', 'C', '0', '_', '1', '5', '1', '_', 'X', 0,
  /* 5647 */ 'T', '5', '1', '_', 'X', 0,
  /* 5653 */ 'A', 'd', 'd', 'r', '5', '1', '_', 'X', 0,
  /* 5662 */ 'K', 'C', '1', '_', '1', '6', '1', '_', 'X', 0,
  /* 5672 */ 'T', '6', '1', '_', 'X', 0,
  /* 5678 */ 'A', 'd', 'd', 'r', '6', '1', '_', 'X', 0,
  /* 5687 */ 'K', 'C', '1', '_', '1', '7', '1', '_', 'X', 0,
  /* 5697 */ 'T', '7', '1', '_', 'X', 0,
  /* 5703 */ 'A', 'd', 'd', 'r', '7', '1', '_', 'X', 0,
  /* 5712 */ 'K', 'C', '1', '_', '1', '8', '1', '_', 'X', 0,
  /* 5722 */ 'T', '8', '1', '_', 'X', 0,
  /* 5728 */ 'A', 'd', 'd', 'r', '8', '1', '_', 'X', 0,
  /* 5737 */ 'K', 'C', '1', '_', '1', '9', '1', '_', 'X', 0,
  /* 5747 */ 'T', '9', '1', '_', 'X', 0,
  /* 5753 */ 'A', 'd', 'd', 'r', '9', '1', '_', 'X', 0,
  /* 5762 */ 'T', '1', '_', 'X', 0,
  /* 5767 */ 'A', 'd', 'd', 'r', '1', '_', 'X', 0,
  /* 5775 */ 'T', '1', '0', '2', '_', 'X', 0,
  /* 5782 */ 'A', 'd', 'd', 'r', '1', '0', '2', '_', 'X', 0,
  /* 5792 */ 'T', '1', '1', '2', '_', 'X', 0,
  /* 5799 */ 'A', 'd', 'd', 'r', '1', '1', '2', '_', 'X', 0,
  /* 5809 */ 'T', '1', '2', '_', 'X', 0,
  /* 5815 */ 'A', 'd', 'd', 'r', '1', '2', '_', 'X', 0,
  /* 5824 */ 'T', '1', '2', '2', '_', 'X', 0,
  /* 5831 */ 'A', 'd', 'd', 'r', '1', '2', '2', '_', 'X', 0,
  /* 5841 */ 'T', '2', '2', '_', 'X', 0,
  /* 5847 */ 'A', 'd', 'd', 'r', '2', '2', '_', 'X', 0,
  /* 5856 */ 'K', 'C', '0', '_', '1', '3', '2', '_', 'X', 0,
  /* 5866 */ 'T', '3', '2', '_', 'X', 0,
  /* 5872 */ 'A', 'd', 'd', 'r', '3', '2', '_', 'X', 0,
  /* 5881 */ 'K', 'C', '0', '_', '1', '4', '2', '_', 'X', 0,
  /* 5891 */ 'T', '4', '2', '_', 'X', 0,
  /* 5897 */ 'A', 'd', 'd', 'r', '4', '2', '_', 'X', 0,
  /* 5906 */ 'K', 'C', '0', '_', '1', '5', '2', '_', 'X', 0,
  /* 5916 */ 'T', '5', '2', '_', 'X', 0,
  /* 5922 */ 'A', 'd', 'd', 'r', '5', '2', '_', 'X', 0,
  /* 5931 */ 'K', 'C', '1', '_', '1', '6', '2', '_', 'X', 0,
  /* 5941 */ 'T', '6', '2', '_', 'X', 0,
  /* 5947 */ 'A', 'd', 'd', 'r', '6', '2', '_', 'X', 0,
  /* 5956 */ 'K', 'C', '1', '_', '1', '7', '2', '_', 'X', 0,
  /* 5966 */ 'T', '7', '2', '_', 'X', 0,
  /* 5972 */ 'A', 'd', 'd', 'r', '7', '2', '_', 'X', 0,
  /* 5981 */ 'K', 'C', '1', '_', '1', '8', '2', '_', 'X', 0,
  /* 5991 */ 'T', '8', '2', '_', 'X', 0,
  /* 5997 */ 'A', 'd', 'd', 'r', '8', '2', '_', 'X', 0,
  /* 6006 */ 'T', '9', '2', '_', 'X', 0,
  /* 6012 */ 'A', 'd', 'd', 'r', '9', '2', '_', 'X', 0,
  /* 6021 */ 'T', '2', '_', 'X', 0,
  /* 6026 */ 'A', 'd', 'd', 'r', '2', '_', 'X', 0,
  /* 6034 */ 'T', '1', '0', '3', '_', 'X', 0,
  /* 6041 */ 'A', 'd', 'd', 'r', '1', '0', '3', '_', 'X', 0,
  /* 6051 */ 'T', '1', '1', '3', '_', 'X', 0,
  /* 6058 */ 'A', 'd', 'd', 'r', '1', '1', '3', '_', 'X', 0,
  /* 6068 */ 'T', '1', '3', '_', 'X', 0,
  /* 6074 */ 'A', 'd', 'd', 'r', '1', '3', '_', 'X', 0,
  /* 6083 */ 'V', '0', '1', '2', '3', '_', 'X', 0,
  /* 6091 */ 'T', '1', '2', '3', '_', 'X', 0,
  /* 6098 */ 'A', 'd', 'd', 'r', '1', '2', '3', '_', 'X', 0,
  /* 6108 */ 'T', '2', '3', '_', 'X', 0,
  /* 6114 */ 'V', '2', '3', '_', 'X', 0,
  /* 6120 */ 'A', 'd', 'd', 'r', '2', '3', '_', 'X', 0,
  /* 6129 */ 'K', 'C', '0', '_', '1', '3', '3', '_', 'X', 0,
  /* 6139 */ 'T', '3', '3', '_', 'X', 0,
  /* 6145 */ 'A', 'd', 'd', 'r', '3', '3', '_', 'X', 0,
  /* 6154 */ 'K', 'C', '0', '_', '1', '4', '3', '_', 'X', 0,
  /* 6164 */ 'T', '4', '3', '_', 'X', 0,
  /* 6170 */ 'A', 'd', 'd', 'r', '4', '3', '_', 'X', 0,
  /* 6179 */ 'K', 'C', '0', '_', '1', '5', '3', '_', 'X', 0,
  /* 6189 */ 'T', '5', '3', '_', 'X', 0,
  /* 6195 */ 'A', 'd', 'd', 'r', '5', '3', '_', 'X', 0,
  /* 6204 */ 'K', 'C', '1', '_', '1', '6', '3', '_', 'X', 0,
  /* 6214 */ 'T', '6', '3', '_', 'X', 0,
  /* 6220 */ 'A', 'd', 'd', 'r', '6', '3', '_', 'X', 0,
  /* 6229 */ 'K', 'C', '1', '_', '1', '7', '3', '_', 'X', 0,
  /* 6239 */ 'T', '7', '3', '_', 'X', 0,
  /* 6245 */ 'A', 'd', 'd', 'r', '7', '3', '_', 'X', 0,
  /* 6254 */ 'K', 'C', '1', '_', '1', '8', '3', '_', 'X', 0,
  /* 6264 */ 'T', '8', '3', '_', 'X', 0,
  /* 6270 */ 'A', 'd', 'd', 'r', '8', '3', '_', 'X', 0,
  /* 6279 */ 'T', '9', '3', '_', 'X', 0,
  /* 6285 */ 'A', 'd', 'd', 'r', '9', '3', '_', 'X', 0,
  /* 6294 */ 'T', '3', '_', 'X', 0,
  /* 6299 */ 'A', 'd', 'd', 'r', '3', '_', 'X', 0,
  /* 6307 */ 'T', '1', '0', '4', '_', 'X', 0,
  /* 6314 */ 'A', 'd', 'd', 'r', '1', '0', '4', '_', 'X', 0,
  /* 6324 */ 'T', '1', '1', '4', '_', 'X', 0,
  /* 6331 */ 'A', 'd', 'd', 'r', '1', '1', '4', '_', 'X', 0,
  /* 6341 */ 'T', '1', '4', '_', 'X', 0,
  /* 6347 */ 'A', 'd', 'd', 'r', '1', '4', '_', 'X', 0,
  /* 6356 */ 'T', '1', '2', '4', '_', 'X', 0,
  /* 6363 */ 'A', 'd', 'd', 'r', '1', '2', '4', '_', 'X', 0,
  /* 6373 */ 'T', '2', '4', '_', 'X', 0,
  /* 6379 */ 'A', 'd', 'd', 'r', '2', '4', '_', 'X', 0,
  /* 6388 */ 'K', 'C', '0', '_', '1', '3', '4', '_', 'X', 0,
  /* 6398 */ 'T', '3', '4', '_', 'X', 0,
  /* 6404 */ 'A', 'd', 'd', 'r', '3', '4', '_', 'X', 0,
  /* 6413 */ 'K', 'C', '0', '_', '1', '4', '4', '_', 'X', 0,
  /* 6423 */ 'T', '4', '4', '_', 'X', 0,
  /* 6429 */ 'A', 'd', 'd', 'r', '4', '4', '_', 'X', 0,
  /* 6438 */ 'K', 'C', '0', '_', '1', '5', '4', '_', 'X', 0,
  /* 6448 */ 'T', '5', '4', '_', 'X', 0,
  /* 6454 */ 'A', 'd', 'd', 'r', '5', '4', '_', 'X', 0,
  /* 6463 */ 'K', 'C', '1', '_', '1', '6', '4', '_', 'X', 0,
  /* 6473 */ 'T', '6', '4', '_', 'X', 0,
  /* 6479 */ 'A', 'd', 'd', 'r', '6', '4', '_', 'X', 0,
  /* 6488 */ 'K', 'C', '1', '_', '1', '7', '4', '_', 'X', 0,
  /* 6498 */ 'T', '7', '4', '_', 'X', 0,
  /* 6504 */ 'A', 'd', 'd', 'r', '7', '4', '_', 'X', 0,
  /* 6513 */ 'K', 'C', '1', '_', '1', '8', '4', '_', 'X', 0,
  /* 6523 */ 'T', '8', '4', '_', 'X', 0,
  /* 6529 */ 'A', 'd', 'd', 'r', '8', '4', '_', 'X', 0,
  /* 6538 */ 'T', '9', '4', '_', 'X', 0,
  /* 6544 */ 'A', 'd', 'd', 'r', '9', '4', '_', 'X', 0,
  /* 6553 */ 'T', '4', '_', 'X', 0,
  /* 6558 */ 'A', 'd', 'd', 'r', '4', '_', 'X', 0,
  /* 6566 */ 'T', '1', '0', '5', '_', 'X', 0,
  /* 6573 */ 'A', 'd', 'd', 'r', '1', '0', '5', '_', 'X', 0,
  /* 6583 */ 'T', '1', '1', '5', '_', 'X', 0,
  /* 6590 */ 'A', 'd', 'd', 'r', '1', '1', '5', '_', 'X', 0,
  /* 6600 */ 'T', '1', '5', '_', 'X', 0,
  /* 6606 */ 'A', 'd', 'd', 'r', '1', '5', '_', 'X', 0,
  /* 6615 */ 'T', '1', '2', '5', '_', 'X', 0,
  /* 6622 */ 'A', 'd', 'd', 'r', '1', '2', '5', '_', 'X', 0,
  /* 6632 */ 'T', '2', '5', '_', 'X', 0,
  /* 6638 */ 'A', 'd', 'd', 'r', '2', '5', '_', 'X', 0,
  /* 6647 */ 'K', 'C', '0', '_', '1', '3', '5', '_', 'X', 0,
  /* 6657 */ 'T', '3', '5', '_', 'X', 0,
  /* 6663 */ 'A', 'd', 'd', 'r', '3', '5', '_', 'X', 0,
  /* 6672 */ 'K', 'C', '0', '_', '1', '4', '5', '_', 'X', 0,
  /* 6682 */ 'T', '4', '5', '_', 'X', 0,
  /* 6688 */ 'A', 'd', 'd', 'r', '4', '5', '_', 'X', 0,
  /* 6697 */ 'K', 'C', '0', '_', '1', '5', '5', '_', 'X', 0,
  /* 6707 */ 'T', '5', '5', '_', 'X', 0,
  /* 6713 */ 'A', 'd', 'd', 'r', '5', '5', '_', 'X', 0,
  /* 6722 */ 'K', 'C', '1', '_', '1', '6', '5', '_', 'X', 0,
  /* 6732 */ 'T', '6', '5', '_', 'X', 0,
  /* 6738 */ 'A', 'd', 'd', 'r', '6', '5', '_', 'X', 0,
  /* 6747 */ 'K', 'C', '1', '_', '1', '7', '5', '_', 'X', 0,
  /* 6757 */ 'T', '7', '5', '_', 'X', 0,
  /* 6763 */ 'A', 'd', 'd', 'r', '7', '5', '_', 'X', 0,
  /* 6772 */ 'K', 'C', '1', '_', '1', '8', '5', '_', 'X', 0,
  /* 6782 */ 'T', '8', '5', '_', 'X', 0,
  /* 6788 */ 'A', 'd', 'd', 'r', '8', '5', '_', 'X', 0,
  /* 6797 */ 'T', '9', '5', '_', 'X', 0,
  /* 6803 */ 'A', 'd', 'd', 'r', '9', '5', '_', 'X', 0,
  /* 6812 */ 'T', '5', '_', 'X', 0,
  /* 6817 */ 'A', 'd', 'd', 'r', '5', '_', 'X', 0,
  /* 6825 */ 'T', '1', '0', '6', '_', 'X', 0,
  /* 6832 */ 'A', 'd', 'd', 'r', '1', '0', '6', '_', 'X', 0,
  /* 6842 */ 'T', '1', '1', '6', '_', 'X', 0,
  /* 6849 */ 'A', 'd', 'd', 'r', '1', '1', '6', '_', 'X', 0,
  /* 6859 */ 'T', '1', '6', '_', 'X', 0,
  /* 6865 */ 'A', 'd', 'd', 'r', '1', '6', '_', 'X', 0,
  /* 6874 */ 'T', '1', '2', '6', '_', 'X', 0,
  /* 6881 */ 'A', 'd', 'd', 'r', '1', '2', '6', '_', 'X', 0,
  /* 6891 */ 'T', '2', '6', '_', 'X', 0,
  /* 6897 */ 'A', 'd', 'd', 'r', '2', '6', '_', 'X', 0,
  /* 6906 */ 'K', 'C', '0', '_', '1', '3', '6', '_', 'X', 0,
  /* 6916 */ 'T', '3', '6', '_', 'X', 0,
  /* 6922 */ 'A', 'd', 'd', 'r', '3', '6', '_', 'X', 0,
  /* 6931 */ 'K', 'C', '0', '_', '1', '4', '6', '_', 'X', 0,
  /* 6941 */ 'T', '4', '6', '_', 'X', 0,
  /* 6947 */ 'A', 'd', 'd', 'r', '4', '6', '_', 'X', 0,
  /* 6956 */ 'K', 'C', '0', '_', '1', '5', '6', '_', 'X', 0,
  /* 6966 */ 'T', '5', '6', '_', 'X', 0,
  /* 6972 */ 'A', 'd', 'd', 'r', '5', '6', '_', 'X', 0,
  /* 6981 */ 'K', 'C', '1', '_', '1', '6', '6', '_', 'X', 0,
  /* 6991 */ 'T', '6', '6', '_', 'X', 0,
  /* 6997 */ 'A', 'd', 'd', 'r', '6', '6', '_', 'X', 0,
  /* 7006 */ 'K', 'C', '1', '_', '1', '7', '6', '_', 'X', 0,
  /* 7016 */ 'T', '7', '6', '_', 'X', 0,
  /* 7022 */ 'A', 'd', 'd', 'r', '7', '6', '_', 'X', 0,
  /* 7031 */ 'K', 'C', '1', '_', '1', '8', '6', '_', 'X', 0,
  /* 7041 */ 'T', '8', '6', '_', 'X', 0,
  /* 7047 */ 'A', 'd', 'd', 'r', '8', '6', '_', 'X', 0,
  /* 7056 */ 'T', '9', '6', '_', 'X', 0,
  /* 7062 */ 'A', 'd', 'd', 'r', '9', '6', '_', 'X', 0,
  /* 7071 */ 'T', '6', '_', 'X', 0,
  /* 7076 */ 'A', 'd', 'd', 'r', '6', '_', 'X', 0,
  /* 7084 */ 'T', '1', '0', '7', '_', 'X', 0,
  /* 7091 */ 'A', 'd', 'd', 'r', '1', '0', '7', '_', 'X', 0,
  /* 7101 */ 'T', '1', '1', '7', '_', 'X', 0,
  /* 7108 */ 'A', 'd', 'd', 'r', '1', '1', '7', '_', 'X', 0,
  /* 7118 */ 'T', '1', '7', '_', 'X', 0,
  /* 7124 */ 'A', 'd', 'd', 'r', '1', '7', '_', 'X', 0,
  /* 7133 */ 'T', '1', '2', '7', '_', 'X', 0,
  /* 7140 */ 'A', 'd', 'd', 'r', '1', '2', '7', '_', 'X', 0,
  /* 7150 */ 'T', '2', '7', '_', 'X', 0,
  /* 7156 */ 'A', 'd', 'd', 'r', '2', '7', '_', 'X', 0,
  /* 7165 */ 'K', 'C', '0', '_', '1', '3', '7', '_', 'X', 0,
  /* 7175 */ 'T', '3', '7', '_', 'X', 0,
  /* 7181 */ 'A', 'd', 'd', 'r', '3', '7', '_', 'X', 0,
  /* 7190 */ 'K', 'C', '0', '_', '1', '4', '7', '_', 'X', 0,
  /* 7200 */ 'T', '4', '7', '_', 'X', 0,
  /* 7206 */ 'A', 'd', 'd', 'r', '4', '7', '_', 'X', 0,
  /* 7215 */ 'K', 'C', '0', '_', '1', '5', '7', '_', 'X', 0,
  /* 7225 */ 'T', '5', '7', '_', 'X', 0,
  /* 7231 */ 'A', 'd', 'd', 'r', '5', '7', '_', 'X', 0,
  /* 7240 */ 'K', 'C', '1', '_', '1', '6', '7', '_', 'X', 0,
  /* 7250 */ 'T', '6', '7', '_', 'X', 0,
  /* 7256 */ 'A', 'd', 'd', 'r', '6', '7', '_', 'X', 0,
  /* 7265 */ 'K', 'C', '1', '_', '1', '7', '7', '_', 'X', 0,
  /* 7275 */ 'T', '7', '7', '_', 'X', 0,
  /* 7281 */ 'A', 'd', 'd', 'r', '7', '7', '_', 'X', 0,
  /* 7290 */ 'K', 'C', '1', '_', '1', '8', '7', '_', 'X', 0,
  /* 7300 */ 'T', '8', '7', '_', 'X', 0,
  /* 7306 */ 'A', 'd', 'd', 'r', '8', '7', '_', 'X', 0,
  /* 7315 */ 'T', '9', '7', '_', 'X', 0,
  /* 7321 */ 'A', 'd', 'd', 'r', '9', '7', '_', 'X', 0,
  /* 7330 */ 'T', '7', '_', 'X', 0,
  /* 7335 */ 'A', 'd', 'd', 'r', '7', '_', 'X', 0,
  /* 7343 */ 'T', '1', '0', '8', '_', 'X', 0,
  /* 7350 */ 'A', 'd', 'd', 'r', '1', '0', '8', '_', 'X', 0,
  /* 7360 */ 'T', '1', '1', '8', '_', 'X', 0,
  /* 7367 */ 'A', 'd', 'd', 'r', '1', '1', '8', '_', 'X', 0,
  /* 7377 */ 'T', '1', '8', '_', 'X', 0,
  /* 7383 */ 'A', 'd', 'd', 'r', '1', '8', '_', 'X', 0,
  /* 7392 */ 'K', 'C', '0', '_', '1', '2', '8', '_', 'X', 0,
  /* 7402 */ 'T', '2', '8', '_', 'X', 0,
  /* 7408 */ 'A', 'd', 'd', 'r', '2', '8', '_', 'X', 0,
  /* 7417 */ 'K', 'C', '0', '_', '1', '3', '8', '_', 'X', 0,
  /* 7427 */ 'T', '3', '8', '_', 'X', 0,
  /* 7433 */ 'A', 'd', 'd', 'r', '3', '8', '_', 'X', 0,
  /* 7442 */ 'K', 'C', '0', '_', '1', '4', '8', '_', 'X', 0,
  /* 7452 */ 'T', '4', '8', '_', 'X', 0,
  /* 7458 */ 'A', 'd', 'd', 'r', '4', '8', '_', 'X', 0,
  /* 7467 */ 'K', 'C', '0', '_', '1', '5', '8', '_', 'X', 0,
  /* 7477 */ 'T', '5', '8', '_', 'X', 0,
  /* 7483 */ 'A', 'd', 'd', 'r', '5', '8', '_', 'X', 0,
  /* 7492 */ 'K', 'C', '1', '_', '1', '6', '8', '_', 'X', 0,
  /* 7502 */ 'T', '6', '8', '_', 'X', 0,
  /* 7508 */ 'A', 'd', 'd', 'r', '6', '8', '_', 'X', 0,
  /* 7517 */ 'K', 'C', '1', '_', '1', '7', '8', '_', 'X', 0,
  /* 7527 */ 'T', '7', '8', '_', 'X', 0,
  /* 7533 */ 'A', 'd', 'd', 'r', '7', '8', '_', 'X', 0,
  /* 7542 */ 'K', 'C', '1', '_', '1', '8', '8', '_', 'X', 0,
  /* 7552 */ 'T', '8', '8', '_', 'X', 0,
  /* 7558 */ 'A', 'd', 'd', 'r', '8', '8', '_', 'X', 0,
  /* 7567 */ 'T', '9', '8', '_', 'X', 0,
  /* 7573 */ 'A', 'd', 'd', 'r', '9', '8', '_', 'X', 0,
  /* 7582 */ 'T', '8', '_', 'X', 0,
  /* 7587 */ 'A', 'd', 'd', 'r', '8', '_', 'X', 0,
  /* 7595 */ 'T', '1', '0', '9', '_', 'X', 0,
  /* 7602 */ 'A', 'd', 'd', 'r', '1', '0', '9', '_', 'X', 0,
  /* 7612 */ 'T', '1', '1', '9', '_', 'X', 0,
  /* 7619 */ 'A', 'd', 'd', 'r', '1', '1', '9', '_', 'X', 0,
  /* 7629 */ 'T', '1', '9', '_', 'X', 0,
  /* 7635 */ 'A', 'd', 'd', 'r', '1', '9', '_', 'X', 0,
  /* 7644 */ 'K', 'C', '0', '_', '1', '2', '9', '_', 'X', 0,
  /* 7654 */ 'T', '2', '9', '_', 'X', 0,
  /* 7660 */ 'A', 'd', 'd', 'r', '2', '9', '_', 'X', 0,
  /* 7669 */ 'K', 'C', '0', '_', '1', '3', '9', '_', 'X', 0,
  /* 7679 */ 'T', '3', '9', '_', 'X', 0,
  /* 7685 */ 'A', 'd', 'd', 'r', '3', '9', '_', 'X', 0,
  /* 7694 */ 'K', 'C', '0', '_', '1', '4', '9', '_', 'X', 0,
  /* 7704 */ 'T', '4', '9', '_', 'X', 0,
  /* 7710 */ 'A', 'd', 'd', 'r', '4', '9', '_', 'X', 0,
  /* 7719 */ 'K', 'C', '0', '_', '1', '5', '9', '_', 'X', 0,
  /* 7729 */ 'T', '5', '9', '_', 'X', 0,
  /* 7735 */ 'A', 'd', 'd', 'r', '5', '9', '_', 'X', 0,
  /* 7744 */ 'K', 'C', '1', '_', '1', '6', '9', '_', 'X', 0,
  /* 7754 */ 'T', '6', '9', '_', 'X', 0,
  /* 7760 */ 'A', 'd', 'd', 'r', '6', '9', '_', 'X', 0,
  /* 7769 */ 'K', 'C', '1', '_', '1', '7', '9', '_', 'X', 0,
  /* 7779 */ 'T', '7', '9', '_', 'X', 0,
  /* 7785 */ 'A', 'd', 'd', 'r', '7', '9', '_', 'X', 0,
  /* 7794 */ 'K', 'C', '1', '_', '1', '8', '9', '_', 'X', 0,
  /* 7804 */ 'T', '8', '9', '_', 'X', 0,
  /* 7810 */ 'A', 'd', 'd', 'r', '8', '9', '_', 'X', 0,
  /* 7819 */ 'T', '9', '9', '_', 'X', 0,
  /* 7825 */ 'A', 'd', 'd', 'r', '9', '9', '_', 'X', 0,
  /* 7834 */ 'T', '9', '_', 'X', 0,
  /* 7839 */ 'A', 'd', 'd', 'r', '9', '_', 'X', 0,
  /* 7847 */ 'A', 'L', 'U', '_', 'L', 'I', 'T', 'E', 'R', 'A', 'L', '_', 'X', 0,
  /* 7861 */ 'A', 'R', '_', 'X', 0,
  /* 7866 */ 'P', 'V', '_', 'X', 0,
  /* 7871 */ 'T', '1', '0', '0', '_', 'X', 'Y', 0,
  /* 7879 */ 'T', '1', '1', '0', '_', 'X', 'Y', 0,
  /* 7887 */ 'T', '1', '0', '_', 'X', 'Y', 0,
  /* 7894 */ 'T', '1', '2', '0', '_', 'X', 'Y', 0,
  /* 7902 */ 'T', '2', '0', '_', 'X', 'Y', 0,
  /* 7909 */ 'T', '3', '0', '_', 'X', 'Y', 0,
  /* 7916 */ 'T', '4', '0', '_', 'X', 'Y', 0,
  /* 7923 */ 'T', '5', '0', '_', 'X', 'Y', 0,
  /* 7930 */ 'T', '6', '0', '_', 'X', 'Y', 0,
  /* 7937 */ 'T', '7', '0', '_', 'X', 'Y', 0,
  /* 7944 */ 'T', '8', '0', '_', 'X', 'Y', 0,
  /* 7951 */ 'T', '9', '0', '_', 'X', 'Y', 0,
  /* 7958 */ 'T', '0', '_', 'X', 'Y', 0,
  /* 7964 */ 'T', '1', '0', '1', '_', 'X', 'Y', 0,
  /* 7972 */ 'T', '1', '1', '1', '_', 'X', 'Y', 0,
  /* 7980 */ 'T', '1', '1', '_', 'X', 'Y', 0,
  /* 7987 */ 'T', '1', '2', '1', '_', 'X', 'Y', 0,
  /* 7995 */ 'T', '2', '1', '_', 'X', 'Y', 0,
  /* 8002 */ 'T', '3', '1', '_', 'X', 'Y', 0,
  /* 8009 */ 'T', '4', '1', '_', 'X', 'Y', 0,
  /* 8016 */ 'T', '5', '1', '_', 'X', 'Y', 0,
  /* 8023 */ 'T', '6', '1', '_', 'X', 'Y', 0,
  /* 8030 */ 'T', '7', '1', '_', 'X', 'Y', 0,
  /* 8037 */ 'T', '8', '1', '_', 'X', 'Y', 0,
  /* 8044 */ 'T', '9', '1', '_', 'X', 'Y', 0,
  /* 8051 */ 'T', '1', '_', 'X', 'Y', 0,
  /* 8057 */ 'T', '1', '0', '2', '_', 'X', 'Y', 0,
  /* 8065 */ 'T', '1', '1', '2', '_', 'X', 'Y', 0,
  /* 8073 */ 'T', '1', '2', '_', 'X', 'Y', 0,
  /* 8080 */ 'T', '1', '2', '2', '_', 'X', 'Y', 0,
  /* 8088 */ 'T', '2', '2', '_', 'X', 'Y', 0,
  /* 8095 */ 'T', '3', '2', '_', 'X', 'Y', 0,
  /* 8102 */ 'T', '4', '2', '_', 'X', 'Y', 0,
  /* 8109 */ 'T', '5', '2', '_', 'X', 'Y', 0,
  /* 8116 */ 'T', '6', '2', '_', 'X', 'Y', 0,
  /* 8123 */ 'T', '7', '2', '_', 'X', 'Y', 0,
  /* 8130 */ 'T', '8', '2', '_', 'X', 'Y', 0,
  /* 8137 */ 'T', '9', '2', '_', 'X', 'Y', 0,
  /* 8144 */ 'T', '2', '_', 'X', 'Y', 0,
  /* 8150 */ 'T', '1', '0', '3', '_', 'X', 'Y', 0,
  /* 8158 */ 'T', '1', '1', '3', '_', 'X', 'Y', 0,
  /* 8166 */ 'T', '1', '3', '_', 'X', 'Y', 0,
  /* 8173 */ 'T', '1', '2', '3', '_', 'X', 'Y', 0,
  /* 8181 */ 'T', '2', '3', '_', 'X', 'Y', 0,
  /* 8188 */ 'T', '3', '3', '_', 'X', 'Y', 0,
  /* 8195 */ 'T', '4', '3', '_', 'X', 'Y', 0,
  /* 8202 */ 'T', '5', '3', '_', 'X', 'Y', 0,
  /* 8209 */ 'T', '6', '3', '_', 'X', 'Y', 0,
  /* 8216 */ 'T', '7', '3', '_', 'X', 'Y', 0,
  /* 8223 */ 'T', '8', '3', '_', 'X', 'Y', 0,
  /* 8230 */ 'T', '9', '3', '_', 'X', 'Y', 0,
  /* 8237 */ 'T', '3', '_', 'X', 'Y', 0,
  /* 8243 */ 'T', '1', '0', '4', '_', 'X', 'Y', 0,
  /* 8251 */ 'T', '1', '1', '4', '_', 'X', 'Y', 0,
  /* 8259 */ 'T', '1', '4', '_', 'X', 'Y', 0,
  /* 8266 */ 'T', '1', '2', '4', '_', 'X', 'Y', 0,
  /* 8274 */ 'T', '2', '4', '_', 'X', 'Y', 0,
  /* 8281 */ 'T', '3', '4', '_', 'X', 'Y', 0,
  /* 8288 */ 'T', '4', '4', '_', 'X', 'Y', 0,
  /* 8295 */ 'T', '5', '4', '_', 'X', 'Y', 0,
  /* 8302 */ 'T', '6', '4', '_', 'X', 'Y', 0,
  /* 8309 */ 'T', '7', '4', '_', 'X', 'Y', 0,
  /* 8316 */ 'T', '8', '4', '_', 'X', 'Y', 0,
  /* 8323 */ 'T', '9', '4', '_', 'X', 'Y', 0,
  /* 8330 */ 'T', '4', '_', 'X', 'Y', 0,
  /* 8336 */ 'T', '1', '0', '5', '_', 'X', 'Y', 0,
  /* 8344 */ 'T', '1', '1', '5', '_', 'X', 'Y', 0,
  /* 8352 */ 'T', '1', '5', '_', 'X', 'Y', 0,
  /* 8359 */ 'T', '1', '2', '5', '_', 'X', 'Y', 0,
  /* 8367 */ 'T', '2', '5', '_', 'X', 'Y', 0,
  /* 8374 */ 'T', '3', '5', '_', 'X', 'Y', 0,
  /* 8381 */ 'T', '4', '5', '_', 'X', 'Y', 0,
  /* 8388 */ 'T', '5', '5', '_', 'X', 'Y', 0,
  /* 8395 */ 'T', '6', '5', '_', 'X', 'Y', 0,
  /* 8402 */ 'T', '7', '5', '_', 'X', 'Y', 0,
  /* 8409 */ 'T', '8', '5', '_', 'X', 'Y', 0,
  /* 8416 */ 'T', '9', '5', '_', 'X', 'Y', 0,
  /* 8423 */ 'T', '5', '_', 'X', 'Y', 0,
  /* 8429 */ 'T', '1', '0', '6', '_', 'X', 'Y', 0,
  /* 8437 */ 'T', '1', '1', '6', '_', 'X', 'Y', 0,
  /* 8445 */ 'T', '1', '6', '_', 'X', 'Y', 0,
  /* 8452 */ 'T', '1', '2', '6', '_', 'X', 'Y', 0,
  /* 8460 */ 'T', '2', '6', '_', 'X', 'Y', 0,
  /* 8467 */ 'T', '3', '6', '_', 'X', 'Y', 0,
  /* 8474 */ 'T', '4', '6', '_', 'X', 'Y', 0,
  /* 8481 */ 'T', '5', '6', '_', 'X', 'Y', 0,
  /* 8488 */ 'T', '6', '6', '_', 'X', 'Y', 0,
  /* 8495 */ 'T', '7', '6', '_', 'X', 'Y', 0,
  /* 8502 */ 'T', '8', '6', '_', 'X', 'Y', 0,
  /* 8509 */ 'T', '9', '6', '_', 'X', 'Y', 0,
  /* 8516 */ 'T', '6', '_', 'X', 'Y', 0,
  /* 8522 */ 'T', '1', '0', '7', '_', 'X', 'Y', 0,
  /* 8530 */ 'T', '1', '1', '7', '_', 'X', 'Y', 0,
  /* 8538 */ 'T', '1', '7', '_', 'X', 'Y', 0,
  /* 8545 */ 'T', '1', '2', '7', '_', 'X', 'Y', 0,
  /* 8553 */ 'T', '2', '7', '_', 'X', 'Y', 0,
  /* 8560 */ 'T', '3', '7', '_', 'X', 'Y', 0,
  /* 8567 */ 'T', '4', '7', '_', 'X', 'Y', 0,
  /* 8574 */ 'T', '5', '7', '_', 'X', 'Y', 0,
  /* 8581 */ 'T', '6', '7', '_', 'X', 'Y', 0,
  /* 8588 */ 'T', '7', '7', '_', 'X', 'Y', 0,
  /* 8595 */ 'T', '8', '7', '_', 'X', 'Y', 0,
  /* 8602 */ 'T', '9', '7', '_', 'X', 'Y', 0,
  /* 8609 */ 'T', '7', '_', 'X', 'Y', 0,
  /* 8615 */ 'T', '1', '0', '8', '_', 'X', 'Y', 0,
  /* 8623 */ 'T', '1', '1', '8', '_', 'X', 'Y', 0,
  /* 8631 */ 'T', '1', '8', '_', 'X', 'Y', 0,
  /* 8638 */ 'T', '2', '8', '_', 'X', 'Y', 0,
  /* 8645 */ 'T', '3', '8', '_', 'X', 'Y', 0,
  /* 8652 */ 'T', '4', '8', '_', 'X', 'Y', 0,
  /* 8659 */ 'T', '5', '8', '_', 'X', 'Y', 0,
  /* 8666 */ 'T', '6', '8', '_', 'X', 'Y', 0,
  /* 8673 */ 'T', '7', '8', '_', 'X', 'Y', 0,
  /* 8680 */ 'T', '8', '8', '_', 'X', 'Y', 0,
  /* 8687 */ 'T', '9', '8', '_', 'X', 'Y', 0,
  /* 8694 */ 'T', '8', '_', 'X', 'Y', 0,
  /* 8700 */ 'T', '1', '0', '9', '_', 'X', 'Y', 0,
  /* 8708 */ 'T', '1', '1', '9', '_', 'X', 'Y', 0,
  /* 8716 */ 'T', '1', '9', '_', 'X', 'Y', 0,
  /* 8723 */ 'T', '2', '9', '_', 'X', 'Y', 0,
  /* 8730 */ 'T', '3', '9', '_', 'X', 'Y', 0,
  /* 8737 */ 'T', '4', '9', '_', 'X', 'Y', 0,
  /* 8744 */ 'T', '5', '9', '_', 'X', 'Y', 0,
  /* 8751 */ 'T', '6', '9', '_', 'X', 'Y', 0,
  /* 8758 */ 'T', '7', '9', '_', 'X', 'Y', 0,
  /* 8765 */ 'T', '8', '9', '_', 'X', 'Y', 0,
  /* 8772 */ 'T', '9', '9', '_', 'X', 'Y', 0,
  /* 8779 */ 'T', '9', '_', 'X', 'Y', 0,
  /* 8785 */ 'T', '1', '0', '0', '_', 'Y', 0,
  /* 8792 */ 'A', 'd', 'd', 'r', '1', '0', '0', '_', 'Y', 0,
  /* 8802 */ 'T', '1', '1', '0', '_', 'Y', 0,
  /* 8809 */ 'A', 'd', 'd', 'r', '1', '1', '0', '_', 'Y', 0,
  /* 8819 */ 'T', '1', '0', '_', 'Y', 0,
  /* 8825 */ 'A', 'd', 'd', 'r', '1', '0', '_', 'Y', 0,
  /* 8834 */ 'T', '1', '2', '0', '_', 'Y', 0,
  /* 8841 */ 'A', 'd', 'd', 'r', '1', '2', '0', '_', 'Y', 0,
  /* 8851 */ 'T', '2', '0', '_', 'Y', 0,
  /* 8857 */ 'A', 'd', 'd', 'r', '2', '0', '_', 'Y', 0,
  /* 8866 */ 'K', 'C', '0', '_', '1', '3', '0', '_', 'Y', 0,
  /* 8876 */ 'T', '3', '0', '_', 'Y', 0,
  /* 8882 */ 'A', 'd', 'd', 'r', '3', '0', '_', 'Y', 0,
  /* 8891 */ 'K', 'C', '0', '_', '1', '4', '0', '_', 'Y', 0,
  /* 8901 */ 'T', '4', '0', '_', 'Y', 0,
  /* 8907 */ 'A', 'd', 'd', 'r', '4', '0', '_', 'Y', 0,
  /* 8916 */ 'K', 'C', '0', '_', '1', '5', '0', '_', 'Y', 0,
  /* 8926 */ 'T', '5', '0', '_', 'Y', 0,
  /* 8932 */ 'A', 'd', 'd', 'r', '5', '0', '_', 'Y', 0,
  /* 8941 */ 'K', 'C', '1', '_', '1', '6', '0', '_', 'Y', 0,
  /* 8951 */ 'T', '6', '0', '_', 'Y', 0,
  /* 8957 */ 'A', 'd', 'd', 'r', '6', '0', '_', 'Y', 0,
  /* 8966 */ 'K', 'C', '1', '_', '1', '7', '0', '_', 'Y', 0,
  /* 8976 */ 'T', '7', '0', '_', 'Y', 0,
  /* 8982 */ 'A', 'd', 'd', 'r', '7', '0', '_', 'Y', 0,
  /* 8991 */ 'K', 'C', '1', '_', '1', '8', '0', '_', 'Y', 0,
  /* 9001 */ 'T', '8', '0', '_', 'Y', 0,
  /* 9007 */ 'A', 'd', 'd', 'r', '8', '0', '_', 'Y', 0,
  /* 9016 */ 'K', 'C', '1', '_', '1', '9', '0', '_', 'Y', 0,
  /* 9026 */ 'T', '9', '0', '_', 'Y', 0,
  /* 9032 */ 'A', 'd', 'd', 'r', '9', '0', '_', 'Y', 0,
  /* 9041 */ 'T', '0', '_', 'Y', 0,
  /* 9046 */ 'A', 'd', 'd', 'r', '0', '_', 'Y', 0,
  /* 9054 */ 'T', '1', '0', '1', '_', 'Y', 0,
  /* 9061 */ 'A', 'd', 'd', 'r', '1', '0', '1', '_', 'Y', 0,
  /* 9071 */ 'V', '0', '1', '_', 'Y', 0,
  /* 9077 */ 'T', '1', '1', '1', '_', 'Y', 0,
  /* 9084 */ 'A', 'd', 'd', 'r', '1', '1', '1', '_', 'Y', 0,
  /* 9094 */ 'T', '1', '1', '_', 'Y', 0,
  /* 9100 */ 'A', 'd', 'd', 'r', '1', '1', '_', 'Y', 0,
  /* 9109 */ 'T', '1', '2', '1', '_', 'Y', 0,
  /* 9116 */ 'A', 'd', 'd', 'r', '1', '2', '1', '_', 'Y', 0,
  /* 9126 */ 'T', '2', '1', '_', 'Y', 0,
  /* 9132 */ 'A', 'd', 'd', 'r', '2', '1', '_', 'Y', 0,
  /* 9141 */ 'K', 'C', '0', '_', '1', '3', '1', '_', 'Y', 0,
  /* 9151 */ 'T', '3', '1', '_', 'Y', 0,
  /* 9157 */ 'A', 'd', 'd', 'r', '3', '1', '_', 'Y', 0,
  /* 9166 */ 'K', 'C', '0', '_', '1', '4', '1', '_', 'Y', 0,
  /* 9176 */ 'T', '4', '1', '_', 'Y', 0,
  /* 9182 */ 'A', 'd', 'd', 'r', '4', '1', '_', 'Y', 0,
  /* 9191 */ 'K', 'C', '0', '_', '1', '5', '1', '_', 'Y', 0,
  /* 9201 */ 'T', '5', '1', '_', 'Y', 0,
  /* 9207 */ 'A', 'd', 'd', 'r', '5', '1', '_', 'Y', 0,
  /* 9216 */ 'K', 'C', '1', '_', '1', '6', '1', '_', 'Y', 0,
  /* 9226 */ 'T', '6', '1', '_', 'Y', 0,
  /* 9232 */ 'A', 'd', 'd', 'r', '6', '1', '_', 'Y', 0,
  /* 9241 */ 'K', 'C', '1', '_', '1', '7', '1', '_', 'Y', 0,
  /* 9251 */ 'T', '7', '1', '_', 'Y', 0,
  /* 9257 */ 'A', 'd', 'd', 'r', '7', '1', '_', 'Y', 0,
  /* 9266 */ 'K', 'C', '1', '_', '1', '8', '1', '_', 'Y', 0,
  /* 9276 */ 'T', '8', '1', '_', 'Y', 0,
  /* 9282 */ 'A', 'd', 'd', 'r', '8', '1', '_', 'Y', 0,
  /* 9291 */ 'K', 'C', '1', '_', '1', '9', '1', '_', 'Y', 0,
  /* 9301 */ 'T', '9', '1', '_', 'Y', 0,
  /* 9307 */ 'A', 'd', 'd', 'r', '9', '1', '_', 'Y', 0,
  /* 9316 */ 'T', '1', '_', 'Y', 0,
  /* 9321 */ 'A', 'd', 'd', 'r', '1', '_', 'Y', 0,
  /* 9329 */ 'T', '1', '0', '2', '_', 'Y', 0,
  /* 9336 */ 'A', 'd', 'd', 'r', '1', '0', '2', '_', 'Y', 0,
  /* 9346 */ 'T', '1', '1', '2', '_', 'Y', 0,
  /* 9353 */ 'A', 'd', 'd', 'r', '1', '1', '2', '_', 'Y', 0,
  /* 9363 */ 'T', '1', '2', '_', 'Y', 0,
  /* 9369 */ 'A', 'd', 'd', 'r', '1', '2', '_', 'Y', 0,
  /* 9378 */ 'T', '1', '2', '2', '_', 'Y', 0,
  /* 9385 */ 'A', 'd', 'd', 'r', '1', '2', '2', '_', 'Y', 0,
  /* 9395 */ 'T', '2', '2', '_', 'Y', 0,
  /* 9401 */ 'A', 'd', 'd', 'r', '2', '2', '_', 'Y', 0,
  /* 9410 */ 'K', 'C', '0', '_', '1', '3', '2', '_', 'Y', 0,
  /* 9420 */ 'T', '3', '2', '_', 'Y', 0,
  /* 9426 */ 'A', 'd', 'd', 'r', '3', '2', '_', 'Y', 0,
  /* 9435 */ 'K', 'C', '0', '_', '1', '4', '2', '_', 'Y', 0,
  /* 9445 */ 'T', '4', '2', '_', 'Y', 0,
  /* 9451 */ 'A', 'd', 'd', 'r', '4', '2', '_', 'Y', 0,
  /* 9460 */ 'K', 'C', '0', '_', '1', '5', '2', '_', 'Y', 0,
  /* 9470 */ 'T', '5', '2', '_', 'Y', 0,
  /* 9476 */ 'A', 'd', 'd', 'r', '5', '2', '_', 'Y', 0,
  /* 9485 */ 'K', 'C', '1', '_', '1', '6', '2', '_', 'Y', 0,
  /* 9495 */ 'T', '6', '2', '_', 'Y', 0,
  /* 9501 */ 'A', 'd', 'd', 'r', '6', '2', '_', 'Y', 0,
  /* 9510 */ 'K', 'C', '1', '_', '1', '7', '2', '_', 'Y', 0,
  /* 9520 */ 'T', '7', '2', '_', 'Y', 0,
  /* 9526 */ 'A', 'd', 'd', 'r', '7', '2', '_', 'Y', 0,
  /* 9535 */ 'K', 'C', '1', '_', '1', '8', '2', '_', 'Y', 0,
  /* 9545 */ 'T', '8', '2', '_', 'Y', 0,
  /* 9551 */ 'A', 'd', 'd', 'r', '8', '2', '_', 'Y', 0,
  /* 9560 */ 'T', '9', '2', '_', 'Y', 0,
  /* 9566 */ 'A', 'd', 'd', 'r', '9', '2', '_', 'Y', 0,
  /* 9575 */ 'T', '2', '_', 'Y', 0,
  /* 9580 */ 'A', 'd', 'd', 'r', '2', '_', 'Y', 0,
  /* 9588 */ 'T', '1', '0', '3', '_', 'Y', 0,
  /* 9595 */ 'A', 'd', 'd', 'r', '1', '0', '3', '_', 'Y', 0,
  /* 9605 */ 'T', '1', '1', '3', '_', 'Y', 0,
  /* 9612 */ 'A', 'd', 'd', 'r', '1', '1', '3', '_', 'Y', 0,
  /* 9622 */ 'T', '1', '3', '_', 'Y', 0,
  /* 9628 */ 'A', 'd', 'd', 'r', '1', '3', '_', 'Y', 0,
  /* 9637 */ 'V', '0', '1', '2', '3', '_', 'Y', 0,
  /* 9645 */ 'T', '1', '2', '3', '_', 'Y', 0,
  /* 9652 */ 'A', 'd', 'd', 'r', '1', '2', '3', '_', 'Y', 0,
  /* 9662 */ 'T', '2', '3', '_', 'Y', 0,
  /* 9668 */ 'V', '2', '3', '_', 'Y', 0,
  /* 9674 */ 'A', 'd', 'd', 'r', '2', '3', '_', 'Y', 0,
  /* 9683 */ 'K', 'C', '0', '_', '1', '3', '3', '_', 'Y', 0,
  /* 9693 */ 'T', '3', '3', '_', 'Y', 0,
  /* 9699 */ 'A', 'd', 'd', 'r', '3', '3', '_', 'Y', 0,
  /* 9708 */ 'K', 'C', '0', '_', '1', '4', '3', '_', 'Y', 0,
  /* 9718 */ 'T', '4', '3', '_', 'Y', 0,
  /* 9724 */ 'A', 'd', 'd', 'r', '4', '3', '_', 'Y', 0,
  /* 9733 */ 'K', 'C', '0', '_', '1', '5', '3', '_', 'Y', 0,
  /* 9743 */ 'T', '5', '3', '_', 'Y', 0,
  /* 9749 */ 'A', 'd', 'd', 'r', '5', '3', '_', 'Y', 0,
  /* 9758 */ 'K', 'C', '1', '_', '1', '6', '3', '_', 'Y', 0,
  /* 9768 */ 'T', '6', '3', '_', 'Y', 0,
  /* 9774 */ 'A', 'd', 'd', 'r', '6', '3', '_', 'Y', 0,
  /* 9783 */ 'K', 'C', '1', '_', '1', '7', '3', '_', 'Y', 0,
  /* 9793 */ 'T', '7', '3', '_', 'Y', 0,
  /* 9799 */ 'A', 'd', 'd', 'r', '7', '3', '_', 'Y', 0,
  /* 9808 */ 'K', 'C', '1', '_', '1', '8', '3', '_', 'Y', 0,
  /* 9818 */ 'T', '8', '3', '_', 'Y', 0,
  /* 9824 */ 'A', 'd', 'd', 'r', '8', '3', '_', 'Y', 0,
  /* 9833 */ 'T', '9', '3', '_', 'Y', 0,
  /* 9839 */ 'A', 'd', 'd', 'r', '9', '3', '_', 'Y', 0,
  /* 9848 */ 'T', '3', '_', 'Y', 0,
  /* 9853 */ 'A', 'd', 'd', 'r', '3', '_', 'Y', 0,
  /* 9861 */ 'T', '1', '0', '4', '_', 'Y', 0,
  /* 9868 */ 'A', 'd', 'd', 'r', '1', '0', '4', '_', 'Y', 0,
  /* 9878 */ 'T', '1', '1', '4', '_', 'Y', 0,
  /* 9885 */ 'A', 'd', 'd', 'r', '1', '1', '4', '_', 'Y', 0,
  /* 9895 */ 'T', '1', '4', '_', 'Y', 0,
  /* 9901 */ 'A', 'd', 'd', 'r', '1', '4', '_', 'Y', 0,
  /* 9910 */ 'T', '1', '2', '4', '_', 'Y', 0,
  /* 9917 */ 'A', 'd', 'd', 'r', '1', '2', '4', '_', 'Y', 0,
  /* 9927 */ 'T', '2', '4', '_', 'Y', 0,
  /* 9933 */ 'A', 'd', 'd', 'r', '2', '4', '_', 'Y', 0,
  /* 9942 */ 'K', 'C', '0', '_', '1', '3', '4', '_', 'Y', 0,
  /* 9952 */ 'T', '3', '4', '_', 'Y', 0,
  /* 9958 */ 'A', 'd', 'd', 'r', '3', '4', '_', 'Y', 0,
  /* 9967 */ 'K', 'C', '0', '_', '1', '4', '4', '_', 'Y', 0,
  /* 9977 */ 'T', '4', '4', '_', 'Y', 0,
  /* 9983 */ 'A', 'd', 'd', 'r', '4', '4', '_', 'Y', 0,
  /* 9992 */ 'K', 'C', '0', '_', '1', '5', '4', '_', 'Y', 0,
  /* 10002 */ 'T', '5', '4', '_', 'Y', 0,
  /* 10008 */ 'A', 'd', 'd', 'r', '5', '4', '_', 'Y', 0,
  /* 10017 */ 'K', 'C', '1', '_', '1', '6', '4', '_', 'Y', 0,
  /* 10027 */ 'T', '6', '4', '_', 'Y', 0,
  /* 10033 */ 'A', 'd', 'd', 'r', '6', '4', '_', 'Y', 0,
  /* 10042 */ 'K', 'C', '1', '_', '1', '7', '4', '_', 'Y', 0,
  /* 10052 */ 'T', '7', '4', '_', 'Y', 0,
  /* 10058 */ 'A', 'd', 'd', 'r', '7', '4', '_', 'Y', 0,
  /* 10067 */ 'K', 'C', '1', '_', '1', '8', '4', '_', 'Y', 0,
  /* 10077 */ 'T', '8', '4', '_', 'Y', 0,
  /* 10083 */ 'A', 'd', 'd', 'r', '8', '4', '_', 'Y', 0,
  /* 10092 */ 'T', '9', '4', '_', 'Y', 0,
  /* 10098 */ 'A', 'd', 'd', 'r', '9', '4', '_', 'Y', 0,
  /* 10107 */ 'T', '4', '_', 'Y', 0,
  /* 10112 */ 'A', 'd', 'd', 'r', '4', '_', 'Y', 0,
  /* 10120 */ 'T', '1', '0', '5', '_', 'Y', 0,
  /* 10127 */ 'A', 'd', 'd', 'r', '1', '0', '5', '_', 'Y', 0,
  /* 10137 */ 'T', '1', '1', '5', '_', 'Y', 0,
  /* 10144 */ 'A', 'd', 'd', 'r', '1', '1', '5', '_', 'Y', 0,
  /* 10154 */ 'T', '1', '5', '_', 'Y', 0,
  /* 10160 */ 'A', 'd', 'd', 'r', '1', '5', '_', 'Y', 0,
  /* 10169 */ 'T', '1', '2', '5', '_', 'Y', 0,
  /* 10176 */ 'A', 'd', 'd', 'r', '1', '2', '5', '_', 'Y', 0,
  /* 10186 */ 'T', '2', '5', '_', 'Y', 0,
  /* 10192 */ 'A', 'd', 'd', 'r', '2', '5', '_', 'Y', 0,
  /* 10201 */ 'K', 'C', '0', '_', '1', '3', '5', '_', 'Y', 0,
  /* 10211 */ 'T', '3', '5', '_', 'Y', 0,
  /* 10217 */ 'A', 'd', 'd', 'r', '3', '5', '_', 'Y', 0,
  /* 10226 */ 'K', 'C', '0', '_', '1', '4', '5', '_', 'Y', 0,
  /* 10236 */ 'T', '4', '5', '_', 'Y', 0,
  /* 10242 */ 'A', 'd', 'd', 'r', '4', '5', '_', 'Y', 0,
  /* 10251 */ 'K', 'C', '0', '_', '1', '5', '5', '_', 'Y', 0,
  /* 10261 */ 'T', '5', '5', '_', 'Y', 0,
  /* 10267 */ 'A', 'd', 'd', 'r', '5', '5', '_', 'Y', 0,
  /* 10276 */ 'K', 'C', '1', '_', '1', '6', '5', '_', 'Y', 0,
  /* 10286 */ 'T', '6', '5', '_', 'Y', 0,
  /* 10292 */ 'A', 'd', 'd', 'r', '6', '5', '_', 'Y', 0,
  /* 10301 */ 'K', 'C', '1', '_', '1', '7', '5', '_', 'Y', 0,
  /* 10311 */ 'T', '7', '5', '_', 'Y', 0,
  /* 10317 */ 'A', 'd', 'd', 'r', '7', '5', '_', 'Y', 0,
  /* 10326 */ 'K', 'C', '1', '_', '1', '8', '5', '_', 'Y', 0,
  /* 10336 */ 'T', '8', '5', '_', 'Y', 0,
  /* 10342 */ 'A', 'd', 'd', 'r', '8', '5', '_', 'Y', 0,
  /* 10351 */ 'T', '9', '5', '_', 'Y', 0,
  /* 10357 */ 'A', 'd', 'd', 'r', '9', '5', '_', 'Y', 0,
  /* 10366 */ 'T', '5', '_', 'Y', 0,
  /* 10371 */ 'A', 'd', 'd', 'r', '5', '_', 'Y', 0,
  /* 10379 */ 'T', '1', '0', '6', '_', 'Y', 0,
  /* 10386 */ 'A', 'd', 'd', 'r', '1', '0', '6', '_', 'Y', 0,
  /* 10396 */ 'T', '1', '1', '6', '_', 'Y', 0,
  /* 10403 */ 'A', 'd', 'd', 'r', '1', '1', '6', '_', 'Y', 0,
  /* 10413 */ 'T', '1', '6', '_', 'Y', 0,
  /* 10419 */ 'A', 'd', 'd', 'r', '1', '6', '_', 'Y', 0,
  /* 10428 */ 'T', '1', '2', '6', '_', 'Y', 0,
  /* 10435 */ 'A', 'd', 'd', 'r', '1', '2', '6', '_', 'Y', 0,
  /* 10445 */ 'T', '2', '6', '_', 'Y', 0,
  /* 10451 */ 'A', 'd', 'd', 'r', '2', '6', '_', 'Y', 0,
  /* 10460 */ 'K', 'C', '0', '_', '1', '3', '6', '_', 'Y', 0,
  /* 10470 */ 'T', '3', '6', '_', 'Y', 0,
  /* 10476 */ 'A', 'd', 'd', 'r', '3', '6', '_', 'Y', 0,
  /* 10485 */ 'K', 'C', '0', '_', '1', '4', '6', '_', 'Y', 0,
  /* 10495 */ 'T', '4', '6', '_', 'Y', 0,
  /* 10501 */ 'A', 'd', 'd', 'r', '4', '6', '_', 'Y', 0,
  /* 10510 */ 'K', 'C', '0', '_', '1', '5', '6', '_', 'Y', 0,
  /* 10520 */ 'T', '5', '6', '_', 'Y', 0,
  /* 10526 */ 'A', 'd', 'd', 'r', '5', '6', '_', 'Y', 0,
  /* 10535 */ 'K', 'C', '1', '_', '1', '6', '6', '_', 'Y', 0,
  /* 10545 */ 'T', '6', '6', '_', 'Y', 0,
  /* 10551 */ 'A', 'd', 'd', 'r', '6', '6', '_', 'Y', 0,
  /* 10560 */ 'K', 'C', '1', '_', '1', '7', '6', '_', 'Y', 0,
  /* 10570 */ 'T', '7', '6', '_', 'Y', 0,
  /* 10576 */ 'A', 'd', 'd', 'r', '7', '6', '_', 'Y', 0,
  /* 10585 */ 'K', 'C', '1', '_', '1', '8', '6', '_', 'Y', 0,
  /* 10595 */ 'T', '8', '6', '_', 'Y', 0,
  /* 10601 */ 'A', 'd', 'd', 'r', '8', '6', '_', 'Y', 0,
  /* 10610 */ 'T', '9', '6', '_', 'Y', 0,
  /* 10616 */ 'A', 'd', 'd', 'r', '9', '6', '_', 'Y', 0,
  /* 10625 */ 'T', '6', '_', 'Y', 0,
  /* 10630 */ 'A', 'd', 'd', 'r', '6', '_', 'Y', 0,
  /* 10638 */ 'T', '1', '0', '7', '_', 'Y', 0,
  /* 10645 */ 'A', 'd', 'd', 'r', '1', '0', '7', '_', 'Y', 0,
  /* 10655 */ 'T', '1', '1', '7', '_', 'Y', 0,
  /* 10662 */ 'A', 'd', 'd', 'r', '1', '1', '7', '_', 'Y', 0,
  /* 10672 */ 'T', '1', '7', '_', 'Y', 0,
  /* 10678 */ 'A', 'd', 'd', 'r', '1', '7', '_', 'Y', 0,
  /* 10687 */ 'T', '1', '2', '7', '_', 'Y', 0,
  /* 10694 */ 'A', 'd', 'd', 'r', '1', '2', '7', '_', 'Y', 0,
  /* 10704 */ 'T', '2', '7', '_', 'Y', 0,
  /* 10710 */ 'A', 'd', 'd', 'r', '2', '7', '_', 'Y', 0,
  /* 10719 */ 'K', 'C', '0', '_', '1', '3', '7', '_', 'Y', 0,
  /* 10729 */ 'T', '3', '7', '_', 'Y', 0,
  /* 10735 */ 'A', 'd', 'd', 'r', '3', '7', '_', 'Y', 0,
  /* 10744 */ 'K', 'C', '0', '_', '1', '4', '7', '_', 'Y', 0,
  /* 10754 */ 'T', '4', '7', '_', 'Y', 0,
  /* 10760 */ 'A', 'd', 'd', 'r', '4', '7', '_', 'Y', 0,
  /* 10769 */ 'K', 'C', '0', '_', '1', '5', '7', '_', 'Y', 0,
  /* 10779 */ 'T', '5', '7', '_', 'Y', 0,
  /* 10785 */ 'A', 'd', 'd', 'r', '5', '7', '_', 'Y', 0,
  /* 10794 */ 'K', 'C', '1', '_', '1', '6', '7', '_', 'Y', 0,
  /* 10804 */ 'T', '6', '7', '_', 'Y', 0,
  /* 10810 */ 'A', 'd', 'd', 'r', '6', '7', '_', 'Y', 0,
  /* 10819 */ 'K', 'C', '1', '_', '1', '7', '7', '_', 'Y', 0,
  /* 10829 */ 'T', '7', '7', '_', 'Y', 0,
  /* 10835 */ 'A', 'd', 'd', 'r', '7', '7', '_', 'Y', 0,
  /* 10844 */ 'K', 'C', '1', '_', '1', '8', '7', '_', 'Y', 0,
  /* 10854 */ 'T', '8', '7', '_', 'Y', 0,
  /* 10860 */ 'A', 'd', 'd', 'r', '8', '7', '_', 'Y', 0,
  /* 10869 */ 'T', '9', '7', '_', 'Y', 0,
  /* 10875 */ 'A', 'd', 'd', 'r', '9', '7', '_', 'Y', 0,
  /* 10884 */ 'T', '7', '_', 'Y', 0,
  /* 10889 */ 'A', 'd', 'd', 'r', '7', '_', 'Y', 0,
  /* 10897 */ 'T', '1', '0', '8', '_', 'Y', 0,
  /* 10904 */ 'A', 'd', 'd', 'r', '1', '0', '8', '_', 'Y', 0,
  /* 10914 */ 'T', '1', '1', '8', '_', 'Y', 0,
  /* 10921 */ 'A', 'd', 'd', 'r', '1', '1', '8', '_', 'Y', 0,
  /* 10931 */ 'T', '1', '8', '_', 'Y', 0,
  /* 10937 */ 'A', 'd', 'd', 'r', '1', '8', '_', 'Y', 0,
  /* 10946 */ 'K', 'C', '0', '_', '1', '2', '8', '_', 'Y', 0,
  /* 10956 */ 'T', '2', '8', '_', 'Y', 0,
  /* 10962 */ 'A', 'd', 'd', 'r', '2', '8', '_', 'Y', 0,
  /* 10971 */ 'K', 'C', '0', '_', '1', '3', '8', '_', 'Y', 0,
  /* 10981 */ 'T', '3', '8', '_', 'Y', 0,
  /* 10987 */ 'A', 'd', 'd', 'r', '3', '8', '_', 'Y', 0,
  /* 10996 */ 'K', 'C', '0', '_', '1', '4', '8', '_', 'Y', 0,
  /* 11006 */ 'T', '4', '8', '_', 'Y', 0,
  /* 11012 */ 'A', 'd', 'd', 'r', '4', '8', '_', 'Y', 0,
  /* 11021 */ 'K', 'C', '0', '_', '1', '5', '8', '_', 'Y', 0,
  /* 11031 */ 'T', '5', '8', '_', 'Y', 0,
  /* 11037 */ 'A', 'd', 'd', 'r', '5', '8', '_', 'Y', 0,
  /* 11046 */ 'K', 'C', '1', '_', '1', '6', '8', '_', 'Y', 0,
  /* 11056 */ 'T', '6', '8', '_', 'Y', 0,
  /* 11062 */ 'A', 'd', 'd', 'r', '6', '8', '_', 'Y', 0,
  /* 11071 */ 'K', 'C', '1', '_', '1', '7', '8', '_', 'Y', 0,
  /* 11081 */ 'T', '7', '8', '_', 'Y', 0,
  /* 11087 */ 'A', 'd', 'd', 'r', '7', '8', '_', 'Y', 0,
  /* 11096 */ 'K', 'C', '1', '_', '1', '8', '8', '_', 'Y', 0,
  /* 11106 */ 'T', '8', '8', '_', 'Y', 0,
  /* 11112 */ 'A', 'd', 'd', 'r', '8', '8', '_', 'Y', 0,
  /* 11121 */ 'T', '9', '8', '_', 'Y', 0,
  /* 11127 */ 'A', 'd', 'd', 'r', '9', '8', '_', 'Y', 0,
  /* 11136 */ 'T', '8', '_', 'Y', 0,
  /* 11141 */ 'A', 'd', 'd', 'r', '8', '_', 'Y', 0,
  /* 11149 */ 'T', '1', '0', '9', '_', 'Y', 0,
  /* 11156 */ 'A', 'd', 'd', 'r', '1', '0', '9', '_', 'Y', 0,
  /* 11166 */ 'T', '1', '1', '9', '_', 'Y', 0,
  /* 11173 */ 'A', 'd', 'd', 'r', '1', '1', '9', '_', 'Y', 0,
  /* 11183 */ 'T', '1', '9', '_', 'Y', 0,
  /* 11189 */ 'A', 'd', 'd', 'r', '1', '9', '_', 'Y', 0,
  /* 11198 */ 'K', 'C', '0', '_', '1', '2', '9', '_', 'Y', 0,
  /* 11208 */ 'T', '2', '9', '_', 'Y', 0,
  /* 11214 */ 'A', 'd', 'd', 'r', '2', '9', '_', 'Y', 0,
  /* 11223 */ 'K', 'C', '0', '_', '1', '3', '9', '_', 'Y', 0,
  /* 11233 */ 'T', '3', '9', '_', 'Y', 0,
  /* 11239 */ 'A', 'd', 'd', 'r', '3', '9', '_', 'Y', 0,
  /* 11248 */ 'K', 'C', '0', '_', '1', '4', '9', '_', 'Y', 0,
  /* 11258 */ 'T', '4', '9', '_', 'Y', 0,
  /* 11264 */ 'A', 'd', 'd', 'r', '4', '9', '_', 'Y', 0,
  /* 11273 */ 'K', 'C', '0', '_', '1', '5', '9', '_', 'Y', 0,
  /* 11283 */ 'T', '5', '9', '_', 'Y', 0,
  /* 11289 */ 'A', 'd', 'd', 'r', '5', '9', '_', 'Y', 0,
  /* 11298 */ 'K', 'C', '1', '_', '1', '6', '9', '_', 'Y', 0,
  /* 11308 */ 'T', '6', '9', '_', 'Y', 0,
  /* 11314 */ 'A', 'd', 'd', 'r', '6', '9', '_', 'Y', 0,
  /* 11323 */ 'K', 'C', '1', '_', '1', '7', '9', '_', 'Y', 0,
  /* 11333 */ 'T', '7', '9', '_', 'Y', 0,
  /* 11339 */ 'A', 'd', 'd', 'r', '7', '9', '_', 'Y', 0,
  /* 11348 */ 'K', 'C', '1', '_', '1', '8', '9', '_', 'Y', 0,
  /* 11358 */ 'T', '8', '9', '_', 'Y', 0,
  /* 11364 */ 'A', 'd', 'd', 'r', '8', '9', '_', 'Y', 0,
  /* 11373 */ 'T', '9', '9', '_', 'Y', 0,
  /* 11379 */ 'A', 'd', 'd', 'r', '9', '9', '_', 'Y', 0,
  /* 11388 */ 'T', '9', '_', 'Y', 0,
  /* 11393 */ 'A', 'd', 'd', 'r', '9', '_', 'Y', 0,
  /* 11401 */ 'A', 'L', 'U', '_', 'L', 'I', 'T', 'E', 'R', 'A', 'L', '_', 'Y', 0,
  /* 11415 */ 'P', 'V', '_', 'Y', 0,
  /* 11420 */ 'T', '1', '0', '0', '_', 'Z', 0,
  /* 11427 */ 'A', 'd', 'd', 'r', '1', '0', '0', '_', 'Z', 0,
  /* 11437 */ 'T', '1', '1', '0', '_', 'Z', 0,
  /* 11444 */ 'A', 'd', 'd', 'r', '1', '1', '0', '_', 'Z', 0,
  /* 11454 */ 'T', '1', '0', '_', 'Z', 0,
  /* 11460 */ 'A', 'd', 'd', 'r', '1', '0', '_', 'Z', 0,
  /* 11469 */ 'T', '1', '2', '0', '_', 'Z', 0,
  /* 11476 */ 'A', 'd', 'd', 'r', '1', '2', '0', '_', 'Z', 0,
  /* 11486 */ 'T', '2', '0', '_', 'Z', 0,
  /* 11492 */ 'A', 'd', 'd', 'r', '2', '0', '_', 'Z', 0,
  /* 11501 */ 'K', 'C', '0', '_', '1', '3', '0', '_', 'Z', 0,
  /* 11511 */ 'T', '3', '0', '_', 'Z', 0,
  /* 11517 */ 'A', 'd', 'd', 'r', '3', '0', '_', 'Z', 0,
  /* 11526 */ 'K', 'C', '0', '_', '1', '4', '0', '_', 'Z', 0,
  /* 11536 */ 'T', '4', '0', '_', 'Z', 0,
  /* 11542 */ 'A', 'd', 'd', 'r', '4', '0', '_', 'Z', 0,
  /* 11551 */ 'K', 'C', '0', '_', '1', '5', '0', '_', 'Z', 0,
  /* 11561 */ 'T', '5', '0', '_', 'Z', 0,
  /* 11567 */ 'A', 'd', 'd', 'r', '5', '0', '_', 'Z', 0,
  /* 11576 */ 'K', 'C', '1', '_', '1', '6', '0', '_', 'Z', 0,
  /* 11586 */ 'T', '6', '0', '_', 'Z', 0,
  /* 11592 */ 'A', 'd', 'd', 'r', '6', '0', '_', 'Z', 0,
  /* 11601 */ 'K', 'C', '1', '_', '1', '7', '0', '_', 'Z', 0,
  /* 11611 */ 'T', '7', '0', '_', 'Z', 0,
  /* 11617 */ 'A', 'd', 'd', 'r', '7', '0', '_', 'Z', 0,
  /* 11626 */ 'K', 'C', '1', '_', '1', '8', '0', '_', 'Z', 0,
  /* 11636 */ 'T', '8', '0', '_', 'Z', 0,
  /* 11642 */ 'A', 'd', 'd', 'r', '8', '0', '_', 'Z', 0,
  /* 11651 */ 'K', 'C', '1', '_', '1', '9', '0', '_', 'Z', 0,
  /* 11661 */ 'T', '9', '0', '_', 'Z', 0,
  /* 11667 */ 'A', 'd', 'd', 'r', '9', '0', '_', 'Z', 0,
  /* 11676 */ 'T', '0', '_', 'Z', 0,
  /* 11681 */ 'A', 'd', 'd', 'r', '0', '_', 'Z', 0,
  /* 11689 */ 'T', '1', '0', '1', '_', 'Z', 0,
  /* 11696 */ 'A', 'd', 'd', 'r', '1', '0', '1', '_', 'Z', 0,
  /* 11706 */ 'V', '0', '1', '_', 'Z', 0,
  /* 11712 */ 'T', '1', '1', '1', '_', 'Z', 0,
  /* 11719 */ 'A', 'd', 'd', 'r', '1', '1', '1', '_', 'Z', 0,
  /* 11729 */ 'T', '1', '1', '_', 'Z', 0,
  /* 11735 */ 'A', 'd', 'd', 'r', '1', '1', '_', 'Z', 0,
  /* 11744 */ 'T', '1', '2', '1', '_', 'Z', 0,
  /* 11751 */ 'A', 'd', 'd', 'r', '1', '2', '1', '_', 'Z', 0,
  /* 11761 */ 'T', '2', '1', '_', 'Z', 0,
  /* 11767 */ 'A', 'd', 'd', 'r', '2', '1', '_', 'Z', 0,
  /* 11776 */ 'K', 'C', '0', '_', '1', '3', '1', '_', 'Z', 0,
  /* 11786 */ 'T', '3', '1', '_', 'Z', 0,
  /* 11792 */ 'A', 'd', 'd', 'r', '3', '1', '_', 'Z', 0,
  /* 11801 */ 'K', 'C', '0', '_', '1', '4', '1', '_', 'Z', 0,
  /* 11811 */ 'T', '4', '1', '_', 'Z', 0,
  /* 11817 */ 'A', 'd', 'd', 'r', '4', '1', '_', 'Z', 0,
  /* 11826 */ 'K', 'C', '0', '_', '1', '5', '1', '_', 'Z', 0,
  /* 11836 */ 'T', '5', '1', '_', 'Z', 0,
  /* 11842 */ 'A', 'd', 'd', 'r', '5', '1', '_', 'Z', 0,
  /* 11851 */ 'K', 'C', '1', '_', '1', '6', '1', '_', 'Z', 0,
  /* 11861 */ 'T', '6', '1', '_', 'Z', 0,
  /* 11867 */ 'A', 'd', 'd', 'r', '6', '1', '_', 'Z', 0,
  /* 11876 */ 'K', 'C', '1', '_', '1', '7', '1', '_', 'Z', 0,
  /* 11886 */ 'T', '7', '1', '_', 'Z', 0,
  /* 11892 */ 'A', 'd', 'd', 'r', '7', '1', '_', 'Z', 0,
  /* 11901 */ 'K', 'C', '1', '_', '1', '8', '1', '_', 'Z', 0,
  /* 11911 */ 'T', '8', '1', '_', 'Z', 0,
  /* 11917 */ 'A', 'd', 'd', 'r', '8', '1', '_', 'Z', 0,
  /* 11926 */ 'K', 'C', '1', '_', '1', '9', '1', '_', 'Z', 0,
  /* 11936 */ 'T', '9', '1', '_', 'Z', 0,
  /* 11942 */ 'A', 'd', 'd', 'r', '9', '1', '_', 'Z', 0,
  /* 11951 */ 'T', '1', '_', 'Z', 0,
  /* 11956 */ 'A', 'd', 'd', 'r', '1', '_', 'Z', 0,
  /* 11964 */ 'T', '1', '0', '2', '_', 'Z', 0,
  /* 11971 */ 'A', 'd', 'd', 'r', '1', '0', '2', '_', 'Z', 0,
  /* 11981 */ 'T', '1', '1', '2', '_', 'Z', 0,
  /* 11988 */ 'A', 'd', 'd', 'r', '1', '1', '2', '_', 'Z', 0,
  /* 11998 */ 'T', '1', '2', '_', 'Z', 0,
  /* 12004 */ 'A', 'd', 'd', 'r', '1', '2', '_', 'Z', 0,
  /* 12013 */ 'T', '1', '2', '2', '_', 'Z', 0,
  /* 12020 */ 'A', 'd', 'd', 'r', '1', '2', '2', '_', 'Z', 0,
  /* 12030 */ 'T', '2', '2', '_', 'Z', 0,
  /* 12036 */ 'A', 'd', 'd', 'r', '2', '2', '_', 'Z', 0,
  /* 12045 */ 'K', 'C', '0', '_', '1', '3', '2', '_', 'Z', 0,
  /* 12055 */ 'T', '3', '2', '_', 'Z', 0,
  /* 12061 */ 'A', 'd', 'd', 'r', '3', '2', '_', 'Z', 0,
  /* 12070 */ 'K', 'C', '0', '_', '1', '4', '2', '_', 'Z', 0,
  /* 12080 */ 'T', '4', '2', '_', 'Z', 0,
  /* 12086 */ 'A', 'd', 'd', 'r', '4', '2', '_', 'Z', 0,
  /* 12095 */ 'K', 'C', '0', '_', '1', '5', '2', '_', 'Z', 0,
  /* 12105 */ 'T', '5', '2', '_', 'Z', 0,
  /* 12111 */ 'A', 'd', 'd', 'r', '5', '2', '_', 'Z', 0,
  /* 12120 */ 'K', 'C', '1', '_', '1', '6', '2', '_', 'Z', 0,
  /* 12130 */ 'T', '6', '2', '_', 'Z', 0,
  /* 12136 */ 'A', 'd', 'd', 'r', '6', '2', '_', 'Z', 0,
  /* 12145 */ 'K', 'C', '1', '_', '1', '7', '2', '_', 'Z', 0,
  /* 12155 */ 'T', '7', '2', '_', 'Z', 0,
  /* 12161 */ 'A', 'd', 'd', 'r', '7', '2', '_', 'Z', 0,
  /* 12170 */ 'K', 'C', '1', '_', '1', '8', '2', '_', 'Z', 0,
  /* 12180 */ 'T', '8', '2', '_', 'Z', 0,
  /* 12186 */ 'A', 'd', 'd', 'r', '8', '2', '_', 'Z', 0,
  /* 12195 */ 'T', '9', '2', '_', 'Z', 0,
  /* 12201 */ 'A', 'd', 'd', 'r', '9', '2', '_', 'Z', 0,
  /* 12210 */ 'T', '2', '_', 'Z', 0,
  /* 12215 */ 'A', 'd', 'd', 'r', '2', '_', 'Z', 0,
  /* 12223 */ 'T', '1', '0', '3', '_', 'Z', 0,
  /* 12230 */ 'A', 'd', 'd', 'r', '1', '0', '3', '_', 'Z', 0,
  /* 12240 */ 'T', '1', '1', '3', '_', 'Z', 0,
  /* 12247 */ 'A', 'd', 'd', 'r', '1', '1', '3', '_', 'Z', 0,
  /* 12257 */ 'T', '1', '3', '_', 'Z', 0,
  /* 12263 */ 'A', 'd', 'd', 'r', '1', '3', '_', 'Z', 0,
  /* 12272 */ 'V', '0', '1', '2', '3', '_', 'Z', 0,
  /* 12280 */ 'T', '1', '2', '3', '_', 'Z', 0,
  /* 12287 */ 'A', 'd', 'd', 'r', '1', '2', '3', '_', 'Z', 0,
  /* 12297 */ 'T', '2', '3', '_', 'Z', 0,
  /* 12303 */ 'V', '2', '3', '_', 'Z', 0,
  /* 12309 */ 'A', 'd', 'd', 'r', '2', '3', '_', 'Z', 0,
  /* 12318 */ 'K', 'C', '0', '_', '1', '3', '3', '_', 'Z', 0,
  /* 12328 */ 'T', '3', '3', '_', 'Z', 0,
  /* 12334 */ 'A', 'd', 'd', 'r', '3', '3', '_', 'Z', 0,
  /* 12343 */ 'K', 'C', '0', '_', '1', '4', '3', '_', 'Z', 0,
  /* 12353 */ 'T', '4', '3', '_', 'Z', 0,
  /* 12359 */ 'A', 'd', 'd', 'r', '4', '3', '_', 'Z', 0,
  /* 12368 */ 'K', 'C', '0', '_', '1', '5', '3', '_', 'Z', 0,
  /* 12378 */ 'T', '5', '3', '_', 'Z', 0,
  /* 12384 */ 'A', 'd', 'd', 'r', '5', '3', '_', 'Z', 0,
  /* 12393 */ 'K', 'C', '1', '_', '1', '6', '3', '_', 'Z', 0,
  /* 12403 */ 'T', '6', '3', '_', 'Z', 0,
  /* 12409 */ 'A', 'd', 'd', 'r', '6', '3', '_', 'Z', 0,
  /* 12418 */ 'K', 'C', '1', '_', '1', '7', '3', '_', 'Z', 0,
  /* 12428 */ 'T', '7', '3', '_', 'Z', 0,
  /* 12434 */ 'A', 'd', 'd', 'r', '7', '3', '_', 'Z', 0,
  /* 12443 */ 'K', 'C', '1', '_', '1', '8', '3', '_', 'Z', 0,
  /* 12453 */ 'T', '8', '3', '_', 'Z', 0,
  /* 12459 */ 'A', 'd', 'd', 'r', '8', '3', '_', 'Z', 0,
  /* 12468 */ 'T', '9', '3', '_', 'Z', 0,
  /* 12474 */ 'A', 'd', 'd', 'r', '9', '3', '_', 'Z', 0,
  /* 12483 */ 'T', '3', '_', 'Z', 0,
  /* 12488 */ 'A', 'd', 'd', 'r', '3', '_', 'Z', 0,
  /* 12496 */ 'T', '1', '0', '4', '_', 'Z', 0,
  /* 12503 */ 'A', 'd', 'd', 'r', '1', '0', '4', '_', 'Z', 0,
  /* 12513 */ 'T', '1', '1', '4', '_', 'Z', 0,
  /* 12520 */ 'A', 'd', 'd', 'r', '1', '1', '4', '_', 'Z', 0,
  /* 12530 */ 'T', '1', '4', '_', 'Z', 0,
  /* 12536 */ 'A', 'd', 'd', 'r', '1', '4', '_', 'Z', 0,
  /* 12545 */ 'T', '1', '2', '4', '_', 'Z', 0,
  /* 12552 */ 'A', 'd', 'd', 'r', '1', '2', '4', '_', 'Z', 0,
  /* 12562 */ 'T', '2', '4', '_', 'Z', 0,
  /* 12568 */ 'A', 'd', 'd', 'r', '2', '4', '_', 'Z', 0,
  /* 12577 */ 'K', 'C', '0', '_', '1', '3', '4', '_', 'Z', 0,
  /* 12587 */ 'T', '3', '4', '_', 'Z', 0,
  /* 12593 */ 'A', 'd', 'd', 'r', '3', '4', '_', 'Z', 0,
  /* 12602 */ 'K', 'C', '0', '_', '1', '4', '4', '_', 'Z', 0,
  /* 12612 */ 'T', '4', '4', '_', 'Z', 0,
  /* 12618 */ 'A', 'd', 'd', 'r', '4', '4', '_', 'Z', 0,
  /* 12627 */ 'K', 'C', '0', '_', '1', '5', '4', '_', 'Z', 0,
  /* 12637 */ 'T', '5', '4', '_', 'Z', 0,
  /* 12643 */ 'A', 'd', 'd', 'r', '5', '4', '_', 'Z', 0,
  /* 12652 */ 'K', 'C', '1', '_', '1', '6', '4', '_', 'Z', 0,
  /* 12662 */ 'T', '6', '4', '_', 'Z', 0,
  /* 12668 */ 'A', 'd', 'd', 'r', '6', '4', '_', 'Z', 0,
  /* 12677 */ 'K', 'C', '1', '_', '1', '7', '4', '_', 'Z', 0,
  /* 12687 */ 'T', '7', '4', '_', 'Z', 0,
  /* 12693 */ 'A', 'd', 'd', 'r', '7', '4', '_', 'Z', 0,
  /* 12702 */ 'K', 'C', '1', '_', '1', '8', '4', '_', 'Z', 0,
  /* 12712 */ 'T', '8', '4', '_', 'Z', 0,
  /* 12718 */ 'A', 'd', 'd', 'r', '8', '4', '_', 'Z', 0,
  /* 12727 */ 'T', '9', '4', '_', 'Z', 0,
  /* 12733 */ 'A', 'd', 'd', 'r', '9', '4', '_', 'Z', 0,
  /* 12742 */ 'T', '4', '_', 'Z', 0,
  /* 12747 */ 'A', 'd', 'd', 'r', '4', '_', 'Z', 0,
  /* 12755 */ 'T', '1', '0', '5', '_', 'Z', 0,
  /* 12762 */ 'A', 'd', 'd', 'r', '1', '0', '5', '_', 'Z', 0,
  /* 12772 */ 'T', '1', '1', '5', '_', 'Z', 0,
  /* 12779 */ 'A', 'd', 'd', 'r', '1', '1', '5', '_', 'Z', 0,
  /* 12789 */ 'T', '1', '5', '_', 'Z', 0,
  /* 12795 */ 'A', 'd', 'd', 'r', '1', '5', '_', 'Z', 0,
  /* 12804 */ 'T', '1', '2', '5', '_', 'Z', 0,
  /* 12811 */ 'A', 'd', 'd', 'r', '1', '2', '5', '_', 'Z', 0,
  /* 12821 */ 'T', '2', '5', '_', 'Z', 0,
  /* 12827 */ 'A', 'd', 'd', 'r', '2', '5', '_', 'Z', 0,
  /* 12836 */ 'K', 'C', '0', '_', '1', '3', '5', '_', 'Z', 0,
  /* 12846 */ 'T', '3', '5', '_', 'Z', 0,
  /* 12852 */ 'A', 'd', 'd', 'r', '3', '5', '_', 'Z', 0,
  /* 12861 */ 'K', 'C', '0', '_', '1', '4', '5', '_', 'Z', 0,
  /* 12871 */ 'T', '4', '5', '_', 'Z', 0,
  /* 12877 */ 'A', 'd', 'd', 'r', '4', '5', '_', 'Z', 0,
  /* 12886 */ 'K', 'C', '0', '_', '1', '5', '5', '_', 'Z', 0,
  /* 12896 */ 'T', '5', '5', '_', 'Z', 0,
  /* 12902 */ 'A', 'd', 'd', 'r', '5', '5', '_', 'Z', 0,
  /* 12911 */ 'K', 'C', '1', '_', '1', '6', '5', '_', 'Z', 0,
  /* 12921 */ 'T', '6', '5', '_', 'Z', 0,
  /* 12927 */ 'A', 'd', 'd', 'r', '6', '5', '_', 'Z', 0,
  /* 12936 */ 'K', 'C', '1', '_', '1', '7', '5', '_', 'Z', 0,
  /* 12946 */ 'T', '7', '5', '_', 'Z', 0,
  /* 12952 */ 'A', 'd', 'd', 'r', '7', '5', '_', 'Z', 0,
  /* 12961 */ 'K', 'C', '1', '_', '1', '8', '5', '_', 'Z', 0,
  /* 12971 */ 'T', '8', '5', '_', 'Z', 0,
  /* 12977 */ 'A', 'd', 'd', 'r', '8', '5', '_', 'Z', 0,
  /* 12986 */ 'T', '9', '5', '_', 'Z', 0,
  /* 12992 */ 'A', 'd', 'd', 'r', '9', '5', '_', 'Z', 0,
  /* 13001 */ 'T', '5', '_', 'Z', 0,
  /* 13006 */ 'A', 'd', 'd', 'r', '5', '_', 'Z', 0,
  /* 13014 */ 'T', '1', '0', '6', '_', 'Z', 0,
  /* 13021 */ 'A', 'd', 'd', 'r', '1', '0', '6', '_', 'Z', 0,
  /* 13031 */ 'T', '1', '1', '6', '_', 'Z', 0,
  /* 13038 */ 'A', 'd', 'd', 'r', '1', '1', '6', '_', 'Z', 0,
  /* 13048 */ 'T', '1', '6', '_', 'Z', 0,
  /* 13054 */ 'A', 'd', 'd', 'r', '1', '6', '_', 'Z', 0,
  /* 13063 */ 'T', '1', '2', '6', '_', 'Z', 0,
  /* 13070 */ 'A', 'd', 'd', 'r', '1', '2', '6', '_', 'Z', 0,
  /* 13080 */ 'T', '2', '6', '_', 'Z', 0,
  /* 13086 */ 'A', 'd', 'd', 'r', '2', '6', '_', 'Z', 0,
  /* 13095 */ 'K', 'C', '0', '_', '1', '3', '6', '_', 'Z', 0,
  /* 13105 */ 'T', '3', '6', '_', 'Z', 0,
  /* 13111 */ 'A', 'd', 'd', 'r', '3', '6', '_', 'Z', 0,
  /* 13120 */ 'K', 'C', '0', '_', '1', '4', '6', '_', 'Z', 0,
  /* 13130 */ 'T', '4', '6', '_', 'Z', 0,
  /* 13136 */ 'A', 'd', 'd', 'r', '4', '6', '_', 'Z', 0,
  /* 13145 */ 'K', 'C', '0', '_', '1', '5', '6', '_', 'Z', 0,
  /* 13155 */ 'T', '5', '6', '_', 'Z', 0,
  /* 13161 */ 'A', 'd', 'd', 'r', '5', '6', '_', 'Z', 0,
  /* 13170 */ 'K', 'C', '1', '_', '1', '6', '6', '_', 'Z', 0,
  /* 13180 */ 'T', '6', '6', '_', 'Z', 0,
  /* 13186 */ 'A', 'd', 'd', 'r', '6', '6', '_', 'Z', 0,
  /* 13195 */ 'K', 'C', '1', '_', '1', '7', '6', '_', 'Z', 0,
  /* 13205 */ 'T', '7', '6', '_', 'Z', 0,
  /* 13211 */ 'A', 'd', 'd', 'r', '7', '6', '_', 'Z', 0,
  /* 13220 */ 'K', 'C', '1', '_', '1', '8', '6', '_', 'Z', 0,
  /* 13230 */ 'T', '8', '6', '_', 'Z', 0,
  /* 13236 */ 'A', 'd', 'd', 'r', '8', '6', '_', 'Z', 0,
  /* 13245 */ 'T', '9', '6', '_', 'Z', 0,
  /* 13251 */ 'A', 'd', 'd', 'r', '9', '6', '_', 'Z', 0,
  /* 13260 */ 'T', '6', '_', 'Z', 0,
  /* 13265 */ 'A', 'd', 'd', 'r', '6', '_', 'Z', 0,
  /* 13273 */ 'T', '1', '0', '7', '_', 'Z', 0,
  /* 13280 */ 'A', 'd', 'd', 'r', '1', '0', '7', '_', 'Z', 0,
  /* 13290 */ 'T', '1', '1', '7', '_', 'Z', 0,
  /* 13297 */ 'A', 'd', 'd', 'r', '1', '1', '7', '_', 'Z', 0,
  /* 13307 */ 'T', '1', '7', '_', 'Z', 0,
  /* 13313 */ 'A', 'd', 'd', 'r', '1', '7', '_', 'Z', 0,
  /* 13322 */ 'T', '1', '2', '7', '_', 'Z', 0,
  /* 13329 */ 'A', 'd', 'd', 'r', '1', '2', '7', '_', 'Z', 0,
  /* 13339 */ 'T', '2', '7', '_', 'Z', 0,
  /* 13345 */ 'A', 'd', 'd', 'r', '2', '7', '_', 'Z', 0,
  /* 13354 */ 'K', 'C', '0', '_', '1', '3', '7', '_', 'Z', 0,
  /* 13364 */ 'T', '3', '7', '_', 'Z', 0,
  /* 13370 */ 'A', 'd', 'd', 'r', '3', '7', '_', 'Z', 0,
  /* 13379 */ 'K', 'C', '0', '_', '1', '4', '7', '_', 'Z', 0,
  /* 13389 */ 'T', '4', '7', '_', 'Z', 0,
  /* 13395 */ 'A', 'd', 'd', 'r', '4', '7', '_', 'Z', 0,
  /* 13404 */ 'K', 'C', '0', '_', '1', '5', '7', '_', 'Z', 0,
  /* 13414 */ 'T', '5', '7', '_', 'Z', 0,
  /* 13420 */ 'A', 'd', 'd', 'r', '5', '7', '_', 'Z', 0,
  /* 13429 */ 'K', 'C', '1', '_', '1', '6', '7', '_', 'Z', 0,
  /* 13439 */ 'T', '6', '7', '_', 'Z', 0,
  /* 13445 */ 'A', 'd', 'd', 'r', '6', '7', '_', 'Z', 0,
  /* 13454 */ 'K', 'C', '1', '_', '1', '7', '7', '_', 'Z', 0,
  /* 13464 */ 'T', '7', '7', '_', 'Z', 0,
  /* 13470 */ 'A', 'd', 'd', 'r', '7', '7', '_', 'Z', 0,
  /* 13479 */ 'K', 'C', '1', '_', '1', '8', '7', '_', 'Z', 0,
  /* 13489 */ 'T', '8', '7', '_', 'Z', 0,
  /* 13495 */ 'A', 'd', 'd', 'r', '8', '7', '_', 'Z', 0,
  /* 13504 */ 'T', '9', '7', '_', 'Z', 0,
  /* 13510 */ 'A', 'd', 'd', 'r', '9', '7', '_', 'Z', 0,
  /* 13519 */ 'T', '7', '_', 'Z', 0,
  /* 13524 */ 'A', 'd', 'd', 'r', '7', '_', 'Z', 0,
  /* 13532 */ 'T', '1', '0', '8', '_', 'Z', 0,
  /* 13539 */ 'A', 'd', 'd', 'r', '1', '0', '8', '_', 'Z', 0,
  /* 13549 */ 'T', '1', '1', '8', '_', 'Z', 0,
  /* 13556 */ 'A', 'd', 'd', 'r', '1', '1', '8', '_', 'Z', 0,
  /* 13566 */ 'T', '1', '8', '_', 'Z', 0,
  /* 13572 */ 'A', 'd', 'd', 'r', '1', '8', '_', 'Z', 0,
  /* 13581 */ 'K', 'C', '0', '_', '1', '2', '8', '_', 'Z', 0,
  /* 13591 */ 'T', '2', '8', '_', 'Z', 0,
  /* 13597 */ 'A', 'd', 'd', 'r', '2', '8', '_', 'Z', 0,
  /* 13606 */ 'K', 'C', '0', '_', '1', '3', '8', '_', 'Z', 0,
  /* 13616 */ 'T', '3', '8', '_', 'Z', 0,
  /* 13622 */ 'A', 'd', 'd', 'r', '3', '8', '_', 'Z', 0,
  /* 13631 */ 'K', 'C', '0', '_', '1', '4', '8', '_', 'Z', 0,
  /* 13641 */ 'T', '4', '8', '_', 'Z', 0,
  /* 13647 */ 'A', 'd', 'd', 'r', '4', '8', '_', 'Z', 0,
  /* 13656 */ 'K', 'C', '0', '_', '1', '5', '8', '_', 'Z', 0,
  /* 13666 */ 'T', '5', '8', '_', 'Z', 0,
  /* 13672 */ 'A', 'd', 'd', 'r', '5', '8', '_', 'Z', 0,
  /* 13681 */ 'K', 'C', '1', '_', '1', '6', '8', '_', 'Z', 0,
  /* 13691 */ 'T', '6', '8', '_', 'Z', 0,
  /* 13697 */ 'A', 'd', 'd', 'r', '6', '8', '_', 'Z', 0,
  /* 13706 */ 'K', 'C', '1', '_', '1', '7', '8', '_', 'Z', 0,
  /* 13716 */ 'T', '7', '8', '_', 'Z', 0,
  /* 13722 */ 'A', 'd', 'd', 'r', '7', '8', '_', 'Z', 0,
  /* 13731 */ 'K', 'C', '1', '_', '1', '8', '8', '_', 'Z', 0,
  /* 13741 */ 'T', '8', '8', '_', 'Z', 0,
  /* 13747 */ 'A', 'd', 'd', 'r', '8', '8', '_', 'Z', 0,
  /* 13756 */ 'T', '9', '8', '_', 'Z', 0,
  /* 13762 */ 'A', 'd', 'd', 'r', '9', '8', '_', 'Z', 0,
  /* 13771 */ 'T', '8', '_', 'Z', 0,
  /* 13776 */ 'A', 'd', 'd', 'r', '8', '_', 'Z', 0,
  /* 13784 */ 'T', '1', '0', '9', '_', 'Z', 0,
  /* 13791 */ 'A', 'd', 'd', 'r', '1', '0', '9', '_', 'Z', 0,
  /* 13801 */ 'T', '1', '1', '9', '_', 'Z', 0,
  /* 13808 */ 'A', 'd', 'd', 'r', '1', '1', '9', '_', 'Z', 0,
  /* 13818 */ 'T', '1', '9', '_', 'Z', 0,
  /* 13824 */ 'A', 'd', 'd', 'r', '1', '9', '_', 'Z', 0,
  /* 13833 */ 'K', 'C', '0', '_', '1', '2', '9', '_', 'Z', 0,
  /* 13843 */ 'T', '2', '9', '_', 'Z', 0,
  /* 13849 */ 'A', 'd', 'd', 'r', '2', '9', '_', 'Z', 0,
  /* 13858 */ 'K', 'C', '0', '_', '1', '3', '9', '_', 'Z', 0,
  /* 13868 */ 'T', '3', '9', '_', 'Z', 0,
  /* 13874 */ 'A', 'd', 'd', 'r', '3', '9', '_', 'Z', 0,
  /* 13883 */ 'K', 'C', '0', '_', '1', '4', '9', '_', 'Z', 0,
  /* 13893 */ 'T', '4', '9', '_', 'Z', 0,
  /* 13899 */ 'A', 'd', 'd', 'r', '4', '9', '_', 'Z', 0,
  /* 13908 */ 'K', 'C', '0', '_', '1', '5', '9', '_', 'Z', 0,
  /* 13918 */ 'T', '5', '9', '_', 'Z', 0,
  /* 13924 */ 'A', 'd', 'd', 'r', '5', '9', '_', 'Z', 0,
  /* 13933 */ 'K', 'C', '1', '_', '1', '6', '9', '_', 'Z', 0,
  /* 13943 */ 'T', '6', '9', '_', 'Z', 0,
  /* 13949 */ 'A', 'd', 'd', 'r', '6', '9', '_', 'Z', 0,
  /* 13958 */ 'K', 'C', '1', '_', '1', '7', '9', '_', 'Z', 0,
  /* 13968 */ 'T', '7', '9', '_', 'Z', 0,
  /* 13974 */ 'A', 'd', 'd', 'r', '7', '9', '_', 'Z', 0,
  /* 13983 */ 'K', 'C', '1', '_', '1', '8', '9', '_', 'Z', 0,
  /* 13993 */ 'T', '8', '9', '_', 'Z', 0,
  /* 13999 */ 'A', 'd', 'd', 'r', '8', '9', '_', 'Z', 0,
  /* 14008 */ 'T', '9', '9', '_', 'Z', 0,
  /* 14014 */ 'A', 'd', 'd', 'r', '9', '9', '_', 'Z', 0,
  /* 14023 */ 'T', '9', '_', 'Z', 0,
  /* 14028 */ 'A', 'd', 'd', 'r', '9', '_', 'Z', 0,
  /* 14036 */ 'A', 'L', 'U', '_', 'L', 'I', 'T', 'E', 'R', 'A', 'L', '_', 'Z', 0,
  /* 14050 */ 'P', 'V', '_', 'Z', 0,
};

extern const MCRegisterDesc R600RegDesc[] = { // Descriptors
  { 12, 0, 0, 0, 0, 0 },
  { 584, 4, 4, 2, 8097, 0 },
  { 5212, 4, 4, 2, 8097, 0 },
  { 7847, 4, 4, 2, 8097, 0 },
  { 11401, 4, 4, 2, 8097, 0 },
  { 14036, 4, 4, 2, 8097, 0 },
  { 506, 4, 4, 2, 8097, 0 },
  { 7861, 4, 4, 2, 8097, 0 },
  { 501, 4, 4, 2, 8097, 0 },
  { 540, 4, 4, 2, 8097, 0 },
  { 433, 4, 4, 2, 8097, 0 },
  { 450, 4, 4, 2, 8097, 0 },
  { 497, 4, 4, 2, 8097, 0 },
  { 463, 4, 4, 2, 8097, 0 },
  { 467, 4, 4, 2, 8097, 0 },
  { 576, 4, 4, 2, 8097, 0 },
  { 429, 4, 4, 2, 8097, 0 },
  { 530, 4, 4, 2, 8097, 0 },
  { 446, 4, 4, 2, 8097, 0 },
  { 535, 4, 4, 2, 8097, 0 },
  { 562, 4, 4, 2, 8097, 0 },
  { 484, 4, 4, 2, 8097, 0 },
  { 471, 4, 4, 2, 8097, 0 },
  { 516, 4, 4, 2, 8097, 0 },
  { 559, 4, 4, 2, 8097, 0 },
  { 5226, 4, 4, 2, 8097, 0 },
  { 7866, 4, 4, 2, 8097, 0 },
  { 11415, 4, 4, 2, 8097, 0 },
  { 14050, 4, 4, 2, 8097, 0 },
  { 525, 4, 4, 2, 8097, 0 },
  { 325, 4, 4, 2, 8097, 0 },
  { 377, 4, 4, 2, 8097, 0 },
  { 0, 4, 4, 2, 8097, 0 },
  { 52, 4, 4, 2, 8097, 0 },
  { 91, 4, 4, 2, 8097, 0 },
  { 130, 4, 4, 2, 8097, 0 },
  { 169, 4, 4, 2, 8097, 0 },
  { 208, 4, 4, 2, 8097, 0 },
  { 247, 4, 4, 2, 8097, 0 },
  { 286, 4, 4, 2, 8097, 0 },
  { 338, 4, 4, 2, 8097, 0 },
  { 390, 4, 4, 2, 8097, 0 },
  { 13, 4, 4, 2, 8097, 0 },
  { 65, 4, 4, 2, 8097, 0 },
  { 104, 4, 4, 2, 8097, 0 },
  { 143, 4, 4, 2, 8097, 0 },
  { 182, 4, 4, 2, 8097, 0 },
  { 221, 4, 4, 2, 8097, 0 },
  { 260, 4, 4, 2, 8097, 0 },
  { 299, 4, 4, 2, 8097, 0 },
  { 351, 4, 4, 2, 8097, 0 },
  { 403, 4, 4, 2, 8097, 0 },
  { 26, 4, 4, 2, 8097, 0 },
  { 78, 4, 4, 2, 8097, 0 },
  { 117, 4, 4, 2, 8097, 0 },
  { 156, 4, 4, 2, 8097, 0 },
  { 195, 4, 4, 2, 8097, 0 },
  { 234, 4, 4, 2, 8097, 0 },
  { 273, 4, 4, 2, 8097, 0 },
  { 312, 4, 4, 2, 8097, 0 },
  { 364, 4, 4, 2, 8097, 0 },
  { 416, 4, 4, 2, 8097, 0 },
  { 39, 4, 4, 2, 8097, 0 },
  { 2857, 4, 4, 2, 8097, 0 },
  { 3132, 4, 4, 2, 8097, 0 },
  { 3391, 4, 4, 2, 8097, 0 },
  { 3664, 4, 4, 2, 8097, 0 },
  { 3923, 4, 4, 2, 8097, 0 },
  { 4182, 4, 4, 2, 8097, 0 },
  { 4441, 4, 4, 2, 8097, 0 },
  { 4700, 4, 4, 2, 8097, 0 },
  { 4952, 4, 4, 2, 8097, 0 },
  { 5204, 4, 4, 2, 8097, 0 },
  { 2636, 4, 4, 2, 8097, 0 },
  { 2911, 4, 4, 2, 8097, 0 },
  { 3180, 4, 4, 2, 8097, 0 },
  { 3439, 4, 4, 2, 8097, 0 },
  { 3712, 4, 4, 2, 8097, 0 },
  { 3971, 4, 4, 2, 8097, 0 },
  { 4230, 4, 4, 2, 8097, 0 },
  { 4489, 4, 4, 2, 8097, 0 },
  { 4748, 4, 4, 2, 8097, 0 },
  { 5000, 4, 4, 2, 8097, 0 },
  { 2668, 4, 4, 2, 8097, 0 },
  { 2943, 4, 4, 2, 8097, 0 },
  { 3212, 4, 4, 2, 8097, 0 },
  { 3485, 4, 4, 2, 8097, 0 },
  { 3744, 4, 4, 2, 8097, 0 },
  { 4003, 4, 4, 2, 8097, 0 },
  { 4262, 4, 4, 2, 8097, 0 },
  { 4521, 4, 4, 2, 8097, 0 },
  { 4773, 4, 4, 2, 8097, 0 },
  { 5025, 4, 4, 2, 8097, 0 },
  { 2693, 4, 4, 2, 8097, 0 },
  { 2968, 4, 4, 2, 8097, 0 },
  { 3237, 4, 4, 2, 8097, 0 },
  { 3510, 4, 4, 2, 8097, 0 },
  { 3769, 4, 4, 2, 8097, 0 },
  { 4028, 4, 4, 2, 8097, 0 },
  { 4287, 4, 4, 2, 8097, 0 },
  { 4546, 4, 4, 2, 8097, 0 },
  { 4798, 4, 4, 2, 8097, 0 },
  { 5050, 4, 4, 2, 8097, 0 },
  { 2718, 4, 4, 2, 8097, 0 },
  { 2993, 4, 4, 2, 8097, 0 },
  { 3262, 4, 4, 2, 8097, 0 },
  { 3535, 4, 4, 2, 8097, 0 },
  { 3794, 4, 4, 2, 8097, 0 },
  { 4053, 4, 4, 2, 8097, 0 },
  { 4312, 4, 4, 2, 8097, 0 },
  { 4571, 4, 4, 2, 8097, 0 },
  { 4823, 4, 4, 2, 8097, 0 },
  { 5075, 4, 4, 2, 8097, 0 },
  { 2743, 4, 4, 2, 8097, 0 },
  { 3018, 4, 4, 2, 8097, 0 },
  { 3287, 4, 4, 2, 8097, 0 },
  { 3560, 4, 4, 2, 8097, 0 },
  { 3819, 4, 4, 2, 8097, 0 },
  { 4078, 4, 4, 2, 8097, 0 },
  { 4337, 4, 4, 2, 8097, 0 },
  { 4596, 4, 4, 2, 8097, 0 },
  { 4848, 4, 4, 2, 8097, 0 },
  { 5100, 4, 4, 2, 8097, 0 },
  { 2768, 4, 4, 2, 8097, 0 },
  { 3043, 4, 4, 2, 8097, 0 },
  { 3312, 4, 4, 2, 8097, 0 },
  { 3585, 4, 4, 2, 8097, 0 },
  { 3844, 4, 4, 2, 8097, 0 },
  { 4103, 4, 4, 2, 8097, 0 },
  { 4362, 4, 4, 2, 8097, 0 },
  { 4621, 4, 4, 2, 8097, 0 },
  { 4873, 4, 4, 2, 8097, 0 },
  { 5125, 4, 4, 2, 8097, 0 },
  { 2793, 4, 4, 2, 8097, 0 },
  { 3068, 4, 4, 2, 8097, 0 },
  { 3337, 4, 4, 2, 8097, 0 },
  { 3610, 4, 4, 2, 8097, 0 },
  { 3869, 4, 4, 2, 8097, 0 },
  { 4128, 4, 4, 2, 8097, 0 },
  { 4387, 4, 4, 2, 8097, 0 },
  { 4646, 4, 4, 2, 8097, 0 },
  { 4898, 4, 4, 2, 8097, 0 },
  { 5150, 4, 4, 2, 8097, 0 },
  { 2818, 4, 4, 2, 8097, 0 },
  { 3093, 4, 4, 2, 8097, 0 },
  { 3362, 4, 4, 2, 8097, 0 },
  { 3635, 4, 4, 2, 8097, 0 },
  { 3894, 4, 4, 2, 8097, 0 },
  { 4153, 4, 4, 2, 8097, 0 },
  { 4412, 4, 4, 2, 8097, 0 },
  { 4671, 4, 4, 2, 8097, 0 },
  { 4923, 4, 4, 2, 8097, 0 },
  { 5175, 4, 4, 2, 8097, 0 },
  { 2843, 4, 4, 2, 8097, 0 },
  { 3118, 4, 4, 2, 8097, 0 },
  { 3377, 4, 4, 2, 8097, 0 },
  { 3650, 4, 4, 2, 8097, 0 },
  { 3909, 4, 4, 2, 8097, 0 },
  { 4168, 4, 4, 2, 8097, 0 },
  { 4427, 4, 4, 2, 8097, 0 },
  { 4686, 4, 4, 2, 8097, 0 },
  { 4938, 4, 4, 2, 8097, 0 },
  { 5190, 4, 4, 2, 8097, 0 },
  { 2603, 4, 4, 2, 8097, 0 },
  { 2872, 4, 4, 2, 8097, 0 },
  { 3147, 4, 4, 2, 8097, 0 },
  { 3406, 4, 4, 2, 8097, 0 },
  { 3679, 4, 4, 2, 8097, 0 },
  { 3938, 4, 4, 2, 8097, 0 },
  { 4197, 4, 4, 2, 8097, 0 },
  { 4456, 4, 4, 2, 8097, 0 },
  { 4715, 4, 4, 2, 8097, 0 },
  { 4967, 4, 4, 2, 8097, 0 },
  { 2620, 4, 4, 2, 8097, 0 },
  { 2895, 4, 4, 2, 8097, 0 },
  { 3164, 4, 4, 2, 8097, 0 },
  { 3423, 4, 4, 2, 8097, 0 },
  { 3696, 4, 4, 2, 8097, 0 },
  { 3955, 4, 4, 2, 8097, 0 },
  { 4214, 4, 4, 2, 8097, 0 },
  { 4473, 4, 4, 2, 8097, 0 },
  { 4732, 4, 4, 2, 8097, 0 },
  { 4984, 4, 4, 2, 8097, 0 },
  { 2652, 4, 4, 2, 8097, 0 },
  { 2927, 4, 4, 2, 8097, 0 },
  { 3196, 4, 4, 2, 8097, 0 },
  { 3463, 4, 4, 2, 8097, 0 },
  { 3728, 4, 4, 2, 8097, 0 },
  { 3987, 4, 4, 2, 8097, 0 },
  { 4246, 4, 4, 2, 8097, 0 },
  { 4505, 4, 4, 2, 8097, 0 },
  { 5492, 4, 4, 2, 8097, 0 },
  { 5767, 4, 4, 2, 8097, 0 },
  { 6026, 4, 4, 2, 8097, 0 },
  { 6299, 4, 4, 2, 8097, 0 },
  { 6558, 4, 4, 2, 8097, 0 },
  { 6817, 4, 4, 2, 8097, 0 },
  { 7076, 4, 4, 2, 8097, 0 },
  { 7335, 4, 4, 2, 8097, 0 },
  { 7587, 4, 4, 2, 8097, 0 },
  { 7839, 4, 4, 2, 8097, 0 },
  { 5271, 4, 4, 2, 8097, 0 },
  { 5546, 4, 4, 2, 8097, 0 },
  { 5815, 4, 4, 2, 8097, 0 },
  { 6074, 4, 4, 2, 8097, 0 },
  { 6347, 4, 4, 2, 8097, 0 },
  { 6606, 4, 4, 2, 8097, 0 },
  { 6865, 4, 4, 2, 8097, 0 },
  { 7124, 4, 4, 2, 8097, 0 },
  { 7383, 4, 4, 2, 8097, 0 },
  { 7635, 4, 4, 2, 8097, 0 },
  { 5303, 4, 4, 2, 8097, 0 },
  { 5578, 4, 4, 2, 8097, 0 },
  { 5847, 4, 4, 2, 8097, 0 },
  { 6120, 4, 4, 2, 8097, 0 },
  { 6379, 4, 4, 2, 8097, 0 },
  { 6638, 4, 4, 2, 8097, 0 },
  { 6897, 4, 4, 2, 8097, 0 },
  { 7156, 4, 4, 2, 8097, 0 },
  { 7408, 4, 4, 2, 8097, 0 },
  { 7660, 4, 4, 2, 8097, 0 },
  { 5328, 4, 4, 2, 8097, 0 },
  { 5603, 4, 4, 2, 8097, 0 },
  { 5872, 4, 4, 2, 8097, 0 },
  { 6145, 4, 4, 2, 8097, 0 },
  { 6404, 4, 4, 2, 8097, 0 },
  { 6663, 4, 4, 2, 8097, 0 },
  { 6922, 4, 4, 2, 8097, 0 },
  { 7181, 4, 4, 2, 8097, 0 },
  { 7433, 4, 4, 2, 8097, 0 },
  { 7685, 4, 4, 2, 8097, 0 },
  { 5353, 4, 4, 2, 8097, 0 },
  { 5628, 4, 4, 2, 8097, 0 },
  { 5897, 4, 4, 2, 8097, 0 },
  { 6170, 4, 4, 2, 8097, 0 },
  { 6429, 4, 4, 2, 8097, 0 },
  { 6688, 4, 4, 2, 8097, 0 },
  { 6947, 4, 4, 2, 8097, 0 },
  { 7206, 4, 4, 2, 8097, 0 },
  { 7458, 4, 4, 2, 8097, 0 },
  { 7710, 4, 4, 2, 8097, 0 },
  { 5378, 4, 4, 2, 8097, 0 },
  { 5653, 4, 4, 2, 8097, 0 },
  { 5922, 4, 4, 2, 8097, 0 },
  { 6195, 4, 4, 2, 8097, 0 },
  { 6454, 4, 4, 2, 8097, 0 },
  { 6713, 4, 4, 2, 8097, 0 },
  { 6972, 4, 4, 2, 8097, 0 },
  { 7231, 4, 4, 2, 8097, 0 },
  { 7483, 4, 4, 2, 8097, 0 },
  { 7735, 4, 4, 2, 8097, 0 },
  { 5403, 4, 4, 2, 8097, 0 },
  { 5678, 4, 4, 2, 8097, 0 },
  { 5947, 4, 4, 2, 8097, 0 },
  { 6220, 4, 4, 2, 8097, 0 },
  { 6479, 4, 4, 2, 8097, 0 },
  { 6738, 4, 4, 2, 8097, 0 },
  { 6997, 4, 4, 2, 8097, 0 },
  { 7256, 4, 4, 2, 8097, 0 },
  { 7508, 4, 4, 2, 8097, 0 },
  { 7760, 4, 4, 2, 8097, 0 },
  { 5428, 4, 4, 2, 8097, 0 },
  { 5703, 4, 4, 2, 8097, 0 },
  { 5972, 4, 4, 2, 8097, 0 },
  { 6245, 4, 4, 2, 8097, 0 },
  { 6504, 4, 4, 2, 8097, 0 },
  { 6763, 4, 4, 2, 8097, 0 },
  { 7022, 4, 4, 2, 8097, 0 },
  { 7281, 4, 4, 2, 8097, 0 },
  { 7533, 4, 4, 2, 8097, 0 },
  { 7785, 4, 4, 2, 8097, 0 },
  { 5453, 4, 4, 2, 8097, 0 },
  { 5728, 4, 4, 2, 8097, 0 },
  { 5997, 4, 4, 2, 8097, 0 },
  { 6270, 4, 4, 2, 8097, 0 },
  { 6529, 4, 4, 2, 8097, 0 },
  { 6788, 4, 4, 2, 8097, 0 },
  { 7047, 4, 4, 2, 8097, 0 },
  { 7306, 4, 4, 2, 8097, 0 },
  { 7558, 4, 4, 2, 8097, 0 },
  { 7810, 4, 4, 2, 8097, 0 },
  { 5478, 4, 4, 2, 8097, 0 },
  { 5753, 4, 4, 2, 8097, 0 },
  { 6012, 4, 4, 2, 8097, 0 },
  { 6285, 4, 4, 2, 8097, 0 },
  { 6544, 4, 4, 2, 8097, 0 },
  { 6803, 4, 4, 2, 8097, 0 },
  { 7062, 4, 4, 2, 8097, 0 },
  { 7321, 4, 4, 2, 8097, 0 },
  { 7573, 4, 4, 2, 8097, 0 },
  { 7825, 4, 4, 2, 8097, 0 },
  { 5238, 4, 4, 2, 8097, 0 },
  { 5507, 4, 4, 2, 8097, 0 },
  { 5782, 4, 4, 2, 8097, 0 },
  { 6041, 4, 4, 2, 8097, 0 },
  { 6314, 4, 4, 2, 8097, 0 },
  { 6573, 4, 4, 2, 8097, 0 },
  { 6832, 4, 4, 2, 8097, 0 },
  { 7091, 4, 4, 2, 8097, 0 },
  { 7350, 4, 4, 2, 8097, 0 },
  { 7602, 4, 4, 2, 8097, 0 },
  { 5255, 4, 4, 2, 8097, 0 },
  { 5530, 4, 4, 2, 8097, 0 },
  { 5799, 4, 4, 2, 8097, 0 },
  { 6058, 4, 4, 2, 8097, 0 },
  { 6331, 4, 4, 2, 8097, 0 },
  { 6590, 4, 4, 2, 8097, 0 },
  { 6849, 4, 4, 2, 8097, 0 },
  { 7108, 4, 4, 2, 8097, 0 },
  { 7367, 4, 4, 2, 8097, 0 },
  { 7619, 4, 4, 2, 8097, 0 },
  { 5287, 4, 4, 2, 8097, 0 },
  { 5562, 4, 4, 2, 8097, 0 },
  { 5831, 4, 4, 2, 8097, 0 },
  { 6098, 4, 4, 2, 8097, 0 },
  { 6363, 4, 4, 2, 8097, 0 },
  { 6622, 4, 4, 2, 8097, 0 },
  { 6881, 4, 4, 2, 8097, 0 },
  { 7140, 4, 4, 2, 8097, 0 },
  { 9046, 4, 4, 2, 8097, 0 },
  { 9321, 4, 4, 2, 8097, 0 },
  { 9580, 4, 4, 2, 8097, 0 },
  { 9853, 4, 4, 2, 8097, 0 },
  { 10112, 4, 4, 2, 8097, 0 },
  { 10371, 4, 4, 2, 8097, 0 },
  { 10630, 4, 4, 2, 8097, 0 },
  { 10889, 4, 4, 2, 8097, 0 },
  { 11141, 4, 4, 2, 8097, 0 },
  { 11393, 4, 4, 2, 8097, 0 },
  { 8825, 4, 4, 2, 8097, 0 },
  { 9100, 4, 4, 2, 8097, 0 },
  { 9369, 4, 4, 2, 8097, 0 },
  { 9628, 4, 4, 2, 8097, 0 },
  { 9901, 4, 4, 2, 8097, 0 },
  { 10160, 4, 4, 2, 8097, 0 },
  { 10419, 4, 4, 2, 8097, 0 },
  { 10678, 4, 4, 2, 8097, 0 },
  { 10937, 4, 4, 2, 8097, 0 },
  { 11189, 4, 4, 2, 8097, 0 },
  { 8857, 4, 4, 2, 8097, 0 },
  { 9132, 4, 4, 2, 8097, 0 },
  { 9401, 4, 4, 2, 8097, 0 },
  { 9674, 4, 4, 2, 8097, 0 },
  { 9933, 4, 4, 2, 8097, 0 },
  { 10192, 4, 4, 2, 8097, 0 },
  { 10451, 4, 4, 2, 8097, 0 },
  { 10710, 4, 4, 2, 8097, 0 },
  { 10962, 4, 4, 2, 8097, 0 },
  { 11214, 4, 4, 2, 8097, 0 },
  { 8882, 4, 4, 2, 8097, 0 },
  { 9157, 4, 4, 2, 8097, 0 },
  { 9426, 4, 4, 2, 8097, 0 },
  { 9699, 4, 4, 2, 8097, 0 },
  { 9958, 4, 4, 2, 8097, 0 },
  { 10217, 4, 4, 2, 8097, 0 },
  { 10476, 4, 4, 2, 8097, 0 },
  { 10735, 4, 4, 2, 8097, 0 },
  { 10987, 4, 4, 2, 8097, 0 },
  { 11239, 4, 4, 2, 8097, 0 },
  { 8907, 4, 4, 2, 8097, 0 },
  { 9182, 4, 4, 2, 8097, 0 },
  { 9451, 4, 4, 2, 8097, 0 },
  { 9724, 4, 4, 2, 8097, 0 },
  { 9983, 4, 4, 2, 8097, 0 },
  { 10242, 4, 4, 2, 8097, 0 },
  { 10501, 4, 4, 2, 8097, 0 },
  { 10760, 4, 4, 2, 8097, 0 },
  { 11012, 4, 4, 2, 8097, 0 },
  { 11264, 4, 4, 2, 8097, 0 },
  { 8932, 4, 4, 2, 8097, 0 },
  { 9207, 4, 4, 2, 8097, 0 },
  { 9476, 4, 4, 2, 8097, 0 },
  { 9749, 4, 4, 2, 8097, 0 },
  { 10008, 4, 4, 2, 8097, 0 },
  { 10267, 4, 4, 2, 8097, 0 },
  { 10526, 4, 4, 2, 8097, 0 },
  { 10785, 4, 4, 2, 8097, 0 },
  { 11037, 4, 4, 2, 8097, 0 },
  { 11289, 4, 4, 2, 8097, 0 },
  { 8957, 4, 4, 2, 8097, 0 },
  { 9232, 4, 4, 2, 8097, 0 },
  { 9501, 4, 4, 2, 8097, 0 },
  { 9774, 4, 4, 2, 8097, 0 },
  { 10033, 4, 4, 2, 8097, 0 },
  { 10292, 4, 4, 2, 8097, 0 },
  { 10551, 4, 4, 2, 8097, 0 },
  { 10810, 4, 4, 2, 8097, 0 },
  { 11062, 4, 4, 2, 8097, 0 },
  { 11314, 4, 4, 2, 8097, 0 },
  { 8982, 4, 4, 2, 8097, 0 },
  { 9257, 4, 4, 2, 8097, 0 },
  { 9526, 4, 4, 2, 8097, 0 },
  { 9799, 4, 4, 2, 8097, 0 },
  { 10058, 4, 4, 2, 8097, 0 },
  { 10317, 4, 4, 2, 8097, 0 },
  { 10576, 4, 4, 2, 8097, 0 },
  { 10835, 4, 4, 2, 8097, 0 },
  { 11087, 4, 4, 2, 8097, 0 },
  { 11339, 4, 4, 2, 8097, 0 },
  { 9007, 4, 4, 2, 8097, 0 },
  { 9282, 4, 4, 2, 8097, 0 },
  { 9551, 4, 4, 2, 8097, 0 },
  { 9824, 4, 4, 2, 8097, 0 },
  { 10083, 4, 4, 2, 8097, 0 },
  { 10342, 4, 4, 2, 8097, 0 },
  { 10601, 4, 4, 2, 8097, 0 },
  { 10860, 4, 4, 2, 8097, 0 },
  { 11112, 4, 4, 2, 8097, 0 },
  { 11364, 4, 4, 2, 8097, 0 },
  { 9032, 4, 4, 2, 8097, 0 },
  { 9307, 4, 4, 2, 8097, 0 },
  { 9566, 4, 4, 2, 8097, 0 },
  { 9839, 4, 4, 2, 8097, 0 },
  { 10098, 4, 4, 2, 8097, 0 },
  { 10357, 4, 4, 2, 8097, 0 },
  { 10616, 4, 4, 2, 8097, 0 },
  { 10875, 4, 4, 2, 8097, 0 },
  { 11127, 4, 4, 2, 8097, 0 },
  { 11379, 4, 4, 2, 8097, 0 },
  { 8792, 4, 4, 2, 8097, 0 },
  { 9061, 4, 4, 2, 8097, 0 },
  { 9336, 4, 4, 2, 8097, 0 },
  { 9595, 4, 4, 2, 8097, 0 },
  { 9868, 4, 4, 2, 8097, 0 },
  { 10127, 4, 4, 2, 8097, 0 },
  { 10386, 4, 4, 2, 8097, 0 },
  { 10645, 4, 4, 2, 8097, 0 },
  { 10904, 4, 4, 2, 8097, 0 },
  { 11156, 4, 4, 2, 8097, 0 },
  { 8809, 4, 4, 2, 8097, 0 },
  { 9084, 4, 4, 2, 8097, 0 },
  { 9353, 4, 4, 2, 8097, 0 },
  { 9612, 4, 4, 2, 8097, 0 },
  { 9885, 4, 4, 2, 8097, 0 },
  { 10144, 4, 4, 2, 8097, 0 },
  { 10403, 4, 4, 2, 8097, 0 },
  { 10662, 4, 4, 2, 8097, 0 },
  { 10921, 4, 4, 2, 8097, 0 },
  { 11173, 4, 4, 2, 8097, 0 },
  { 8841, 4, 4, 2, 8097, 0 },
  { 9116, 4, 4, 2, 8097, 0 },
  { 9385, 4, 4, 2, 8097, 0 },
  { 9652, 4, 4, 2, 8097, 0 },
  { 9917, 4, 4, 2, 8097, 0 },
  { 10176, 4, 4, 2, 8097, 0 },
  { 10435, 4, 4, 2, 8097, 0 },
  { 10694, 4, 4, 2, 8097, 0 },
  { 11681, 4, 4, 2, 8097, 0 },
  { 11956, 4, 4, 2, 8097, 0 },
  { 12215, 4, 4, 2, 8097, 0 },
  { 12488, 4, 4, 2, 8097, 0 },
  { 12747, 4, 4, 2, 8097, 0 },
  { 13006, 4, 4, 2, 8097, 0 },
  { 13265, 4, 4, 2, 8097, 0 },
  { 13524, 4, 4, 2, 8097, 0 },
  { 13776, 4, 4, 2, 8097, 0 },
  { 14028, 4, 4, 2, 8097, 0 },
  { 11460, 4, 4, 2, 8097, 0 },
  { 11735, 4, 4, 2, 8097, 0 },
  { 12004, 4, 4, 2, 8097, 0 },
  { 12263, 4, 4, 2, 8097, 0 },
  { 12536, 4, 4, 2, 8097, 0 },
  { 12795, 4, 4, 2, 8097, 0 },
  { 13054, 4, 4, 2, 8097, 0 },
  { 13313, 4, 4, 2, 8097, 0 },
  { 13572, 4, 4, 2, 8097, 0 },
  { 13824, 4, 4, 2, 8097, 0 },
  { 11492, 4, 4, 2, 8097, 0 },
  { 11767, 4, 4, 2, 8097, 0 },
  { 12036, 4, 4, 2, 8097, 0 },
  { 12309, 4, 4, 2, 8097, 0 },
  { 12568, 4, 4, 2, 8097, 0 },
  { 12827, 4, 4, 2, 8097, 0 },
  { 13086, 4, 4, 2, 8097, 0 },
  { 13345, 4, 4, 2, 8097, 0 },
  { 13597, 4, 4, 2, 8097, 0 },
  { 13849, 4, 4, 2, 8097, 0 },
  { 11517, 4, 4, 2, 8097, 0 },
  { 11792, 4, 4, 2, 8097, 0 },
  { 12061, 4, 4, 2, 8097, 0 },
  { 12334, 4, 4, 2, 8097, 0 },
  { 12593, 4, 4, 2, 8097, 0 },
  { 12852, 4, 4, 2, 8097, 0 },
  { 13111, 4, 4, 2, 8097, 0 },
  { 13370, 4, 4, 2, 8097, 0 },
  { 13622, 4, 4, 2, 8097, 0 },
  { 13874, 4, 4, 2, 8097, 0 },
  { 11542, 4, 4, 2, 8097, 0 },
  { 11817, 4, 4, 2, 8097, 0 },
  { 12086, 4, 4, 2, 8097, 0 },
  { 12359, 4, 4, 2, 8097, 0 },
  { 12618, 4, 4, 2, 8097, 0 },
  { 12877, 4, 4, 2, 8097, 0 },
  { 13136, 4, 4, 2, 8097, 0 },
  { 13395, 4, 4, 2, 8097, 0 },
  { 13647, 4, 4, 2, 8097, 0 },
  { 13899, 4, 4, 2, 8097, 0 },
  { 11567, 4, 4, 2, 8097, 0 },
  { 11842, 4, 4, 2, 8097, 0 },
  { 12111, 4, 4, 2, 8097, 0 },
  { 12384, 4, 4, 2, 8097, 0 },
  { 12643, 4, 4, 2, 8097, 0 },
  { 12902, 4, 4, 2, 8097, 0 },
  { 13161, 4, 4, 2, 8097, 0 },
  { 13420, 4, 4, 2, 8097, 0 },
  { 13672, 4, 4, 2, 8097, 0 },
  { 13924, 4, 4, 2, 8097, 0 },
  { 11592, 4, 4, 2, 8097, 0 },
  { 11867, 4, 4, 2, 8097, 0 },
  { 12136, 4, 4, 2, 8097, 0 },
  { 12409, 4, 4, 2, 8097, 0 },
  { 12668, 4, 4, 2, 8097, 0 },
  { 12927, 4, 4, 2, 8097, 0 },
  { 13186, 4, 4, 2, 8097, 0 },
  { 13445, 4, 4, 2, 8097, 0 },
  { 13697, 4, 4, 2, 8097, 0 },
  { 13949, 4, 4, 2, 8097, 0 },
  { 11617, 4, 4, 2, 8097, 0 },
  { 11892, 4, 4, 2, 8097, 0 },
  { 12161, 4, 4, 2, 8097, 0 },
  { 12434, 4, 4, 2, 8097, 0 },
  { 12693, 4, 4, 2, 8097, 0 },
  { 12952, 4, 4, 2, 8097, 0 },
  { 13211, 4, 4, 2, 8097, 0 },
  { 13470, 4, 4, 2, 8097, 0 },
  { 13722, 4, 4, 2, 8097, 0 },
  { 13974, 4, 4, 2, 8097, 0 },
  { 11642, 4, 4, 2, 8097, 0 },
  { 11917, 4, 4, 2, 8097, 0 },
  { 12186, 4, 4, 2, 8097, 0 },
  { 12459, 4, 4, 2, 8097, 0 },
  { 12718, 4, 4, 2, 8097, 0 },
  { 12977, 4, 4, 2, 8097, 0 },
  { 13236, 4, 4, 2, 8097, 0 },
  { 13495, 4, 4, 2, 8097, 0 },
  { 13747, 4, 4, 2, 8097, 0 },
  { 13999, 4, 4, 2, 8097, 0 },
  { 11667, 4, 4, 2, 8097, 0 },
  { 11942, 4, 4, 2, 8097, 0 },
  { 12201, 4, 4, 2, 8097, 0 },
  { 12474, 4, 4, 2, 8097, 0 },
  { 12733, 4, 4, 2, 8097, 0 },
  { 12992, 4, 4, 2, 8097, 0 },
  { 13251, 4, 4, 2, 8097, 0 },
  { 13510, 4, 4, 2, 8097, 0 },
  { 13762, 4, 4, 2, 8097, 0 },
  { 14014, 4, 4, 2, 8097, 0 },
  { 11427, 4, 4, 2, 8097, 0 },
  { 11696, 4, 4, 2, 8097, 0 },
  { 11971, 4, 4, 2, 8097, 0 },
  { 12230, 4, 4, 2, 8097, 0 },
  { 12503, 4, 4, 2, 8097, 0 },
  { 12762, 4, 4, 2, 8097, 0 },
  { 13021, 4, 4, 2, 8097, 0 },
  { 13280, 4, 4, 2, 8097, 0 },
  { 13539, 4, 4, 2, 8097, 0 },
  { 13791, 4, 4, 2, 8097, 0 },
  { 11444, 4, 4, 2, 8097, 0 },
  { 11719, 4, 4, 2, 8097, 0 },
  { 11988, 4, 4, 2, 8097, 0 },
  { 12247, 4, 4, 2, 8097, 0 },
  { 12520, 4, 4, 2, 8097, 0 },
  { 12779, 4, 4, 2, 8097, 0 },
  { 13038, 4, 4, 2, 8097, 0 },
  { 13297, 4, 4, 2, 8097, 0 },
  { 13556, 4, 4, 2, 8097, 0 },
  { 13808, 4, 4, 2, 8097, 0 },
  { 11476, 4, 4, 2, 8097, 0 },
  { 11751, 4, 4, 2, 8097, 0 },
  { 12020, 4, 4, 2, 8097, 0 },
  { 12287, 4, 4, 2, 8097, 0 },
  { 12552, 4, 4, 2, 8097, 0 },
  { 12811, 4, 4, 2, 8097, 0 },
  { 13070, 4, 4, 2, 8097, 0 },
  { 13329, 4, 4, 2, 8097, 0 },
  { 2852, 4, 436, 2, 8097, 0 },
  { 3127, 4, 432, 2, 8097, 0 },
  { 3386, 4, 364, 2, 8097, 0 },
  { 3659, 4, 360, 2, 8097, 0 },
  { 3918, 4, 482, 2, 8097, 0 },
  { 4177, 4, 482, 2, 8097, 0 },
  { 4436, 4, 482, 2, 8097, 0 },
  { 4695, 4, 482, 2, 8097, 0 },
  { 4947, 4, 482, 2, 8097, 0 },
  { 5199, 4, 482, 2, 8097, 0 },
  { 2630, 4, 482, 2, 8097, 0 },
  { 2905, 4, 482, 2, 8097, 0 },
  { 3174, 4, 482, 2, 8097, 0 },
  { 3433, 4, 482, 2, 8097, 0 },
  { 3706, 4, 482, 2, 8097, 0 },
  { 3965, 4, 482, 2, 8097, 0 },
  { 4224, 4, 482, 2, 8097, 0 },
  { 4483, 4, 482, 2, 8097, 0 },
  { 4742, 4, 482, 2, 8097, 0 },
  { 4994, 4, 482, 2, 8097, 0 },
  { 2662, 4, 482, 2, 8097, 0 },
  { 2937, 4, 482, 2, 8097, 0 },
  { 3206, 4, 482, 2, 8097, 0 },
  { 3473, 4, 482, 2, 8097, 0 },
  { 3738, 4, 482, 2, 8097, 0 },
  { 3997, 4, 482, 2, 8097, 0 },
  { 4256, 4, 482, 2, 8097, 0 },
  { 4515, 4, 482, 2, 8097, 0 },
  { 4767, 4, 482, 2, 8097, 0 },
  { 5019, 4, 482, 2, 8097, 0 },
  { 2687, 4, 482, 2, 8097, 0 },
  { 2962, 4, 482, 2, 8097, 0 },
  { 3231, 4, 482, 2, 8097, 0 },
  { 3504, 4, 482, 2, 8097, 0 },
  { 3763, 4, 482, 2, 8097, 0 },
  { 4022, 4, 482, 2, 8097, 0 },
  { 4281, 4, 482, 2, 8097, 0 },
  { 4540, 4, 482, 2, 8097, 0 },
  { 4792, 4, 482, 2, 8097, 0 },
  { 5044, 4, 482, 2, 8097, 0 },
  { 2712, 4, 482, 2, 8097, 0 },
  { 2987, 4, 482, 2, 8097, 0 },
  { 3256, 4, 482, 2, 8097, 0 },
  { 3529, 4, 482, 2, 8097, 0 },
  { 3788, 4, 482, 2, 8097, 0 },
  { 4047, 4, 482, 2, 8097, 0 },
  { 4306, 4, 482, 2, 8097, 0 },
  { 4565, 4, 482, 2, 8097, 0 },
  { 4817, 4, 482, 2, 8097, 0 },
  { 5069, 4, 482, 2, 8097, 0 },
  { 2737, 4, 482, 2, 8097, 0 },
  { 3012, 4, 482, 2, 8097, 0 },
  { 3281, 4, 482, 2, 8097, 0 },
  { 3554, 4, 482, 2, 8097, 0 },
  { 3813, 4, 482, 2, 8097, 0 },
  { 4072, 4, 482, 2, 8097, 0 },
  { 4331, 4, 482, 2, 8097, 0 },
  { 4590, 4, 482, 2, 8097, 0 },
  { 4842, 4, 482, 2, 8097, 0 },
  { 5094, 4, 482, 2, 8097, 0 },
  { 2762, 4, 482, 2, 8097, 0 },
  { 3037, 4, 482, 2, 8097, 0 },
  { 3306, 4, 482, 2, 8097, 0 },
  { 3579, 4, 482, 2, 8097, 0 },
  { 3838, 4, 482, 2, 8097, 0 },
  { 4097, 4, 482, 2, 8097, 0 },
  { 4356, 4, 482, 2, 8097, 0 },
  { 4615, 4, 482, 2, 8097, 0 },
  { 4867, 4, 482, 2, 8097, 0 },
  { 5119, 4, 482, 2, 8097, 0 },
  { 2787, 4, 482, 2, 8097, 0 },
  { 3062, 4, 482, 2, 8097, 0 },
  { 3331, 4, 482, 2, 8097, 0 },
  { 3604, 4, 482, 2, 8097, 0 },
  { 3863, 4, 482, 2, 8097, 0 },
  { 4122, 4, 482, 2, 8097, 0 },
  { 4381, 4, 482, 2, 8097, 0 },
  { 4640, 4, 482, 2, 8097, 0 },
  { 4892, 4, 482, 2, 8097, 0 },
  { 5144, 4, 482, 2, 8097, 0 },
  { 2812, 4, 482, 2, 8097, 0 },
  { 3087, 4, 482, 2, 8097, 0 },
  { 3356, 4, 482, 2, 8097, 0 },
  { 3629, 4, 482, 2, 8097, 0 },
  { 3888, 4, 482, 2, 8097, 0 },
  { 4147, 4, 482, 2, 8097, 0 },
  { 4406, 4, 482, 2, 8097, 0 },
  { 4665, 4, 482, 2, 8097, 0 },
  { 4917, 4, 482, 2, 8097, 0 },
  { 5169, 4, 482, 2, 8097, 0 },
  { 2837, 4, 482, 2, 8097, 0 },
  { 3112, 4, 482, 2, 8097, 0 },
  { 3371, 4, 482, 2, 8097, 0 },
  { 3644, 4, 482, 2, 8097, 0 },
  { 3903, 4, 482, 2, 8097, 0 },
  { 4162, 4, 482, 2, 8097, 0 },
  { 4421, 4, 482, 2, 8097, 0 },
  { 4680, 4, 482, 2, 8097, 0 },
  { 4932, 4, 482, 2, 8097, 0 },
  { 5184, 4, 482, 2, 8097, 0 },
  { 2596, 4, 482, 2, 8097, 0 },
  { 2865, 4, 482, 2, 8097, 0 },
  { 3140, 4, 482, 2, 8097, 0 },
  { 3399, 4, 482, 2, 8097, 0 },
  { 3672, 4, 482, 2, 8097, 0 },
  { 3931, 4, 482, 2, 8097, 0 },
  { 4190, 4, 482, 2, 8097, 0 },
  { 4449, 4, 482, 2, 8097, 0 },
  { 4708, 4, 482, 2, 8097, 0 },
  { 4960, 4, 482, 2, 8097, 0 },
  { 2613, 4, 482, 2, 8097, 0 },
  { 2888, 4, 482, 2, 8097, 0 },
  { 3157, 4, 482, 2, 8097, 0 },
  { 3416, 4, 482, 2, 8097, 0 },
  { 3689, 4, 482, 2, 8097, 0 },
  { 3948, 4, 482, 2, 8097, 0 },
  { 4207, 4, 482, 2, 8097, 0 },
  { 4466, 4, 482, 2, 8097, 0 },
  { 4725, 4, 482, 2, 8097, 0 },
  { 4977, 4, 482, 2, 8097, 0 },
  { 2645, 4, 482, 2, 8097, 0 },
  { 2920, 4, 482, 2, 8097, 0 },
  { 3189, 4, 482, 2, 8097, 0 },
  { 3456, 4, 482, 2, 8097, 0 },
  { 3721, 4, 482, 2, 8097, 0 },
  { 3980, 4, 482, 2, 8097, 0 },
  { 4239, 4, 482, 2, 8097, 0 },
  { 4498, 4, 482, 2, 8097, 0 },
  { 5487, 4, 445, 2, 8097, 0 },
  { 5762, 4, 440, 2, 8097, 0 },
  { 6021, 4, 373, 2, 8097, 0 },
  { 6294, 4, 368, 2, 8097, 0 },
  { 6553, 4, 472, 2, 8097, 0 },
  { 6812, 4, 472, 2, 8097, 0 },
  { 7071, 4, 472, 2, 8097, 0 },
  { 7330, 4, 472, 2, 8097, 0 },
  { 7582, 4, 472, 2, 8097, 0 },
  { 7834, 4, 472, 2, 8097, 0 },
  { 5265, 4, 472, 2, 8097, 0 },
  { 5540, 4, 472, 2, 8097, 0 },
  { 5809, 4, 472, 2, 8097, 0 },
  { 6068, 4, 472, 2, 8097, 0 },
  { 6341, 4, 472, 2, 8097, 0 },
  { 6600, 4, 472, 2, 8097, 0 },
  { 6859, 4, 472, 2, 8097, 0 },
  { 7118, 4, 472, 2, 8097, 0 },
  { 7377, 4, 472, 2, 8097, 0 },
  { 7629, 4, 472, 2, 8097, 0 },
  { 5297, 4, 472, 2, 8097, 0 },
  { 5572, 4, 472, 2, 8097, 0 },
  { 5841, 4, 472, 2, 8097, 0 },
  { 6108, 4, 472, 2, 8097, 0 },
  { 6373, 4, 472, 2, 8097, 0 },
  { 6632, 4, 472, 2, 8097, 0 },
  { 6891, 4, 472, 2, 8097, 0 },
  { 7150, 4, 472, 2, 8097, 0 },
  { 7402, 4, 472, 2, 8097, 0 },
  { 7654, 4, 472, 2, 8097, 0 },
  { 5322, 4, 472, 2, 8097, 0 },
  { 5597, 4, 472, 2, 8097, 0 },
  { 5866, 4, 472, 2, 8097, 0 },
  { 6139, 4, 472, 2, 8097, 0 },
  { 6398, 4, 472, 2, 8097, 0 },
  { 6657, 4, 472, 2, 8097, 0 },
  { 6916, 4, 472, 2, 8097, 0 },
  { 7175, 4, 472, 2, 8097, 0 },
  { 7427, 4, 472, 2, 8097, 0 },
  { 7679, 4, 472, 2, 8097, 0 },
  { 5347, 4, 472, 2, 8097, 0 },
  { 5622, 4, 472, 2, 8097, 0 },
  { 5891, 4, 472, 2, 8097, 0 },
  { 6164, 4, 472, 2, 8097, 0 },
  { 6423, 4, 472, 2, 8097, 0 },
  { 6682, 4, 472, 2, 8097, 0 },
  { 6941, 4, 472, 2, 8097, 0 },
  { 7200, 4, 472, 2, 8097, 0 },
  { 7452, 4, 472, 2, 8097, 0 },
  { 7704, 4, 472, 2, 8097, 0 },
  { 5372, 4, 472, 2, 8097, 0 },
  { 5647, 4, 472, 2, 8097, 0 },
  { 5916, 4, 472, 2, 8097, 0 },
  { 6189, 4, 472, 2, 8097, 0 },
  { 6448, 4, 472, 2, 8097, 0 },
  { 6707, 4, 472, 2, 8097, 0 },
  { 6966, 4, 472, 2, 8097, 0 },
  { 7225, 4, 472, 2, 8097, 0 },
  { 7477, 4, 472, 2, 8097, 0 },
  { 7729, 4, 472, 2, 8097, 0 },
  { 5397, 4, 472, 2, 8097, 0 },
  { 5672, 4, 472, 2, 8097, 0 },
  { 5941, 4, 472, 2, 8097, 0 },
  { 6214, 4, 472, 2, 8097, 0 },
  { 6473, 4, 472, 2, 8097, 0 },
  { 6732, 4, 472, 2, 8097, 0 },
  { 6991, 4, 472, 2, 8097, 0 },
  { 7250, 4, 472, 2, 8097, 0 },
  { 7502, 4, 472, 2, 8097, 0 },
  { 7754, 4, 472, 2, 8097, 0 },
  { 5422, 4, 472, 2, 8097, 0 },
  { 5697, 4, 472, 2, 8097, 0 },
  { 5966, 4, 472, 2, 8097, 0 },
  { 6239, 4, 472, 2, 8097, 0 },
  { 6498, 4, 472, 2, 8097, 0 },
  { 6757, 4, 472, 2, 8097, 0 },
  { 7016, 4, 472, 2, 8097, 0 },
  { 7275, 4, 472, 2, 8097, 0 },
  { 7527, 4, 472, 2, 8097, 0 },
  { 7779, 4, 472, 2, 8097, 0 },
  { 5447, 4, 472, 2, 8097, 0 },
  { 5722, 4, 472, 2, 8097, 0 },
  { 5991, 4, 472, 2, 8097, 0 },
  { 6264, 4, 472, 2, 8097, 0 },
  { 6523, 4, 472, 2, 8097, 0 },
  { 6782, 4, 472, 2, 8097, 0 },
  { 7041, 4, 472, 2, 8097, 0 },
  { 7300, 4, 472, 2, 8097, 0 },
  { 7552, 4, 472, 2, 8097, 0 },
  { 7804, 4, 472, 2, 8097, 0 },
  { 5472, 4, 472, 2, 8097, 0 },
  { 5747, 4, 472, 2, 8097, 0 },
  { 6006, 4, 472, 2, 8097, 0 },
  { 6279, 4, 472, 2, 8097, 0 },
  { 6538, 4, 472, 2, 8097, 0 },
  { 6797, 4, 472, 2, 8097, 0 },
  { 7056, 4, 472, 2, 8097, 0 },
  { 7315, 4, 472, 2, 8097, 0 },
  { 7567, 4, 472, 2, 8097, 0 },
  { 7819, 4, 472, 2, 8097, 0 },
  { 5231, 4, 472, 2, 8097, 0 },
  { 5500, 4, 472, 2, 8097, 0 },
  { 5775, 4, 472, 2, 8097, 0 },
  { 6034, 4, 472, 2, 8097, 0 },
  { 6307, 4, 472, 2, 8097, 0 },
  { 6566, 4, 472, 2, 8097, 0 },
  { 6825, 4, 472, 2, 8097, 0 },
  { 7084, 4, 472, 2, 8097, 0 },
  { 7343, 4, 472, 2, 8097, 0 },
  { 7595, 4, 472, 2, 8097, 0 },
  { 5248, 4, 472, 2, 8097, 0 },
  { 5523, 4, 472, 2, 8097, 0 },
  { 5792, 4, 472, 2, 8097, 0 },
  { 6051, 4, 472, 2, 8097, 0 },
  { 6324, 4, 472, 2, 8097, 0 },
  { 6583, 4, 472, 2, 8097, 0 },
  { 6842, 4, 472, 2, 8097, 0 },
  { 7101, 4, 472, 2, 8097, 0 },
  { 7360, 4, 472, 2, 8097, 0 },
  { 7612, 4, 472, 2, 8097, 0 },
  { 5280, 4, 472, 2, 8097, 0 },
  { 5555, 4, 472, 2, 8097, 0 },
  { 5824, 4, 472, 2, 8097, 0 },
  { 6091, 4, 472, 2, 8097, 0 },
  { 6356, 4, 472, 2, 8097, 0 },
  { 6615, 4, 472, 2, 8097, 0 },
  { 6874, 4, 472, 2, 8097, 0 },
  { 7133, 4, 472, 2, 8097, 0 },
  { 7958, 481, 4, 0, 7649, 2 },
  { 8051, 481, 4, 0, 7649, 2 },
  { 8144, 481, 4, 0, 7649, 2 },
  { 8237, 481, 4, 0, 7649, 2 },
  { 8330, 481, 4, 0, 7649, 2 },
  { 8423, 481, 4, 0, 7649, 2 },
  { 8516, 481, 4, 0, 7649, 2 },
  { 8609, 481, 4, 0, 7649, 2 },
  { 8694, 481, 4, 0, 7649, 2 },
  { 8779, 481, 4, 0, 7649, 2 },
  { 7887, 481, 4, 0, 7649, 2 },
  { 7980, 481, 4, 0, 7649, 2 },
  { 8073, 481, 4, 0, 7649, 2 },
  { 8166, 481, 4, 0, 7649, 2 },
  { 8259, 481, 4, 0, 7649, 2 },
  { 8352, 481, 4, 0, 7649, 2 },
  { 8445, 481, 4, 0, 7649, 2 },
  { 8538, 481, 4, 0, 7649, 2 },
  { 8631, 481, 4, 0, 7649, 2 },
  { 8716, 481, 4, 0, 7649, 2 },
  { 7902, 481, 4, 0, 7649, 2 },
  { 7995, 481, 4, 0, 7649, 2 },
  { 8088, 481, 4, 0, 7649, 2 },
  { 8181, 481, 4, 0, 7649, 2 },
  { 8274, 481, 4, 0, 7649, 2 },
  { 8367, 481, 4, 0, 7649, 2 },
  { 8460, 481, 4, 0, 7649, 2 },
  { 8553, 481, 4, 0, 7649, 2 },
  { 8638, 481, 4, 0, 7649, 2 },
  { 8723, 481, 4, 0, 7649, 2 },
  { 7909, 481, 4, 0, 7649, 2 },
  { 8002, 481, 4, 0, 7649, 2 },
  { 8095, 481, 4, 0, 7649, 2 },
  { 8188, 481, 4, 0, 7649, 2 },
  { 8281, 481, 4, 0, 7649, 2 },
  { 8374, 481, 4, 0, 7649, 2 },
  { 8467, 481, 4, 0, 7649, 2 },
  { 8560, 481, 4, 0, 7649, 2 },
  { 8645, 481, 4, 0, 7649, 2 },
  { 8730, 481, 4, 0, 7649, 2 },
  { 7916, 481, 4, 0, 7649, 2 },
  { 8009, 481, 4, 0, 7649, 2 },
  { 8102, 481, 4, 0, 7649, 2 },
  { 8195, 481, 4, 0, 7649, 2 },
  { 8288, 481, 4, 0, 7649, 2 },
  { 8381, 481, 4, 0, 7649, 2 },
  { 8474, 481, 4, 0, 7649, 2 },
  { 8567, 481, 4, 0, 7649, 2 },
  { 8652, 481, 4, 0, 7649, 2 },
  { 8737, 481, 4, 0, 7649, 2 },
  { 7923, 481, 4, 0, 7649, 2 },
  { 8016, 481, 4, 0, 7649, 2 },
  { 8109, 481, 4, 0, 7649, 2 },
  { 8202, 481, 4, 0, 7649, 2 },
  { 8295, 481, 4, 0, 7649, 2 },
  { 8388, 481, 4, 0, 7649, 2 },
  { 8481, 481, 4, 0, 7649, 2 },
  { 8574, 481, 4, 0, 7649, 2 },
  { 8659, 481, 4, 0, 7649, 2 },
  { 8744, 481, 4, 0, 7649, 2 },
  { 7930, 481, 4, 0, 7649, 2 },
  { 8023, 481, 4, 0, 7649, 2 },
  { 8116, 481, 4, 0, 7649, 2 },
  { 8209, 481, 4, 0, 7649, 2 },
  { 8302, 481, 4, 0, 7649, 2 },
  { 8395, 481, 4, 0, 7649, 2 },
  { 8488, 481, 4, 0, 7649, 2 },
  { 8581, 481, 4, 0, 7649, 2 },
  { 8666, 481, 4, 0, 7649, 2 },
  { 8751, 481, 4, 0, 7649, 2 },
  { 7937, 481, 4, 0, 7649, 2 },
  { 8030, 481, 4, 0, 7649, 2 },
  { 8123, 481, 4, 0, 7649, 2 },
  { 8216, 481, 4, 0, 7649, 2 },
  { 8309, 481, 4, 0, 7649, 2 },
  { 8402, 481, 4, 0, 7649, 2 },
  { 8495, 481, 4, 0, 7649, 2 },
  { 8588, 481, 4, 0, 7649, 2 },
  { 8673, 481, 4, 0, 7649, 2 },
  { 8758, 481, 4, 0, 7649, 2 },
  { 7944, 481, 4, 0, 7649, 2 },
  { 8037, 481, 4, 0, 7649, 2 },
  { 8130, 481, 4, 0, 7649, 2 },
  { 8223, 481, 4, 0, 7649, 2 },
  { 8316, 481, 4, 0, 7649, 2 },
  { 8409, 481, 4, 0, 7649, 2 },
  { 8502, 481, 4, 0, 7649, 2 },
  { 8595, 481, 4, 0, 7649, 2 },
  { 8680, 481, 4, 0, 7649, 2 },
  { 8765, 481, 4, 0, 7649, 2 },
  { 7951, 481, 4, 0, 7649, 2 },
  { 8044, 481, 4, 0, 7649, 2 },
  { 8137, 481, 4, 0, 7649, 2 },
  { 8230, 481, 4, 0, 7649, 2 },
  { 8323, 481, 4, 0, 7649, 2 },
  { 8416, 481, 4, 0, 7649, 2 },
  { 8509, 481, 4, 0, 7649, 2 },
  { 8602, 481, 4, 0, 7649, 2 },
  { 8687, 481, 4, 0, 7649, 2 },
  { 8772, 481, 4, 0, 7649, 2 },
  { 7871, 481, 4, 0, 7649, 2 },
  { 7964, 481, 4, 0, 7649, 2 },
  { 8057, 481, 4, 0, 7649, 2 },
  { 8150, 481, 4, 0, 7649, 2 },
  { 8243, 481, 4, 0, 7649, 2 },
  { 8336, 481, 4, 0, 7649, 2 },
  { 8429, 481, 4, 0, 7649, 2 },
  { 8522, 481, 4, 0, 7649, 2 },
  { 8615, 481, 4, 0, 7649, 2 },
  { 8700, 481, 4, 0, 7649, 2 },
  { 7879, 481, 4, 0, 7649, 2 },
  { 7972, 481, 4, 0, 7649, 2 },
  { 8065, 481, 4, 0, 7649, 2 },
  { 8158, 481, 4, 0, 7649, 2 },
  { 8251, 481, 4, 0, 7649, 2 },
  { 8344, 481, 4, 0, 7649, 2 },
  { 8437, 481, 4, 0, 7649, 2 },
  { 8530, 481, 4, 0, 7649, 2 },
  { 8623, 481, 4, 0, 7649, 2 },
  { 8708, 481, 4, 0, 7649, 2 },
  { 7894, 481, 4, 0, 7649, 2 },
  { 7987, 481, 4, 0, 7649, 2 },
  { 8080, 481, 4, 0, 7649, 2 },
  { 8173, 481, 4, 0, 7649, 2 },
  { 8266, 481, 4, 0, 7649, 2 },
  { 8359, 481, 4, 0, 7649, 2 },
  { 8452, 481, 4, 0, 7649, 2 },
  { 8545, 481, 4, 0, 7649, 2 },
  { 796, 488, 4, 3, 7521, 5 },
  { 1006, 488, 4, 3, 7521, 5 },
  { 1203, 488, 4, 3, 7521, 5 },
  { 1400, 488, 4, 3, 7521, 5 },
  { 1597, 488, 4, 3, 7521, 5 },
  { 1794, 488, 4, 3, 7521, 5 },
  { 1991, 488, 4, 3, 7521, 5 },
  { 2188, 488, 4, 3, 7521, 5 },
  { 2388, 488, 4, 3, 7521, 5 },
  { 2588, 488, 4, 3, 7521, 5 },
  { 614, 488, 4, 3, 7521, 5 },
  { 824, 488, 4, 3, 7521, 5 },
  { 1034, 488, 4, 3, 7521, 5 },
  { 1231, 488, 4, 3, 7521, 5 },
  { 1428, 488, 4, 3, 7521, 5 },
  { 1625, 488, 4, 3, 7521, 5 },
  { 1822, 488, 4, 3, 7521, 5 },
  { 2019, 488, 4, 3, 7521, 5 },
  { 2216, 488, 4, 3, 7521, 5 },
  { 2416, 488, 4, 3, 7521, 5 },
  { 633, 488, 4, 3, 7521, 5 },
  { 843, 488, 4, 3, 7521, 5 },
  { 1053, 488, 4, 3, 7521, 5 },
  { 1250, 488, 4, 3, 7521, 5 },
  { 1447, 488, 4, 3, 7521, 5 },
  { 1644, 488, 4, 3, 7521, 5 },
  { 1841, 488, 4, 3, 7521, 5 },
  { 2038, 488, 4, 3, 7521, 5 },
  { 2238, 488, 4, 3, 7521, 5 },
  { 2438, 488, 4, 3, 7521, 5 },
  { 655, 488, 4, 3, 7521, 5 },
  { 865, 488, 4, 3, 7521, 5 },
  { 1075, 488, 4, 3, 7521, 5 },
  { 1272, 488, 4, 3, 7521, 5 },
  { 1469, 488, 4, 3, 7521, 5 },
  { 1666, 488, 4, 3, 7521, 5 },
  { 1863, 488, 4, 3, 7521, 5 },
  { 2060, 488, 4, 3, 7521, 5 },
  { 2260, 488, 4, 3, 7521, 5 },
  { 2460, 488, 4, 3, 7521, 5 },
  { 677, 488, 4, 3, 7521, 5 },
  { 887, 488, 4, 3, 7521, 5 },
  { 1097, 488, 4, 3, 7521, 5 },
  { 1294, 488, 4, 3, 7521, 5 },
  { 1491, 488, 4, 3, 7521, 5 },
  { 1688, 488, 4, 3, 7521, 5 },
  { 1885, 488, 4, 3, 7521, 5 },
  { 2082, 488, 4, 3, 7521, 5 },
  { 2282, 488, 4, 3, 7521, 5 },
  { 2482, 488, 4, 3, 7521, 5 },
  { 699, 488, 4, 3, 7521, 5 },
  { 909, 488, 4, 3, 7521, 5 },
  { 1119, 488, 4, 3, 7521, 5 },
  { 1316, 488, 4, 3, 7521, 5 },
  { 1513, 488, 4, 3, 7521, 5 },
  { 1710, 488, 4, 3, 7521, 5 },
  { 1907, 488, 4, 3, 7521, 5 },
  { 2104, 488, 4, 3, 7521, 5 },
  { 2304, 488, 4, 3, 7521, 5 },
  { 2504, 488, 4, 3, 7521, 5 },
  { 721, 488, 4, 3, 7521, 5 },
  { 931, 488, 4, 3, 7521, 5 },
  { 1141, 488, 4, 3, 7521, 5 },
  { 1338, 488, 4, 3, 7521, 5 },
  { 1535, 488, 4, 3, 7521, 5 },
  { 1732, 488, 4, 3, 7521, 5 },
  { 1929, 488, 4, 3, 7521, 5 },
  { 2126, 488, 4, 3, 7521, 5 },
  { 2326, 488, 4, 3, 7521, 5 },
  { 2526, 488, 4, 3, 7521, 5 },
  { 743, 488, 4, 3, 7521, 5 },
  { 953, 488, 4, 3, 7521, 5 },
  { 1163, 488, 4, 3, 7521, 5 },
  { 1360, 488, 4, 3, 7521, 5 },
  { 1557, 488, 4, 3, 7521, 5 },
  { 1754, 488, 4, 3, 7521, 5 },
  { 1951, 488, 4, 3, 7521, 5 },
  { 2148, 488, 4, 3, 7521, 5 },
  { 2348, 488, 4, 3, 7521, 5 },
  { 2548, 488, 4, 3, 7521, 5 },
  { 765, 488, 4, 3, 7521, 5 },
  { 975, 488, 4, 3, 7521, 5 },
  { 1185, 488, 4, 3, 7521, 5 },
  { 1382, 488, 4, 3, 7521, 5 },
  { 1579, 488, 4, 3, 7521, 5 },
  { 1776, 488, 4, 3, 7521, 5 },
  { 1973, 488, 4, 3, 7521, 5 },
  { 2170, 488, 4, 3, 7521, 5 },
  { 2370, 488, 4, 3, 7521, 5 },
  { 2570, 488, 4, 3, 7521, 5 },
  { 787, 488, 4, 3, 7521, 5 },
  { 997, 488, 4, 3, 7521, 5 },
  { 1194, 488, 4, 3, 7521, 5 },
  { 1391, 488, 4, 3, 7521, 5 },
  { 1588, 488, 4, 3, 7521, 5 },
  { 1785, 488, 4, 3, 7521, 5 },
  { 1982, 488, 4, 3, 7521, 5 },
  { 2179, 488, 4, 3, 7521, 5 },
  { 2379, 488, 4, 3, 7521, 5 },
  { 2579, 488, 4, 3, 7521, 5 },
  { 594, 488, 4, 3, 7521, 5 },
  { 804, 488, 4, 3, 7521, 5 },
  { 1014, 488, 4, 3, 7521, 5 },
  { 1211, 488, 4, 3, 7521, 5 },
  { 1408, 488, 4, 3, 7521, 5 },
  { 1605, 488, 4, 3, 7521, 5 },
  { 1802, 488, 4, 3, 7521, 5 },
  { 1999, 488, 4, 3, 7521, 5 },
  { 2196, 488, 4, 3, 7521, 5 },
  { 2396, 488, 4, 3, 7521, 5 },
  { 604, 488, 4, 3, 7521, 5 },
  { 814, 488, 4, 3, 7521, 5 },
  { 1024, 488, 4, 3, 7521, 5 },
  { 1221, 488, 4, 3, 7521, 5 },
  { 1418, 488, 4, 3, 7521, 5 },
  { 1615, 488, 4, 3, 7521, 5 },
  { 1812, 488, 4, 3, 7521, 5 },
  { 2009, 488, 4, 3, 7521, 5 },
  { 2206, 488, 4, 3, 7521, 5 },
  { 2406, 488, 4, 3, 7521, 5 },
  { 623, 488, 4, 3, 7521, 5 },
  { 833, 488, 4, 3, 7521, 5 },
  { 1043, 488, 4, 3, 7521, 5 },
  { 1240, 488, 4, 3, 7521, 5 },
  { 1437, 488, 4, 3, 7521, 5 },
  { 1634, 488, 4, 3, 7521, 5 },
  { 1831, 488, 4, 3, 7521, 5 },
  { 2028, 488, 4, 3, 7521, 5 },
  { 9041, 4, 455, 2, 7921, 0 },
  { 9316, 4, 450, 2, 7921, 0 },
  { 9575, 4, 383, 2, 7921, 0 },
  { 9848, 4, 378, 2, 7921, 0 },
  { 10107, 4, 475, 2, 7921, 0 },
  { 10366, 4, 475, 2, 7921, 0 },
  { 10625, 4, 475, 2, 7921, 0 },
  { 10884, 4, 475, 2, 7921, 0 },
  { 11136, 4, 475, 2, 7921, 0 },
  { 11388, 4, 475, 2, 7921, 0 },
  { 8819, 4, 475, 2, 7921, 0 },
  { 9094, 4, 475, 2, 7921, 0 },
  { 9363, 4, 475, 2, 7921, 0 },
  { 9622, 4, 475, 2, 7921, 0 },
  { 9895, 4, 475, 2, 7921, 0 },
  { 10154, 4, 475, 2, 7921, 0 },
  { 10413, 4, 475, 2, 7921, 0 },
  { 10672, 4, 475, 2, 7921, 0 },
  { 10931, 4, 475, 2, 7921, 0 },
  { 11183, 4, 475, 2, 7921, 0 },
  { 8851, 4, 475, 2, 7921, 0 },
  { 9126, 4, 475, 2, 7921, 0 },
  { 9395, 4, 475, 2, 7921, 0 },
  { 9662, 4, 475, 2, 7921, 0 },
  { 9927, 4, 475, 2, 7921, 0 },
  { 10186, 4, 475, 2, 7921, 0 },
  { 10445, 4, 475, 2, 7921, 0 },
  { 10704, 4, 475, 2, 7921, 0 },
  { 10956, 4, 475, 2, 7921, 0 },
  { 11208, 4, 475, 2, 7921, 0 },
  { 8876, 4, 475, 2, 7921, 0 },
  { 9151, 4, 475, 2, 7921, 0 },
  { 9420, 4, 475, 2, 7921, 0 },
  { 9693, 4, 475, 2, 7921, 0 },
  { 9952, 4, 475, 2, 7921, 0 },
  { 10211, 4, 475, 2, 7921, 0 },
  { 10470, 4, 475, 2, 7921, 0 },
  { 10729, 4, 475, 2, 7921, 0 },
  { 10981, 4, 475, 2, 7921, 0 },
  { 11233, 4, 475, 2, 7921, 0 },
  { 8901, 4, 475, 2, 7921, 0 },
  { 9176, 4, 475, 2, 7921, 0 },
  { 9445, 4, 475, 2, 7921, 0 },
  { 9718, 4, 475, 2, 7921, 0 },
  { 9977, 4, 475, 2, 7921, 0 },
  { 10236, 4, 475, 2, 7921, 0 },
  { 10495, 4, 475, 2, 7921, 0 },
  { 10754, 4, 475, 2, 7921, 0 },
  { 11006, 4, 475, 2, 7921, 0 },
  { 11258, 4, 475, 2, 7921, 0 },
  { 8926, 4, 475, 2, 7921, 0 },
  { 9201, 4, 475, 2, 7921, 0 },
  { 9470, 4, 475, 2, 7921, 0 },
  { 9743, 4, 475, 2, 7921, 0 },
  { 10002, 4, 475, 2, 7921, 0 },
  { 10261, 4, 475, 2, 7921, 0 },
  { 10520, 4, 475, 2, 7921, 0 },
  { 10779, 4, 475, 2, 7921, 0 },
  { 11031, 4, 475, 2, 7921, 0 },
  { 11283, 4, 475, 2, 7921, 0 },
  { 8951, 4, 475, 2, 7921, 0 },
  { 9226, 4, 475, 2, 7921, 0 },
  { 9495, 4, 475, 2, 7921, 0 },
  { 9768, 4, 475, 2, 7921, 0 },
  { 10027, 4, 475, 2, 7921, 0 },
  { 10286, 4, 475, 2, 7921, 0 },
  { 10545, 4, 475, 2, 7921, 0 },
  { 10804, 4, 475, 2, 7921, 0 },
  { 11056, 4, 475, 2, 7921, 0 },
  { 11308, 4, 475, 2, 7921, 0 },
  { 8976, 4, 475, 2, 7921, 0 },
  { 9251, 4, 475, 2, 7921, 0 },
  { 9520, 4, 475, 2, 7921, 0 },
  { 9793, 4, 475, 2, 7921, 0 },
  { 10052, 4, 475, 2, 7921, 0 },
  { 10311, 4, 475, 2, 7921, 0 },
  { 10570, 4, 475, 2, 7921, 0 },
  { 10829, 4, 475, 2, 7921, 0 },
  { 11081, 4, 475, 2, 7921, 0 },
  { 11333, 4, 475, 2, 7921, 0 },
  { 9001, 4, 475, 2, 7921, 0 },
  { 9276, 4, 475, 2, 7921, 0 },
  { 9545, 4, 475, 2, 7921, 0 },
  { 9818, 4, 475, 2, 7921, 0 },
  { 10077, 4, 475, 2, 7921, 0 },
  { 10336, 4, 475, 2, 7921, 0 },
  { 10595, 4, 475, 2, 7921, 0 },
  { 10854, 4, 475, 2, 7921, 0 },
  { 11106, 4, 475, 2, 7921, 0 },
  { 11358, 4, 475, 2, 7921, 0 },
  { 9026, 4, 475, 2, 7921, 0 },
  { 9301, 4, 475, 2, 7921, 0 },
  { 9560, 4, 475, 2, 7921, 0 },
  { 9833, 4, 475, 2, 7921, 0 },
  { 10092, 4, 475, 2, 7921, 0 },
  { 10351, 4, 475, 2, 7921, 0 },
  { 10610, 4, 475, 2, 7921, 0 },
  { 10869, 4, 475, 2, 7921, 0 },
  { 11121, 4, 475, 2, 7921, 0 },
  { 11373, 4, 475, 2, 7921, 0 },
  { 8785, 4, 475, 2, 7921, 0 },
  { 9054, 4, 475, 2, 7921, 0 },
  { 9329, 4, 475, 2, 7921, 0 },
  { 9588, 4, 475, 2, 7921, 0 },
  { 9861, 4, 475, 2, 7921, 0 },
  { 10120, 4, 475, 2, 7921, 0 },
  { 10379, 4, 475, 2, 7921, 0 },
  { 10638, 4, 475, 2, 7921, 0 },
  { 10897, 4, 475, 2, 7921, 0 },
  { 11149, 4, 475, 2, 7921, 0 },
  { 8802, 4, 475, 2, 7921, 0 },
  { 9077, 4, 475, 2, 7921, 0 },
  { 9346, 4, 475, 2, 7921, 0 },
  { 9605, 4, 475, 2, 7921, 0 },
  { 9878, 4, 475, 2, 7921, 0 },
  { 10137, 4, 475, 2, 7921, 0 },
  { 10396, 4, 475, 2, 7921, 0 },
  { 10655, 4, 475, 2, 7921, 0 },
  { 10914, 4, 475, 2, 7921, 0 },
  { 11166, 4, 475, 2, 7921, 0 },
  { 8834, 4, 475, 2, 7921, 0 },
  { 9109, 4, 475, 2, 7921, 0 },
  { 9378, 4, 475, 2, 7921, 0 },
  { 9645, 4, 475, 2, 7921, 0 },
  { 9910, 4, 475, 2, 7921, 0 },
  { 10169, 4, 475, 2, 7921, 0 },
  { 10428, 4, 475, 2, 7921, 0 },
  { 10687, 4, 475, 2, 7921, 0 },
  { 11676, 4, 464, 2, 7921, 0 },
  { 11951, 4, 460, 2, 7921, 0 },
  { 12210, 4, 392, 2, 7921, 0 },
  { 12483, 4, 388, 2, 7921, 0 },
  { 12742, 4, 500, 2, 7921, 0 },
  { 13001, 4, 500, 2, 7921, 0 },
  { 13260, 4, 500, 2, 7921, 0 },
  { 13519, 4, 500, 2, 7921, 0 },
  { 13771, 4, 500, 2, 7921, 0 },
  { 14023, 4, 500, 2, 7921, 0 },
  { 11454, 4, 500, 2, 7921, 0 },
  { 11729, 4, 500, 2, 7921, 0 },
  { 11998, 4, 500, 2, 7921, 0 },
  { 12257, 4, 500, 2, 7921, 0 },
  { 12530, 4, 500, 2, 7921, 0 },
  { 12789, 4, 500, 2, 7921, 0 },
  { 13048, 4, 500, 2, 7921, 0 },
  { 13307, 4, 500, 2, 7921, 0 },
  { 13566, 4, 500, 2, 7921, 0 },
  { 13818, 4, 500, 2, 7921, 0 },
  { 11486, 4, 500, 2, 7921, 0 },
  { 11761, 4, 500, 2, 7921, 0 },
  { 12030, 4, 500, 2, 7921, 0 },
  { 12297, 4, 500, 2, 7921, 0 },
  { 12562, 4, 500, 2, 7921, 0 },
  { 12821, 4, 500, 2, 7921, 0 },
  { 13080, 4, 500, 2, 7921, 0 },
  { 13339, 4, 500, 2, 7921, 0 },
  { 13591, 4, 500, 2, 7921, 0 },
  { 13843, 4, 500, 2, 7921, 0 },
  { 11511, 4, 500, 2, 7921, 0 },
  { 11786, 4, 500, 2, 7921, 0 },
  { 12055, 4, 500, 2, 7921, 0 },
  { 12328, 4, 500, 2, 7921, 0 },
  { 12587, 4, 500, 2, 7921, 0 },
  { 12846, 4, 500, 2, 7921, 0 },
  { 13105, 4, 500, 2, 7921, 0 },
  { 13364, 4, 500, 2, 7921, 0 },
  { 13616, 4, 500, 2, 7921, 0 },
  { 13868, 4, 500, 2, 7921, 0 },
  { 11536, 4, 500, 2, 7921, 0 },
  { 11811, 4, 500, 2, 7921, 0 },
  { 12080, 4, 500, 2, 7921, 0 },
  { 12353, 4, 500, 2, 7921, 0 },
  { 12612, 4, 500, 2, 7921, 0 },
  { 12871, 4, 500, 2, 7921, 0 },
  { 13130, 4, 500, 2, 7921, 0 },
  { 13389, 4, 500, 2, 7921, 0 },
  { 13641, 4, 500, 2, 7921, 0 },
  { 13893, 4, 500, 2, 7921, 0 },
  { 11561, 4, 500, 2, 7921, 0 },
  { 11836, 4, 500, 2, 7921, 0 },
  { 12105, 4, 500, 2, 7921, 0 },
  { 12378, 4, 500, 2, 7921, 0 },
  { 12637, 4, 500, 2, 7921, 0 },
  { 12896, 4, 500, 2, 7921, 0 },
  { 13155, 4, 500, 2, 7921, 0 },
  { 13414, 4, 500, 2, 7921, 0 },
  { 13666, 4, 500, 2, 7921, 0 },
  { 13918, 4, 500, 2, 7921, 0 },
  { 11586, 4, 500, 2, 7921, 0 },
  { 11861, 4, 500, 2, 7921, 0 },
  { 12130, 4, 500, 2, 7921, 0 },
  { 12403, 4, 500, 2, 7921, 0 },
  { 12662, 4, 500, 2, 7921, 0 },
  { 12921, 4, 500, 2, 7921, 0 },
  { 13180, 4, 500, 2, 7921, 0 },
  { 13439, 4, 500, 2, 7921, 0 },
  { 13691, 4, 500, 2, 7921, 0 },
  { 13943, 4, 500, 2, 7921, 0 },
  { 11611, 4, 500, 2, 7921, 0 },
  { 11886, 4, 500, 2, 7921, 0 },
  { 12155, 4, 500, 2, 7921, 0 },
  { 12428, 4, 500, 2, 7921, 0 },
  { 12687, 4, 500, 2, 7921, 0 },
  { 12946, 4, 500, 2, 7921, 0 },
  { 13205, 4, 500, 2, 7921, 0 },
  { 13464, 4, 500, 2, 7921, 0 },
  { 13716, 4, 500, 2, 7921, 0 },
  { 13968, 4, 500, 2, 7921, 0 },
  { 11636, 4, 500, 2, 7921, 0 },
  { 11911, 4, 500, 2, 7921, 0 },
  { 12180, 4, 500, 2, 7921, 0 },
  { 12453, 4, 500, 2, 7921, 0 },
  { 12712, 4, 500, 2, 7921, 0 },
  { 12971, 4, 500, 2, 7921, 0 },
  { 13230, 4, 500, 2, 7921, 0 },
  { 13489, 4, 500, 2, 7921, 0 },
  { 13741, 4, 500, 2, 7921, 0 },
  { 13993, 4, 500, 2, 7921, 0 },
  { 11661, 4, 500, 2, 7921, 0 },
  { 11936, 4, 500, 2, 7921, 0 },
  { 12195, 4, 500, 2, 7921, 0 },
  { 12468, 4, 500, 2, 7921, 0 },
  { 12727, 4, 500, 2, 7921, 0 },
  { 12986, 4, 500, 2, 7921, 0 },
  { 13245, 4, 500, 2, 7921, 0 },
  { 13504, 4, 500, 2, 7921, 0 },
  { 13756, 4, 500, 2, 7921, 0 },
  { 14008, 4, 500, 2, 7921, 0 },
  { 11420, 4, 500, 2, 7921, 0 },
  { 11689, 4, 500, 2, 7921, 0 },
  { 11964, 4, 500, 2, 7921, 0 },
  { 12223, 4, 500, 2, 7921, 0 },
  { 12496, 4, 500, 2, 7921, 0 },
  { 12755, 4, 500, 2, 7921, 0 },
  { 13014, 4, 500, 2, 7921, 0 },
  { 13273, 4, 500, 2, 7921, 0 },
  { 13532, 4, 500, 2, 7921, 0 },
  { 13784, 4, 500, 2, 7921, 0 },
  { 11437, 4, 500, 2, 7921, 0 },
  { 11712, 4, 500, 2, 7921, 0 },
  { 11981, 4, 500, 2, 7921, 0 },
  { 12240, 4, 500, 2, 7921, 0 },
  { 12513, 4, 500, 2, 7921, 0 },
  { 12772, 4, 500, 2, 7921, 0 },
  { 13031, 4, 500, 2, 7921, 0 },
  { 13290, 4, 500, 2, 7921, 0 },
  { 13549, 4, 500, 2, 7921, 0 },
  { 13801, 4, 500, 2, 7921, 0 },
  { 11469, 4, 500, 2, 7921, 0 },
  { 11744, 4, 500, 2, 7921, 0 },
  { 12013, 4, 500, 2, 7921, 0 },
  { 12280, 4, 500, 2, 7921, 0 },
  { 12545, 4, 500, 2, 7921, 0 },
  { 12804, 4, 500, 2, 7921, 0 },
  { 13063, 4, 500, 2, 7921, 0 },
  { 13322, 4, 500, 2, 7921, 0 },
  { 2882, 408, 4, 0, 6338, 2 },
  { 3479, 411, 4, 0, 6338, 2 },
  { 3448, 20, 4, 3, 0, 10 },
  { 5517, 414, 4, 0, 6386, 2 },
  { 6114, 417, 4, 0, 6386, 2 },
  { 6083, 25, 4, 3, 80, 10 },
  { 9071, 420, 4, 0, 6434, 2 },
  { 9668, 423, 4, 0, 6434, 2 },
  { 9637, 30, 4, 3, 160, 10 },
  { 11706, 426, 4, 0, 6482, 2 },
  { 12303, 429, 4, 0, 6482, 2 },
  { 12272, 35, 4, 3, 240, 10 },
  { 4757, 4, 473, 2, 7889, 0 },
  { 5009, 4, 473, 2, 7889, 0 },
  { 2677, 4, 473, 2, 7889, 0 },
  { 2952, 4, 473, 2, 7889, 0 },
  { 3221, 4, 473, 2, 7889, 0 },
  { 3494, 4, 473, 2, 7889, 0 },
  { 3753, 4, 473, 2, 7889, 0 },
  { 4012, 4, 473, 2, 7889, 0 },
  { 4271, 4, 473, 2, 7889, 0 },
  { 4530, 4, 473, 2, 7889, 0 },
  { 4782, 4, 473, 2, 7889, 0 },
  { 5034, 4, 473, 2, 7889, 0 },
  { 2702, 4, 473, 2, 7889, 0 },
  { 2977, 4, 473, 2, 7889, 0 },
  { 3246, 4, 473, 2, 7889, 0 },
  { 3519, 4, 473, 2, 7889, 0 },
  { 3778, 4, 473, 2, 7889, 0 },
  { 4037, 4, 473, 2, 7889, 0 },
  { 4296, 4, 473, 2, 7889, 0 },
  { 4555, 4, 473, 2, 7889, 0 },
  { 4807, 4, 473, 2, 7889, 0 },
  { 5059, 4, 473, 2, 7889, 0 },
  { 2727, 4, 473, 2, 7889, 0 },
  { 3002, 4, 473, 2, 7889, 0 },
  { 3271, 4, 473, 2, 7889, 0 },
  { 3544, 4, 473, 2, 7889, 0 },
  { 3803, 4, 473, 2, 7889, 0 },
  { 4062, 4, 473, 2, 7889, 0 },
  { 4321, 4, 473, 2, 7889, 0 },
  { 4580, 4, 473, 2, 7889, 0 },
  { 4832, 4, 473, 2, 7889, 0 },
  { 5084, 4, 473, 2, 7889, 0 },
  { 2752, 4, 473, 2, 7889, 0 },
  { 3027, 4, 473, 2, 7889, 0 },
  { 3296, 4, 473, 2, 7889, 0 },
  { 3569, 4, 473, 2, 7889, 0 },
  { 3828, 4, 473, 2, 7889, 0 },
  { 4087, 4, 473, 2, 7889, 0 },
  { 4346, 4, 473, 2, 7889, 0 },
  { 4605, 4, 473, 2, 7889, 0 },
  { 4857, 4, 473, 2, 7889, 0 },
  { 5109, 4, 473, 2, 7889, 0 },
  { 2777, 4, 473, 2, 7889, 0 },
  { 3052, 4, 473, 2, 7889, 0 },
  { 3321, 4, 473, 2, 7889, 0 },
  { 3594, 4, 473, 2, 7889, 0 },
  { 3853, 4, 473, 2, 7889, 0 },
  { 4112, 4, 473, 2, 7889, 0 },
  { 4371, 4, 473, 2, 7889, 0 },
  { 4630, 4, 473, 2, 7889, 0 },
  { 4882, 4, 473, 2, 7889, 0 },
  { 5134, 4, 473, 2, 7889, 0 },
  { 2802, 4, 473, 2, 7889, 0 },
  { 3077, 4, 473, 2, 7889, 0 },
  { 3346, 4, 473, 2, 7889, 0 },
  { 3619, 4, 473, 2, 7889, 0 },
  { 3878, 4, 473, 2, 7889, 0 },
  { 4137, 4, 473, 2, 7889, 0 },
  { 4396, 4, 473, 2, 7889, 0 },
  { 4655, 4, 473, 2, 7889, 0 },
  { 4907, 4, 473, 2, 7889, 0 },
  { 5159, 4, 473, 2, 7889, 0 },
  { 2827, 4, 473, 2, 7889, 0 },
  { 3102, 4, 473, 2, 7889, 0 },
  { 7392, 4, 468, 2, 7889, 0 },
  { 7644, 4, 468, 2, 7889, 0 },
  { 5312, 4, 468, 2, 7889, 0 },
  { 5587, 4, 468, 2, 7889, 0 },
  { 5856, 4, 468, 2, 7889, 0 },
  { 6129, 4, 468, 2, 7889, 0 },
  { 6388, 4, 468, 2, 7889, 0 },
  { 6647, 4, 468, 2, 7889, 0 },
  { 6906, 4, 468, 2, 7889, 0 },
  { 7165, 4, 468, 2, 7889, 0 },
  { 7417, 4, 468, 2, 7889, 0 },
  { 7669, 4, 468, 2, 7889, 0 },
  { 5337, 4, 468, 2, 7889, 0 },
  { 5612, 4, 468, 2, 7889, 0 },
  { 5881, 4, 468, 2, 7889, 0 },
  { 6154, 4, 468, 2, 7889, 0 },
  { 6413, 4, 468, 2, 7889, 0 },
  { 6672, 4, 468, 2, 7889, 0 },
  { 6931, 4, 468, 2, 7889, 0 },
  { 7190, 4, 468, 2, 7889, 0 },
  { 7442, 4, 468, 2, 7889, 0 },
  { 7694, 4, 468, 2, 7889, 0 },
  { 5362, 4, 468, 2, 7889, 0 },
  { 5637, 4, 468, 2, 7889, 0 },
  { 5906, 4, 468, 2, 7889, 0 },
  { 6179, 4, 468, 2, 7889, 0 },
  { 6438, 4, 468, 2, 7889, 0 },
  { 6697, 4, 468, 2, 7889, 0 },
  { 6956, 4, 468, 2, 7889, 0 },
  { 7215, 4, 468, 2, 7889, 0 },
  { 7467, 4, 468, 2, 7889, 0 },
  { 7719, 4, 468, 2, 7889, 0 },
  { 5387, 4, 468, 2, 7889, 0 },
  { 5662, 4, 468, 2, 7889, 0 },
  { 5931, 4, 468, 2, 7889, 0 },
  { 6204, 4, 468, 2, 7889, 0 },
  { 6463, 4, 468, 2, 7889, 0 },
  { 6722, 4, 468, 2, 7889, 0 },
  { 6981, 4, 468, 2, 7889, 0 },
  { 7240, 4, 468, 2, 7889, 0 },
  { 7492, 4, 468, 2, 7889, 0 },
  { 7744, 4, 468, 2, 7889, 0 },
  { 5412, 4, 468, 2, 7889, 0 },
  { 5687, 4, 468, 2, 7889, 0 },
  { 5956, 4, 468, 2, 7889, 0 },
  { 6229, 4, 468, 2, 7889, 0 },
  { 6488, 4, 468, 2, 7889, 0 },
  { 6747, 4, 468, 2, 7889, 0 },
  { 7006, 4, 468, 2, 7889, 0 },
  { 7265, 4, 468, 2, 7889, 0 },
  { 7517, 4, 468, 2, 7889, 0 },
  { 7769, 4, 468, 2, 7889, 0 },
  { 5437, 4, 468, 2, 7889, 0 },
  { 5712, 4, 468, 2, 7889, 0 },
  { 5981, 4, 468, 2, 7889, 0 },
  { 6254, 4, 468, 2, 7889, 0 },
  { 6513, 4, 468, 2, 7889, 0 },
  { 6772, 4, 468, 2, 7889, 0 },
  { 7031, 4, 468, 2, 7889, 0 },
  { 7290, 4, 468, 2, 7889, 0 },
  { 7542, 4, 468, 2, 7889, 0 },
  { 7794, 4, 468, 2, 7889, 0 },
  { 5462, 4, 468, 2, 7889, 0 },
  { 5737, 4, 468, 2, 7889, 0 },
  { 2225, 497, 4, 3, 641, 5 },
  { 2425, 497, 4, 3, 721, 5 },
  { 642, 497, 4, 3, 801, 5 },
  { 852, 497, 4, 3, 881, 5 },
  { 1062, 497, 4, 3, 961, 5 },
  { 1259, 497, 4, 3, 1041, 5 },
  { 1456, 497, 4, 3, 1121, 5 },
  { 1653, 497, 4, 3, 1201, 5 },
  { 1850, 497, 4, 3, 1281, 5 },
  { 2047, 497, 4, 3, 1361, 5 },
  { 2247, 497, 4, 3, 1441, 5 },
  { 2447, 497, 4, 3, 1521, 5 },
  { 664, 497, 4, 3, 1601, 5 },
  { 874, 497, 4, 3, 1681, 5 },
  { 1084, 497, 4, 3, 1761, 5 },
  { 1281, 497, 4, 3, 1841, 5 },
  { 1478, 497, 4, 3, 1921, 5 },
  { 1675, 497, 4, 3, 2001, 5 },
  { 1872, 497, 4, 3, 2081, 5 },
  { 2069, 497, 4, 3, 2161, 5 },
  { 2269, 497, 4, 3, 2241, 5 },
  { 2469, 497, 4, 3, 2321, 5 },
  { 686, 497, 4, 3, 2401, 5 },
  { 896, 497, 4, 3, 2481, 5 },
  { 1106, 497, 4, 3, 2561, 5 },
  { 1303, 497, 4, 3, 2641, 5 },
  { 1500, 497, 4, 3, 2721, 5 },
  { 1697, 497, 4, 3, 2801, 5 },
  { 1894, 497, 4, 3, 2881, 5 },
  { 2091, 497, 4, 3, 2961, 5 },
  { 2291, 497, 4, 3, 3041, 5 },
  { 2491, 497, 4, 3, 3121, 5 },
  { 708, 497, 4, 3, 3201, 5 },
  { 918, 497, 4, 3, 3281, 5 },
  { 1128, 497, 4, 3, 3361, 5 },
  { 1325, 497, 4, 3, 3441, 5 },
  { 1522, 497, 4, 3, 3521, 5 },
  { 1719, 497, 4, 3, 3601, 5 },
  { 1916, 497, 4, 3, 3681, 5 },
  { 2113, 497, 4, 3, 3761, 5 },
  { 2313, 497, 4, 3, 3841, 5 },
  { 2513, 497, 4, 3, 3921, 5 },
  { 730, 497, 4, 3, 4001, 5 },
  { 940, 497, 4, 3, 4081, 5 },
  { 1150, 497, 4, 3, 4161, 5 },
  { 1347, 497, 4, 3, 4241, 5 },
  { 1544, 497, 4, 3, 4321, 5 },
  { 1741, 497, 4, 3, 4401, 5 },
  { 1938, 497, 4, 3, 4481, 5 },
  { 2135, 497, 4, 3, 4561, 5 },
  { 2335, 497, 4, 3, 4641, 5 },
  { 2535, 497, 4, 3, 4721, 5 },
  { 752, 497, 4, 3, 4801, 5 },
  { 962, 497, 4, 3, 4881, 5 },
  { 1172, 497, 4, 3, 4961, 5 },
  { 1369, 497, 4, 3, 5041, 5 },
  { 1566, 497, 4, 3, 5121, 5 },
  { 1763, 497, 4, 3, 5201, 5 },
  { 1960, 497, 4, 3, 5281, 5 },
  { 2157, 497, 4, 3, 5361, 5 },
  { 2357, 497, 4, 3, 5441, 5 },
  { 2557, 497, 4, 3, 5521, 5 },
  { 774, 497, 4, 3, 5601, 5 },
  { 984, 497, 4, 3, 5681, 5 },
  { 10946, 4, 504, 2, 7778, 0 },
  { 11198, 4, 504, 2, 7778, 0 },
  { 8866, 4, 504, 2, 7778, 0 },
  { 9141, 4, 504, 2, 7778, 0 },
  { 9410, 4, 504, 2, 7778, 0 },
  { 9683, 4, 504, 2, 7778, 0 },
  { 9942, 4, 504, 2, 7778, 0 },
  { 10201, 4, 504, 2, 7778, 0 },
  { 10460, 4, 504, 2, 7778, 0 },
  { 10719, 4, 504, 2, 7778, 0 },
  { 10971, 4, 504, 2, 7778, 0 },
  { 11223, 4, 504, 2, 7778, 0 },
  { 8891, 4, 504, 2, 7778, 0 },
  { 9166, 4, 504, 2, 7778, 0 },
  { 9435, 4, 504, 2, 7778, 0 },
  { 9708, 4, 504, 2, 7778, 0 },
  { 9967, 4, 504, 2, 7778, 0 },
  { 10226, 4, 504, 2, 7778, 0 },
  { 10485, 4, 504, 2, 7778, 0 },
  { 10744, 4, 504, 2, 7778, 0 },
  { 10996, 4, 504, 2, 7778, 0 },
  { 11248, 4, 504, 2, 7778, 0 },
  { 8916, 4, 504, 2, 7778, 0 },
  { 9191, 4, 504, 2, 7778, 0 },
  { 9460, 4, 504, 2, 7778, 0 },
  { 9733, 4, 504, 2, 7778, 0 },
  { 9992, 4, 504, 2, 7778, 0 },
  { 10251, 4, 504, 2, 7778, 0 },
  { 10510, 4, 504, 2, 7778, 0 },
  { 10769, 4, 504, 2, 7778, 0 },
  { 11021, 4, 504, 2, 7778, 0 },
  { 11273, 4, 504, 2, 7778, 0 },
  { 8941, 4, 504, 2, 7778, 0 },
  { 9216, 4, 504, 2, 7778, 0 },
  { 9485, 4, 504, 2, 7778, 0 },
  { 9758, 4, 504, 2, 7778, 0 },
  { 10017, 4, 504, 2, 7778, 0 },
  { 10276, 4, 504, 2, 7778, 0 },
  { 10535, 4, 504, 2, 7778, 0 },
  { 10794, 4, 504, 2, 7778, 0 },
  { 11046, 4, 504, 2, 7778, 0 },
  { 11298, 4, 504, 2, 7778, 0 },
  { 8966, 4, 504, 2, 7778, 0 },
  { 9241, 4, 504, 2, 7778, 0 },
  { 9510, 4, 504, 2, 7778, 0 },
  { 9783, 4, 504, 2, 7778, 0 },
  { 10042, 4, 504, 2, 7778, 0 },
  { 10301, 4, 504, 2, 7778, 0 },
  { 10560, 4, 504, 2, 7778, 0 },
  { 10819, 4, 504, 2, 7778, 0 },
  { 11071, 4, 504, 2, 7778, 0 },
  { 11323, 4, 504, 2, 7778, 0 },
  { 8991, 4, 504, 2, 7778, 0 },
  { 9266, 4, 504, 2, 7778, 0 },
  { 9535, 4, 504, 2, 7778, 0 },
  { 9808, 4, 504, 2, 7778, 0 },
  { 10067, 4, 504, 2, 7778, 0 },
  { 10326, 4, 504, 2, 7778, 0 },
  { 10585, 4, 504, 2, 7778, 0 },
  { 10844, 4, 504, 2, 7778, 0 },
  { 11096, 4, 504, 2, 7778, 0 },
  { 11348, 4, 504, 2, 7778, 0 },
  { 9016, 4, 504, 2, 7778, 0 },
  { 9291, 4, 504, 2, 7778, 0 },
  { 13581, 4, 502, 2, 7746, 0 },
  { 13833, 4, 502, 2, 7746, 0 },
  { 11501, 4, 502, 2, 7746, 0 },
  { 11776, 4, 502, 2, 7746, 0 },
  { 12045, 4, 502, 2, 7746, 0 },
  { 12318, 4, 502, 2, 7746, 0 },
  { 12577, 4, 502, 2, 7746, 0 },
  { 12836, 4, 502, 2, 7746, 0 },
  { 13095, 4, 502, 2, 7746, 0 },
  { 13354, 4, 502, 2, 7746, 0 },
  { 13606, 4, 502, 2, 7746, 0 },
  { 13858, 4, 502, 2, 7746, 0 },
  { 11526, 4, 502, 2, 7746, 0 },
  { 11801, 4, 502, 2, 7746, 0 },
  { 12070, 4, 502, 2, 7746, 0 },
  { 12343, 4, 502, 2, 7746, 0 },
  { 12602, 4, 502, 2, 7746, 0 },
  { 12861, 4, 502, 2, 7746, 0 },
  { 13120, 4, 502, 2, 7746, 0 },
  { 13379, 4, 502, 2, 7746, 0 },
  { 13631, 4, 502, 2, 7746, 0 },
  { 13883, 4, 502, 2, 7746, 0 },
  { 11551, 4, 502, 2, 7746, 0 },
  { 11826, 4, 502, 2, 7746, 0 },
  { 12095, 4, 502, 2, 7746, 0 },
  { 12368, 4, 502, 2, 7746, 0 },
  { 12627, 4, 502, 2, 7746, 0 },
  { 12886, 4, 502, 2, 7746, 0 },
  { 13145, 4, 502, 2, 7746, 0 },
  { 13404, 4, 502, 2, 7746, 0 },
  { 13656, 4, 502, 2, 7746, 0 },
  { 13908, 4, 502, 2, 7746, 0 },
  { 11576, 4, 502, 2, 7746, 0 },
  { 11851, 4, 502, 2, 7746, 0 },
  { 12120, 4, 502, 2, 7746, 0 },
  { 12393, 4, 502, 2, 7746, 0 },
  { 12652, 4, 502, 2, 7746, 0 },
  { 12911, 4, 502, 2, 7746, 0 },
  { 13170, 4, 502, 2, 7746, 0 },
  { 13429, 4, 502, 2, 7746, 0 },
  { 13681, 4, 502, 2, 7746, 0 },
  { 13933, 4, 502, 2, 7746, 0 },
  { 11601, 4, 502, 2, 7746, 0 },
  { 11876, 4, 502, 2, 7746, 0 },
  { 12145, 4, 502, 2, 7746, 0 },
  { 12418, 4, 502, 2, 7746, 0 },
  { 12677, 4, 502, 2, 7746, 0 },
  { 12936, 4, 502, 2, 7746, 0 },
  { 13195, 4, 502, 2, 7746, 0 },
  { 13454, 4, 502, 2, 7746, 0 },
  { 13706, 4, 502, 2, 7746, 0 },
  { 13958, 4, 502, 2, 7746, 0 },
  { 11626, 4, 502, 2, 7746, 0 },
  { 11901, 4, 502, 2, 7746, 0 },
  { 12170, 4, 502, 2, 7746, 0 },
  { 12443, 4, 502, 2, 7746, 0 },
  { 12702, 4, 502, 2, 7746, 0 },
  { 12961, 4, 502, 2, 7746, 0 },
  { 13220, 4, 502, 2, 7746, 0 },
  { 13479, 4, 502, 2, 7746, 0 },
  { 13731, 4, 502, 2, 7746, 0 },
  { 13983, 4, 502, 2, 7746, 0 },
  { 11651, 4, 502, 2, 7746, 0 },
  { 11926, 4, 502, 2, 7746, 0 },
};

extern const MCPhysReg R600RegUnitRoots[][2] = {
  { R600::ALU_CONST },
  { R600::ALU_LITERAL_W },
  { R600::ALU_LITERAL_X },
  { R600::ALU_LITERAL_Y },
  { R600::ALU_LITERAL_Z },
  { R600::ALU_PARAM },
  { R600::AR_X },
  { R600::HALF },
  { R600::INDIRECT_BASE_ADDR },
  { R600::LDS_DIRECT_A },
  { R600::LDS_DIRECT_B },
  { R600::NEG_HALF },
  { R600::NEG_ONE },
  { R600::ONE },
  { R600::ONE_INT },
  { R600::OQA },
  { R600::OQAP },
  { R600::OQB },
  { R600::OQBP },
  { R600::PREDICATE_BIT },
  { R600::PRED_SEL_OFF },
  { R600::PRED_SEL_ONE },
  { R600::PRED_SEL_ZERO },
  { R600::PS },
  { R600::PV_W },
  { R600::PV_X },
  { R600::PV_Y },
  { R600::PV_Z },
  { R600::ZERO },
  { R600::ArrayBase448 },
  { R600::ArrayBase449 },
  { R600::ArrayBase450 },
  { R600::ArrayBase451 },
  { R600::ArrayBase452 },
  { R600::ArrayBase453 },
  { R600::ArrayBase454 },
  { R600::ArrayBase455 },
  { R600::ArrayBase456 },
  { R600::ArrayBase457 },
  { R600::ArrayBase458 },
  { R600::ArrayBase459 },
  { R600::ArrayBase460 },
  { R600::ArrayBase461 },
  { R600::ArrayBase462 },
  { R600::ArrayBase463 },
  { R600::ArrayBase464 },
  { R600::ArrayBase465 },
  { R600::ArrayBase466 },
  { R600::ArrayBase467 },
  { R600::ArrayBase468 },
  { R600::ArrayBase469 },
  { R600::ArrayBase470 },
  { R600::ArrayBase471 },
  { R600::ArrayBase472 },
  { R600::ArrayBase473 },
  { R600::ArrayBase474 },
  { R600::ArrayBase475 },
  { R600::ArrayBase476 },
  { R600::ArrayBase477 },
  { R600::ArrayBase478 },
  { R600::ArrayBase479 },
  { R600::ArrayBase480 },
  { R600::Addr0_W },
  { R600::Addr1_W },
  { R600::Addr2_W },
  { R600::Addr3_W },
  { R600::Addr4_W },
  { R600::Addr5_W },
  { R600::Addr6_W },
  { R600::Addr7_W },
  { R600::Addr8_W },
  { R600::Addr9_W },
  { R600::Addr10_W },
  { R600::Addr11_W },
  { R600::Addr12_W },
  { R600::Addr13_W },
  { R600::Addr14_W },
  { R600::Addr15_W },
  { R600::Addr16_W },
  { R600::Addr17_W },
  { R600::Addr18_W },
  { R600::Addr19_W },
  { R600::Addr20_W },
  { R600::Addr21_W },
  { R600::Addr22_W },
  { R600::Addr23_W },
  { R600::Addr24_W },
  { R600::Addr25_W },
  { R600::Addr26_W },
  { R600::Addr27_W },
  { R600::Addr28_W },
  { R600::Addr29_W },
  { R600::Addr30_W },
  { R600::Addr31_W },
  { R600::Addr32_W },
  { R600::Addr33_W },
  { R600::Addr34_W },
  { R600::Addr35_W },
  { R600::Addr36_W },
  { R600::Addr37_W },
  { R600::Addr38_W },
  { R600::Addr39_W },
  { R600::Addr40_W },
  { R600::Addr41_W },
  { R600::Addr42_W },
  { R600::Addr43_W },
  { R600::Addr44_W },
  { R600::Addr45_W },
  { R600::Addr46_W },
  { R600::Addr47_W },
  { R600::Addr48_W },
  { R600::Addr49_W },
  { R600::Addr50_W },
  { R600::Addr51_W },
  { R600::Addr52_W },
  { R600::Addr53_W },
  { R600::Addr54_W },
  { R600::Addr55_W },
  { R600::Addr56_W },
  { R600::Addr57_W },
  { R600::Addr58_W },
  { R600::Addr59_W },
  { R600::Addr60_W },
  { R600::Addr61_W },
  { R600::Addr62_W },
  { R600::Addr63_W },
  { R600::Addr64_W },
  { R600::Addr65_W },
  { R600::Addr66_W },
  { R600::Addr67_W },
  { R600::Addr68_W },
  { R600::Addr69_W },
  { R600::Addr70_W },
  { R600::Addr71_W },
  { R600::Addr72_W },
  { R600::Addr73_W },
  { R600::Addr74_W },
  { R600::Addr75_W },
  { R600::Addr76_W },
  { R600::Addr77_W },
  { R600::Addr78_W },
  { R600::Addr79_W },
  { R600::Addr80_W },
  { R600::Addr81_W },
  { R600::Addr82_W },
  { R600::Addr83_W },
  { R600::Addr84_W },
  { R600::Addr85_W },
  { R600::Addr86_W },
  { R600::Addr87_W },
  { R600::Addr88_W },
  { R600::Addr89_W },
  { R600::Addr90_W },
  { R600::Addr91_W },
  { R600::Addr92_W },
  { R600::Addr93_W },
  { R600::Addr94_W },
  { R600::Addr95_W },
  { R600::Addr96_W },
  { R600::Addr97_W },
  { R600::Addr98_W },
  { R600::Addr99_W },
  { R600::Addr100_W },
  { R600::Addr101_W },
  { R600::Addr102_W },
  { R600::Addr103_W },
  { R600::Addr104_W },
  { R600::Addr105_W },
  { R600::Addr106_W },
  { R600::Addr107_W },
  { R600::Addr108_W },
  { R600::Addr109_W },
  { R600::Addr110_W },
  { R600::Addr111_W },
  { R600::Addr112_W },
  { R600::Addr113_W },
  { R600::Addr114_W },
  { R600::Addr115_W },
  { R600::Addr116_W },
  { R600::Addr117_W },
  { R600::Addr118_W },
  { R600::Addr119_W },
  { R600::Addr120_W },
  { R600::Addr121_W },
  { R600::Addr122_W },
  { R600::Addr123_W },
  { R600::Addr124_W },
  { R600::Addr125_W },
  { R600::Addr126_W },
  { R600::Addr127_W },
  { R600::Addr0_X },
  { R600::Addr1_X },
  { R600::Addr2_X },
  { R600::Addr3_X },
  { R600::Addr4_X },
  { R600::Addr5_X },
  { R600::Addr6_X },
  { R600::Addr7_X },
  { R600::Addr8_X },
  { R600::Addr9_X },
  { R600::Addr10_X },
  { R600::Addr11_X },
  { R600::Addr12_X },
  { R600::Addr13_X },
  { R600::Addr14_X },
  { R600::Addr15_X },
  { R600::Addr16_X },
  { R600::Addr17_X },
  { R600::Addr18_X },
  { R600::Addr19_X },
  { R600::Addr20_X },
  { R600::Addr21_X },
  { R600::Addr22_X },
  { R600::Addr23_X },
  { R600::Addr24_X },
  { R600::Addr25_X },
  { R600::Addr26_X },
  { R600::Addr27_X },
  { R600::Addr28_X },
  { R600::Addr29_X },
  { R600::Addr30_X },
  { R600::Addr31_X },
  { R600::Addr32_X },
  { R600::Addr33_X },
  { R600::Addr34_X },
  { R600::Addr35_X },
  { R600::Addr36_X },
  { R600::Addr37_X },
  { R600::Addr38_X },
  { R600::Addr39_X },
  { R600::Addr40_X },
  { R600::Addr41_X },
  { R600::Addr42_X },
  { R600::Addr43_X },
  { R600::Addr44_X },
  { R600::Addr45_X },
  { R600::Addr46_X },
  { R600::Addr47_X },
  { R600::Addr48_X },
  { R600::Addr49_X },
  { R600::Addr50_X },
  { R600::Addr51_X },
  { R600::Addr52_X },
  { R600::Addr53_X },
  { R600::Addr54_X },
  { R600::Addr55_X },
  { R600::Addr56_X },
  { R600::Addr57_X },
  { R600::Addr58_X },
  { R600::Addr59_X },
  { R600::Addr60_X },
  { R600::Addr61_X },
  { R600::Addr62_X },
  { R600::Addr63_X },
  { R600::Addr64_X },
  { R600::Addr65_X },
  { R600::Addr66_X },
  { R600::Addr67_X },
  { R600::Addr68_X },
  { R600::Addr69_X },
  { R600::Addr70_X },
  { R600::Addr71_X },
  { R600::Addr72_X },
  { R600::Addr73_X },
  { R600::Addr74_X },
  { R600::Addr75_X },
  { R600::Addr76_X },
  { R600::Addr77_X },
  { R600::Addr78_X },
  { R600::Addr79_X },
  { R600::Addr80_X },
  { R600::Addr81_X },
  { R600::Addr82_X },
  { R600::Addr83_X },
  { R600::Addr84_X },
  { R600::Addr85_X },
  { R600::Addr86_X },
  { R600::Addr87_X },
  { R600::Addr88_X },
  { R600::Addr89_X },
  { R600::Addr90_X },
  { R600::Addr91_X },
  { R600::Addr92_X },
  { R600::Addr93_X },
  { R600::Addr94_X },
  { R600::Addr95_X },
  { R600::Addr96_X },
  { R600::Addr97_X },
  { R600::Addr98_X },
  { R600::Addr99_X },
  { R600::Addr100_X },
  { R600::Addr101_X },
  { R600::Addr102_X },
  { R600::Addr103_X },
  { R600::Addr104_X },
  { R600::Addr105_X },
  { R600::Addr106_X },
  { R600::Addr107_X },
  { R600::Addr108_X },
  { R600::Addr109_X },
  { R600::Addr110_X },
  { R600::Addr111_X },
  { R600::Addr112_X },
  { R600::Addr113_X },
  { R600::Addr114_X },
  { R600::Addr115_X },
  { R600::Addr116_X },
  { R600::Addr117_X },
  { R600::Addr118_X },
  { R600::Addr119_X },
  { R600::Addr120_X },
  { R600::Addr121_X },
  { R600::Addr122_X },
  { R600::Addr123_X },
  { R600::Addr124_X },
  { R600::Addr125_X },
  { R600::Addr126_X },
  { R600::Addr127_X },
  { R600::Addr0_Y },
  { R600::Addr1_Y },
  { R600::Addr2_Y },
  { R600::Addr3_Y },
  { R600::Addr4_Y },
  { R600::Addr5_Y },
  { R600::Addr6_Y },
  { R600::Addr7_Y },
  { R600::Addr8_Y },
  { R600::Addr9_Y },
  { R600::Addr10_Y },
  { R600::Addr11_Y },
  { R600::Addr12_Y },
  { R600::Addr13_Y },
  { R600::Addr14_Y },
  { R600::Addr15_Y },
  { R600::Addr16_Y },
  { R600::Addr17_Y },
  { R600::Addr18_Y },
  { R600::Addr19_Y },
  { R600::Addr20_Y },
  { R600::Addr21_Y },
  { R600::Addr22_Y },
  { R600::Addr23_Y },
  { R600::Addr24_Y },
  { R600::Addr25_Y },
  { R600::Addr26_Y },
  { R600::Addr27_Y },
  { R600::Addr28_Y },
  { R600::Addr29_Y },
  { R600::Addr30_Y },
  { R600::Addr31_Y },
  { R600::Addr32_Y },
  { R600::Addr33_Y },
  { R600::Addr34_Y },
  { R600::Addr35_Y },
  { R600::Addr36_Y },
  { R600::Addr37_Y },
  { R600::Addr38_Y },
  { R600::Addr39_Y },
  { R600::Addr40_Y },
  { R600::Addr41_Y },
  { R600::Addr42_Y },
  { R600::Addr43_Y },
  { R600::Addr44_Y },
  { R600::Addr45_Y },
  { R600::Addr46_Y },
  { R600::Addr47_Y },
  { R600::Addr48_Y },
  { R600::Addr49_Y },
  { R600::Addr50_Y },
  { R600::Addr51_Y },
  { R600::Addr52_Y },
  { R600::Addr53_Y },
  { R600::Addr54_Y },
  { R600::Addr55_Y },
  { R600::Addr56_Y },
  { R600::Addr57_Y },
  { R600::Addr58_Y },
  { R600::Addr59_Y },
  { R600::Addr60_Y },
  { R600::Addr61_Y },
  { R600::Addr62_Y },
  { R600::Addr63_Y },
  { R600::Addr64_Y },
  { R600::Addr65_Y },
  { R600::Addr66_Y },
  { R600::Addr67_Y },
  { R600::Addr68_Y },
  { R600::Addr69_Y },
  { R600::Addr70_Y },
  { R600::Addr71_Y },
  { R600::Addr72_Y },
  { R600::Addr73_Y },
  { R600::Addr74_Y },
  { R600::Addr75_Y },
  { R600::Addr76_Y },
  { R600::Addr77_Y },
  { R600::Addr78_Y },
  { R600::Addr79_Y },
  { R600::Addr80_Y },
  { R600::Addr81_Y },
  { R600::Addr82_Y },
  { R600::Addr83_Y },
  { R600::Addr84_Y },
  { R600::Addr85_Y },
  { R600::Addr86_Y },
  { R600::Addr87_Y },
  { R600::Addr88_Y },
  { R600::Addr89_Y },
  { R600::Addr90_Y },
  { R600::Addr91_Y },
  { R600::Addr92_Y },
  { R600::Addr93_Y },
  { R600::Addr94_Y },
  { R600::Addr95_Y },
  { R600::Addr96_Y },
  { R600::Addr97_Y },
  { R600::Addr98_Y },
  { R600::Addr99_Y },
  { R600::Addr100_Y },
  { R600::Addr101_Y },
  { R600::Addr102_Y },
  { R600::Addr103_Y },
  { R600::Addr104_Y },
  { R600::Addr105_Y },
  { R600::Addr106_Y },
  { R600::Addr107_Y },
  { R600::Addr108_Y },
  { R600::Addr109_Y },
  { R600::Addr110_Y },
  { R600::Addr111_Y },
  { R600::Addr112_Y },
  { R600::Addr113_Y },
  { R600::Addr114_Y },
  { R600::Addr115_Y },
  { R600::Addr116_Y },
  { R600::Addr117_Y },
  { R600::Addr118_Y },
  { R600::Addr119_Y },
  { R600::Addr120_Y },
  { R600::Addr121_Y },
  { R600::Addr122_Y },
  { R600::Addr123_Y },
  { R600::Addr124_Y },
  { R600::Addr125_Y },
  { R600::Addr126_Y },
  { R600::Addr127_Y },
  { R600::Addr0_Z },
  { R600::Addr1_Z },
  { R600::Addr2_Z },
  { R600::Addr3_Z },
  { R600::Addr4_Z },
  { R600::Addr5_Z },
  { R600::Addr6_Z },
  { R600::Addr7_Z },
  { R600::Addr8_Z },
  { R600::Addr9_Z },
  { R600::Addr10_Z },
  { R600::Addr11_Z },
  { R600::Addr12_Z },
  { R600::Addr13_Z },
  { R600::Addr14_Z },
  { R600::Addr15_Z },
  { R600::Addr16_Z },
  { R600::Addr17_Z },
  { R600::Addr18_Z },
  { R600::Addr19_Z },
  { R600::Addr20_Z },
  { R600::Addr21_Z },
  { R600::Addr22_Z },
  { R600::Addr23_Z },
  { R600::Addr24_Z },
  { R600::Addr25_Z },
  { R600::Addr26_Z },
  { R600::Addr27_Z },
  { R600::Addr28_Z },
  { R600::Addr29_Z },
  { R600::Addr30_Z },
  { R600::Addr31_Z },
  { R600::Addr32_Z },
  { R600::Addr33_Z },
  { R600::Addr34_Z },
  { R600::Addr35_Z },
  { R600::Addr36_Z },
  { R600::Addr37_Z },
  { R600::Addr38_Z },
  { R600::Addr39_Z },
  { R600::Addr40_Z },
  { R600::Addr41_Z },
  { R600::Addr42_Z },
  { R600::Addr43_Z },
  { R600::Addr44_Z },
  { R600::Addr45_Z },
  { R600::Addr46_Z },
  { R600::Addr47_Z },
  { R600::Addr48_Z },
  { R600::Addr49_Z },
  { R600::Addr50_Z },
  { R600::Addr51_Z },
  { R600::Addr52_Z },
  { R600::Addr53_Z },
  { R600::Addr54_Z },
  { R600::Addr55_Z },
  { R600::Addr56_Z },
  { R600::Addr57_Z },
  { R600::Addr58_Z },
  { R600::Addr59_Z },
  { R600::Addr60_Z },
  { R600::Addr61_Z },
  { R600::Addr62_Z },
  { R600::Addr63_Z },
  { R600::Addr64_Z },
  { R600::Addr65_Z },
  { R600::Addr66_Z },
  { R600::Addr67_Z },
  { R600::Addr68_Z },
  { R600::Addr69_Z },
  { R600::Addr70_Z },
  { R600::Addr71_Z },
  { R600::Addr72_Z },
  { R600::Addr73_Z },
  { R600::Addr74_Z },
  { R600::Addr75_Z },
  { R600::Addr76_Z },
  { R600::Addr77_Z },
  { R600::Addr78_Z },
  { R600::Addr79_Z },
  { R600::Addr80_Z },
  { R600::Addr81_Z },
  { R600::Addr82_Z },
  { R600::Addr83_Z },
  { R600::Addr84_Z },
  { R600::Addr85_Z },
  { R600::Addr86_Z },
  { R600::Addr87_Z },
  { R600::Addr88_Z },
  { R600::Addr89_Z },
  { R600::Addr90_Z },
  { R600::Addr91_Z },
  { R600::Addr92_Z },
  { R600::Addr93_Z },
  { R600::Addr94_Z },
  { R600::Addr95_Z },
  { R600::Addr96_Z },
  { R600::Addr97_Z },
  { R600::Addr98_Z },
  { R600::Addr99_Z },
  { R600::Addr100_Z },
  { R600::Addr101_Z },
  { R600::Addr102_Z },
  { R600::Addr103_Z },
  { R600::Addr104_Z },
  { R600::Addr105_Z },
  { R600::Addr106_Z },
  { R600::Addr107_Z },
  { R600::Addr108_Z },
  { R600::Addr109_Z },
  { R600::Addr110_Z },
  { R600::Addr111_Z },
  { R600::Addr112_Z },
  { R600::Addr113_Z },
  { R600::Addr114_Z },
  { R600::Addr115_Z },
  { R600::Addr116_Z },
  { R600::Addr117_Z },
  { R600::Addr118_Z },
  { R600::Addr119_Z },
  { R600::Addr120_Z },
  { R600::Addr121_Z },
  { R600::Addr122_Z },
  { R600::Addr123_Z },
  { R600::Addr124_Z },
  { R600::Addr125_Z },
  { R600::Addr126_Z },
  { R600::Addr127_Z },
  { R600::T0_W },
  { R600::T1_W },
  { R600::T2_W },
  { R600::T3_W },
  { R600::T4_W },
  { R600::T5_W },
  { R600::T6_W },
  { R600::T7_W },
  { R600::T8_W },
  { R600::T9_W },
  { R600::T10_W },
  { R600::T11_W },
  { R600::T12_W },
  { R600::T13_W },
  { R600::T14_W },
  { R600::T15_W },
  { R600::T16_W },
  { R600::T17_W },
  { R600::T18_W },
  { R600::T19_W },
  { R600::T20_W },
  { R600::T21_W },
  { R600::T22_W },
  { R600::T23_W },
  { R600::T24_W },
  { R600::T25_W },
  { R600::T26_W },
  { R600::T27_W },
  { R600::T28_W },
  { R600::T29_W },
  { R600::T30_W },
  { R600::T31_W },
  { R600::T32_W },
  { R600::T33_W },
  { R600::T34_W },
  { R600::T35_W },
  { R600::T36_W },
  { R600::T37_W },
  { R600::T38_W },
  { R600::T39_W },
  { R600::T40_W },
  { R600::T41_W },
  { R600::T42_W },
  { R600::T43_W },
  { R600::T44_W },
  { R600::T45_W },
  { R600::T46_W },
  { R600::T47_W },
  { R600::T48_W },
  { R600::T49_W },
  { R600::T50_W },
  { R600::T51_W },
  { R600::T52_W },
  { R600::T53_W },
  { R600::T54_W },
  { R600::T55_W },
  { R600::T56_W },
  { R600::T57_W },
  { R600::T58_W },
  { R600::T59_W },
  { R600::T60_W },
  { R600::T61_W },
  { R600::T62_W },
  { R600::T63_W },
  { R600::T64_W },
  { R600::T65_W },
  { R600::T66_W },
  { R600::T67_W },
  { R600::T68_W },
  { R600::T69_W },
  { R600::T70_W },
  { R600::T71_W },
  { R600::T72_W },
  { R600::T73_W },
  { R600::T74_W },
  { R600::T75_W },
  { R600::T76_W },
  { R600::T77_W },
  { R600::T78_W },
  { R600::T79_W },
  { R600::T80_W },
  { R600::T81_W },
  { R600::T82_W },
  { R600::T83_W },
  { R600::T84_W },
  { R600::T85_W },
  { R600::T86_W },
  { R600::T87_W },
  { R600::T88_W },
  { R600::T89_W },
  { R600::T90_W },
  { R600::T91_W },
  { R600::T92_W },
  { R600::T93_W },
  { R600::T94_W },
  { R600::T95_W },
  { R600::T96_W },
  { R600::T97_W },
  { R600::T98_W },
  { R600::T99_W },
  { R600::T100_W },
  { R600::T101_W },
  { R600::T102_W },
  { R600::T103_W },
  { R600::T104_W },
  { R600::T105_W },
  { R600::T106_W },
  { R600::T107_W },
  { R600::T108_W },
  { R600::T109_W },
  { R600::T110_W },
  { R600::T111_W },
  { R600::T112_W },
  { R600::T113_W },
  { R600::T114_W },
  { R600::T115_W },
  { R600::T116_W },
  { R600::T117_W },
  { R600::T118_W },
  { R600::T119_W },
  { R600::T120_W },
  { R600::T121_W },
  { R600::T122_W },
  { R600::T123_W },
  { R600::T124_W },
  { R600::T125_W },
  { R600::T126_W },
  { R600::T127_W },
  { R600::T0_X },
  { R600::T1_X },
  { R600::T2_X },
  { R600::T3_X },
  { R600::T4_X },
  { R600::T5_X },
  { R600::T6_X },
  { R600::T7_X },
  { R600::T8_X },
  { R600::T9_X },
  { R600::T10_X },
  { R600::T11_X },
  { R600::T12_X },
  { R600::T13_X },
  { R600::T14_X },
  { R600::T15_X },
  { R600::T16_X },
  { R600::T17_X },
  { R600::T18_X },
  { R600::T19_X },
  { R600::T20_X },
  { R600::T21_X },
  { R600::T22_X },
  { R600::T23_X },
  { R600::T24_X },
  { R600::T25_X },
  { R600::T26_X },
  { R600::T27_X },
  { R600::T28_X },
  { R600::T29_X },
  { R600::T30_X },
  { R600::T31_X },
  { R600::T32_X },
  { R600::T33_X },
  { R600::T34_X },
  { R600::T35_X },
  { R600::T36_X },
  { R600::T37_X },
  { R600::T38_X },
  { R600::T39_X },
  { R600::T40_X },
  { R600::T41_X },
  { R600::T42_X },
  { R600::T43_X },
  { R600::T44_X },
  { R600::T45_X },
  { R600::T46_X },
  { R600::T47_X },
  { R600::T48_X },
  { R600::T49_X },
  { R600::T50_X },
  { R600::T51_X },
  { R600::T52_X },
  { R600::T53_X },
  { R600::T54_X },
  { R600::T55_X },
  { R600::T56_X },
  { R600::T57_X },
  { R600::T58_X },
  { R600::T59_X },
  { R600::T60_X },
  { R600::T61_X },
  { R600::T62_X },
  { R600::T63_X },
  { R600::T64_X },
  { R600::T65_X },
  { R600::T66_X },
  { R600::T67_X },
  { R600::T68_X },
  { R600::T69_X },
  { R600::T70_X },
  { R600::T71_X },
  { R600::T72_X },
  { R600::T73_X },
  { R600::T74_X },
  { R600::T75_X },
  { R600::T76_X },
  { R600::T77_X },
  { R600::T78_X },
  { R600::T79_X },
  { R600::T80_X },
  { R600::T81_X },
  { R600::T82_X },
  { R600::T83_X },
  { R600::T84_X },
  { R600::T85_X },
  { R600::T86_X },
  { R600::T87_X },
  { R600::T88_X },
  { R600::T89_X },
  { R600::T90_X },
  { R600::T91_X },
  { R600::T92_X },
  { R600::T93_X },
  { R600::T94_X },
  { R600::T95_X },
  { R600::T96_X },
  { R600::T97_X },
  { R600::T98_X },
  { R600::T99_X },
  { R600::T100_X },
  { R600::T101_X },
  { R600::T102_X },
  { R600::T103_X },
  { R600::T104_X },
  { R600::T105_X },
  { R600::T106_X },
  { R600::T107_X },
  { R600::T108_X },
  { R600::T109_X },
  { R600::T110_X },
  { R600::T111_X },
  { R600::T112_X },
  { R600::T113_X },
  { R600::T114_X },
  { R600::T115_X },
  { R600::T116_X },
  { R600::T117_X },
  { R600::T118_X },
  { R600::T119_X },
  { R600::T120_X },
  { R600::T121_X },
  { R600::T122_X },
  { R600::T123_X },
  { R600::T124_X },
  { R600::T125_X },
  { R600::T126_X },
  { R600::T127_X },
  { R600::T0_Y },
  { R600::T1_Y },
  { R600::T2_Y },
  { R600::T3_Y },
  { R600::T4_Y },
  { R600::T5_Y },
  { R600::T6_Y },
  { R600::T7_Y },
  { R600::T8_Y },
  { R600::T9_Y },
  { R600::T10_Y },
  { R600::T11_Y },
  { R600::T12_Y },
  { R600::T13_Y },
  { R600::T14_Y },
  { R600::T15_Y },
  { R600::T16_Y },
  { R600::T17_Y },
  { R600::T18_Y },
  { R600::T19_Y },
  { R600::T20_Y },
  { R600::T21_Y },
  { R600::T22_Y },
  { R600::T23_Y },
  { R600::T24_Y },
  { R600::T25_Y },
  { R600::T26_Y },
  { R600::T27_Y },
  { R600::T28_Y },
  { R600::T29_Y },
  { R600::T30_Y },
  { R600::T31_Y },
  { R600::T32_Y },
  { R600::T33_Y },
  { R600::T34_Y },
  { R600::T35_Y },
  { R600::T36_Y },
  { R600::T37_Y },
  { R600::T38_Y },
  { R600::T39_Y },
  { R600::T40_Y },
  { R600::T41_Y },
  { R600::T42_Y },
  { R600::T43_Y },
  { R600::T44_Y },
  { R600::T45_Y },
  { R600::T46_Y },
  { R600::T47_Y },
  { R600::T48_Y },
  { R600::T49_Y },
  { R600::T50_Y },
  { R600::T51_Y },
  { R600::T52_Y },
  { R600::T53_Y },
  { R600::T54_Y },
  { R600::T55_Y },
  { R600::T56_Y },
  { R600::T57_Y },
  { R600::T58_Y },
  { R600::T59_Y },
  { R600::T60_Y },
  { R600::T61_Y },
  { R600::T62_Y },
  { R600::T63_Y },
  { R600::T64_Y },
  { R600::T65_Y },
  { R600::T66_Y },
  { R600::T67_Y },
  { R600::T68_Y },
  { R600::T69_Y },
  { R600::T70_Y },
  { R600::T71_Y },
  { R600::T72_Y },
  { R600::T73_Y },
  { R600::T74_Y },
  { R600::T75_Y },
  { R600::T76_Y },
  { R600::T77_Y },
  { R600::T78_Y },
  { R600::T79_Y },
  { R600::T80_Y },
  { R600::T81_Y },
  { R600::T82_Y },
  { R600::T83_Y },
  { R600::T84_Y },
  { R600::T85_Y },
  { R600::T86_Y },
  { R600::T87_Y },
  { R600::T88_Y },
  { R600::T89_Y },
  { R600::T90_Y },
  { R600::T91_Y },
  { R600::T92_Y },
  { R600::T93_Y },
  { R600::T94_Y },
  { R600::T95_Y },
  { R600::T96_Y },
  { R600::T97_Y },
  { R600::T98_Y },
  { R600::T99_Y },
  { R600::T100_Y },
  { R600::T101_Y },
  { R600::T102_Y },
  { R600::T103_Y },
  { R600::T104_Y },
  { R600::T105_Y },
  { R600::T106_Y },
  { R600::T107_Y },
  { R600::T108_Y },
  { R600::T109_Y },
  { R600::T110_Y },
  { R600::T111_Y },
  { R600::T112_Y },
  { R600::T113_Y },
  { R600::T114_Y },
  { R600::T115_Y },
  { R600::T116_Y },
  { R600::T117_Y },
  { R600::T118_Y },
  { R600::T119_Y },
  { R600::T120_Y },
  { R600::T121_Y },
  { R600::T122_Y },
  { R600::T123_Y },
  { R600::T124_Y },
  { R600::T125_Y },
  { R600::T126_Y },
  { R600::T127_Y },
  { R600::T0_Z },
  { R600::T1_Z },
  { R600::T2_Z },
  { R600::T3_Z },
  { R600::T4_Z },
  { R600::T5_Z },
  { R600::T6_Z },
  { R600::T7_Z },
  { R600::T8_Z },
  { R600::T9_Z },
  { R600::T10_Z },
  { R600::T11_Z },
  { R600::T12_Z },
  { R600::T13_Z },
  { R600::T14_Z },
  { R600::T15_Z },
  { R600::T16_Z },
  { R600::T17_Z },
  { R600::T18_Z },
  { R600::T19_Z },
  { R600::T20_Z },
  { R600::T21_Z },
  { R600::T22_Z },
  { R600::T23_Z },
  { R600::T24_Z },
  { R600::T25_Z },
  { R600::T26_Z },
  { R600::T27_Z },
  { R600::T28_Z },
  { R600::T29_Z },
  { R600::T30_Z },
  { R600::T31_Z },
  { R600::T32_Z },
  { R600::T33_Z },
  { R600::T34_Z },
  { R600::T35_Z },
  { R600::T36_Z },
  { R600::T37_Z },
  { R600::T38_Z },
  { R600::T39_Z },
  { R600::T40_Z },
  { R600::T41_Z },
  { R600::T42_Z },
  { R600::T43_Z },
  { R600::T44_Z },
  { R600::T45_Z },
  { R600::T46_Z },
  { R600::T47_Z },
  { R600::T48_Z },
  { R600::T49_Z },
  { R600::T50_Z },
  { R600::T51_Z },
  { R600::T52_Z },
  { R600::T53_Z },
  { R600::T54_Z },
  { R600::T55_Z },
  { R600::T56_Z },
  { R600::T57_Z },
  { R600::T58_Z },
  { R600::T59_Z },
  { R600::T60_Z },
  { R600::T61_Z },
  { R600::T62_Z },
  { R600::T63_Z },
  { R600::T64_Z },
  { R600::T65_Z },
  { R600::T66_Z },
  { R600::T67_Z },
  { R600::T68_Z },
  { R600::T69_Z },
  { R600::T70_Z },
  { R600::T71_Z },
  { R600::T72_Z },
  { R600::T73_Z },
  { R600::T74_Z },
  { R600::T75_Z },
  { R600::T76_Z },
  { R600::T77_Z },
  { R600::T78_Z },
  { R600::T79_Z },
  { R600::T80_Z },
  { R600::T81_Z },
  { R600::T82_Z },
  { R600::T83_Z },
  { R600::T84_Z },
  { R600::T85_Z },
  { R600::T86_Z },
  { R600::T87_Z },
  { R600::T88_Z },
  { R600::T89_Z },
  { R600::T90_Z },
  { R600::T91_Z },
  { R600::T92_Z },
  { R600::T93_Z },
  { R600::T94_Z },
  { R600::T95_Z },
  { R600::T96_Z },
  { R600::T97_Z },
  { R600::T98_Z },
  { R600::T99_Z },
  { R600::T100_Z },
  { R600::T101_Z },
  { R600::T102_Z },
  { R600::T103_Z },
  { R600::T104_Z },
  { R600::T105_Z },
  { R600::T106_Z },
  { R600::T107_Z },
  { R600::T108_Z },
  { R600::T109_Z },
  { R600::T110_Z },
  { R600::T111_Z },
  { R600::T112_Z },
  { R600::T113_Z },
  { R600::T114_Z },
  { R600::T115_Z },
  { R600::T116_Z },
  { R600::T117_Z },
  { R600::T118_Z },
  { R600::T119_Z },
  { R600::T120_Z },
  { R600::T121_Z },
  { R600::T122_Z },
  { R600::T123_Z },
  { R600::T124_Z },
  { R600::T125_Z },
  { R600::T126_Z },
  { R600::T127_Z },
  { R600::KC0_128_W },
  { R600::KC0_129_W },
  { R600::KC0_130_W },
  { R600::KC0_131_W },
  { R600::KC0_132_W },
  { R600::KC0_133_W },
  { R600::KC0_134_W },
  { R600::KC0_135_W },
  { R600::KC0_136_W },
  { R600::KC0_137_W },
  { R600::KC0_138_W },
  { R600::KC0_139_W },
  { R600::KC0_140_W },
  { R600::KC0_141_W },
  { R600::KC0_142_W },
  { R600::KC0_143_W },
  { R600::KC0_144_W },
  { R600::KC0_145_W },
  { R600::KC0_146_W },
  { R600::KC0_147_W },
  { R600::KC0_148_W },
  { R600::KC0_149_W },
  { R600::KC0_150_W },
  { R600::KC0_151_W },
  { R600::KC0_152_W },
  { R600::KC0_153_W },
  { R600::KC0_154_W },
  { R600::KC0_155_W },
  { R600::KC0_156_W },
  { R600::KC0_157_W },
  { R600::KC0_158_W },
  { R600::KC0_159_W },
  { R600::KC1_160_W },
  { R600::KC1_161_W },
  { R600::KC1_162_W },
  { R600::KC1_163_W },
  { R600::KC1_164_W },
  { R600::KC1_165_W },
  { R600::KC1_166_W },
  { R600::KC1_167_W },
  { R600::KC1_168_W },
  { R600::KC1_169_W },
  { R600::KC1_170_W },
  { R600::KC1_171_W },
  { R600::KC1_172_W },
  { R600::KC1_173_W },
  { R600::KC1_174_W },
  { R600::KC1_175_W },
  { R600::KC1_176_W },
  { R600::KC1_177_W },
  { R600::KC1_178_W },
  { R600::KC1_179_W },
  { R600::KC1_180_W },
  { R600::KC1_181_W },
  { R600::KC1_182_W },
  { R600::KC1_183_W },
  { R600::KC1_184_W },
  { R600::KC1_185_W },
  { R600::KC1_186_W },
  { R600::KC1_187_W },
  { R600::KC1_188_W },
  { R600::KC1_189_W },
  { R600::KC1_190_W },
  { R600::KC1_191_W },
  { R600::KC0_128_X },
  { R600::KC0_129_X },
  { R600::KC0_130_X },
  { R600::KC0_131_X },
  { R600::KC0_132_X },
  { R600::KC0_133_X },
  { R600::KC0_134_X },
  { R600::KC0_135_X },
  { R600::KC0_136_X },
  { R600::KC0_137_X },
  { R600::KC0_138_X },
  { R600::KC0_139_X },
  { R600::KC0_140_X },
  { R600::KC0_141_X },
  { R600::KC0_142_X },
  { R600::KC0_143_X },
  { R600::KC0_144_X },
  { R600::KC0_145_X },
  { R600::KC0_146_X },
  { R600::KC0_147_X },
  { R600::KC0_148_X },
  { R600::KC0_149_X },
  { R600::KC0_150_X },
  { R600::KC0_151_X },
  { R600::KC0_152_X },
  { R600::KC0_153_X },
  { R600::KC0_154_X },
  { R600::KC0_155_X },
  { R600::KC0_156_X },
  { R600::KC0_157_X },
  { R600::KC0_158_X },
  { R600::KC0_159_X },
  { R600::KC1_160_X },
  { R600::KC1_161_X },
  { R600::KC1_162_X },
  { R600::KC1_163_X },
  { R600::KC1_164_X },
  { R600::KC1_165_X },
  { R600::KC1_166_X },
  { R600::KC1_167_X },
  { R600::KC1_168_X },
  { R600::KC1_169_X },
  { R600::KC1_170_X },
  { R600::KC1_171_X },
  { R600::KC1_172_X },
  { R600::KC1_173_X },
  { R600::KC1_174_X },
  { R600::KC1_175_X },
  { R600::KC1_176_X },
  { R600::KC1_177_X },
  { R600::KC1_178_X },
  { R600::KC1_179_X },
  { R600::KC1_180_X },
  { R600::KC1_181_X },
  { R600::KC1_182_X },
  { R600::KC1_183_X },
  { R600::KC1_184_X },
  { R600::KC1_185_X },
  { R600::KC1_186_X },
  { R600::KC1_187_X },
  { R600::KC1_188_X },
  { R600::KC1_189_X },
  { R600::KC1_190_X },
  { R600::KC1_191_X },
  { R600::KC0_128_Y },
  { R600::KC0_128_Z },
  { R600::KC0_129_Y },
  { R600::KC0_129_Z },
  { R600::KC0_130_Y },
  { R600::KC0_130_Z },
  { R600::KC0_131_Y },
  { R600::KC0_131_Z },
  { R600::KC0_132_Y },
  { R600::KC0_132_Z },
  { R600::KC0_133_Y },
  { R600::KC0_133_Z },
  { R600::KC0_134_Y },
  { R600::KC0_134_Z },
  { R600::KC0_135_Y },
  { R600::KC0_135_Z },
  { R600::KC0_136_Y },
  { R600::KC0_136_Z },
  { R600::KC0_137_Y },
  { R600::KC0_137_Z },
  { R600::KC0_138_Y },
  { R600::KC0_138_Z },
  { R600::KC0_139_Y },
  { R600::KC0_139_Z },
  { R600::KC0_140_Y },
  { R600::KC0_140_Z },
  { R600::KC0_141_Y },
  { R600::KC0_141_Z },
  { R600::KC0_142_Y },
  { R600::KC0_142_Z },
  { R600::KC0_143_Y },
  { R600::KC0_143_Z },
  { R600::KC0_144_Y },
  { R600::KC0_144_Z },
  { R600::KC0_145_Y },
  { R600::KC0_145_Z },
  { R600::KC0_146_Y },
  { R600::KC0_146_Z },
  { R600::KC0_147_Y },
  { R600::KC0_147_Z },
  { R600::KC0_148_Y },
  { R600::KC0_148_Z },
  { R600::KC0_149_Y },
  { R600::KC0_149_Z },
  { R600::KC0_150_Y },
  { R600::KC0_150_Z },
  { R600::KC0_151_Y },
  { R600::KC0_151_Z },
  { R600::KC0_152_Y },
  { R600::KC0_152_Z },
  { R600::KC0_153_Y },
  { R600::KC0_153_Z },
  { R600::KC0_154_Y },
  { R600::KC0_154_Z },
  { R600::KC0_155_Y },
  { R600::KC0_155_Z },
  { R600::KC0_156_Y },
  { R600::KC0_156_Z },
  { R600::KC0_157_Y },
  { R600::KC0_157_Z },
  { R600::KC0_158_Y },
  { R600::KC0_158_Z },
  { R600::KC0_159_Y },
  { R600::KC0_159_Z },
  { R600::KC1_160_Y },
  { R600::KC1_160_Z },
  { R600::KC1_161_Y },
  { R600::KC1_161_Z },
  { R600::KC1_162_Y },
  { R600::KC1_162_Z },
  { R600::KC1_163_Y },
  { R600::KC1_163_Z },
  { R600::KC1_164_Y },
  { R600::KC1_164_Z },
  { R600::KC1_165_Y },
  { R600::KC1_165_Z },
  { R600::KC1_166_Y },
  { R600::KC1_166_Z },
  { R600::KC1_167_Y },
  { R600::KC1_167_Z },
  { R600::KC1_168_Y },
  { R600::KC1_168_Z },
  { R600::KC1_169_Y },
  { R600::KC1_169_Z },
  { R600::KC1_170_Y },
  { R600::KC1_170_Z },
  { R600::KC1_171_Y },
  { R600::KC1_171_Z },
  { R600::KC1_172_Y },
  { R600::KC1_172_Z },
  { R600::KC1_173_Y },
  { R600::KC1_173_Z },
  { R600::KC1_174_Y },
  { R600::KC1_174_Z },
  { R600::KC1_175_Y },
  { R600::KC1_175_Z },
  { R600::KC1_176_Y },
  { R600::KC1_176_Z },
  { R600::KC1_177_Y },
  { R600::KC1_177_Z },
  { R600::KC1_178_Y },
  { R600::KC1_178_Z },
  { R600::KC1_179_Y },
  { R600::KC1_179_Z },
  { R600::KC1_180_Y },
  { R600::KC1_180_Z },
  { R600::KC1_181_Y },
  { R600::KC1_181_Z },
  { R600::KC1_182_Y },
  { R600::KC1_182_Z },
  { R600::KC1_183_Y },
  { R600::KC1_183_Z },
  { R600::KC1_184_Y },
  { R600::KC1_184_Z },
  { R600::KC1_185_Y },
  { R600::KC1_185_Z },
  { R600::KC1_186_Y },
  { R600::KC1_186_Z },
  { R600::KC1_187_Y },
  { R600::KC1_187_Z },
  { R600::KC1_188_Y },
  { R600::KC1_188_Z },
  { R600::KC1_189_Y },
  { R600::KC1_189_Z },
  { R600::KC1_190_Y },
  { R600::KC1_190_Z },
  { R600::KC1_191_Y },
  { R600::KC1_191_Z },
};

namespace {     // Register classes...
  // R600_Reg32 Register Class...
  const MCPhysReg R600_Reg32[] = {
    R600::T0_X, R600::T0_Y, R600::T0_Z, R600::T0_W, R600::T1_X, R600::T1_Y, R600::T1_Z, R600::T1_W, R600::T2_X, R600::T2_Y, R600::T2_Z, R600::T2_W, R600::T3_X, R600::T3_Y, R600::T3_Z, R600::T3_W, R600::T4_X, R600::T4_Y, R600::T4_Z, R600::T4_W, R600::T5_X, R600::T5_Y, R600::T5_Z, R600::T5_W, R600::T6_X, R600::T6_Y, R600::T6_Z, R600::T6_W, R600::T7_X, R600::T7_Y, R600::T7_Z, R600::T7_W, R600::T8_X, R600::T8_Y, R600::T8_Z, R600::T8_W, R600::T9_X, R600::T9_Y, R600::T9_Z, R600::T9_W, R600::T10_X, R600::T10_Y, R600::T10_Z, R600::T10_W, R600::T11_X, R600::T11_Y, R600::T11_Z, R600::T11_W, R600::T12_X, R600::T12_Y, R600::T12_Z, R600::T12_W, R600::T13_X, R600::T13_Y, R600::T13_Z, R600::T13_W, R600::T14_X, R600::T14_Y, R600::T14_Z, R600::T14_W, R600::T15_X, R600::T15_Y, R600::T15_Z, R600::T15_W, R600::T16_X, R600::T16_Y, R600::T16_Z, R600::T16_W, R600::T17_X, R600::T17_Y, R600::T17_Z, R600::T17_W, R600::T18_X, R600::T18_Y, R600::T18_Z, R600::T18_W, R600::T19_X, R600::T19_Y, R600::T19_Z, R600::T19_W, R600::T20_X, R600::T20_Y, R600::T20_Z, R600::T20_W, R600::T21_X, R600::T21_Y, R600::T21_Z, R600::T21_W, R600::T22_X, R600::T22_Y, R600::T22_Z, R600::T22_W, R600::T23_X, R600::T23_Y, R600::T23_Z, R600::T23_W, R600::T24_X, R600::T24_Y, R600::T24_Z, R600::T24_W, R600::T25_X, R600::T25_Y, R600::T25_Z, R600::T25_W, R600::T26_X, R600::T26_Y, R600::T26_Z, R600::T26_W, R600::T27_X, R600::T27_Y, R600::T27_Z, R600::T27_W, R600::T28_X, R600::T28_Y, R600::T28_Z, R600::T28_W, R600::T29_X, R600::T29_Y, R600::T29_Z, R600::T29_W, R600::T30_X, R600::T30_Y, R600::T30_Z, R600::T30_W, R600::T31_X, R600::T31_Y, R600::T31_Z, R600::T31_W, R600::T32_X, R600::T32_Y, R600::T32_Z, R600::T32_W, R600::T33_X, R600::T33_Y, R600::T33_Z, R600::T33_W, R600::T34_X, R600::T34_Y, R600::T34_Z, R600::T34_W, R600::T35_X, R600::T35_Y, R600::T35_Z, R600::T35_W, R600::T36_X, R600::T36_Y, R600::T36_Z, R600::T36_W, R600::T37_X, R600::T37_Y, R600::T37_Z, R600::T37_W, R600::T38_X, R600::T38_Y, R600::T38_Z, R600::T38_W, R600::T39_X, R600::T39_Y, R600::T39_Z, R600::T39_W, R600::T40_X, R600::T40_Y, R600::T40_Z, R600::T40_W, R600::T41_X, R600::T41_Y, R600::T41_Z, R600::T41_W, R600::T42_X, R600::T42_Y, R600::T42_Z, R600::T42_W, R600::T43_X, R600::T43_Y, R600::T43_Z, R600::T43_W, R600::T44_X, R600::T44_Y, R600::T44_Z, R600::T44_W, R600::T45_X, R600::T45_Y, R600::T45_Z, R600::T45_W, R600::T46_X, R600::T46_Y, R600::T46_Z, R600::T46_W, R600::T47_X, R600::T47_Y, R600::T47_Z, R600::T47_W, R600::T48_X, R600::T48_Y, R600::T48_Z, R600::T48_W, R600::T49_X, R600::T49_Y, R600::T49_Z, R600::T49_W, R600::T50_X, R600::T50_Y, R600::T50_Z, R600::T50_W, R600::T51_X, R600::T51_Y, R600::T51_Z, R600::T51_W, R600::T52_X, R600::T52_Y, R600::T52_Z, R600::T52_W, R600::T53_X, R600::T53_Y, R600::T53_Z, R600::T53_W, R600::T54_X, R600::T54_Y, R600::T54_Z, R600::T54_W, R600::T55_X, R600::T55_Y, R600::T55_Z, R600::T55_W, R600::T56_X, R600::T56_Y, R600::T56_Z, R600::T56_W, R600::T57_X, R600::T57_Y, R600::T57_Z, R600::T57_W, R600::T58_X, R600::T58_Y, R600::T58_Z, R600::T58_W, R600::T59_X, R600::T59_Y, R600::T59_Z, R600::T59_W, R600::T60_X, R600::T60_Y, R600::T60_Z, R600::T60_W, R600::T61_X, R600::T61_Y, R600::T61_Z, R600::T61_W, R600::T62_X, R600::T62_Y, R600::T62_Z, R600::T62_W, R600::T63_X, R600::T63_Y, R600::T63_Z, R600::T63_W, R600::T64_X, R600::T64_Y, R600::T64_Z, R600::T64_W, R600::T65_X, R600::T65_Y, R600::T65_Z, R600::T65_W, R600::T66_X, R600::T66_Y, R600::T66_Z, R600::T66_W, R600::T67_X, R600::T67_Y, R600::T67_Z, R600::T67_W, R600::T68_X, R600::T68_Y, R600::T68_Z, R600::T68_W, R600::T69_X, R600::T69_Y, R600::T69_Z, R600::T69_W, R600::T70_X, R600::T70_Y, R600::T70_Z, R600::T70_W, R600::T71_X, R600::T71_Y, R600::T71_Z, R600::T71_W, R600::T72_X, R600::T72_Y, R600::T72_Z, R600::T72_W, R600::T73_X, R600::T73_Y, R600::T73_Z, R600::T73_W, R600::T74_X, R600::T74_Y, R600::T74_Z, R600::T74_W, R600::T75_X, R600::T75_Y, R600::T75_Z, R600::T75_W, R600::T76_X, R600::T76_Y, R600::T76_Z, R600::T76_W, R600::T77_X, R600::T77_Y, R600::T77_Z, R600::T77_W, R600::T78_X, R600::T78_Y, R600::T78_Z, R600::T78_W, R600::T79_X, R600::T79_Y, R600::T79_Z, R600::T79_W, R600::T80_X, R600::T80_Y, R600::T80_Z, R600::T80_W, R600::T81_X, R600::T81_Y, R600::T81_Z, R600::T81_W, R600::T82_X, R600::T82_Y, R600::T82_Z, R600::T82_W, R600::T83_X, R600::T83_Y, R600::T83_Z, R600::T83_W, R600::T84_X, R600::T84_Y, R600::T84_Z, R600::T84_W, R600::T85_X, R600::T85_Y, R600::T85_Z, R600::T85_W, R600::T86_X, R600::T86_Y, R600::T86_Z, R600::T86_W, R600::T87_X, R600::T87_Y, R600::T87_Z, R600::T87_W, R600::T88_X, R600::T88_Y, R600::T88_Z, R600::T88_W, R600::T89_X, R600::T89_Y, R600::T89_Z, R600::T89_W, R600::T90_X, R600::T90_Y, R600::T90_Z, R600::T90_W, R600::T91_X, R600::T91_Y, R600::T91_Z, R600::T91_W, R600::T92_X, R600::T92_Y, R600::T92_Z, R600::T92_W, R600::T93_X, R600::T93_Y, R600::T93_Z, R600::T93_W, R600::T94_X, R600::T94_Y, R600::T94_Z, R600::T94_W, R600::T95_X, R600::T95_Y, R600::T95_Z, R600::T95_W, R600::T96_X, R600::T96_Y, R600::T96_Z, R600::T96_W, R600::T97_X, R600::T97_Y, R600::T97_Z, R600::T97_W, R600::T98_X, R600::T98_Y, R600::T98_Z, R600::T98_W, R600::T99_X, R600::T99_Y, R600::T99_Z, R600::T99_W, R600::T100_X, R600::T100_Y, R600::T100_Z, R600::T100_W, R600::T101_X, R600::T101_Y, R600::T101_Z, R600::T101_W, R600::T102_X, R600::T102_Y, R600::T102_Z, R600::T102_W, R600::T103_X, R600::T103_Y, R600::T103_Z, R600::T103_W, R600::T104_X, R600::T104_Y, R600::T104_Z, R600::T104_W, R600::T105_X, R600::T105_Y, R600::T105_Z, R600::T105_W, R600::T106_X, R600::T106_Y, R600::T106_Z, R600::T106_W, R600::T107_X, R600::T107_Y, R600::T107_Z, R600::T107_W, R600::T108_X, R600::T108_Y, R600::T108_Z, R600::T108_W, R600::T109_X, R600::T109_Y, R600::T109_Z, R600::T109_W, R600::T110_X, R600::T110_Y, R600::T110_Z, R600::T110_W, R600::T111_X, R600::T111_Y, R600::T111_Z, R600::T111_W, R600::T112_X, R600::T112_Y, R600::T112_Z, R600::T112_W, R600::T113_X, R600::T113_Y, R600::T113_Z, R600::T113_W, R600::T114_X, R600::T114_Y, R600::T114_Z, R600::T114_W, R600::T115_X, R600::T115_Y, R600::T115_Z, R600::T115_W, R600::T116_X, R600::T116_Y, R600::T116_Z, R600::T116_W, R600::T117_X, R600::T117_Y, R600::T117_Z, R600::T117_W, R600::T118_X, R600::T118_Y, R600::T118_Z, R600::T118_W, R600::T119_X, R600::T119_Y, R600::T119_Z, R600::T119_W, R600::T120_X, R600::T120_Y, R600::T120_Z, R600::T120_W, R600::T121_X, R600::T121_Y, R600::T121_Z, R600::T121_W, R600::T122_X, R600::T122_Y, R600::T122_Z, R600::T122_W, R600::T123_X, R600::T123_Y, R600::T123_Z, R600::T123_W, R600::T124_X, R600::T124_Y, R600::T124_Z, R600::T124_W, R600::T125_X, R600::T125_Y, R600::T125_Z, R600::T125_W, R600::T126_X, R600::T126_Y, R600::T126_Z, R600::T126_W, R600::T127_X, R600::T127_Y, R600::T127_Z, R600::T127_W, R600::AR_X, R600::ArrayBase448, R600::ArrayBase449, R600::ArrayBase450, R600::ArrayBase451, R600::ArrayBase452, R600::ArrayBase453, R600::ArrayBase454, R600::ArrayBase455, R600::ArrayBase456, R600::ArrayBase457, R600::ArrayBase458, R600::ArrayBase459, R600::ArrayBase460, R600::ArrayBase461, R600::ArrayBase462, R600::ArrayBase463, R600::ArrayBase464, R600::ArrayBase465, R600::ArrayBase466, R600::ArrayBase467, R600::ArrayBase468, R600::ArrayBase469, R600::ArrayBase470, R600::ArrayBase471, R600::ArrayBase472, R600::ArrayBase473, R600::ArrayBase474, R600::ArrayBase475, R600::ArrayBase476, R600::ArrayBase477, R600::ArrayBase478, R600::ArrayBase479, R600::ArrayBase480, R600::Addr0_X, R600::Addr1_X, R600::Addr2_X, R600::Addr3_X, R600::Addr4_X, R600::Addr5_X, R600::Addr6_X, R600::Addr7_X, R600::Addr8_X, R600::Addr9_X, R600::Addr10_X, R600::Addr11_X, R600::Addr12_X, R600::Addr13_X, R600::Addr14_X, R600::Addr15_X, R600::Addr16_X, R600::Addr17_X, R600::Addr18_X, R600::Addr19_X, R600::Addr20_X, R600::Addr21_X, R600::Addr22_X, R600::Addr23_X, R600::Addr24_X, R600::Addr25_X, R600::Addr26_X, R600::Addr27_X, R600::Addr28_X, R600::Addr29_X, R600::Addr30_X, R600::Addr31_X, R600::Addr32_X, R600::Addr33_X, R600::Addr34_X, R600::Addr35_X, R600::Addr36_X, R600::Addr37_X, R600::Addr38_X, R600::Addr39_X, R600::Addr40_X, R600::Addr41_X, R600::Addr42_X, R600::Addr43_X, R600::Addr44_X, R600::Addr45_X, R600::Addr46_X, R600::Addr47_X, R600::Addr48_X, R600::Addr49_X, R600::Addr50_X, R600::Addr51_X, R600::Addr52_X, R600::Addr53_X, R600::Addr54_X, R600::Addr55_X, R600::Addr56_X, R600::Addr57_X, R600::Addr58_X, R600::Addr59_X, R600::Addr60_X, R600::Addr61_X, R600::Addr62_X, R600::Addr63_X, R600::Addr64_X, R600::Addr65_X, R600::Addr66_X, R600::Addr67_X, R600::Addr68_X, R600::Addr69_X, R600::Addr70_X, R600::Addr71_X, R600::Addr72_X, R600::Addr73_X, R600::Addr74_X, R600::Addr75_X, R600::Addr76_X, R600::Addr77_X, R600::Addr78_X, R600::Addr79_X, R600::Addr80_X, R600::Addr81_X, R600::Addr82_X, R600::Addr83_X, R600::Addr84_X, R600::Addr85_X, R600::Addr86_X, R600::Addr87_X, R600::Addr88_X, R600::Addr89_X, R600::Addr90_X, R600::Addr91_X, R600::Addr92_X, R600::Addr93_X, R600::Addr94_X, R600::Addr95_X, R600::Addr96_X, R600::Addr97_X, R600::Addr98_X, R600::Addr99_X, R600::Addr100_X, R600::Addr101_X, R600::Addr102_X, R600::Addr103_X, R600::Addr104_X, R600::Addr105_X, R600::Addr106_X, R600::Addr107_X, R600::Addr108_X, R600::Addr109_X, R600::Addr110_X, R600::Addr111_X, R600::Addr112_X, R600::Addr113_X, R600::Addr114_X, R600::Addr115_X, R600::Addr116_X, R600::Addr117_X, R600::Addr118_X, R600::Addr119_X, R600::Addr120_X, R600::Addr121_X, R600::Addr122_X, R600::Addr123_X, R600::Addr124_X, R600::Addr125_X, R600::Addr126_X, R600::Addr127_X, R600::KC0_128_X, R600::KC0_128_Y, R600::KC0_128_Z, R600::KC0_128_W, R600::KC0_129_X, R600::KC0_129_Y, R600::KC0_129_Z, R600::KC0_129_W, R600::KC0_130_X, R600::KC0_130_Y, R600::KC0_130_Z, R600::KC0_130_W, R600::KC0_131_X, R600::KC0_131_Y, R600::KC0_131_Z, R600::KC0_131_W, R600::KC0_132_X, R600::KC0_132_Y, R600::KC0_132_Z, R600::KC0_132_W, R600::KC0_133_X, R600::KC0_133_Y, R600::KC0_133_Z, R600::KC0_133_W, R600::KC0_134_X, R600::KC0_134_Y, R600::KC0_134_Z, R600::KC0_134_W, R600::KC0_135_X, R600::KC0_135_Y, R600::KC0_135_Z, R600::KC0_135_W, R600::KC0_136_X, R600::KC0_136_Y, R600::KC0_136_Z, R600::KC0_136_W, R600::KC0_137_X, R600::KC0_137_Y, R600::KC0_137_Z, R600::KC0_137_W, R600::KC0_138_X, R600::KC0_138_Y, R600::KC0_138_Z, R600::KC0_138_W, R600::KC0_139_X, R600::KC0_139_Y, R600::KC0_139_Z, R600::KC0_139_W, R600::KC0_140_X, R600::KC0_140_Y, R600::KC0_140_Z, R600::KC0_140_W, R600::KC0_141_X, R600::KC0_141_Y, R600::KC0_141_Z, R600::KC0_141_W, R600::KC0_142_X, R600::KC0_142_Y, R600::KC0_142_Z, R600::KC0_142_W, R600::KC0_143_X, R600::KC0_143_Y, R600::KC0_143_Z, R600::KC0_143_W, R600::KC0_144_X, R600::KC0_144_Y, R600::KC0_144_Z, R600::KC0_144_W, R600::KC0_145_X, R600::KC0_145_Y, R600::KC0_145_Z, R600::KC0_145_W, R600::KC0_146_X, R600::KC0_146_Y, R600::KC0_146_Z, R600::KC0_146_W, R600::KC0_147_X, R600::KC0_147_Y, R600::KC0_147_Z, R600::KC0_147_W, R600::KC0_148_X, R600::KC0_148_Y, R600::KC0_148_Z, R600::KC0_148_W, R600::KC0_149_X, R600::KC0_149_Y, R600::KC0_149_Z, R600::KC0_149_W, R600::KC0_150_X, R600::KC0_150_Y, R600::KC0_150_Z, R600::KC0_150_W, R600::KC0_151_X, R600::KC0_151_Y, R600::KC0_151_Z, R600::KC0_151_W, R600::KC0_152_X, R600::KC0_152_Y, R600::KC0_152_Z, R600::KC0_152_W, R600::KC0_153_X, R600::KC0_153_Y, R600::KC0_153_Z, R600::KC0_153_W, R600::KC0_154_X, R600::KC0_154_Y, R600::KC0_154_Z, R600::KC0_154_W, R600::KC0_155_X, R600::KC0_155_Y, R600::KC0_155_Z, R600::KC0_155_W, R600::KC0_156_X, R600::KC0_156_Y, R600::KC0_156_Z, R600::KC0_156_W, R600::KC0_157_X, R600::KC0_157_Y, R600::KC0_157_Z, R600::KC0_157_W, R600::KC0_158_X, R600::KC0_158_Y, R600::KC0_158_Z, R600::KC0_158_W, R600::KC0_159_X, R600::KC0_159_Y, R600::KC0_159_Z, R600::KC0_159_W, R600::KC1_160_X, R600::KC1_160_Y, R600::KC1_160_Z, R600::KC1_160_W, R600::KC1_161_X, R600::KC1_161_Y, R600::KC1_161_Z, R600::KC1_161_W, R600::KC1_162_X, R600::KC1_162_Y, R600::KC1_162_Z, R600::KC1_162_W, R600::KC1_163_X, R600::KC1_163_Y, R600::KC1_163_Z, R600::KC1_163_W, R600::KC1_164_X, R600::KC1_164_Y, R600::KC1_164_Z, R600::KC1_164_W, R600::KC1_165_X, R600::KC1_165_Y, R600::KC1_165_Z, R600::KC1_165_W, R600::KC1_166_X, R600::KC1_166_Y, R600::KC1_166_Z, R600::KC1_166_W, R600::KC1_167_X, R600::KC1_167_Y, R600::KC1_167_Z, R600::KC1_167_W, R600::KC1_168_X, R600::KC1_168_Y, R600::KC1_168_Z, R600::KC1_168_W, R600::KC1_169_X, R600::KC1_169_Y, R600::KC1_169_Z, R600::KC1_169_W, R600::KC1_170_X, R600::KC1_170_Y, R600::KC1_170_Z, R600::KC1_170_W, R600::KC1_171_X, R600::KC1_171_Y, R600::KC1_171_Z, R600::KC1_171_W, R600::KC1_172_X, R600::KC1_172_Y, R600::KC1_172_Z, R600::KC1_172_W, R600::KC1_173_X, R600::KC1_173_Y, R600::KC1_173_Z, R600::KC1_173_W, R600::KC1_174_X, R600::KC1_174_Y, R600::KC1_174_Z, R600::KC1_174_W, R600::KC1_175_X, R600::KC1_175_Y, R600::KC1_175_Z, R600::KC1_175_W, R600::KC1_176_X, R600::KC1_176_Y, R600::KC1_176_Z, R600::KC1_176_W, R600::KC1_177_X, R600::KC1_177_Y, R600::KC1_177_Z, R600::KC1_177_W, R600::KC1_178_X, R600::KC1_178_Y, R600::KC1_178_Z, R600::KC1_178_W, R600::KC1_179_X, R600::KC1_179_Y, R600::KC1_179_Z, R600::KC1_179_W, R600::KC1_180_X, R600::KC1_180_Y, R600::KC1_180_Z, R600::KC1_180_W, R600::KC1_181_X, R600::KC1_181_Y, R600::KC1_181_Z, R600::KC1_181_W, R600::KC1_182_X, R600::KC1_182_Y, R600::KC1_182_Z, R600::KC1_182_W, R600::KC1_183_X, R600::KC1_183_Y, R600::KC1_183_Z, R600::KC1_183_W, R600::KC1_184_X, R600::KC1_184_Y, R600::KC1_184_Z, R600::KC1_184_W, R600::KC1_185_X, R600::KC1_185_Y, R600::KC1_185_Z, R600::KC1_185_W, R600::KC1_186_X, R600::KC1_186_Y, R600::KC1_186_Z, R600::KC1_186_W, R600::KC1_187_X, R600::KC1_187_Y, R600::KC1_187_Z, R600::KC1_187_W, R600::KC1_188_X, R600::KC1_188_Y, R600::KC1_188_Z, R600::KC1_188_W, R600::KC1_189_X, R600::KC1_189_Y, R600::KC1_189_Z, R600::KC1_189_W, R600::KC1_190_X, R600::KC1_190_Y, R600::KC1_190_Z, R600::KC1_190_W, R600::KC1_191_X, R600::KC1_191_Y, R600::KC1_191_Z, R600::KC1_191_W, R600::ZERO, R600::HALF, R600::ONE, R600::ONE_INT, R600::PV_X, R600::ALU_LITERAL_X, R600::NEG_ONE, R600::NEG_HALF, R600::ALU_CONST, R600::ALU_PARAM, R600::OQAP, R600::INDIRECT_BASE_ADDR, 
  };

  // R600_Reg32 Bit set.
  const uint8_t R600_Reg32Bits[] = {
    0xca, 0xf3, 0x02, 0xe4, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 
  };

  // R600_TReg32 Register Class...
  const MCPhysReg R600_TReg32[] = {
    R600::T0_X, R600::T0_Y, R600::T0_Z, R600::T0_W, R600::T1_X, R600::T1_Y, R600::T1_Z, R600::T1_W, R600::T2_X, R600::T2_Y, R600::T2_Z, R600::T2_W, R600::T3_X, R600::T3_Y, R600::T3_Z, R600::T3_W, R600::T4_X, R600::T4_Y, R600::T4_Z, R600::T4_W, R600::T5_X, R600::T5_Y, R600::T5_Z, R600::T5_W, R600::T6_X, R600::T6_Y, R600::T6_Z, R600::T6_W, R600::T7_X, R600::T7_Y, R600::T7_Z, R600::T7_W, R600::T8_X, R600::T8_Y, R600::T8_Z, R600::T8_W, R600::T9_X, R600::T9_Y, R600::T9_Z, R600::T9_W, R600::T10_X, R600::T10_Y, R600::T10_Z, R600::T10_W, R600::T11_X, R600::T11_Y, R600::T11_Z, R600::T11_W, R600::T12_X, R600::T12_Y, R600::T12_Z, R600::T12_W, R600::T13_X, R600::T13_Y, R600::T13_Z, R600::T13_W, R600::T14_X, R600::T14_Y, R600::T14_Z, R600::T14_W, R600::T15_X, R600::T15_Y, R600::T15_Z, R600::T15_W, R600::T16_X, R600::T16_Y, R600::T16_Z, R600::T16_W, R600::T17_X, R600::T17_Y, R600::T17_Z, R600::T17_W, R600::T18_X, R600::T18_Y, R600::T18_Z, R600::T18_W, R600::T19_X, R600::T19_Y, R600::T19_Z, R600::T19_W, R600::T20_X, R600::T20_Y, R600::T20_Z, R600::T20_W, R600::T21_X, R600::T21_Y, R600::T21_Z, R600::T21_W, R600::T22_X, R600::T22_Y, R600::T22_Z, R600::T22_W, R600::T23_X, R600::T23_Y, R600::T23_Z, R600::T23_W, R600::T24_X, R600::T24_Y, R600::T24_Z, R600::T24_W, R600::T25_X, R600::T25_Y, R600::T25_Z, R600::T25_W, R600::T26_X, R600::T26_Y, R600::T26_Z, R600::T26_W, R600::T27_X, R600::T27_Y, R600::T27_Z, R600::T27_W, R600::T28_X, R600::T28_Y, R600::T28_Z, R600::T28_W, R600::T29_X, R600::T29_Y, R600::T29_Z, R600::T29_W, R600::T30_X, R600::T30_Y, R600::T30_Z, R600::T30_W, R600::T31_X, R600::T31_Y, R600::T31_Z, R600::T31_W, R600::T32_X, R600::T32_Y, R600::T32_Z, R600::T32_W, R600::T33_X, R600::T33_Y, R600::T33_Z, R600::T33_W, R600::T34_X, R600::T34_Y, R600::T34_Z, R600::T34_W, R600::T35_X, R600::T35_Y, R600::T35_Z, R600::T35_W, R600::T36_X, R600::T36_Y, R600::T36_Z, R600::T36_W, R600::T37_X, R600::T37_Y, R600::T37_Z, R600::T37_W, R600::T38_X, R600::T38_Y, R600::T38_Z, R600::T38_W, R600::T39_X, R600::T39_Y, R600::T39_Z, R600::T39_W, R600::T40_X, R600::T40_Y, R600::T40_Z, R600::T40_W, R600::T41_X, R600::T41_Y, R600::T41_Z, R600::T41_W, R600::T42_X, R600::T42_Y, R600::T42_Z, R600::T42_W, R600::T43_X, R600::T43_Y, R600::T43_Z, R600::T43_W, R600::T44_X, R600::T44_Y, R600::T44_Z, R600::T44_W, R600::T45_X, R600::T45_Y, R600::T45_Z, R600::T45_W, R600::T46_X, R600::T46_Y, R600::T46_Z, R600::T46_W, R600::T47_X, R600::T47_Y, R600::T47_Z, R600::T47_W, R600::T48_X, R600::T48_Y, R600::T48_Z, R600::T48_W, R600::T49_X, R600::T49_Y, R600::T49_Z, R600::T49_W, R600::T50_X, R600::T50_Y, R600::T50_Z, R600::T50_W, R600::T51_X, R600::T51_Y, R600::T51_Z, R600::T51_W, R600::T52_X, R600::T52_Y, R600::T52_Z, R600::T52_W, R600::T53_X, R600::T53_Y, R600::T53_Z, R600::T53_W, R600::T54_X, R600::T54_Y, R600::T54_Z, R600::T54_W, R600::T55_X, R600::T55_Y, R600::T55_Z, R600::T55_W, R600::T56_X, R600::T56_Y, R600::T56_Z, R600::T56_W, R600::T57_X, R600::T57_Y, R600::T57_Z, R600::T57_W, R600::T58_X, R600::T58_Y, R600::T58_Z, R600::T58_W, R600::T59_X, R600::T59_Y, R600::T59_Z, R600::T59_W, R600::T60_X, R600::T60_Y, R600::T60_Z, R600::T60_W, R600::T61_X, R600::T61_Y, R600::T61_Z, R600::T61_W, R600::T62_X, R600::T62_Y, R600::T62_Z, R600::T62_W, R600::T63_X, R600::T63_Y, R600::T63_Z, R600::T63_W, R600::T64_X, R600::T64_Y, R600::T64_Z, R600::T64_W, R600::T65_X, R600::T65_Y, R600::T65_Z, R600::T65_W, R600::T66_X, R600::T66_Y, R600::T66_Z, R600::T66_W, R600::T67_X, R600::T67_Y, R600::T67_Z, R600::T67_W, R600::T68_X, R600::T68_Y, R600::T68_Z, R600::T68_W, R600::T69_X, R600::T69_Y, R600::T69_Z, R600::T69_W, R600::T70_X, R600::T70_Y, R600::T70_Z, R600::T70_W, R600::T71_X, R600::T71_Y, R600::T71_Z, R600::T71_W, R600::T72_X, R600::T72_Y, R600::T72_Z, R600::T72_W, R600::T73_X, R600::T73_Y, R600::T73_Z, R600::T73_W, R600::T74_X, R600::T74_Y, R600::T74_Z, R600::T74_W, R600::T75_X, R600::T75_Y, R600::T75_Z, R600::T75_W, R600::T76_X, R600::T76_Y, R600::T76_Z, R600::T76_W, R600::T77_X, R600::T77_Y, R600::T77_Z, R600::T77_W, R600::T78_X, R600::T78_Y, R600::T78_Z, R600::T78_W, R600::T79_X, R600::T79_Y, R600::T79_Z, R600::T79_W, R600::T80_X, R600::T80_Y, R600::T80_Z, R600::T80_W, R600::T81_X, R600::T81_Y, R600::T81_Z, R600::T81_W, R600::T82_X, R600::T82_Y, R600::T82_Z, R600::T82_W, R600::T83_X, R600::T83_Y, R600::T83_Z, R600::T83_W, R600::T84_X, R600::T84_Y, R600::T84_Z, R600::T84_W, R600::T85_X, R600::T85_Y, R600::T85_Z, R600::T85_W, R600::T86_X, R600::T86_Y, R600::T86_Z, R600::T86_W, R600::T87_X, R600::T87_Y, R600::T87_Z, R600::T87_W, R600::T88_X, R600::T88_Y, R600::T88_Z, R600::T88_W, R600::T89_X, R600::T89_Y, R600::T89_Z, R600::T89_W, R600::T90_X, R600::T90_Y, R600::T90_Z, R600::T90_W, R600::T91_X, R600::T91_Y, R600::T91_Z, R600::T91_W, R600::T92_X, R600::T92_Y, R600::T92_Z, R600::T92_W, R600::T93_X, R600::T93_Y, R600::T93_Z, R600::T93_W, R600::T94_X, R600::T94_Y, R600::T94_Z, R600::T94_W, R600::T95_X, R600::T95_Y, R600::T95_Z, R600::T95_W, R600::T96_X, R600::T96_Y, R600::T96_Z, R600::T96_W, R600::T97_X, R600::T97_Y, R600::T97_Z, R600::T97_W, R600::T98_X, R600::T98_Y, R600::T98_Z, R600::T98_W, R600::T99_X, R600::T99_Y, R600::T99_Z, R600::T99_W, R600::T100_X, R600::T100_Y, R600::T100_Z, R600::T100_W, R600::T101_X, R600::T101_Y, R600::T101_Z, R600::T101_W, R600::T102_X, R600::T102_Y, R600::T102_Z, R600::T102_W, R600::T103_X, R600::T103_Y, R600::T103_Z, R600::T103_W, R600::T104_X, R600::T104_Y, R600::T104_Z, R600::T104_W, R600::T105_X, R600::T105_Y, R600::T105_Z, R600::T105_W, R600::T106_X, R600::T106_Y, R600::T106_Z, R600::T106_W, R600::T107_X, R600::T107_Y, R600::T107_Z, R600::T107_W, R600::T108_X, R600::T108_Y, R600::T108_Z, R600::T108_W, R600::T109_X, R600::T109_Y, R600::T109_Z, R600::T109_W, R600::T110_X, R600::T110_Y, R600::T110_Z, R600::T110_W, R600::T111_X, R600::T111_Y, R600::T111_Z, R600::T111_W, R600::T112_X, R600::T112_Y, R600::T112_Z, R600::T112_W, R600::T113_X, R600::T113_Y, R600::T113_Z, R600::T113_W, R600::T114_X, R600::T114_Y, R600::T114_Z, R600::T114_W, R600::T115_X, R600::T115_Y, R600::T115_Z, R600::T115_W, R600::T116_X, R600::T116_Y, R600::T116_Z, R600::T116_W, R600::T117_X, R600::T117_Y, R600::T117_Z, R600::T117_W, R600::T118_X, R600::T118_Y, R600::T118_Z, R600::T118_W, R600::T119_X, R600::T119_Y, R600::T119_Z, R600::T119_W, R600::T120_X, R600::T120_Y, R600::T120_Z, R600::T120_W, R600::T121_X, R600::T121_Y, R600::T121_Z, R600::T121_W, R600::T122_X, R600::T122_Y, R600::T122_Z, R600::T122_W, R600::T123_X, R600::T123_Y, R600::T123_Z, R600::T123_W, R600::T124_X, R600::T124_Y, R600::T124_Z, R600::T124_W, R600::T125_X, R600::T125_Y, R600::T125_Z, R600::T125_W, R600::T126_X, R600::T126_Y, R600::T126_Z, R600::T126_W, R600::T127_X, R600::T127_Y, R600::T127_Z, R600::T127_W, R600::AR_X, 
  };

  // R600_TReg32 Bit set.
  const uint8_t R600_TReg32Bits[] = {
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 
  };

  // R600_TReg32_X Register Class...
  const MCPhysReg R600_TReg32_X[] = {
    R600::T0_X, R600::T1_X, R600::T2_X, R600::T3_X, R600::T4_X, R600::T5_X, R600::T6_X, R600::T7_X, R600::T8_X, R600::T9_X, R600::T10_X, R600::T11_X, R600::T12_X, R600::T13_X, R600::T14_X, R600::T15_X, R600::T16_X, R600::T17_X, R600::T18_X, R600::T19_X, R600::T20_X, R600::T21_X, R600::T22_X, R600::T23_X, R600::T24_X, R600::T25_X, R600::T26_X, R600::T27_X, R600::T28_X, R600::T29_X, R600::T30_X, R600::T31_X, R600::T32_X, R600::T33_X, R600::T34_X, R600::T35_X, R600::T36_X, R600::T37_X, R600::T38_X, R600::T39_X, R600::T40_X, R600::T41_X, R600::T42_X, R600::T43_X, R600::T44_X, R600::T45_X, R600::T46_X, R600::T47_X, R600::T48_X, R600::T49_X, R600::T50_X, R600::T51_X, R600::T52_X, R600::T53_X, R600::T54_X, R600::T55_X, R600::T56_X, R600::T57_X, R600::T58_X, R600::T59_X, R600::T60_X, R600::T61_X, R600::T62_X, R600::T63_X, R600::T64_X, R600::T65_X, R600::T66_X, R600::T67_X, R600::T68_X, R600::T69_X, R600::T70_X, R600::T71_X, R600::T72_X, R600::T73_X, R600::T74_X, R600::T75_X, R600::T76_X, R600::T77_X, R600::T78_X, R600::T79_X, R600::T80_X, R600::T81_X, R600::T82_X, R600::T83_X, R600::T84_X, R600::T85_X, R600::T86_X, R600::T87_X, R600::T88_X, R600::T89_X, R600::T90_X, R600::T91_X, R600::T92_X, R600::T93_X, R600::T94_X, R600::T95_X, R600::T96_X, R600::T97_X, R600::T98_X, R600::T99_X, R600::T100_X, R600::T101_X, R600::T102_X, R600::T103_X, R600::T104_X, R600::T105_X, R600::T106_X, R600::T107_X, R600::T108_X, R600::T109_X, R600::T110_X, R600::T111_X, R600::T112_X, R600::T113_X, R600::T114_X, R600::T115_X, R600::T116_X, R600::T117_X, R600::T118_X, R600::T119_X, R600::T120_X, R600::T121_X, R600::T122_X, R600::T123_X, R600::T124_X, R600::T125_X, R600::T126_X, R600::T127_X, R600::AR_X, 
  };

  // R600_TReg32_X Bit set.
  const uint8_t R600_TReg32_XBits[] = {
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 
  };

  // R600_Addr Register Class...
  const MCPhysReg R600_Addr[] = {
    R600::Addr0_X, R600::Addr1_X, R600::Addr2_X, R600::Addr3_X, R600::Addr4_X, R600::Addr5_X, R600::Addr6_X, R600::Addr7_X, R600::Addr8_X, R600::Addr9_X, R600::Addr10_X, R600::Addr11_X, R600::Addr12_X, R600::Addr13_X, R600::Addr14_X, R600::Addr15_X, R600::Addr16_X, R600::Addr17_X, R600::Addr18_X, R600::Addr19_X, R600::Addr20_X, R600::Addr21_X, R600::Addr22_X, R600::Addr23_X, R600::Addr24_X, R600::Addr25_X, R600::Addr26_X, R600::Addr27_X, R600::Addr28_X, R600::Addr29_X, R600::Addr30_X, R600::Addr31_X, R600::Addr32_X, R600::Addr33_X, R600::Addr34_X, R600::Addr35_X, R600::Addr36_X, R600::Addr37_X, R600::Addr38_X, R600::Addr39_X, R600::Addr40_X, R600::Addr41_X, R600::Addr42_X, R600::Addr43_X, R600::Addr44_X, R600::Addr45_X, R600::Addr46_X, R600::Addr47_X, R600::Addr48_X, R600::Addr49_X, R600::Addr50_X, R600::Addr51_X, R600::Addr52_X, R600::Addr53_X, R600::Addr54_X, R600::Addr55_X, R600::Addr56_X, R600::Addr57_X, R600::Addr58_X, R600::Addr59_X, R600::Addr60_X, R600::Addr61_X, R600::Addr62_X, R600::Addr63_X, R600::Addr64_X, R600::Addr65_X, R600::Addr66_X, R600::Addr67_X, R600::Addr68_X, R600::Addr69_X, R600::Addr70_X, R600::Addr71_X, R600::Addr72_X, R600::Addr73_X, R600::Addr74_X, R600::Addr75_X, R600::Addr76_X, R600::Addr77_X, R600::Addr78_X, R600::Addr79_X, R600::Addr80_X, R600::Addr81_X, R600::Addr82_X, R600::Addr83_X, R600::Addr84_X, R600::Addr85_X, R600::Addr86_X, R600::Addr87_X, R600::Addr88_X, R600::Addr89_X, R600::Addr90_X, R600::Addr91_X, R600::Addr92_X, R600::Addr93_X, R600::Addr94_X, R600::Addr95_X, R600::Addr96_X, R600::Addr97_X, R600::Addr98_X, R600::Addr99_X, R600::Addr100_X, R600::Addr101_X, R600::Addr102_X, R600::Addr103_X, R600::Addr104_X, R600::Addr105_X, R600::Addr106_X, R600::Addr107_X, R600::Addr108_X, R600::Addr109_X, R600::Addr110_X, R600::Addr111_X, R600::Addr112_X, R600::Addr113_X, R600::Addr114_X, R600::Addr115_X, R600::Addr116_X, R600::Addr117_X, R600::Addr118_X, R600::Addr119_X, R600::Addr120_X, R600::Addr121_X, R600::Addr122_X, R600::Addr123_X, R600::Addr124_X, R600::Addr125_X, R600::Addr126_X, R600::Addr127_X, 
  };

  // R600_Addr Bit set.
  const uint8_t R600_AddrBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 
  };

  // R600_KC0 Register Class...
  const MCPhysReg R600_KC0[] = {
    R600::KC0_128_X, R600::KC0_128_Y, R600::KC0_128_Z, R600::KC0_128_W, R600::KC0_129_X, R600::KC0_129_Y, R600::KC0_129_Z, R600::KC0_129_W, R600::KC0_130_X, R600::KC0_130_Y, R600::KC0_130_Z, R600::KC0_130_W, R600::KC0_131_X, R600::KC0_131_Y, R600::KC0_131_Z, R600::KC0_131_W, R600::KC0_132_X, R600::KC0_132_Y, R600::KC0_132_Z, R600::KC0_132_W, R600::KC0_133_X, R600::KC0_133_Y, R600::KC0_133_Z, R600::KC0_133_W, R600::KC0_134_X, R600::KC0_134_Y, R600::KC0_134_Z, R600::KC0_134_W, R600::KC0_135_X, R600::KC0_135_Y, R600::KC0_135_Z, R600::KC0_135_W, R600::KC0_136_X, R600::KC0_136_Y, R600::KC0_136_Z, R600::KC0_136_W, R600::KC0_137_X, R600::KC0_137_Y, R600::KC0_137_Z, R600::KC0_137_W, R600::KC0_138_X, R600::KC0_138_Y, R600::KC0_138_Z, R600::KC0_138_W, R600::KC0_139_X, R600::KC0_139_Y, R600::KC0_139_Z, R600::KC0_139_W, R600::KC0_140_X, R600::KC0_140_Y, R600::KC0_140_Z, R600::KC0_140_W, R600::KC0_141_X, R600::KC0_141_Y, R600::KC0_141_Z, R600::KC0_141_W, R600::KC0_142_X, R600::KC0_142_Y, R600::KC0_142_Z, R600::KC0_142_W, R600::KC0_143_X, R600::KC0_143_Y, R600::KC0_143_Z, R600::KC0_143_W, R600::KC0_144_X, R600::KC0_144_Y, R600::KC0_144_Z, R600::KC0_144_W, R600::KC0_145_X, R600::KC0_145_Y, R600::KC0_145_Z, R600::KC0_145_W, R600::KC0_146_X, R600::KC0_146_Y, R600::KC0_146_Z, R600::KC0_146_W, R600::KC0_147_X, R600::KC0_147_Y, R600::KC0_147_Z, R600::KC0_147_W, R600::KC0_148_X, R600::KC0_148_Y, R600::KC0_148_Z, R600::KC0_148_W, R600::KC0_149_X, R600::KC0_149_Y, R600::KC0_149_Z, R600::KC0_149_W, R600::KC0_150_X, R600::KC0_150_Y, R600::KC0_150_Z, R600::KC0_150_W, R600::KC0_151_X, R600::KC0_151_Y, R600::KC0_151_Z, R600::KC0_151_W, R600::KC0_152_X, R600::KC0_152_Y, R600::KC0_152_Z, R600::KC0_152_W, R600::KC0_153_X, R600::KC0_153_Y, R600::KC0_153_Z, R600::KC0_153_W, R600::KC0_154_X, R600::KC0_154_Y, R600::KC0_154_Z, R600::KC0_154_W, R600::KC0_155_X, R600::KC0_155_Y, R600::KC0_155_Z, R600::KC0_155_W, R600::KC0_156_X, R600::KC0_156_Y, R600::KC0_156_Z, R600::KC0_156_W, R600::KC0_157_X, R600::KC0_157_Y, R600::KC0_157_Z, R600::KC0_157_W, R600::KC0_158_X, R600::KC0_158_Y, R600::KC0_158_Z, R600::KC0_158_W, R600::KC0_159_X, R600::KC0_159_Y, R600::KC0_159_Z, R600::KC0_159_W, 
  };

  // R600_KC0 Bit set.
  const uint8_t R600_KC0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // R600_KC1 Register Class...
  const MCPhysReg R600_KC1[] = {
    R600::KC1_160_X, R600::KC1_160_Y, R600::KC1_160_Z, R600::KC1_160_W, R600::KC1_161_X, R600::KC1_161_Y, R600::KC1_161_Z, R600::KC1_161_W, R600::KC1_162_X, R600::KC1_162_Y, R600::KC1_162_Z, R600::KC1_162_W, R600::KC1_163_X, R600::KC1_163_Y, R600::KC1_163_Z, R600::KC1_163_W, R600::KC1_164_X, R600::KC1_164_Y, R600::KC1_164_Z, R600::KC1_164_W, R600::KC1_165_X, R600::KC1_165_Y, R600::KC1_165_Z, R600::KC1_165_W, R600::KC1_166_X, R600::KC1_166_Y, R600::KC1_166_Z, R600::KC1_166_W, R600::KC1_167_X, R600::KC1_167_Y, R600::KC1_167_Z, R600::KC1_167_W, R600::KC1_168_X, R600::KC1_168_Y, R600::KC1_168_Z, R600::KC1_168_W, R600::KC1_169_X, R600::KC1_169_Y, R600::KC1_169_Z, R600::KC1_169_W, R600::KC1_170_X, R600::KC1_170_Y, R600::KC1_170_Z, R600::KC1_170_W, R600::KC1_171_X, R600::KC1_171_Y, R600::KC1_171_Z, R600::KC1_171_W, R600::KC1_172_X, R600::KC1_172_Y, R600::KC1_172_Z, R600::KC1_172_W, R600::KC1_173_X, R600::KC1_173_Y, R600::KC1_173_Z, R600::KC1_173_W, R600::KC1_174_X, R600::KC1_174_Y, R600::KC1_174_Z, R600::KC1_174_W, R600::KC1_175_X, R600::KC1_175_Y, R600::KC1_175_Z, R600::KC1_175_W, R600::KC1_176_X, R600::KC1_176_Y, R600::KC1_176_Z, R600::KC1_176_W, R600::KC1_177_X, R600::KC1_177_Y, R600::KC1_177_Z, R600::KC1_177_W, R600::KC1_178_X, R600::KC1_178_Y, R600::KC1_178_Z, R600::KC1_178_W, R600::KC1_179_X, R600::KC1_179_Y, R600::KC1_179_Z, R600::KC1_179_W, R600::KC1_180_X, R600::KC1_180_Y, R600::KC1_180_Z, R600::KC1_180_W, R600::KC1_181_X, R600::KC1_181_Y, R600::KC1_181_Z, R600::KC1_181_W, R600::KC1_182_X, R600::KC1_182_Y, R600::KC1_182_Z, R600::KC1_182_W, R600::KC1_183_X, R600::KC1_183_Y, R600::KC1_183_Z, R600::KC1_183_W, R600::KC1_184_X, R600::KC1_184_Y, R600::KC1_184_Z, R600::KC1_184_W, R600::KC1_185_X, R600::KC1_185_Y, R600::KC1_185_Z, R600::KC1_185_W, R600::KC1_186_X, R600::KC1_186_Y, R600::KC1_186_Z, R600::KC1_186_W, R600::KC1_187_X, R600::KC1_187_Y, R600::KC1_187_Z, R600::KC1_187_W, R600::KC1_188_X, R600::KC1_188_Y, R600::KC1_188_Z, R600::KC1_188_W, R600::KC1_189_X, R600::KC1_189_Y, R600::KC1_189_Z, R600::KC1_189_W, R600::KC1_190_X, R600::KC1_190_Y, R600::KC1_190_Z, R600::KC1_190_W, R600::KC1_191_X, R600::KC1_191_Y, R600::KC1_191_Z, R600::KC1_191_W, 
  };

  // R600_KC1 Bit set.
  const uint8_t R600_KC1Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // R600_TReg32_W Register Class...
  const MCPhysReg R600_TReg32_W[] = {
    R600::T0_W, R600::T1_W, R600::T2_W, R600::T3_W, R600::T4_W, R600::T5_W, R600::T6_W, R600::T7_W, R600::T8_W, R600::T9_W, R600::T10_W, R600::T11_W, R600::T12_W, R600::T13_W, R600::T14_W, R600::T15_W, R600::T16_W, R600::T17_W, R600::T18_W, R600::T19_W, R600::T20_W, R600::T21_W, R600::T22_W, R600::T23_W, R600::T24_W, R600::T25_W, R600::T26_W, R600::T27_W, R600::T28_W, R600::T29_W, R600::T30_W, R600::T31_W, R600::T32_W, R600::T33_W, R600::T34_W, R600::T35_W, R600::T36_W, R600::T37_W, R600::T38_W, R600::T39_W, R600::T40_W, R600::T41_W, R600::T42_W, R600::T43_W, R600::T44_W, R600::T45_W, R600::T46_W, R600::T47_W, R600::T48_W, R600::T49_W, R600::T50_W, R600::T51_W, R600::T52_W, R600::T53_W, R600::T54_W, R600::T55_W, R600::T56_W, R600::T57_W, R600::T58_W, R600::T59_W, R600::T60_W, R600::T61_W, R600::T62_W, R600::T63_W, R600::T64_W, R600::T65_W, R600::T66_W, R600::T67_W, R600::T68_W, R600::T69_W, R600::T70_W, R600::T71_W, R600::T72_W, R600::T73_W, R600::T74_W, R600::T75_W, R600::T76_W, R600::T77_W, R600::T78_W, R600::T79_W, R600::T80_W, R600::T81_W, R600::T82_W, R600::T83_W, R600::T84_W, R600::T85_W, R600::T86_W, R600::T87_W, R600::T88_W, R600::T89_W, R600::T90_W, R600::T91_W, R600::T92_W, R600::T93_W, R600::T94_W, R600::T95_W, R600::T96_W, R600::T97_W, R600::T98_W, R600::T99_W, R600::T100_W, R600::T101_W, R600::T102_W, R600::T103_W, R600::T104_W, R600::T105_W, R600::T106_W, R600::T107_W, R600::T108_W, R600::T109_W, R600::T110_W, R600::T111_W, R600::T112_W, R600::T113_W, R600::T114_W, R600::T115_W, R600::T116_W, R600::T117_W, R600::T118_W, R600::T119_W, R600::T120_W, R600::T121_W, R600::T122_W, R600::T123_W, R600::T124_W, R600::T125_W, R600::T126_W, R600::T127_W, 
  };

  // R600_TReg32_W Bit set.
  const uint8_t R600_TReg32_WBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 
  };

  // R600_TReg32_Y Register Class...
  const MCPhysReg R600_TReg32_Y[] = {
    R600::T0_Y, R600::T1_Y, R600::T2_Y, R600::T3_Y, R600::T4_Y, R600::T5_Y, R600::T6_Y, R600::T7_Y, R600::T8_Y, R600::T9_Y, R600::T10_Y, R600::T11_Y, R600::T12_Y, R600::T13_Y, R600::T14_Y, R600::T15_Y, R600::T16_Y, R600::T17_Y, R600::T18_Y, R600::T19_Y, R600::T20_Y, R600::T21_Y, R600::T22_Y, R600::T23_Y, R600::T24_Y, R600::T25_Y, R600::T26_Y, R600::T27_Y, R600::T28_Y, R600::T29_Y, R600::T30_Y, R600::T31_Y, R600::T32_Y, R600::T33_Y, R600::T34_Y, R600::T35_Y, R600::T36_Y, R600::T37_Y, R600::T38_Y, R600::T39_Y, R600::T40_Y, R600::T41_Y, R600::T42_Y, R600::T43_Y, R600::T44_Y, R600::T45_Y, R600::T46_Y, R600::T47_Y, R600::T48_Y, R600::T49_Y, R600::T50_Y, R600::T51_Y, R600::T52_Y, R600::T53_Y, R600::T54_Y, R600::T55_Y, R600::T56_Y, R600::T57_Y, R600::T58_Y, R600::T59_Y, R600::T60_Y, R600::T61_Y, R600::T62_Y, R600::T63_Y, R600::T64_Y, R600::T65_Y, R600::T66_Y, R600::T67_Y, R600::T68_Y, R600::T69_Y, R600::T70_Y, R600::T71_Y, R600::T72_Y, R600::T73_Y, R600::T74_Y, R600::T75_Y, R600::T76_Y, R600::T77_Y, R600::T78_Y, R600::T79_Y, R600::T80_Y, R600::T81_Y, R600::T82_Y, R600::T83_Y, R600::T84_Y, R600::T85_Y, R600::T86_Y, R600::T87_Y, R600::T88_Y, R600::T89_Y, R600::T90_Y, R600::T91_Y, R600::T92_Y, R600::T93_Y, R600::T94_Y, R600::T95_Y, R600::T96_Y, R600::T97_Y, R600::T98_Y, R600::T99_Y, R600::T100_Y, R600::T101_Y, R600::T102_Y, R600::T103_Y, R600::T104_Y, R600::T105_Y, R600::T106_Y, R600::T107_Y, R600::T108_Y, R600::T109_Y, R600::T110_Y, R600::T111_Y, R600::T112_Y, R600::T113_Y, R600::T114_Y, R600::T115_Y, R600::T116_Y, R600::T117_Y, R600::T118_Y, R600::T119_Y, R600::T120_Y, R600::T121_Y, R600::T122_Y, R600::T123_Y, R600::T124_Y, R600::T125_Y, R600::T126_Y, R600::T127_Y, 
  };

  // R600_TReg32_Y Bit set.
  const uint8_t R600_TReg32_YBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 
  };

  // R600_TReg32_Z Register Class...
  const MCPhysReg R600_TReg32_Z[] = {
    R600::T0_Z, R600::T1_Z, R600::T2_Z, R600::T3_Z, R600::T4_Z, R600::T5_Z, R600::T6_Z, R600::T7_Z, R600::T8_Z, R600::T9_Z, R600::T10_Z, R600::T11_Z, R600::T12_Z, R600::T13_Z, R600::T14_Z, R600::T15_Z, R600::T16_Z, R600::T17_Z, R600::T18_Z, R600::T19_Z, R600::T20_Z, R600::T21_Z, R600::T22_Z, R600::T23_Z, R600::T24_Z, R600::T25_Z, R600::T26_Z, R600::T27_Z, R600::T28_Z, R600::T29_Z, R600::T30_Z, R600::T31_Z, R600::T32_Z, R600::T33_Z, R600::T34_Z, R600::T35_Z, R600::T36_Z, R600::T37_Z, R600::T38_Z, R600::T39_Z, R600::T40_Z, R600::T41_Z, R600::T42_Z, R600::T43_Z, R600::T44_Z, R600::T45_Z, R600::T46_Z, R600::T47_Z, R600::T48_Z, R600::T49_Z, R600::T50_Z, R600::T51_Z, R600::T52_Z, R600::T53_Z, R600::T54_Z, R600::T55_Z, R600::T56_Z, R600::T57_Z, R600::T58_Z, R600::T59_Z, R600::T60_Z, R600::T61_Z, R600::T62_Z, R600::T63_Z, R600::T64_Z, R600::T65_Z, R600::T66_Z, R600::T67_Z, R600::T68_Z, R600::T69_Z, R600::T70_Z, R600::T71_Z, R600::T72_Z, R600::T73_Z, R600::T74_Z, R600::T75_Z, R600::T76_Z, R600::T77_Z, R600::T78_Z, R600::T79_Z, R600::T80_Z, R600::T81_Z, R600::T82_Z, R600::T83_Z, R600::T84_Z, R600::T85_Z, R600::T86_Z, R600::T87_Z, R600::T88_Z, R600::T89_Z, R600::T90_Z, R600::T91_Z, R600::T92_Z, R600::T93_Z, R600::T94_Z, R600::T95_Z, R600::T96_Z, R600::T97_Z, R600::T98_Z, R600::T99_Z, R600::T100_Z, R600::T101_Z, R600::T102_Z, R600::T103_Z, R600::T104_Z, R600::T105_Z, R600::T106_Z, R600::T107_Z, R600::T108_Z, R600::T109_Z, R600::T110_Z, R600::T111_Z, R600::T112_Z, R600::T113_Z, R600::T114_Z, R600::T115_Z, R600::T116_Z, R600::T117_Z, R600::T118_Z, R600::T119_Z, R600::T120_Z, R600::T121_Z, R600::T122_Z, R600::T123_Z, R600::T124_Z, R600::T125_Z, R600::T126_Z, R600::T127_Z, 
  };

  // R600_TReg32_Z Bit set.
  const uint8_t R600_TReg32_ZBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 
  };

  // R600_ArrayBase Register Class...
  const MCPhysReg R600_ArrayBase[] = {
    R600::ArrayBase448, R600::ArrayBase449, R600::ArrayBase450, R600::ArrayBase451, R600::ArrayBase452, R600::ArrayBase453, R600::ArrayBase454, R600::ArrayBase455, R600::ArrayBase456, R600::ArrayBase457, R600::ArrayBase458, R600::ArrayBase459, R600::ArrayBase460, R600::ArrayBase461, R600::ArrayBase462, R600::ArrayBase463, R600::ArrayBase464, R600::ArrayBase465, R600::ArrayBase466, R600::ArrayBase467, R600::ArrayBase468, R600::ArrayBase469, R600::ArrayBase470, R600::ArrayBase471, R600::ArrayBase472, R600::ArrayBase473, R600::ArrayBase474, R600::ArrayBase475, R600::ArrayBase476, R600::ArrayBase477, R600::ArrayBase478, R600::ArrayBase479, R600::ArrayBase480, 
  };

  // R600_ArrayBase Bit set.
  const uint8_t R600_ArrayBaseBits[] = {
    0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x7f, 
  };

  // R600_KC0_W Register Class...
  const MCPhysReg R600_KC0_W[] = {
    R600::KC0_128_W, R600::KC0_129_W, R600::KC0_130_W, R600::KC0_131_W, R600::KC0_132_W, R600::KC0_133_W, R600::KC0_134_W, R600::KC0_135_W, R600::KC0_136_W, R600::KC0_137_W, R600::KC0_138_W, R600::KC0_139_W, R600::KC0_140_W, R600::KC0_141_W, R600::KC0_142_W, R600::KC0_143_W, R600::KC0_144_W, R600::KC0_145_W, R600::KC0_146_W, R600::KC0_147_W, R600::KC0_148_W, R600::KC0_149_W, R600::KC0_150_W, R600::KC0_151_W, R600::KC0_152_W, R600::KC0_153_W, R600::KC0_154_W, R600::KC0_155_W, R600::KC0_156_W, R600::KC0_157_W, R600::KC0_158_W, R600::KC0_159_W, 
  };

  // R600_KC0_W Bit set.
  const uint8_t R600_KC0_WBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // R600_KC0_X Register Class...
  const MCPhysReg R600_KC0_X[] = {
    R600::KC0_128_X, R600::KC0_129_X, R600::KC0_130_X, R600::KC0_131_X, R600::KC0_132_X, R600::KC0_133_X, R600::KC0_134_X, R600::KC0_135_X, R600::KC0_136_X, R600::KC0_137_X, R600::KC0_138_X, R600::KC0_139_X, R600::KC0_140_X, R600::KC0_141_X, R600::KC0_142_X, R600::KC0_143_X, R600::KC0_144_X, R600::KC0_145_X, R600::KC0_146_X, R600::KC0_147_X, R600::KC0_148_X, R600::KC0_149_X, R600::KC0_150_X, R600::KC0_151_X, R600::KC0_152_X, R600::KC0_153_X, R600::KC0_154_X, R600::KC0_155_X, R600::KC0_156_X, R600::KC0_157_X, R600::KC0_158_X, R600::KC0_159_X, 
  };

  // R600_KC0_X Bit set.
  const uint8_t R600_KC0_XBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // R600_KC0_Y Register Class...
  const MCPhysReg R600_KC0_Y[] = {
    R600::KC0_128_Y, R600::KC0_129_Y, R600::KC0_130_Y, R600::KC0_131_Y, R600::KC0_132_Y, R600::KC0_133_Y, R600::KC0_134_Y, R600::KC0_135_Y, R600::KC0_136_Y, R600::KC0_137_Y, R600::KC0_138_Y, R600::KC0_139_Y, R600::KC0_140_Y, R600::KC0_141_Y, R600::KC0_142_Y, R600::KC0_143_Y, R600::KC0_144_Y, R600::KC0_145_Y, R600::KC0_146_Y, R600::KC0_147_Y, R600::KC0_148_Y, R600::KC0_149_Y, R600::KC0_150_Y, R600::KC0_151_Y, R600::KC0_152_Y, R600::KC0_153_Y, R600::KC0_154_Y, R600::KC0_155_Y, R600::KC0_156_Y, R600::KC0_157_Y, R600::KC0_158_Y, R600::KC0_159_Y, 
  };

  // R600_KC0_Y Bit set.
  const uint8_t R600_KC0_YBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // R600_KC0_Z Register Class...
  const MCPhysReg R600_KC0_Z[] = {
    R600::KC0_128_Z, R600::KC0_129_Z, R600::KC0_130_Z, R600::KC0_131_Z, R600::KC0_132_Z, R600::KC0_133_Z, R600::KC0_134_Z, R600::KC0_135_Z, R600::KC0_136_Z, R600::KC0_137_Z, R600::KC0_138_Z, R600::KC0_139_Z, R600::KC0_140_Z, R600::KC0_141_Z, R600::KC0_142_Z, R600::KC0_143_Z, R600::KC0_144_Z, R600::KC0_145_Z, R600::KC0_146_Z, R600::KC0_147_Z, R600::KC0_148_Z, R600::KC0_149_Z, R600::KC0_150_Z, R600::KC0_151_Z, R600::KC0_152_Z, R600::KC0_153_Z, R600::KC0_154_Z, R600::KC0_155_Z, R600::KC0_156_Z, R600::KC0_157_Z, R600::KC0_158_Z, R600::KC0_159_Z, 
  };

  // R600_KC0_Z Bit set.
  const uint8_t R600_KC0_ZBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // R600_KC1_W Register Class...
  const MCPhysReg R600_KC1_W[] = {
    R600::KC1_160_W, R600::KC1_161_W, R600::KC1_162_W, R600::KC1_163_W, R600::KC1_164_W, R600::KC1_165_W, R600::KC1_166_W, R600::KC1_167_W, R600::KC1_168_W, R600::KC1_169_W, R600::KC1_170_W, R600::KC1_171_W, R600::KC1_172_W, R600::KC1_173_W, R600::KC1_174_W, R600::KC1_175_W, R600::KC1_176_W, R600::KC1_177_W, R600::KC1_178_W, R600::KC1_179_W, R600::KC1_180_W, R600::KC1_181_W, R600::KC1_182_W, R600::KC1_183_W, R600::KC1_184_W, R600::KC1_185_W, R600::KC1_186_W, R600::KC1_187_W, R600::KC1_188_W, R600::KC1_189_W, R600::KC1_190_W, R600::KC1_191_W, 
  };

  // R600_KC1_W Bit set.
  const uint8_t R600_KC1_WBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // R600_KC1_X Register Class...
  const MCPhysReg R600_KC1_X[] = {
    R600::KC1_160_X, R600::KC1_161_X, R600::KC1_162_X, R600::KC1_163_X, R600::KC1_164_X, R600::KC1_165_X, R600::KC1_166_X, R600::KC1_167_X, R600::KC1_168_X, R600::KC1_169_X, R600::KC1_170_X, R600::KC1_171_X, R600::KC1_172_X, R600::KC1_173_X, R600::KC1_174_X, R600::KC1_175_X, R600::KC1_176_X, R600::KC1_177_X, R600::KC1_178_X, R600::KC1_179_X, R600::KC1_180_X, R600::KC1_181_X, R600::KC1_182_X, R600::KC1_183_X, R600::KC1_184_X, R600::KC1_185_X, R600::KC1_186_X, R600::KC1_187_X, R600::KC1_188_X, R600::KC1_189_X, R600::KC1_190_X, R600::KC1_191_X, 
  };

  // R600_KC1_X Bit set.
  const uint8_t R600_KC1_XBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // R600_KC1_Y Register Class...
  const MCPhysReg R600_KC1_Y[] = {
    R600::KC1_160_Y, R600::KC1_161_Y, R600::KC1_162_Y, R600::KC1_163_Y, R600::KC1_164_Y, R600::KC1_165_Y, R600::KC1_166_Y, R600::KC1_167_Y, R600::KC1_168_Y, R600::KC1_169_Y, R600::KC1_170_Y, R600::KC1_171_Y, R600::KC1_172_Y, R600::KC1_173_Y, R600::KC1_174_Y, R600::KC1_175_Y, R600::KC1_176_Y, R600::KC1_177_Y, R600::KC1_178_Y, R600::KC1_179_Y, R600::KC1_180_Y, R600::KC1_181_Y, R600::KC1_182_Y, R600::KC1_183_Y, R600::KC1_184_Y, R600::KC1_185_Y, R600::KC1_186_Y, R600::KC1_187_Y, R600::KC1_188_Y, R600::KC1_189_Y, R600::KC1_190_Y, R600::KC1_191_Y, 
  };

  // R600_KC1_Y Bit set.
  const uint8_t R600_KC1_YBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // R600_KC1_Z Register Class...
  const MCPhysReg R600_KC1_Z[] = {
    R600::KC1_160_Z, R600::KC1_161_Z, R600::KC1_162_Z, R600::KC1_163_Z, R600::KC1_164_Z, R600::KC1_165_Z, R600::KC1_166_Z, R600::KC1_167_Z, R600::KC1_168_Z, R600::KC1_169_Z, R600::KC1_170_Z, R600::KC1_171_Z, R600::KC1_172_Z, R600::KC1_173_Z, R600::KC1_174_Z, R600::KC1_175_Z, R600::KC1_176_Z, R600::KC1_177_Z, R600::KC1_178_Z, R600::KC1_179_Z, R600::KC1_180_Z, R600::KC1_181_Z, R600::KC1_182_Z, R600::KC1_183_Z, R600::KC1_184_Z, R600::KC1_185_Z, R600::KC1_186_Z, R600::KC1_187_Z, R600::KC1_188_Z, R600::KC1_189_Z, R600::KC1_190_Z, R600::KC1_191_Z, 
  };

  // R600_KC1_Z Bit set.
  const uint8_t R600_KC1_ZBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // R600_LDS_SRC_REG Register Class...
  const MCPhysReg R600_LDS_SRC_REG[] = {
    R600::OQA, R600::OQB, R600::OQAP, R600::OQBP, R600::LDS_DIRECT_A, R600::LDS_DIRECT_B, 
  };

  // R600_LDS_SRC_REG Bit set.
  const uint8_t R600_LDS_SRC_REGBits[] = {
    0x00, 0x0c, 0x0f, 
  };

  // R600_Predicate Register Class...
  const MCPhysReg R600_Predicate[] = {
    R600::PRED_SEL_OFF, R600::PRED_SEL_ZERO, R600::PRED_SEL_ONE, 
  };

  // R600_Predicate Bit set.
  const uint8_t R600_PredicateBits[] = {
    0x00, 0x00, 0xe0, 
  };

  // R600_Addr_W Register Class...
  const MCPhysReg R600_Addr_W[] = {
    R600::Addr0_W, 
  };

  // R600_Addr_W Bit set.
  const uint8_t R600_Addr_WBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  };

  // R600_Addr_Y Register Class...
  const MCPhysReg R600_Addr_Y[] = {
    R600::Addr0_Y, 
  };

  // R600_Addr_Y Bit set.
  const uint8_t R600_Addr_YBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  };

  // R600_Addr_Z Register Class...
  const MCPhysReg R600_Addr_Z[] = {
    R600::Addr0_Z, 
  };

  // R600_Addr_Z Bit set.
  const uint8_t R600_Addr_ZBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  };

  // R600_LDS_SRC_REG_and_R600_Reg32 Register Class...
  const MCPhysReg R600_LDS_SRC_REG_and_R600_Reg32[] = {
    R600::OQAP, 
  };

  // R600_LDS_SRC_REG_and_R600_Reg32 Bit set.
  const uint8_t R600_LDS_SRC_REG_and_R600_Reg32Bits[] = {
    0x00, 0x00, 0x02, 
  };

  // R600_Predicate_Bit Register Class...
  const MCPhysReg R600_Predicate_Bit[] = {
    R600::PREDICATE_BIT, 
  };

  // R600_Predicate_Bit Bit set.
  const uint8_t R600_Predicate_BitBits[] = {
    0x00, 0x00, 0x10, 
  };

  // R600_Reg64 Register Class...
  const MCPhysReg R600_Reg64[] = {
    R600::T0_XY, R600::T1_XY, R600::T2_XY, R600::T3_XY, R600::T4_XY, R600::T5_XY, R600::T6_XY, R600::T7_XY, R600::T8_XY, R600::T9_XY, R600::T10_XY, R600::T11_XY, R600::T12_XY, R600::T13_XY, R600::T14_XY, R600::T15_XY, R600::T16_XY, R600::T17_XY, R600::T18_XY, R600::T19_XY, R600::T20_XY, R600::T21_XY, R600::T22_XY, R600::T23_XY, R600::T24_XY, R600::T25_XY, R600::T26_XY, R600::T27_XY, R600::T28_XY, R600::T29_XY, R600::T30_XY, R600::T31_XY, R600::T32_XY, R600::T33_XY, R600::T34_XY, R600::T35_XY, R600::T36_XY, R600::T37_XY, R600::T38_XY, R600::T39_XY, R600::T40_XY, R600::T41_XY, R600::T42_XY, R600::T43_XY, R600::T44_XY, R600::T45_XY, R600::T46_XY, R600::T47_XY, R600::T48_XY, R600::T49_XY, R600::T50_XY, R600::T51_XY, R600::T52_XY, R600::T53_XY, R600::T54_XY, R600::T55_XY, R600::T56_XY, R600::T57_XY, R600::T58_XY, R600::T59_XY, R600::T60_XY, R600::T61_XY, R600::T62_XY, R600::T63_XY, 
  };

  // R600_Reg64 Bit set.
  const uint8_t R600_Reg64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 
  };

  // R600_Reg64Vertical Register Class...
  const MCPhysReg R600_Reg64Vertical[] = {
    R600::V01_X, R600::V01_Y, R600::V01_Z, R600::V01_W, R600::V23_X, R600::V23_Y, R600::V23_Z, R600::V23_W, 
  };

  // R600_Reg64Vertical Bit set.
  const uint8_t R600_Reg64VerticalBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x6d, 0x03, 
  };

  // R600_Reg64Vertical_with_sub0_in_R600_TReg32_W Register Class...
  const MCPhysReg R600_Reg64Vertical_with_sub0_in_R600_TReg32_W[] = {
    R600::V01_W, R600::V23_W, 
  };

  // R600_Reg64Vertical_with_sub0_in_R600_TReg32_W Bit set.
  const uint8_t R600_Reg64Vertical_with_sub0_in_R600_TReg32_WBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 
  };

  // R600_Reg64Vertical_with_sub0_in_R600_TReg32_X Register Class...
  const MCPhysReg R600_Reg64Vertical_with_sub0_in_R600_TReg32_X[] = {
    R600::V01_X, R600::V23_X, 
  };

  // R600_Reg64Vertical_with_sub0_in_R600_TReg32_X Bit set.
  const uint8_t R600_Reg64Vertical_with_sub0_in_R600_TReg32_XBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 
  };

  // R600_Reg64Vertical_with_sub0_in_R600_TReg32_Y Register Class...
  const MCPhysReg R600_Reg64Vertical_with_sub0_in_R600_TReg32_Y[] = {
    R600::V01_Y, R600::V23_Y, 
  };

  // R600_Reg64Vertical_with_sub0_in_R600_TReg32_Y Bit set.
  const uint8_t R600_Reg64Vertical_with_sub0_in_R600_TReg32_YBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 
  };

  // R600_Reg64Vertical_with_sub0_in_R600_TReg32_Z Register Class...
  const MCPhysReg R600_Reg64Vertical_with_sub0_in_R600_TReg32_Z[] = {
    R600::V01_Z, R600::V23_Z, 
  };

  // R600_Reg64Vertical_with_sub0_in_R600_TReg32_Z Bit set.
  const uint8_t R600_Reg64Vertical_with_sub0_in_R600_TReg32_ZBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
  };

  // R600_Reg128 Register Class...
  const MCPhysReg R600_Reg128[] = {
    R600::T0_XYZW, R600::T1_XYZW, R600::T2_XYZW, R600::T3_XYZW, R600::T4_XYZW, R600::T5_XYZW, R600::T6_XYZW, R600::T7_XYZW, R600::T8_XYZW, R600::T9_XYZW, R600::T10_XYZW, R600::T11_XYZW, R600::T12_XYZW, R600::T13_XYZW, R600::T14_XYZW, R600::T15_XYZW, R600::T16_XYZW, R600::T17_XYZW, R600::T18_XYZW, R600::T19_XYZW, R600::T20_XYZW, R600::T21_XYZW, R600::T22_XYZW, R600::T23_XYZW, R600::T24_XYZW, R600::T25_XYZW, R600::T26_XYZW, R600::T27_XYZW, R600::T28_XYZW, R600::T29_XYZW, R600::T30_XYZW, R600::T31_XYZW, R600::T32_XYZW, R600::T33_XYZW, R600::T34_XYZW, R600::T35_XYZW, R600::T36_XYZW, R600::T37_XYZW, R600::T38_XYZW, R600::T39_XYZW, R600::T40_XYZW, R600::T41_XYZW, R600::T42_XYZW, R600::T43_XYZW, R600::T44_XYZW, R600::T45_XYZW, R600::T46_XYZW, R600::T47_XYZW, R600::T48_XYZW, R600::T49_XYZW, R600::T50_XYZW, R600::T51_XYZW, R600::T52_XYZW, R600::T53_XYZW, R600::T54_XYZW, R600::T55_XYZW, R600::T56_XYZW, R600::T57_XYZW, R600::T58_XYZW, R600::T59_XYZW, R600::T60_XYZW, R600::T61_XYZW, R600::T62_XYZW, R600::T63_XYZW, R600::T64_XYZW, R600::T65_XYZW, R600::T66_XYZW, R600::T67_XYZW, R600::T68_XYZW, R600::T69_XYZW, R600::T70_XYZW, R600::T71_XYZW, R600::T72_XYZW, R600::T73_XYZW, R600::T74_XYZW, R600::T75_XYZW, R600::T76_XYZW, R600::T77_XYZW, R600::T78_XYZW, R600::T79_XYZW, R600::T80_XYZW, R600::T81_XYZW, R600::T82_XYZW, R600::T83_XYZW, R600::T84_XYZW, R600::T85_XYZW, R600::T86_XYZW, R600::T87_XYZW, R600::T88_XYZW, R600::T89_XYZW, R600::T90_XYZW, R600::T91_XYZW, R600::T92_XYZW, R600::T93_XYZW, R600::T94_XYZW, R600::T95_XYZW, R600::T96_XYZW, R600::T97_XYZW, R600::T98_XYZW, R600::T99_XYZW, R600::T100_XYZW, R600::T101_XYZW, R600::T102_XYZW, R600::T103_XYZW, R600::T104_XYZW, R600::T105_XYZW, R600::T106_XYZW, R600::T107_XYZW, R600::T108_XYZW, R600::T109_XYZW, R600::T110_XYZW, R600::T111_XYZW, R600::T112_XYZW, R600::T113_XYZW, R600::T114_XYZW, R600::T115_XYZW, R600::T116_XYZW, R600::T117_XYZW, R600::T118_XYZW, R600::T119_XYZW, R600::T120_XYZW, R600::T121_XYZW, R600::T122_XYZW, R600::T123_XYZW, R600::T124_XYZW, R600::T125_XYZW, R600::T126_XYZW, R600::T127_XYZW, 
  };

  // R600_Reg128 Bit set.
  const uint8_t R600_Reg128Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 
  };

  // R600_Reg128Vertical Register Class...
  const MCPhysReg R600_Reg128Vertical[] = {
    R600::V0123_W, R600::V0123_Z, R600::V0123_Y, R600::V0123_X, 
  };

  // R600_Reg128Vertical Bit set.
  const uint8_t R600_Reg128VerticalBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0x04, 
  };

  // R600_Reg128Vertical_with_sub0_in_R600_TReg32_W Register Class...
  const MCPhysReg R600_Reg128Vertical_with_sub0_in_R600_TReg32_W[] = {
    R600::V0123_W, 
  };

  // R600_Reg128Vertical_with_sub0_in_R600_TReg32_W Bit set.
  const uint8_t R600_Reg128Vertical_with_sub0_in_R600_TReg32_WBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 
  };

  // R600_Reg128Vertical_with_sub0_in_R600_TReg32_X Register Class...
  const MCPhysReg R600_Reg128Vertical_with_sub0_in_R600_TReg32_X[] = {
    R600::V0123_X, 
  };

  // R600_Reg128Vertical_with_sub0_in_R600_TReg32_X Bit set.
  const uint8_t R600_Reg128Vertical_with_sub0_in_R600_TReg32_XBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 
  };

  // R600_Reg128Vertical_with_sub0_in_R600_TReg32_Y Register Class...
  const MCPhysReg R600_Reg128Vertical_with_sub0_in_R600_TReg32_Y[] = {
    R600::V0123_Y, 
  };

  // R600_Reg128Vertical_with_sub0_in_R600_TReg32_Y Bit set.
  const uint8_t R600_Reg128Vertical_with_sub0_in_R600_TReg32_YBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  };

  // R600_Reg128Vertical_with_sub0_in_R600_TReg32_Z Register Class...
  const MCPhysReg R600_Reg128Vertical_with_sub0_in_R600_TReg32_Z[] = {
    R600::V0123_Z, 
  };

  // R600_Reg128Vertical_with_sub0_in_R600_TReg32_Z Bit set.
  const uint8_t R600_Reg128Vertical_with_sub0_in_R600_TReg32_ZBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
  };

} // end anonymous namespace

extern const char R600RegClassStrings[] = {
  /* 0 */ 'R', '6', '0', '0', '_', 'K', 'C', '0', 0,
  /* 9 */ 'R', '6', '0', '0', '_', 'K', 'C', '1', 0,
  /* 18 */ 'R', '6', '0', '0', '_', 'T', 'R', 'e', 'g', '3', '2', 0,
  /* 30 */ 'R', '6', '0', '0', '_', 'L', 'D', 'S', '_', 'S', 'R', 'C', '_', 'R', 'E', 'G', '_', 'a', 'n', 'd', '_', 'R', '6', '0', '0', '_', 'R', 'e', 'g', '3', '2', 0,
  /* 62 */ 'R', '6', '0', '0', '_', 'R', 'e', 'g', '6', '4', 0,
  /* 73 */ 'R', '6', '0', '0', '_', 'R', 'e', 'g', '1', '2', '8', 0,
  /* 85 */ 'R', '6', '0', '0', '_', 'L', 'D', 'S', '_', 'S', 'R', 'C', '_', 'R', 'E', 'G', 0,
  /* 102 */ 'R', '6', '0', '0', '_', 'K', 'C', '0', '_', 'W', 0,
  /* 113 */ 'R', '6', '0', '0', '_', 'K', 'C', '1', '_', 'W', 0,
  /* 124 */ 'R', '6', '0', '0', '_', 'R', 'e', 'g', '6', '4', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', '_', 'w', 'i', 't', 'h', '_', 's', 'u', 'b', '0', '_', 'i', 'n', '_', 'R', '6', '0', '0', '_', 'T', 'R', 'e', 'g', '3', '2', '_', 'W', 0,
  /* 170 */ 'R', '6', '0', '0', '_', 'R', 'e', 'g', '1', '2', '8', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', '_', 'w', 'i', 't', 'h', '_', 's', 'u', 'b', '0', '_', 'i', 'n', '_', 'R', '6', '0', '0', '_', 'T', 'R', 'e', 'g', '3', '2', '_', 'W', 0,
  /* 217 */ 'R', '6', '0', '0', '_', 'A', 'd', 'd', 'r', '_', 'W', 0,
  /* 229 */ 'R', '6', '0', '0', '_', 'K', 'C', '0', '_', 'X', 0,
  /* 240 */ 'R', '6', '0', '0', '_', 'K', 'C', '1', '_', 'X', 0,
  /* 251 */ 'R', '6', '0', '0', '_', 'R', 'e', 'g', '6', '4', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', '_', 'w', 'i', 't', 'h', '_', 's', 'u', 'b', '0', '_', 'i', 'n', '_', 'R', '6', '0', '0', '_', 'T', 'R', 'e', 'g', '3', '2', '_', 'X', 0,
  /* 297 */ 'R', '6', '0', '0', '_', 'R', 'e', 'g', '1', '2', '8', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', '_', 'w', 'i', 't', 'h', '_', 's', 'u', 'b', '0', '_', 'i', 'n', '_', 'R', '6', '0', '0', '_', 'T', 'R', 'e', 'g', '3', '2', '_', 'X', 0,
  /* 344 */ 'R', '6', '0', '0', '_', 'K', 'C', '0', '_', 'Y', 0,
  /* 355 */ 'R', '6', '0', '0', '_', 'K', 'C', '1', '_', 'Y', 0,
  /* 366 */ 'R', '6', '0', '0', '_', 'R', 'e', 'g', '6', '4', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', '_', 'w', 'i', 't', 'h', '_', 's', 'u', 'b', '0', '_', 'i', 'n', '_', 'R', '6', '0', '0', '_', 'T', 'R', 'e', 'g', '3', '2', '_', 'Y', 0,
  /* 412 */ 'R', '6', '0', '0', '_', 'R', 'e', 'g', '1', '2', '8', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', '_', 'w', 'i', 't', 'h', '_', 's', 'u', 'b', '0', '_', 'i', 'n', '_', 'R', '6', '0', '0', '_', 'T', 'R', 'e', 'g', '3', '2', '_', 'Y', 0,
  /* 459 */ 'R', '6', '0', '0', '_', 'A', 'd', 'd', 'r', '_', 'Y', 0,
  /* 471 */ 'R', '6', '0', '0', '_', 'K', 'C', '0', '_', 'Z', 0,
  /* 482 */ 'R', '6', '0', '0', '_', 'K', 'C', '1', '_', 'Z', 0,
  /* 493 */ 'R', '6', '0', '0', '_', 'R', 'e', 'g', '6', '4', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', '_', 'w', 'i', 't', 'h', '_', 's', 'u', 'b', '0', '_', 'i', 'n', '_', 'R', '6', '0', '0', '_', 'T', 'R', 'e', 'g', '3', '2', '_', 'Z', 0,
  /* 539 */ 'R', '6', '0', '0', '_', 'R', 'e', 'g', '1', '2', '8', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', '_', 'w', 'i', 't', 'h', '_', 's', 'u', 'b', '0', '_', 'i', 'n', '_', 'R', '6', '0', '0', '_', 'T', 'R', 'e', 'g', '3', '2', '_', 'Z', 0,
  /* 586 */ 'R', '6', '0', '0', '_', 'A', 'd', 'd', 'r', '_', 'Z', 0,
  /* 598 */ 'R', '6', '0', '0', '_', 'A', 'r', 'r', 'a', 'y', 'B', 'a', 's', 'e', 0,
  /* 613 */ 'R', '6', '0', '0', '_', 'P', 'r', 'e', 'd', 'i', 'c', 'a', 't', 'e', 0,
  /* 628 */ 'R', '6', '0', '0', '_', 'R', 'e', 'g', '6', '4', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 0,
  /* 647 */ 'R', '6', '0', '0', '_', 'R', 'e', 'g', '1', '2', '8', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 0,
  /* 667 */ 'R', '6', '0', '0', '_', 'A', 'd', 'd', 'r', 0,
  /* 677 */ 'R', '6', '0', '0', '_', 'P', 'r', 'e', 'd', 'i', 'c', 'a', 't', 'e', '_', 'B', 'i', 't', 0,
};

extern const MCRegisterClass R600MCRegisterClasses[] = {
  { R600_Reg32, R600_Reg32Bits, 51, 942, sizeof(R600_Reg32Bits), R600::R600_Reg32RegClassID, 1, true },
  { R600_TReg32, R600_TReg32Bits, 18, 513, sizeof(R600_TReg32Bits), R600::R600_TReg32RegClassID, 1, true },
  { R600_TReg32_X, R600_TReg32_XBits, 283, 129, sizeof(R600_TReg32_XBits), R600::R600_TReg32_XRegClassID, 1, true },
  { R600_Addr, R600_AddrBits, 667, 128, sizeof(R600_AddrBits), R600::R600_AddrRegClassID, 1, false },
  { R600_KC0, R600_KC0Bits, 0, 128, sizeof(R600_KC0Bits), R600::R600_KC0RegClassID, 1, false },
  { R600_KC1, R600_KC1Bits, 9, 128, sizeof(R600_KC1Bits), R600::R600_KC1RegClassID, 1, false },
  { R600_TReg32_W, R600_TReg32_WBits, 156, 128, sizeof(R600_TReg32_WBits), R600::R600_TReg32_WRegClassID, 1, true },
  { R600_TReg32_Y, R600_TReg32_YBits, 398, 128, sizeof(R600_TReg32_YBits), R600::R600_TReg32_YRegClassID, 1, true },
  { R600_TReg32_Z, R600_TReg32_ZBits, 525, 128, sizeof(R600_TReg32_ZBits), R600::R600_TReg32_ZRegClassID, 1, true },
  { R600_ArrayBase, R600_ArrayBaseBits, 598, 33, sizeof(R600_ArrayBaseBits), R600::R600_ArrayBaseRegClassID, 1, true },
  { R600_KC0_W, R600_KC0_WBits, 102, 32, sizeof(R600_KC0_WBits), R600::R600_KC0_WRegClassID, 1, false },
  { R600_KC0_X, R600_KC0_XBits, 229, 32, sizeof(R600_KC0_XBits), R600::R600_KC0_XRegClassID, 1, false },
  { R600_KC0_Y, R600_KC0_YBits, 344, 32, sizeof(R600_KC0_YBits), R600::R600_KC0_YRegClassID, 1, false },
  { R600_KC0_Z, R600_KC0_ZBits, 471, 32, sizeof(R600_KC0_ZBits), R600::R600_KC0_ZRegClassID, 1, false },
  { R600_KC1_W, R600_KC1_WBits, 113, 32, sizeof(R600_KC1_WBits), R600::R600_KC1_WRegClassID, 1, false },
  { R600_KC1_X, R600_KC1_XBits, 240, 32, sizeof(R600_KC1_XBits), R600::R600_KC1_XRegClassID, 1, false },
  { R600_KC1_Y, R600_KC1_YBits, 355, 32, sizeof(R600_KC1_YBits), R600::R600_KC1_YRegClassID, 1, false },
  { R600_KC1_Z, R600_KC1_ZBits, 482, 32, sizeof(R600_KC1_ZBits), R600::R600_KC1_ZRegClassID, 1, false },
  { R600_LDS_SRC_REG, R600_LDS_SRC_REGBits, 85, 6, sizeof(R600_LDS_SRC_REGBits), R600::R600_LDS_SRC_REGRegClassID, 1, false },
  { R600_Predicate, R600_PredicateBits, 613, 3, sizeof(R600_PredicateBits), R600::R600_PredicateRegClassID, 1, true },
  { R600_Addr_W, R600_Addr_WBits, 217, 1, sizeof(R600_Addr_WBits), R600::R600_Addr_WRegClassID, 1, false },
  { R600_Addr_Y, R600_Addr_YBits, 459, 1, sizeof(R600_Addr_YBits), R600::R600_Addr_YRegClassID, 1, false },
  { R600_Addr_Z, R600_Addr_ZBits, 586, 1, sizeof(R600_Addr_ZBits), R600::R600_Addr_ZRegClassID, 1, false },
  { R600_LDS_SRC_REG_and_R600_Reg32, R600_LDS_SRC_REG_and_R600_Reg32Bits, 30, 1, sizeof(R600_LDS_SRC_REG_and_R600_Reg32Bits), R600::R600_LDS_SRC_REG_and_R600_Reg32RegClassID, 1, false },
  { R600_Predicate_Bit, R600_Predicate_BitBits, 677, 1, sizeof(R600_Predicate_BitBits), R600::R600_Predicate_BitRegClassID, 1, true },
  { R600_Reg64, R600_Reg64Bits, 62, 64, sizeof(R600_Reg64Bits), R600::R600_Reg64RegClassID, 1, true },
  { R600_Reg64Vertical, R600_Reg64VerticalBits, 628, 8, sizeof(R600_Reg64VerticalBits), R600::R600_Reg64VerticalRegClassID, 1, true },
  { R600_Reg64Vertical_with_sub0_in_R600_TReg32_W, R600_Reg64Vertical_with_sub0_in_R600_TReg32_WBits, 124, 2, sizeof(R600_Reg64Vertical_with_sub0_in_R600_TReg32_WBits), R600::R600_Reg64Vertical_with_sub0_in_R600_TReg32_WRegClassID, 1, true },
  { R600_Reg64Vertical_with_sub0_in_R600_TReg32_X, R600_Reg64Vertical_with_sub0_in_R600_TReg32_XBits, 251, 2, sizeof(R600_Reg64Vertical_with_sub0_in_R600_TReg32_XBits), R600::R600_Reg64Vertical_with_sub0_in_R600_TReg32_XRegClassID, 1, true },
  { R600_Reg64Vertical_with_sub0_in_R600_TReg32_Y, R600_Reg64Vertical_with_sub0_in_R600_TReg32_YBits, 366, 2, sizeof(R600_Reg64Vertical_with_sub0_in_R600_TReg32_YBits), R600::R600_Reg64Vertical_with_sub0_in_R600_TReg32_YRegClassID, 1, true },
  { R600_Reg64Vertical_with_sub0_in_R600_TReg32_Z, R600_Reg64Vertical_with_sub0_in_R600_TReg32_ZBits, 493, 2, sizeof(R600_Reg64Vertical_with_sub0_in_R600_TReg32_ZBits), R600::R600_Reg64Vertical_with_sub0_in_R600_TReg32_ZRegClassID, 1, true },
  { R600_Reg128, R600_Reg128Bits, 73, 128, sizeof(R600_Reg128Bits), R600::R600_Reg128RegClassID, -1, true },
  { R600_Reg128Vertical, R600_Reg128VerticalBits, 647, 4, sizeof(R600_Reg128VerticalBits), R600::R600_Reg128VerticalRegClassID, 1, true },
  { R600_Reg128Vertical_with_sub0_in_R600_TReg32_W, R600_Reg128Vertical_with_sub0_in_R600_TReg32_WBits, 170, 1, sizeof(R600_Reg128Vertical_with_sub0_in_R600_TReg32_WBits), R600::R600_Reg128Vertical_with_sub0_in_R600_TReg32_WRegClassID, 1, true },
  { R600_Reg128Vertical_with_sub0_in_R600_TReg32_X, R600_Reg128Vertical_with_sub0_in_R600_TReg32_XBits, 297, 1, sizeof(R600_Reg128Vertical_with_sub0_in_R600_TReg32_XBits), R600::R600_Reg128Vertical_with_sub0_in_R600_TReg32_XRegClassID, 1, true },
  { R600_Reg128Vertical_with_sub0_in_R600_TReg32_Y, R600_Reg128Vertical_with_sub0_in_R600_TReg32_YBits, 412, 1, sizeof(R600_Reg128Vertical_with_sub0_in_R600_TReg32_YBits), R600::R600_Reg128Vertical_with_sub0_in_R600_TReg32_YRegClassID, 1, true },
  { R600_Reg128Vertical_with_sub0_in_R600_TReg32_Z, R600_Reg128Vertical_with_sub0_in_R600_TReg32_ZBits, 539, 1, sizeof(R600_Reg128Vertical_with_sub0_in_R600_TReg32_ZBits), R600::R600_Reg128Vertical_with_sub0_in_R600_TReg32_ZRegClassID, 1, true },
};

extern const uint16_t R600RegEncodingTable[] = {
  0,
  0,
  1789,
  253,
  765,
  1277,
  0,
  0,
  252,
  0,
  223,
  224,
  252,
  249,
  249,
  250,
  219,
  221,
  220,
  222,
  0,
  0,
  3,
  2,
  255,
  1790,
  254,
  766,
  1278,
  248,
  448,
  449,
  450,
  451,
  452,
  453,
  454,
  455,
  456,
  457,
  458,
  459,
  460,
  461,
  462,
  463,
  464,
  465,
  466,
  467,
  468,
  469,
  470,
  471,
  472,
  473,
  474,
  475,
  476,
  477,
  478,
  479,
  480,
  1536,
  1537,
  1538,
  1539,
  1540,
  1541,
  1542,
  1543,
  1544,
  1545,
  1546,
  1547,
  1548,
  1549,
  1550,
  1551,
  1552,
  1553,
  1554,
  1555,
  1556,
  1557,
  1558,
  1559,
  1560,
  1561,
  1562,
  1563,
  1564,
  1565,
  1566,
  1567,
  1568,
  1569,
  1570,
  1571,
  1572,
  1573,
  1574,
  1575,
  1576,
  1577,
  1578,
  1579,
  1580,
  1581,
  1582,
  1583,
  1584,
  1585,
  1586,
  1587,
  1588,
  1589,
  1590,
  1591,
  1592,
  1593,
  1594,
  1595,
  1596,
  1597,
  1598,
  1599,
  1600,
  1601,
  1602,
  1603,
  1604,
  1605,
  1606,
  1607,
  1608,
  1609,
  1610,
  1611,
  1612,
  1613,
  1614,
  1615,
  1616,
  1617,
  1618,
  1619,
  1620,
  1621,
  1622,
  1623,
  1624,
  1625,
  1626,
  1627,
  1628,
  1629,
  1630,
  1631,
  1632,
  1633,
  1634,
  1635,
  1636,
  1637,
  1638,
  1639,
  1640,
  1641,
  1642,
  1643,
  1644,
  1645,
  1646,
  1647,
  1648,
  1649,
  1650,
  1651,
  1652,
  1653,
  1654,
  1655,
  1656,
  1657,
  1658,
  1659,
  1660,
  1661,
  1662,
  1663,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  33,
  34,
  35,
  36,
  37,
  38,
  39,
  40,
  41,
  42,
  43,
  44,
  45,
  46,
  47,
  48,
  49,
  50,
  51,
  52,
  53,
  54,
  55,
  56,
  57,
  58,
  59,
  60,
  61,
  62,
  63,
  64,
  65,
  66,
  67,
  68,
  69,
  70,
  71,
  72,
  73,
  74,
  75,
  76,
  77,
  78,
  79,
  80,
  81,
  82,
  83,
  84,
  85,
  86,
  87,
  88,
  89,
  90,
  91,
  92,
  93,
  94,
  95,
  96,
  97,
  98,
  99,
  100,
  101,
  102,
  103,
  104,
  105,
  106,
  107,
  108,
  109,
  110,
  111,
  112,
  113,
  114,
  115,
  116,
  117,
  118,
  119,
  120,
  121,
  122,
  123,
  124,
  125,
  126,
  127,
  512,
  513,
  514,
  515,
  516,
  517,
  518,
  519,
  520,
  521,
  522,
  523,
  524,
  525,
  526,
  527,
  528,
  529,
  530,
  531,
  532,
  533,
  534,
  535,
  536,
  537,
  538,
  539,
  540,
  541,
  542,
  543,
  544,
  545,
  546,
  547,
  548,
  549,
  550,
  551,
  552,
  553,
  554,
  555,
  556,
  557,
  558,
  559,
  560,
  561,
  562,
  563,
  564,
  565,
  566,
  567,
  568,
  569,
  570,
  571,
  572,
  573,
  574,
  575,
  576,
  577,
  578,
  579,
  580,
  581,
  582,
  583,
  584,
  585,
  586,
  587,
  588,
  589,
  590,
  591,
  592,
  593,
  594,
  595,
  596,
  597,
  598,
  599,
  600,
  601,
  602,
  603,
  604,
  605,
  606,
  607,
  608,
  609,
  610,
  611,
  612,
  613,
  614,
  615,
  616,
  617,
  618,
  619,
  620,
  621,
  622,
  623,
  624,
  625,
  626,
  627,
  628,
  629,
  630,
  631,
  632,
  633,
  634,
  635,
  636,
  637,
  638,
  639,
  1024,
  1025,
  1026,
  1027,
  1028,
  1029,
  1030,
  1031,
  1032,
  1033,
  1034,
  1035,
  1036,
  1037,
  1038,
  1039,
  1040,
  1041,
  1042,
  1043,
  1044,
  1045,
  1046,
  1047,
  1048,
  1049,
  1050,
  1051,
  1052,
  1053,
  1054,
  1055,
  1056,
  1057,
  1058,
  1059,
  1060,
  1061,
  1062,
  1063,
  1064,
  1065,
  1066,
  1067,
  1068,
  1069,
  1070,
  1071,
  1072,
  1073,
  1074,
  1075,
  1076,
  1077,
  1078,
  1079,
  1080,
  1081,
  1082,
  1083,
  1084,
  1085,
  1086,
  1087,
  1088,
  1089,
  1090,
  1091,
  1092,
  1093,
  1094,
  1095,
  1096,
  1097,
  1098,
  1099,
  1100,
  1101,
  1102,
  1103,
  1104,
  1105,
  1106,
  1107,
  1108,
  1109,
  1110,
  1111,
  1112,
  1113,
  1114,
  1115,
  1116,
  1117,
  1118,
  1119,
  1120,
  1121,
  1122,
  1123,
  1124,
  1125,
  1126,
  1127,
  1128,
  1129,
  1130,
  1131,
  1132,
  1133,
  1134,
  1135,
  1136,
  1137,
  1138,
  1139,
  1140,
  1141,
  1142,
  1143,
  1144,
  1145,
  1146,
  1147,
  1148,
  1149,
  1150,
  1151,
  1536,
  1537,
  1538,
  1539,
  1540,
  1541,
  1542,
  1543,
  1544,
  1545,
  1546,
  1547,
  1548,
  1549,
  1550,
  1551,
  1552,
  1553,
  1554,
  1555,
  1556,
  1557,
  1558,
  1559,
  1560,
  1561,
  1562,
  1563,
  1564,
  1565,
  1566,
  1567,
  1568,
  1569,
  1570,
  1571,
  1572,
  1573,
  1574,
  1575,
  1576,
  1577,
  1578,
  1579,
  1580,
  1581,
  1582,
  1583,
  1584,
  1585,
  1586,
  1587,
  1588,
  1589,
  1590,
  1591,
  1592,
  1593,
  1594,
  1595,
  1596,
  1597,
  1598,
  1599,
  1600,
  1601,
  1602,
  1603,
  1604,
  1605,
  1606,
  1607,
  1608,
  1609,
  1610,
  1611,
  1612,
  1613,
  1614,
  1615,
  1616,
  1617,
  1618,
  1619,
  1620,
  1621,
  1622,
  1623,
  1624,
  1625,
  1626,
  1627,
  1628,
  1629,
  1630,
  1631,
  1632,
  1633,
  1634,
  1635,
  1636,
  1637,
  1638,
  1639,
  1640,
  1641,
  1642,
  1643,
  1644,
  1645,
  1646,
  1647,
  1648,
  1649,
  1650,
  1651,
  1652,
  1653,
  1654,
  1655,
  1656,
  1657,
  1658,
  1659,
  1660,
  1661,
  1662,
  1663,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  33,
  34,
  35,
  36,
  37,
  38,
  39,
  40,
  41,
  42,
  43,
  44,
  45,
  46,
  47,
  48,
  49,
  50,
  51,
  52,
  53,
  54,
  55,
  56,
  57,
  58,
  59,
  60,
  61,
  62,
  63,
  64,
  65,
  66,
  67,
  68,
  69,
  70,
  71,
  72,
  73,
  74,
  75,
  76,
  77,
  78,
  79,
  80,
  81,
  82,
  83,
  84,
  85,
  86,
  87,
  88,
  89,
  90,
  91,
  92,
  93,
  94,
  95,
  96,
  97,
  98,
  99,
  100,
  101,
  102,
  103,
  104,
  105,
  106,
  107,
  108,
  109,
  110,
  111,
  112,
  113,
  114,
  115,
  116,
  117,
  118,
  119,
  120,
  121,
  122,
  123,
  124,
  125,
  126,
  127,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  33,
  34,
  35,
  36,
  37,
  38,
  39,
  40,
  41,
  42,
  43,
  44,
  45,
  46,
  47,
  48,
  49,
  50,
  51,
  52,
  53,
  54,
  55,
  56,
  57,
  58,
  59,
  60,
  61,
  62,
  63,
  64,
  65,
  66,
  67,
  68,
  69,
  70,
  71,
  72,
  73,
  74,
  75,
  76,
  77,
  78,
  79,
  80,
  81,
  82,
  83,
  84,
  85,
  86,
  87,
  88,
  89,
  90,
  91,
  92,
  93,
  94,
  95,
  96,
  97,
  98,
  99,
  100,
  101,
  102,
  103,
  104,
  105,
  106,
  107,
  108,
  109,
  110,
  111,
  112,
  113,
  114,
  115,
  116,
  117,
  118,
  119,
  120,
  121,
  122,
  123,
  124,
  125,
  126,
  127,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  33,
  34,
  35,
  36,
  37,
  38,
  39,
  40,
  41,
  42,
  43,
  44,
  45,
  46,
  47,
  48,
  49,
  50,
  51,
  52,
  53,
  54,
  55,
  56,
  57,
  58,
  59,
  60,
  61,
  62,
  63,
  64,
  65,
  66,
  67,
  68,
  69,
  70,
  71,
  72,
  73,
  74,
  75,
  76,
  77,
  78,
  79,
  80,
  81,
  82,
  83,
  84,
  85,
  86,
  87,
  88,
  89,
  90,
  91,
  92,
  93,
  94,
  95,
  96,
  97,
  98,
  99,
  100,
  101,
  102,
  103,
  104,
  105,
  106,
  107,
  108,
  109,
  110,
  111,
  112,
  113,
  114,
  115,
  116,
  117,
  118,
  119,
  120,
  121,
  122,
  123,
  124,
  125,
  126,
  127,
  512,
  513,
  514,
  515,
  516,
  517,
  518,
  519,
  520,
  521,
  522,
  523,
  524,
  525,
  526,
  527,
  528,
  529,
  530,
  531,
  532,
  533,
  534,
  535,
  536,
  537,
  538,
  539,
  540,
  541,
  542,
  543,
  544,
  545,
  546,
  547,
  548,
  549,
  550,
  551,
  552,
  553,
  554,
  555,
  556,
  557,
  558,
  559,
  560,
  561,
  562,
  563,
  564,
  565,
  566,
  567,
  568,
  569,
  570,
  571,
  572,
  573,
  574,
  575,
  576,
  577,
  578,
  579,
  580,
  581,
  582,
  583,
  584,
  585,
  586,
  587,
  588,
  589,
  590,
  591,
  592,
  593,
  594,
  595,
  596,
  597,
  598,
  599,
  600,
  601,
  602,
  603,
  604,
  605,
  606,
  607,
  608,
  609,
  610,
  611,
  612,
  613,
  614,
  615,
  616,
  617,
  618,
  619,
  620,
  621,
  622,
  623,
  624,
  625,
  626,
  627,
  628,
  629,
  630,
  631,
  632,
  633,
  634,
  635,
  636,
  637,
  638,
  639,
  1024,
  1025,
  1026,
  1027,
  1028,
  1029,
  1030,
  1031,
  1032,
  1033,
  1034,
  1035,
  1036,
  1037,
  1038,
  1039,
  1040,
  1041,
  1042,
  1043,
  1044,
  1045,
  1046,
  1047,
  1048,
  1049,
  1050,
  1051,
  1052,
  1053,
  1054,
  1055,
  1056,
  1057,
  1058,
  1059,
  1060,
  1061,
  1062,
  1063,
  1064,
  1065,
  1066,
  1067,
  1068,
  1069,
  1070,
  1071,
  1072,
  1073,
  1074,
  1075,
  1076,
  1077,
  1078,
  1079,
  1080,
  1081,
  1082,
  1083,
  1084,
  1085,
  1086,
  1087,
  1088,
  1089,
  1090,
  1091,
  1092,
  1093,
  1094,
  1095,
  1096,
  1097,
  1098,
  1099,
  1100,
  1101,
  1102,
  1103,
  1104,
  1105,
  1106,
  1107,
  1108,
  1109,
  1110,
  1111,
  1112,
  1113,
  1114,
  1115,
  1116,
  1117,
  1118,
  1119,
  1120,
  1121,
  1122,
  1123,
  1124,
  1125,
  1126,
  1127,
  1128,
  1129,
  1130,
  1131,
  1132,
  1133,
  1134,
  1135,
  1136,
  1137,
  1138,
  1139,
  1140,
  1141,
  1142,
  1143,
  1144,
  1145,
  1146,
  1147,
  1148,
  1149,
  1150,
  1151,
  1536,
  1538,
  1536,
  0,
  2,
  0,
  512,
  514,
  512,
  1024,
  1026,
  1024,
  1664,
  1665,
  1666,
  1667,
  1668,
  1669,
  1670,
  1671,
  1672,
  1673,
  1674,
  1675,
  1676,
  1677,
  1678,
  1679,
  1680,
  1681,
  1682,
  1683,
  1684,
  1685,
  1686,
  1687,
  1688,
  1689,
  1690,
  1691,
  1692,
  1693,
  1694,
  1695,
  1696,
  1697,
  1698,
  1699,
  1700,
  1701,
  1702,
  1703,
  1704,
  1705,
  1706,
  1707,
  1708,
  1709,
  1710,
  1711,
  1712,
  1713,
  1714,
  1715,
  1716,
  1717,
  1718,
  1719,
  1720,
  1721,
  1722,
  1723,
  1724,
  1725,
  1726,
  1727,
  128,
  129,
  130,
  131,
  132,
  133,
  134,
  135,
  136,
  137,
  138,
  139,
  140,
  141,
  142,
  143,
  144,
  145,
  146,
  147,
  148,
  149,
  150,
  151,
  152,
  153,
  154,
  155,
  156,
  157,
  158,
  159,
  160,
  161,
  162,
  163,
  164,
  165,
  166,
  167,
  168,
  169,
  170,
  171,
  172,
  173,
  174,
  175,
  176,
  177,
  178,
  179,
  180,
  181,
  182,
  183,
  184,
  185,
  186,
  187,
  188,
  189,
  190,
  191,
  128,
  129,
  130,
  131,
  132,
  133,
  134,
  135,
  136,
  137,
  138,
  139,
  140,
  141,
  142,
  143,
  144,
  145,
  146,
  147,
  148,
  149,
  150,
  151,
  152,
  153,
  154,
  155,
  156,
  157,
  158,
  159,
  160,
  161,
  162,
  163,
  164,
  165,
  166,
  167,
  168,
  169,
  170,
  171,
  172,
  173,
  174,
  175,
  176,
  177,
  178,
  179,
  180,
  181,
  182,
  183,
  184,
  185,
  186,
  187,
  188,
  189,
  190,
  191,
  640,
  641,
  642,
  643,
  644,
  645,
  646,
  647,
  648,
  649,
  650,
  651,
  652,
  653,
  654,
  655,
  656,
  657,
  658,
  659,
  660,
  661,
  662,
  663,
  664,
  665,
  666,
  667,
  668,
  669,
  670,
  671,
  672,
  673,
  674,
  675,
  676,
  677,
  678,
  679,
  680,
  681,
  682,
  683,
  684,
  685,
  686,
  687,
  688,
  689,
  690,
  691,
  692,
  693,
  694,
  695,
  696,
  697,
  698,
  699,
  700,
  701,
  702,
  703,
  1152,
  1153,
  1154,
  1155,
  1156,
  1157,
  1158,
  1159,
  1160,
  1161,
  1162,
  1163,
  1164,
  1165,
  1166,
  1167,
  1168,
  1169,
  1170,
  1171,
  1172,
  1173,
  1174,
  1175,
  1176,
  1177,
  1178,
  1179,
  1180,
  1181,
  1182,
  1183,
  1184,
  1185,
  1186,
  1187,
  1188,
  1189,
  1190,
  1191,
  1192,
  1193,
  1194,
  1195,
  1196,
  1197,
  1198,
  1199,
  1200,
  1201,
  1202,
  1203,
  1204,
  1205,
  1206,
  1207,
  1208,
  1209,
  1210,
  1211,
  1212,
  1213,
  1214,
  1215,
};
static inline void InitR600MCRegisterInfo(MCRegisterInfo *RI, unsigned RA, unsigned DwarfFlavour = 0, unsigned EHFlavour = 0, unsigned PC = 0) {
  RI->InitMCRegisterInfo(R600RegDesc, 1675, RA, PC, R600MCRegisterClasses, 37, R600RegUnitRoots, 1342, R600RegDiffLists, R600LaneMaskLists, R600RegStrings, R600RegClassStrings, R600SubRegIdxLists, 17,
R600SubRegIdxRanges, R600RegEncodingTable);

}

} // end namespace llvm

#endif // GET_REGINFO_MC_DESC

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Register Information Header Fragment                                       *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_REGINFO_HEADER
#undef GET_REGINFO_HEADER

#include "llvm/CodeGen/TargetRegisterInfo.h"

namespace llvm {

class R600FrameLowering;

struct R600GenRegisterInfo : public TargetRegisterInfo {
  explicit R600GenRegisterInfo(unsigned RA, unsigned D = 0, unsigned E = 0,
      unsigned PC = 0, unsigned HwMode = 0);
  unsigned composeSubRegIndicesImpl(unsigned, unsigned) const override;
  LaneBitmask composeSubRegIndexLaneMaskImpl(unsigned, LaneBitmask) const override;
  LaneBitmask reverseComposeSubRegIndexLaneMaskImpl(unsigned, LaneBitmask) const override;
  const TargetRegisterClass *getSubClassWithSubReg(const TargetRegisterClass*, unsigned) const override;
  const RegClassWeight &getRegClassWeight(const TargetRegisterClass *RC) const override;
  unsigned getRegUnitWeight(unsigned RegUnit) const override;
  unsigned getNumRegPressureSets() const override;
  const char *getRegPressureSetName(unsigned Idx) const override;
  unsigned getRegPressureSetLimit(const MachineFunction &MF, unsigned Idx) const override;
  const int *getRegClassPressureSets(const TargetRegisterClass *RC) const override;
  const int *getRegUnitPressureSets(unsigned RegUnit) const override;
  ArrayRef<const char *> getRegMaskNames() const override;
  ArrayRef<const uint32_t *> getRegMasks() const override;
  /// Devirtualized TargetFrameLowering.
  static const R600FrameLowering *getFrameLowering(
      const MachineFunction &MF);
};

namespace R600 { // Register classes
  extern const TargetRegisterClass R600_Reg32RegClass;
  extern const TargetRegisterClass R600_TReg32RegClass;
  extern const TargetRegisterClass R600_TReg32_XRegClass;
  extern const TargetRegisterClass R600_AddrRegClass;
  extern const TargetRegisterClass R600_KC0RegClass;
  extern const TargetRegisterClass R600_KC1RegClass;
  extern const TargetRegisterClass R600_TReg32_WRegClass;
  extern const TargetRegisterClass R600_TReg32_YRegClass;
  extern const TargetRegisterClass R600_TReg32_ZRegClass;
  extern const TargetRegisterClass R600_ArrayBaseRegClass;
  extern const TargetRegisterClass R600_KC0_WRegClass;
  extern const TargetRegisterClass R600_KC0_XRegClass;
  extern const TargetRegisterClass R600_KC0_YRegClass;
  extern const TargetRegisterClass R600_KC0_ZRegClass;
  extern const TargetRegisterClass R600_KC1_WRegClass;
  extern const TargetRegisterClass R600_KC1_XRegClass;
  extern const TargetRegisterClass R600_KC1_YRegClass;
  extern const TargetRegisterClass R600_KC1_ZRegClass;
  extern const TargetRegisterClass R600_LDS_SRC_REGRegClass;
  extern const TargetRegisterClass R600_PredicateRegClass;
  extern const TargetRegisterClass R600_Addr_WRegClass;
  extern const TargetRegisterClass R600_Addr_YRegClass;
  extern const TargetRegisterClass R600_Addr_ZRegClass;
  extern const TargetRegisterClass R600_LDS_SRC_REG_and_R600_Reg32RegClass;
  extern const TargetRegisterClass R600_Predicate_BitRegClass;
  extern const TargetRegisterClass R600_Reg64RegClass;
  extern const TargetRegisterClass R600_Reg64VerticalRegClass;
  extern const TargetRegisterClass R600_Reg64Vertical_with_sub0_in_R600_TReg32_WRegClass;
  extern const TargetRegisterClass R600_Reg64Vertical_with_sub0_in_R600_TReg32_XRegClass;
  extern const TargetRegisterClass R600_Reg64Vertical_with_sub0_in_R600_TReg32_YRegClass;
  extern const TargetRegisterClass R600_Reg64Vertical_with_sub0_in_R600_TReg32_ZRegClass;
  extern const TargetRegisterClass R600_Reg128RegClass;
  extern const TargetRegisterClass R600_Reg128VerticalRegClass;
  extern const TargetRegisterClass R600_Reg128Vertical_with_sub0_in_R600_TReg32_WRegClass;
  extern const TargetRegisterClass R600_Reg128Vertical_with_sub0_in_R600_TReg32_XRegClass;
  extern const TargetRegisterClass R600_Reg128Vertical_with_sub0_in_R600_TReg32_YRegClass;
  extern const TargetRegisterClass R600_Reg128Vertical_with_sub0_in_R600_TReg32_ZRegClass;
} // end namespace R600

} // end namespace llvm

#endif // GET_REGINFO_HEADER

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Register and Register Classes Information                           *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_REGINFO_TARGET_DESC
#undef GET_REGINFO_TARGET_DESC

namespace llvm {

extern const MCRegisterClass R600MCRegisterClasses[];

static const MVT::SimpleValueType VTLists[] = {
  /* 0 */ MVT::f32, MVT::i32, MVT::Other,
  /* 3 */ MVT::v2f32, MVT::v2i32, MVT::i64, MVT::f64, MVT::Other,
  /* 8 */ MVT::v2f32, MVT::v2i32, MVT::Other,
  /* 11 */ MVT::v4f32, MVT::v4i32, MVT::Other,
};

static const char *const SubRegIndexNameTable[] = { "sub0", "sub1", "sub2", "sub3", "sub4", "sub5", "sub6", "sub7", "sub8", "sub9", "sub10", "sub11", "sub12", "sub13", "sub14", "sub15", "" };


static const LaneBitmask SubRegIndexLaneMaskTable[] = {
  LaneBitmask::getAll(),
  LaneBitmask(0x00000001), // sub0
  LaneBitmask(0x00000002), // sub1
  LaneBitmask(0x00000004), // sub2
  LaneBitmask(0x00000008), // sub3
  LaneBitmask(0x00000010), // sub4
  LaneBitmask(0x00000020), // sub5
  LaneBitmask(0x00000040), // sub6
  LaneBitmask(0x00000080), // sub7
  LaneBitmask(0x00000100), // sub8
  LaneBitmask(0x00000200), // sub9
  LaneBitmask(0x00000400), // sub10
  LaneBitmask(0x00000800), // sub11
  LaneBitmask(0x00001000), // sub12
  LaneBitmask(0x00002000), // sub13
  LaneBitmask(0x00004000), // sub14
  LaneBitmask(0x00008000), // sub15
 };



static const TargetRegisterInfo::RegClassInfo RegClassInfos[] = {
  // Mode = 0 (Default)
  { 32, 32, 32, VTLists+0 },    // R600_Reg32
  { 32, 32, 32, VTLists+0 },    // R600_TReg32
  { 32, 32, 32, VTLists+0 },    // R600_TReg32_X
  { 32, 32, 32, VTLists+1 },    // R600_Addr
  { 32, 32, 32, VTLists+0 },    // R600_KC0
  { 32, 32, 32, VTLists+0 },    // R600_KC1
  { 32, 32, 32, VTLists+0 },    // R600_TReg32_W
  { 32, 32, 32, VTLists+0 },    // R600_TReg32_Y
  { 32, 32, 32, VTLists+0 },    // R600_TReg32_Z
  { 32, 32, 32, VTLists+0 },    // R600_ArrayBase
  { 32, 32, 32, VTLists+0 },    // R600_KC0_W
  { 32, 32, 32, VTLists+0 },    // R600_KC0_X
  { 32, 32, 32, VTLists+0 },    // R600_KC0_Y
  { 32, 32, 32, VTLists+0 },    // R600_KC0_Z
  { 32, 32, 32, VTLists+0 },    // R600_KC1_W
  { 32, 32, 32, VTLists+0 },    // R600_KC1_X
  { 32, 32, 32, VTLists+0 },    // R600_KC1_Y
  { 32, 32, 32, VTLists+0 },    // R600_KC1_Z
  { 32, 32, 32, VTLists+1 },    // R600_LDS_SRC_REG
  { 32, 32, 32, VTLists+1 },    // R600_Predicate
  { 32, 32, 32, VTLists+1 },    // R600_Addr_W
  { 32, 32, 32, VTLists+1 },    // R600_Addr_Y
  { 32, 32, 32, VTLists+1 },    // R600_Addr_Z
  { 32, 32, 32, VTLists+1 },    // R600_LDS_SRC_REG_and_R600_Reg32
  { 32, 32, 32, VTLists+1 },    // R600_Predicate_Bit
  { 64, 64, 64, VTLists+3 },    // R600_Reg64
  { 64, 64, 64, VTLists+8 },    // R600_Reg64Vertical
  { 64, 64, 64, VTLists+8 },    // R600_Reg64Vertical_with_sub0_in_R600_TReg32_W
  { 64, 64, 64, VTLists+8 },    // R600_Reg64Vertical_with_sub0_in_R600_TReg32_X
  { 64, 64, 64, VTLists+8 },    // R600_Reg64Vertical_with_sub0_in_R600_TReg32_Y
  { 64, 64, 64, VTLists+8 },    // R600_Reg64Vertical_with_sub0_in_R600_TReg32_Z
  { 128, 128, 128, VTLists+11 },    // R600_Reg128
  { 128, 128, 128, VTLists+11 },    // R600_Reg128Vertical
  { 128, 128, 128, VTLists+11 },    // R600_Reg128Vertical_with_sub0_in_R600_TReg32_W
  { 128, 128, 128, VTLists+11 },    // R600_Reg128Vertical_with_sub0_in_R600_TReg32_X
  { 128, 128, 128, VTLists+11 },    // R600_Reg128Vertical_with_sub0_in_R600_TReg32_Y
  { 128, 128, 128, VTLists+11 },    // R600_Reg128Vertical_with_sub0_in_R600_TReg32_Z
};

static const TargetRegisterClass *const NullRegClasses[] = { nullptr };

static const uint32_t R600_Reg32SubClassMask[] = {
  0x0083ffff, 0x00000000, 
  0xfe000000, 0x0000001f, // sub0
  0xfe000000, 0x0000001f, // sub1
  0x80000000, 0x0000001f, // sub2
  0x80000000, 0x0000001f, // sub3
};

static const uint32_t R600_TReg32SubClassMask[] = {
  0x000001c6, 0x00000000, 
  0xfe000000, 0x0000001f, // sub0
  0xfe000000, 0x0000001f, // sub1
  0x80000000, 0x0000001f, // sub2
  0x80000000, 0x0000001f, // sub3
};

static const uint32_t R600_TReg32_XSubClassMask[] = {
  0x00000004, 0x00000000, 
  0x92000000, 0x00000004, // sub0
  0x10000000, 0x00000004, // sub1
  0x00000000, 0x00000004, // sub2
  0x00000000, 0x00000004, // sub3
};

static const uint32_t R600_AddrSubClassMask[] = {
  0x00000008, 0x00000000, 
};

static const uint32_t R600_KC0SubClassMask[] = {
  0x00003c10, 0x00000000, 
};

static const uint32_t R600_KC1SubClassMask[] = {
  0x0003c020, 0x00000000, 
};

static const uint32_t R600_TReg32_WSubClassMask[] = {
  0x00000040, 0x00000000, 
  0x08000000, 0x00000002, // sub0
  0x08000000, 0x00000002, // sub1
  0x00000000, 0x00000002, // sub2
  0x80000000, 0x00000002, // sub3
};

static const uint32_t R600_TReg32_YSubClassMask[] = {
  0x00000080, 0x00000000, 
  0x20000000, 0x00000008, // sub0
  0xa2000000, 0x00000008, // sub1
  0x00000000, 0x00000008, // sub2
  0x00000000, 0x00000008, // sub3
};

static const uint32_t R600_TReg32_ZSubClassMask[] = {
  0x00000100, 0x00000000, 
  0x40000000, 0x00000010, // sub0
  0x40000000, 0x00000010, // sub1
  0x80000000, 0x00000010, // sub2
  0x00000000, 0x00000010, // sub3
};

static const uint32_t R600_ArrayBaseSubClassMask[] = {
  0x00000200, 0x00000000, 
};

static const uint32_t R600_KC0_WSubClassMask[] = {
  0x00000400, 0x00000000, 
};

static const uint32_t R600_KC0_XSubClassMask[] = {
  0x00000800, 0x00000000, 
};

static const uint32_t R600_KC0_YSubClassMask[] = {
  0x00001000, 0x00000000, 
};

static const uint32_t R600_KC0_ZSubClassMask[] = {
  0x00002000, 0x00000000, 
};

static const uint32_t R600_KC1_WSubClassMask[] = {
  0x00004000, 0x00000000, 
};

static const uint32_t R600_KC1_XSubClassMask[] = {
  0x00008000, 0x00000000, 
};

static const uint32_t R600_KC1_YSubClassMask[] = {
  0x00010000, 0x00000000, 
};

static const uint32_t R600_KC1_ZSubClassMask[] = {
  0x00020000, 0x00000000, 
};

static const uint32_t R600_LDS_SRC_REGSubClassMask[] = {
  0x00840000, 0x00000000, 
};

static const uint32_t R600_PredicateSubClassMask[] = {
  0x00080000, 0x00000000, 
};

static const uint32_t R600_Addr_WSubClassMask[] = {
  0x00100000, 0x00000000, 
};

static const uint32_t R600_Addr_YSubClassMask[] = {
  0x00200000, 0x00000000, 
};

static const uint32_t R600_Addr_ZSubClassMask[] = {
  0x00400000, 0x00000000, 
};

static const uint32_t R600_LDS_SRC_REG_and_R600_Reg32SubClassMask[] = {
  0x00800000, 0x00000000, 
};

static const uint32_t R600_Predicate_BitSubClassMask[] = {
  0x01000000, 0x00000000, 
};

static const uint32_t R600_Reg64SubClassMask[] = {
  0x02000000, 0x00000000, 
};

static const uint32_t R600_Reg64VerticalSubClassMask[] = {
  0x7c000000, 0x00000000, 
};

static const uint32_t R600_Reg64Vertical_with_sub0_in_R600_TReg32_WSubClassMask[] = {
  0x08000000, 0x00000000, 
};

static const uint32_t R600_Reg64Vertical_with_sub0_in_R600_TReg32_XSubClassMask[] = {
  0x10000000, 0x00000000, 
};

static const uint32_t R600_Reg64Vertical_with_sub0_in_R600_TReg32_YSubClassMask[] = {
  0x20000000, 0x00000000, 
};

static const uint32_t R600_Reg64Vertical_with_sub0_in_R600_TReg32_ZSubClassMask[] = {
  0x40000000, 0x00000000, 
};

static const uint32_t R600_Reg128SubClassMask[] = {
  0x80000000, 0x00000000, 
};

static const uint32_t R600_Reg128VerticalSubClassMask[] = {
  0x00000000, 0x0000001f, 
};

static const uint32_t R600_Reg128Vertical_with_sub0_in_R600_TReg32_WSubClassMask[] = {
  0x00000000, 0x00000002, 
};

static const uint32_t R600_Reg128Vertical_with_sub0_in_R600_TReg32_XSubClassMask[] = {
  0x00000000, 0x00000004, 
};

static const uint32_t R600_Reg128Vertical_with_sub0_in_R600_TReg32_YSubClassMask[] = {
  0x00000000, 0x00000008, 
};

static const uint32_t R600_Reg128Vertical_with_sub0_in_R600_TReg32_ZSubClassMask[] = {
  0x00000000, 0x00000010, 
};

static const uint16_t SuperRegIdxSeqs[] = {
  /* 0 */ 1, 2, 3, 4, 0,
};

static const TargetRegisterClass *const R600_TReg32Superclasses[] = {
  &R600::R600_Reg32RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_TReg32_XSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  &R600::R600_TReg32RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_AddrSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_KC0Superclasses[] = {
  &R600::R600_Reg32RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_KC1Superclasses[] = {
  &R600::R600_Reg32RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_TReg32_WSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  &R600::R600_TReg32RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_TReg32_YSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  &R600::R600_TReg32RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_TReg32_ZSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  &R600::R600_TReg32RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_ArrayBaseSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_KC0_WSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  &R600::R600_KC0RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_KC0_XSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  &R600::R600_KC0RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_KC0_YSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  &R600::R600_KC0RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_KC0_ZSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  &R600::R600_KC0RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_KC1_WSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  &R600::R600_KC1RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_KC1_XSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  &R600::R600_KC1RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_KC1_YSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  &R600::R600_KC1RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_KC1_ZSuperclasses[] = {
  &R600::R600_Reg32RegClass,
  &R600::R600_KC1RegClass,
  nullptr
};

static const TargetRegisterClass *const R600_LDS_SRC_REG_and_R600_Reg32Superclasses[] = {
  &R600::R600_Reg32RegClass,
  &R600::R600_LDS_SRC_REGRegClass,
  nullptr
};

static const TargetRegisterClass *const R600_Reg64Vertical_with_sub0_in_R600_TReg32_WSuperclasses[] = {
  &R600::R600_Reg64VerticalRegClass,
  nullptr
};

static const TargetRegisterClass *const R600_Reg64Vertical_with_sub0_in_R600_TReg32_XSuperclasses[] = {
  &R600::R600_Reg64VerticalRegClass,
  nullptr
};

static const TargetRegisterClass *const R600_Reg64Vertical_with_sub0_in_R600_TReg32_YSuperclasses[] = {
  &R600::R600_Reg64VerticalRegClass,
  nullptr
};

static const TargetRegisterClass *const R600_Reg64Vertical_with_sub0_in_R600_TReg32_ZSuperclasses[] = {
  &R600::R600_Reg64VerticalRegClass,
  nullptr
};

static const TargetRegisterClass *const R600_Reg128Vertical_with_sub0_in_R600_TReg32_WSuperclasses[] = {
  &R600::R600_Reg128VerticalRegClass,
  nullptr
};

static const TargetRegisterClass *const R600_Reg128Vertical_with_sub0_in_R600_TReg32_XSuperclasses[] = {
  &R600::R600_Reg128VerticalRegClass,
  nullptr
};

static const TargetRegisterClass *const R600_Reg128Vertical_with_sub0_in_R600_TReg32_YSuperclasses[] = {
  &R600::R600_Reg128VerticalRegClass,
  nullptr
};

static const TargetRegisterClass *const R600_Reg128Vertical_with_sub0_in_R600_TReg32_ZSuperclasses[] = {
  &R600::R600_Reg128VerticalRegClass,
  nullptr
};


namespace R600 {   // Register class instances
  extern const TargetRegisterClass R600_Reg32RegClass = {
    &R600MCRegisterClasses[R600_Reg32RegClassID],
    R600_Reg32SubClassMask,
    SuperRegIdxSeqs + 0,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass R600_TReg32RegClass = {
    &R600MCRegisterClasses[R600_TReg32RegClassID],
    R600_TReg32SubClassMask,
    SuperRegIdxSeqs + 0,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_TReg32Superclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_TReg32_XRegClass = {
    &R600MCRegisterClasses[R600_TReg32_XRegClassID],
    R600_TReg32_XSubClassMask,
    SuperRegIdxSeqs + 0,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_TReg32_XSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_AddrRegClass = {
    &R600MCRegisterClasses[R600_AddrRegClassID],
    R600_AddrSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_AddrSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_KC0RegClass = {
    &R600MCRegisterClasses[R600_KC0RegClassID],
    R600_KC0SubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_KC0Superclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_KC1RegClass = {
    &R600MCRegisterClasses[R600_KC1RegClassID],
    R600_KC1SubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_KC1Superclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_TReg32_WRegClass = {
    &R600MCRegisterClasses[R600_TReg32_WRegClassID],
    R600_TReg32_WSubClassMask,
    SuperRegIdxSeqs + 0,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_TReg32_WSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_TReg32_YRegClass = {
    &R600MCRegisterClasses[R600_TReg32_YRegClassID],
    R600_TReg32_YSubClassMask,
    SuperRegIdxSeqs + 0,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_TReg32_YSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_TReg32_ZRegClass = {
    &R600MCRegisterClasses[R600_TReg32_ZRegClassID],
    R600_TReg32_ZSubClassMask,
    SuperRegIdxSeqs + 0,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_TReg32_ZSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_ArrayBaseRegClass = {
    &R600MCRegisterClasses[R600_ArrayBaseRegClassID],
    R600_ArrayBaseSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_ArrayBaseSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_KC0_WRegClass = {
    &R600MCRegisterClasses[R600_KC0_WRegClassID],
    R600_KC0_WSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_KC0_WSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_KC0_XRegClass = {
    &R600MCRegisterClasses[R600_KC0_XRegClassID],
    R600_KC0_XSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_KC0_XSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_KC0_YRegClass = {
    &R600MCRegisterClasses[R600_KC0_YRegClassID],
    R600_KC0_YSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_KC0_YSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_KC0_ZRegClass = {
    &R600MCRegisterClasses[R600_KC0_ZRegClassID],
    R600_KC0_ZSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_KC0_ZSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_KC1_WRegClass = {
    &R600MCRegisterClasses[R600_KC1_WRegClassID],
    R600_KC1_WSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_KC1_WSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_KC1_XRegClass = {
    &R600MCRegisterClasses[R600_KC1_XRegClassID],
    R600_KC1_XSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_KC1_XSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_KC1_YRegClass = {
    &R600MCRegisterClasses[R600_KC1_YRegClassID],
    R600_KC1_YSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_KC1_YSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_KC1_ZRegClass = {
    &R600MCRegisterClasses[R600_KC1_ZRegClassID],
    R600_KC1_ZSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_KC1_ZSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_LDS_SRC_REGRegClass = {
    &R600MCRegisterClasses[R600_LDS_SRC_REGRegClassID],
    R600_LDS_SRC_REGSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass R600_PredicateRegClass = {
    &R600MCRegisterClasses[R600_PredicateRegClassID],
    R600_PredicateSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Addr_WRegClass = {
    &R600MCRegisterClasses[R600_Addr_WRegClassID],
    R600_Addr_WSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Addr_YRegClass = {
    &R600MCRegisterClasses[R600_Addr_YRegClassID],
    R600_Addr_YSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Addr_ZRegClass = {
    &R600MCRegisterClasses[R600_Addr_ZRegClassID],
    R600_Addr_ZSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass R600_LDS_SRC_REG_and_R600_Reg32RegClass = {
    &R600MCRegisterClasses[R600_LDS_SRC_REG_and_R600_Reg32RegClassID],
    R600_LDS_SRC_REG_and_R600_Reg32SubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_LDS_SRC_REG_and_R600_Reg32Superclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Predicate_BitRegClass = {
    &R600MCRegisterClasses[R600_Predicate_BitRegClassID],
    R600_Predicate_BitSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000001),
    0,
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Reg64RegClass = {
    &R600MCRegisterClasses[R600_Reg64RegClassID],
    R600_Reg64SubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000003),
    0,
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Reg64VerticalRegClass = {
    &R600MCRegisterClasses[R600_Reg64VerticalRegClassID],
    R600_Reg64VerticalSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000003),
    0,
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Reg64Vertical_with_sub0_in_R600_TReg32_WRegClass = {
    &R600MCRegisterClasses[R600_Reg64Vertical_with_sub0_in_R600_TReg32_WRegClassID],
    R600_Reg64Vertical_with_sub0_in_R600_TReg32_WSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000003),
    0,
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_Reg64Vertical_with_sub0_in_R600_TReg32_WSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Reg64Vertical_with_sub0_in_R600_TReg32_XRegClass = {
    &R600MCRegisterClasses[R600_Reg64Vertical_with_sub0_in_R600_TReg32_XRegClassID],
    R600_Reg64Vertical_with_sub0_in_R600_TReg32_XSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000003),
    0,
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_Reg64Vertical_with_sub0_in_R600_TReg32_XSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Reg64Vertical_with_sub0_in_R600_TReg32_YRegClass = {
    &R600MCRegisterClasses[R600_Reg64Vertical_with_sub0_in_R600_TReg32_YRegClassID],
    R600_Reg64Vertical_with_sub0_in_R600_TReg32_YSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000003),
    0,
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_Reg64Vertical_with_sub0_in_R600_TReg32_YSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Reg64Vertical_with_sub0_in_R600_TReg32_ZRegClass = {
    &R600MCRegisterClasses[R600_Reg64Vertical_with_sub0_in_R600_TReg32_ZRegClassID],
    R600_Reg64Vertical_with_sub0_in_R600_TReg32_ZSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x00000003),
    0,
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_Reg64Vertical_with_sub0_in_R600_TReg32_ZSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Reg128RegClass = {
    &R600MCRegisterClasses[R600_Reg128RegClassID],
    R600_Reg128SubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x0000000F),
    0,
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Reg128VerticalRegClass = {
    &R600MCRegisterClasses[R600_Reg128VerticalRegClassID],
    R600_Reg128VerticalSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x0000000F),
    0,
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Reg128Vertical_with_sub0_in_R600_TReg32_WRegClass = {
    &R600MCRegisterClasses[R600_Reg128Vertical_with_sub0_in_R600_TReg32_WRegClassID],
    R600_Reg128Vertical_with_sub0_in_R600_TReg32_WSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x0000000F),
    0,
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_Reg128Vertical_with_sub0_in_R600_TReg32_WSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Reg128Vertical_with_sub0_in_R600_TReg32_XRegClass = {
    &R600MCRegisterClasses[R600_Reg128Vertical_with_sub0_in_R600_TReg32_XRegClassID],
    R600_Reg128Vertical_with_sub0_in_R600_TReg32_XSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x0000000F),
    0,
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_Reg128Vertical_with_sub0_in_R600_TReg32_XSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Reg128Vertical_with_sub0_in_R600_TReg32_YRegClass = {
    &R600MCRegisterClasses[R600_Reg128Vertical_with_sub0_in_R600_TReg32_YRegClassID],
    R600_Reg128Vertical_with_sub0_in_R600_TReg32_YSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x0000000F),
    0,
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_Reg128Vertical_with_sub0_in_R600_TReg32_YSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass R600_Reg128Vertical_with_sub0_in_R600_TReg32_ZRegClass = {
    &R600MCRegisterClasses[R600_Reg128Vertical_with_sub0_in_R600_TReg32_ZRegClassID],
    R600_Reg128Vertical_with_sub0_in_R600_TReg32_ZSubClassMask,
    SuperRegIdxSeqs + 4,
    LaneBitmask(0x0000000F),
    0,
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    R600_Reg128Vertical_with_sub0_in_R600_TReg32_ZSuperclasses,
    nullptr
  };

} // end namespace R600

namespace {
  const TargetRegisterClass* const RegisterClasses[] = {
    &R600::R600_Reg32RegClass,
    &R600::R600_TReg32RegClass,
    &R600::R600_TReg32_XRegClass,
    &R600::R600_AddrRegClass,
    &R600::R600_KC0RegClass,
    &R600::R600_KC1RegClass,
    &R600::R600_TReg32_WRegClass,
    &R600::R600_TReg32_YRegClass,
    &R600::R600_TReg32_ZRegClass,
    &R600::R600_ArrayBaseRegClass,
    &R600::R600_KC0_WRegClass,
    &R600::R600_KC0_XRegClass,
    &R600::R600_KC0_YRegClass,
    &R600::R600_KC0_ZRegClass,
    &R600::R600_KC1_WRegClass,
    &R600::R600_KC1_XRegClass,
    &R600::R600_KC1_YRegClass,
    &R600::R600_KC1_ZRegClass,
    &R600::R600_LDS_SRC_REGRegClass,
    &R600::R600_PredicateRegClass,
    &R600::R600_Addr_WRegClass,
    &R600::R600_Addr_YRegClass,
    &R600::R600_Addr_ZRegClass,
    &R600::R600_LDS_SRC_REG_and_R600_Reg32RegClass,
    &R600::R600_Predicate_BitRegClass,
    &R600::R600_Reg64RegClass,
    &R600::R600_Reg64VerticalRegClass,
    &R600::R600_Reg64Vertical_with_sub0_in_R600_TReg32_WRegClass,
    &R600::R600_Reg64Vertical_with_sub0_in_R600_TReg32_XRegClass,
    &R600::R600_Reg64Vertical_with_sub0_in_R600_TReg32_YRegClass,
    &R600::R600_Reg64Vertical_with_sub0_in_R600_TReg32_ZRegClass,
    &R600::R600_Reg128RegClass,
    &R600::R600_Reg128VerticalRegClass,
    &R600::R600_Reg128Vertical_with_sub0_in_R600_TReg32_WRegClass,
    &R600::R600_Reg128Vertical_with_sub0_in_R600_TReg32_XRegClass,
    &R600::R600_Reg128Vertical_with_sub0_in_R600_TReg32_YRegClass,
    &R600::R600_Reg128Vertical_with_sub0_in_R600_TReg32_ZRegClass,
  };
} // end anonymous namespace

static const TargetRegisterInfoDesc R600RegInfoDesc[] = { // Extra Descriptors
  { 0, false },
  { 0, true },
  { 0, false },
  { 0, true },
  { 0, false },
  { 0, false },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, false },
  { 0, false },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, false },
  { 0, true },
  { 0, false },
  { 0, false },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, false },
  { 0, false },
  { 0, true },
  { 0, false },
  { 0, false },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, false },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
  { 0, true },
};
unsigned R600GenRegisterInfo::composeSubRegIndicesImpl(unsigned IdxA, unsigned IdxB) const {
  static const uint8_t Rows[1][16] = {
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  };

  --IdxA; assert(IdxA < 16);
  --IdxB; assert(IdxB < 16);
  return Rows[0][IdxB];
}

  struct MaskRolOp {
    LaneBitmask Mask;
    uint8_t  RotateLeft;
  };
  static const MaskRolOp LaneMaskComposeSequences[] = {
    { LaneBitmask(0xFFFFFFFF),  0 }, { LaneBitmask::getNone(), 0 },   // Sequence 0
    { LaneBitmask(0xFFFFFFFF),  1 }, { LaneBitmask::getNone(), 0 },   // Sequence 2
    { LaneBitmask(0xFFFFFFFF),  2 }, { LaneBitmask::getNone(), 0 },   // Sequence 4
    { LaneBitmask(0xFFFFFFFF),  3 }, { LaneBitmask::getNone(), 0 },   // Sequence 6
    { LaneBitmask(0xFFFFFFFF),  4 }, { LaneBitmask::getNone(), 0 },   // Sequence 8
    { LaneBitmask(0xFFFFFFFF),  5 }, { LaneBitmask::getNone(), 0 },   // Sequence 10
    { LaneBitmask(0xFFFFFFFF),  6 }, { LaneBitmask::getNone(), 0 },   // Sequence 12
    { LaneBitmask(0xFFFFFFFF),  7 }, { LaneBitmask::getNone(), 0 },   // Sequence 14
    { LaneBitmask(0xFFFFFFFF),  8 }, { LaneBitmask::getNone(), 0 },   // Sequence 16
    { LaneBitmask(0xFFFFFFFF),  9 }, { LaneBitmask::getNone(), 0 },   // Sequence 18
    { LaneBitmask(0xFFFFFFFF), 10 }, { LaneBitmask::getNone(), 0 },   // Sequence 20
    { LaneBitmask(0xFFFFFFFF), 11 }, { LaneBitmask::getNone(), 0 },   // Sequence 22
    { LaneBitmask(0xFFFFFFFF), 12 }, { LaneBitmask::getNone(), 0 },   // Sequence 24
    { LaneBitmask(0xFFFFFFFF), 13 }, { LaneBitmask::getNone(), 0 },   // Sequence 26
    { LaneBitmask(0xFFFFFFFF), 14 }, { LaneBitmask::getNone(), 0 },   // Sequence 28
    { LaneBitmask(0xFFFFFFFF), 15 }, { LaneBitmask::getNone(), 0 }  // Sequence 30
  };
  static const MaskRolOp *const CompositeSequences[] = {
    &LaneMaskComposeSequences[0], // to sub0
    &LaneMaskComposeSequences[2], // to sub1
    &LaneMaskComposeSequences[4], // to sub2
    &LaneMaskComposeSequences[6], // to sub3
    &LaneMaskComposeSequences[8], // to sub4
    &LaneMaskComposeSequences[10], // to sub5
    &LaneMaskComposeSequences[12], // to sub6
    &LaneMaskComposeSequences[14], // to sub7
    &LaneMaskComposeSequences[16], // to sub8
    &LaneMaskComposeSequences[18], // to sub9
    &LaneMaskComposeSequences[20], // to sub10
    &LaneMaskComposeSequences[22], // to sub11
    &LaneMaskComposeSequences[24], // to sub12
    &LaneMaskComposeSequences[26], // to sub13
    &LaneMaskComposeSequences[28], // to sub14
    &LaneMaskComposeSequences[30] // to sub15
  };

LaneBitmask R600GenRegisterInfo::composeSubRegIndexLaneMaskImpl(unsigned IdxA, LaneBitmask LaneMask) const {
  --IdxA; assert(IdxA < 16 && "Subregister index out of bounds");
  LaneBitmask Result;
  for (const MaskRolOp *Ops = CompositeSequences[IdxA]; Ops->Mask.any(); ++Ops) {
    LaneBitmask::Type M = LaneMask.getAsInteger() & Ops->Mask.getAsInteger();
    if (unsigned S = Ops->RotateLeft)
      Result |= LaneBitmask((M << S) | (M >> (LaneBitmask::BitWidth - S)));
    else
      Result |= LaneBitmask(M);
  }
  return Result;
}

LaneBitmask R600GenRegisterInfo::reverseComposeSubRegIndexLaneMaskImpl(unsigned IdxA,  LaneBitmask LaneMask) const {
  LaneMask &= getSubRegIndexLaneMask(IdxA);
  --IdxA; assert(IdxA < 16 && "Subregister index out of bounds");
  LaneBitmask Result;
  for (const MaskRolOp *Ops = CompositeSequences[IdxA]; Ops->Mask.any(); ++Ops) {
    LaneBitmask::Type M = LaneMask.getAsInteger();
    if (unsigned S = Ops->RotateLeft)
      Result |= LaneBitmask((M >> S) | (M << (LaneBitmask::BitWidth - S)));
    else
      Result |= LaneBitmask(M);
  }
  return Result;
}

const TargetRegisterClass *R600GenRegisterInfo::getSubClassWithSubReg(const TargetRegisterClass *RC, unsigned Idx) const {
  static const uint8_t Table[37][16] = {
    {	// R600_Reg32
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_TReg32
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_TReg32_X
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Addr
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_KC0
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_KC1
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_TReg32_W
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_TReg32_Y
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_TReg32_Z
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_ArrayBase
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_KC0_W
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_KC0_X
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_KC0_Y
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_KC0_Z
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_KC1_W
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_KC1_X
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_KC1_Y
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_KC1_Z
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_LDS_SRC_REG
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Predicate
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Addr_W
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Addr_Y
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Addr_Z
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_LDS_SRC_REG_and_R600_Reg32
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Predicate_Bit
      0,	// sub0
      0,	// sub1
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Reg64
      26,	// sub0 -> R600_Reg64
      26,	// sub1 -> R600_Reg64
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Reg64Vertical
      27,	// sub0 -> R600_Reg64Vertical
      27,	// sub1 -> R600_Reg64Vertical
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Reg64Vertical_with_sub0_in_R600_TReg32_W
      28,	// sub0 -> R600_Reg64Vertical_with_sub0_in_R600_TReg32_W
      28,	// sub1 -> R600_Reg64Vertical_with_sub0_in_R600_TReg32_W
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Reg64Vertical_with_sub0_in_R600_TReg32_X
      29,	// sub0 -> R600_Reg64Vertical_with_sub0_in_R600_TReg32_X
      29,	// sub1 -> R600_Reg64Vertical_with_sub0_in_R600_TReg32_X
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Reg64Vertical_with_sub0_in_R600_TReg32_Y
      30,	// sub0 -> R600_Reg64Vertical_with_sub0_in_R600_TReg32_Y
      30,	// sub1 -> R600_Reg64Vertical_with_sub0_in_R600_TReg32_Y
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Reg64Vertical_with_sub0_in_R600_TReg32_Z
      31,	// sub0 -> R600_Reg64Vertical_with_sub0_in_R600_TReg32_Z
      31,	// sub1 -> R600_Reg64Vertical_with_sub0_in_R600_TReg32_Z
      0,	// sub2
      0,	// sub3
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Reg128
      32,	// sub0 -> R600_Reg128
      32,	// sub1 -> R600_Reg128
      32,	// sub2 -> R600_Reg128
      32,	// sub3 -> R600_Reg128
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Reg128Vertical
      33,	// sub0 -> R600_Reg128Vertical
      33,	// sub1 -> R600_Reg128Vertical
      33,	// sub2 -> R600_Reg128Vertical
      33,	// sub3 -> R600_Reg128Vertical
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Reg128Vertical_with_sub0_in_R600_TReg32_W
      34,	// sub0 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_W
      34,	// sub1 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_W
      34,	// sub2 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_W
      34,	// sub3 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_W
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Reg128Vertical_with_sub0_in_R600_TReg32_X
      35,	// sub0 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_X
      35,	// sub1 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_X
      35,	// sub2 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_X
      35,	// sub3 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_X
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Reg128Vertical_with_sub0_in_R600_TReg32_Y
      36,	// sub0 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_Y
      36,	// sub1 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_Y
      36,	// sub2 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_Y
      36,	// sub3 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_Y
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
    {	// R600_Reg128Vertical_with_sub0_in_R600_TReg32_Z
      37,	// sub0 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_Z
      37,	// sub1 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_Z
      37,	// sub2 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_Z
      37,	// sub3 -> R600_Reg128Vertical_with_sub0_in_R600_TReg32_Z
      0,	// sub4
      0,	// sub5
      0,	// sub6
      0,	// sub7
      0,	// sub8
      0,	// sub9
      0,	// sub10
      0,	// sub11
      0,	// sub12
      0,	// sub13
      0,	// sub14
      0,	// sub15
    },
  };
  assert(RC && "Missing regclass");
  if (!Idx) return RC;
  --Idx;
  assert(Idx < 16 && "Bad subreg");
  unsigned TV = Table[RC->getID()][Idx];
  return TV ? getRegClass(TV - 1) : nullptr;
}

/// Get the weight in units of pressure for this register class.
const RegClassWeight &R600GenRegisterInfo::
getRegClassWeight(const TargetRegisterClass *RC) const {
  static const RegClassWeight RCWeightTable[] = {
    {1, 942},  	// R600_Reg32
    {1, 513},  	// R600_TReg32
    {1, 129},  	// R600_TReg32_X
    {1, 128},  	// R600_Addr
    {1, 128},  	// R600_KC0
    {1, 128},  	// R600_KC1
    {1, 128},  	// R600_TReg32_W
    {1, 128},  	// R600_TReg32_Y
    {1, 128},  	// R600_TReg32_Z
    {1, 33},  	// R600_ArrayBase
    {1, 32},  	// R600_KC0_W
    {1, 32},  	// R600_KC0_X
    {1, 32},  	// R600_KC0_Y
    {1, 32},  	// R600_KC0_Z
    {1, 32},  	// R600_KC1_W
    {1, 32},  	// R600_KC1_X
    {1, 32},  	// R600_KC1_Y
    {1, 32},  	// R600_KC1_Z
    {0, 1},  	// R600_LDS_SRC_REG
    {1, 3},  	// R600_Predicate
    {0, 0},  	// R600_Addr_W
    {0, 0},  	// R600_Addr_Y
    {0, 0},  	// R600_Addr_Z
    {1, 1},  	// R600_LDS_SRC_REG_and_R600_Reg32
    {1, 1},  	// R600_Predicate_Bit
    {2, 128},  	// R600_Reg64
    {2, 16},  	// R600_Reg64Vertical
    {2, 4},  	// R600_Reg64Vertical_with_sub0_in_R600_TReg32_W
    {2, 4},  	// R600_Reg64Vertical_with_sub0_in_R600_TReg32_X
    {2, 4},  	// R600_Reg64Vertical_with_sub0_in_R600_TReg32_Y
    {2, 4},  	// R600_Reg64Vertical_with_sub0_in_R600_TReg32_Z
    {4, 512},  	// R600_Reg128
    {4, 16},  	// R600_Reg128Vertical
    {4, 4},  	// R600_Reg128Vertical_with_sub0_in_R600_TReg32_W
    {4, 4},  	// R600_Reg128Vertical_with_sub0_in_R600_TReg32_X
    {4, 4},  	// R600_Reg128Vertical_with_sub0_in_R600_TReg32_Y
    {4, 4},  	// R600_Reg128Vertical_with_sub0_in_R600_TReg32_Z
  };
  return RCWeightTable[RC->getID()];
}

/// Get the weight in units of pressure for this register unit.
unsigned R600GenRegisterInfo::
getRegUnitWeight(unsigned RegUnit) const {
  assert(RegUnit < 1342 && "invalid register unit");
  // All register units have unit weight.
  return 1;
}


// Get the number of dimensions of register pressure.
unsigned R600GenRegisterInfo::getNumRegPressureSets() const {
  return 22;
}

// Get the name of this register unit pressure set.
const char *R600GenRegisterInfo::
getRegPressureSetName(unsigned Idx) const {
  static const char *const PressureNameTable[] = {
    "R600_Predicate_Bit",
    "R600_Predicate",
    "R600_Reg64Vertical_with_sub0_in_R600_TReg32_W",
    "R600_Reg64Vertical_with_sub0_in_R600_TReg32_X",
    "R600_Reg64Vertical_with_sub0_in_R600_TReg32_Y",
    "R600_Reg64Vertical_with_sub0_in_R600_TReg32_Z",
    "R600_Reg64Vertical",
    "R600_ArrayBase",
    "R600_TReg32_W",
    "R600_TReg32_Y",
    "R600_TReg32_Z",
    "R600_Reg64",
    "R600_TReg32_X",
    "R600_Reg64+R600_Reg64Vertical",
    "R600_TReg32_W+R600_Reg64Vertical",
    "R600_TReg32_Y+R600_Reg64Vertical",
    "R600_TReg32_Z+R600_Reg64Vertical",
    "R600_TReg32_X+R600_Reg64Vertical",
    "R600_TReg32_Y+R600_Reg64",
    "R600_TReg32_X+R600_Reg64",
    "R600_TReg32",
    "R600_Reg32",
  };
  return PressureNameTable[Idx];
}

// Get the register unit pressure limit for this dimension.
// This limit must be adjusted dynamically for reserved registers.
unsigned R600GenRegisterInfo::
getRegPressureSetLimit(const MachineFunction &MF, unsigned Idx) const {
  static const uint16_t PressureLimitTable[] = {
    1,  	// 0: R600_Predicate_Bit
    3,  	// 1: R600_Predicate
    4,  	// 2: R600_Reg64Vertical_with_sub0_in_R600_TReg32_W
    4,  	// 3: R600_Reg64Vertical_with_sub0_in_R600_TReg32_X
    4,  	// 4: R600_Reg64Vertical_with_sub0_in_R600_TReg32_Y
    4,  	// 5: R600_Reg64Vertical_with_sub0_in_R600_TReg32_Z
    16,  	// 6: R600_Reg64Vertical
    33,  	// 7: R600_ArrayBase
    128,  	// 8: R600_TReg32_W
    128,  	// 9: R600_TReg32_Y
    128,  	// 10: R600_TReg32_Z
    128,  	// 11: R600_Reg64
    129,  	// 12: R600_TReg32_X
    136,  	// 13: R600_Reg64+R600_Reg64Vertical
    140,  	// 14: R600_TReg32_W+R600_Reg64Vertical
    140,  	// 15: R600_TReg32_Y+R600_Reg64Vertical
    140,  	// 16: R600_TReg32_Z+R600_Reg64Vertical
    141,  	// 17: R600_TReg32_X+R600_Reg64Vertical
    192,  	// 18: R600_TReg32_Y+R600_Reg64
    193,  	// 19: R600_TReg32_X+R600_Reg64
    513,  	// 20: R600_TReg32
    942,  	// 21: R600_Reg32
  };
  return PressureLimitTable[Idx];
}

/// Table of pressure sets per register class or unit.
static const int RCSetsTable[] = {
  /* 0 */ 0, -1,
  /* 2 */ 1, -1,
  /* 4 */ 7, 21, -1,
  /* 7 */ 8, 14, 20, 21, -1,
  /* 12 */ 10, 16, 20, 21, -1,
  /* 17 */ 6, 13, 14, 15, 16, 17, 20, 21, -1,
  /* 26 */ 2, 6, 8, 13, 14, 15, 16, 17, 20, 21, -1,
  /* 37 */ 5, 6, 10, 13, 14, 15, 16, 17, 20, 21, -1,
  /* 48 */ 9, 15, 18, 20, 21, -1,
  /* 54 */ 12, 17, 19, 20, 21, -1,
  /* 60 */ 11, 13, 18, 19, 20, 21, -1,
  /* 67 */ 9, 11, 13, 15, 18, 19, 20, 21, -1,
  /* 76 */ 11, 12, 13, 17, 18, 19, 20, 21, -1,
  /* 85 */ 4, 6, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, -1,
  /* 99 */ 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -1,
};

/// Get the dimensions of register pressure impacted by this register class.
/// Returns a -1 terminated array of pressure set IDs
const int* R600GenRegisterInfo::
getRegClassPressureSets(const TargetRegisterClass *RC) const {
  static const uint8_t RCSetStartTable[] = {
    5,9,54,1,1,1,7,48,12,4,1,1,1,1,1,1,1,1,1,2,1,1,1,1,0,60,17,26,99,85,37,9,17,26,99,85,37,};
  return &RCSetsTable[RCSetStartTable[RC->getID()]];
}

/// Get the dimensions of register pressure impacted by this register unit.
/// Returns a -1 terminated array of pressure set IDs
const int* R600GenRegisterInfo::
getRegUnitPressureSets(unsigned RegUnit) const {
  assert(RegUnit < 1342 && "invalid register unit");
  static const uint8_t RUSetStartTable[] = {
    5,1,5,1,1,5,54,5,5,1,1,5,5,5,5,1,5,1,1,0,2,2,2,1,1,5,1,1,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,26,26,26,26,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,99,99,99,99,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,85,85,85,85,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,37,37,37,37,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,};
  return &RCSetsTable[RUSetStartTable[RegUnit]];
}

extern const MCRegisterDesc R600RegDesc[];
extern const MCPhysReg R600RegDiffLists[];
extern const LaneBitmask R600LaneMaskLists[];
extern const char R600RegStrings[];
extern const char R600RegClassStrings[];
extern const MCPhysReg R600RegUnitRoots[][2];
extern const uint16_t R600SubRegIdxLists[];
extern const MCRegisterInfo::SubRegCoveredBits R600SubRegIdxRanges[];
extern const uint16_t R600RegEncodingTable[];
R600GenRegisterInfo::
R600GenRegisterInfo(unsigned RA, unsigned DwarfFlavour, unsigned EHFlavour,
      unsigned PC, unsigned HwMode)
  : TargetRegisterInfo(R600RegInfoDesc, RegisterClasses, RegisterClasses+37,
             SubRegIndexNameTable, SubRegIndexLaneMaskTable,
             LaneBitmask(0xFFFFFFF0), RegClassInfos, HwMode) {
  InitMCRegisterInfo(R600RegDesc, 1675, RA, PC,
                     R600MCRegisterClasses, 37,
                     R600RegUnitRoots,
                     1342,
                     R600RegDiffLists,
                     R600LaneMaskLists,
                     R600RegStrings,
                     R600RegClassStrings,
                     R600SubRegIdxLists,
                     17,
                     R600SubRegIdxRanges,
                     R600RegEncodingTable);

}



ArrayRef<const uint32_t *> R600GenRegisterInfo::getRegMasks() const {
  return None;
}

ArrayRef<const char *> R600GenRegisterInfo::getRegMaskNames() const {
  return None;
}

const R600FrameLowering *
R600GenRegisterInfo::getFrameLowering(const MachineFunction &MF) {
  return static_cast<const R600FrameLowering *>(
      MF.getSubtarget().getFrameLowering());
}

} // end namespace llvm

#endif // GET_REGINFO_TARGET_DESC

