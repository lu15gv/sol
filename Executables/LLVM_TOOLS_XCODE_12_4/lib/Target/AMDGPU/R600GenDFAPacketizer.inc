/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target DFA Packetizer Tables                                               *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#include "llvm/CodeGen/DFAPacketizer.h"
namespace llvm {
} // end namespace llvm

namespace {
unsigned R600ResourceIndices[] = {
  0, 1, 2, 3, 1, 4, 0, 1, 2, 2, 1, 0, 
};

unsigned R600ProcResourceIndexStart[] = {
  0, // NoSchedModel
  0, // R600_VLIW5_ItinModel
  6, // R600_VLIW4_ItinModel
12
};

// Input NFA has 32 states with 176 transitions.
// Generated DFA has 23 states with 70 transitions.

// A zero-terminated sequence of NFA state transitions. Every DFA
// transition implies a set of NFA transitions. These are referred
// to by index in R600Transitions[].
std::array<NfaStatePair, 367> R600TransitionInfo = {{
  /* 0 */ {0, 1}, {0ULL, 0ULL},
  /* 2 */ {0, 1}, {0, 2}, {0, 4}, {0, 8}, {0ULL, 0ULL},
  /* 7 */ {0, 1}, {0, 2}, {0, 4}, {0, 8}, {0, 16}, {0ULL, 0ULL},
  /* 13 */ {1, 3}, {1, 5}, {1, 9}, {0ULL, 0ULL},
  /* 17 */ {1, 3}, {1, 5}, {1, 9}, {1, 17}, {0ULL, 0ULL},
  /* 22 */ {2, 3}, {4, 5}, {8, 9}, {0ULL, 0ULL},
  /* 26 */ {1, 3}, {1, 5}, {1, 9}, {2, 3}, {2, 6}, {2, 10}, {4, 5}, {4, 6}, {4, 12}, {8, 9}, {8, 10}, {8, 12}, {0ULL, 0ULL},
  /* 39 */ {1, 17}, {2, 18}, {4, 20}, {8, 24}, {0ULL, 0ULL},
  /* 44 */ {1, 3}, {1, 5}, {1, 9}, {1, 17}, {2, 3}, {2, 6}, {2, 10}, {2, 18}, {4, 5}, {4, 6}, {4, 12}, {4, 20}, {8, 9}, {8, 10}, {8, 12}, {8, 24}, {0ULL, 0ULL},
  /* 61 */ {3, 7}, {3, 11}, {5, 7}, {5, 13}, {9, 11}, {9, 13}, {0ULL, 0ULL},
  /* 68 */ {3, 19}, {5, 21}, {9, 25}, {0ULL, 0ULL},
  /* 72 */ {3, 7}, {3, 11}, {3, 19}, {5, 7}, {5, 13}, {5, 21}, {9, 11}, {9, 13}, {9, 25}, {0ULL, 0ULL},
  /* 82 */ {6, 7}, {10, 11}, {12, 13}, {0ULL, 0ULL},
  /* 86 */ {3, 7}, {3, 11}, {5, 7}, {5, 13}, {6, 7}, {6, 14}, {9, 11}, {9, 13}, {10, 11}, {10, 14}, {12, 13}, {12, 14}, {0ULL, 0ULL},
  /* 99 */ {3, 19}, {5, 21}, {6, 22}, {9, 25}, {10, 26}, {12, 28}, {0ULL, 0ULL},
  /* 106 */ {3, 7}, {3, 11}, {3, 19}, {5, 7}, {5, 13}, {5, 21}, {6, 7}, {6, 14}, {6, 22}, {9, 11}, {9, 13}, {9, 25}, {10, 11}, {10, 14}, {10, 26}, {12, 13}, {12, 14}, {12, 28}, {0ULL, 0ULL},
  /* 125 */ {7, 15}, {11, 15}, {13, 15}, {0ULL, 0ULL},
  /* 129 */ {7, 23}, {11, 27}, {13, 29}, {0ULL, 0ULL},
  /* 133 */ {7, 15}, {7, 23}, {11, 15}, {11, 27}, {13, 15}, {13, 29}, {0ULL, 0ULL},
  /* 140 */ {7, 15}, {11, 15}, {13, 15}, {14, 15}, {0ULL, 0ULL},
  /* 145 */ {7, 23}, {11, 27}, {13, 29}, {14, 30}, {0ULL, 0ULL},
  /* 150 */ {7, 15}, {7, 23}, {11, 15}, {11, 27}, {13, 15}, {13, 29}, {14, 15}, {14, 30}, {0ULL, 0ULL},
  /* 159 */ {15, 31}, {0ULL, 0ULL},
  /* 161 */ {2, 3}, {4, 5}, {8, 9}, {16, 17}, {0ULL, 0ULL},
  /* 166 */ {1, 3}, {1, 5}, {1, 9}, {2, 3}, {2, 6}, {2, 10}, {4, 5}, {4, 6}, {4, 12}, {8, 9}, {8, 10}, {8, 12}, {16, 17}, {16, 18}, {16, 20}, {16, 24}, {0ULL, 0ULL},
  /* 183 */ {1, 3}, {1, 5}, {1, 9}, {1, 17}, {2, 3}, {2, 6}, {2, 10}, {2, 18}, {4, 5}, {4, 6}, {4, 12}, {4, 20}, {8, 9}, {8, 10}, {8, 12}, {8, 24}, {16, 17}, {16, 18}, {16, 20}, {16, 24}, {0ULL, 0ULL},
  /* 204 */ {3, 7}, {3, 11}, {5, 7}, {5, 13}, {9, 11}, {9, 13}, {17, 19}, {17, 21}, {17, 25}, {0ULL, 0ULL},
  /* 214 */ {3, 7}, {3, 11}, {3, 19}, {5, 7}, {5, 13}, {5, 21}, {9, 11}, {9, 13}, {9, 25}, {17, 19}, {17, 21}, {17, 25}, {0ULL, 0ULL},
  /* 227 */ {6, 7}, {10, 11}, {12, 13}, {18, 19}, {20, 21}, {24, 25}, {0ULL, 0ULL},
  /* 234 */ {3, 7}, {3, 11}, {5, 7}, {5, 13}, {6, 7}, {6, 14}, {9, 11}, {9, 13}, {10, 11}, {10, 14}, {12, 13}, {12, 14}, {17, 19}, {17, 21}, {17, 25}, {18, 19}, {18, 22}, {18, 26}, {20, 21}, {20, 22}, {20, 28}, {24, 25}, {24, 26}, {24, 28}, {0ULL, 0ULL},
  /* 259 */ {3, 7}, {3, 11}, {3, 19}, {5, 7}, {5, 13}, {5, 21}, {6, 7}, {6, 14}, {6, 22}, {9, 11}, {9, 13}, {9, 25}, {10, 11}, {10, 14}, {10, 26}, {12, 13}, {12, 14}, {12, 28}, {17, 19}, {17, 21}, {17, 25}, {18, 19}, {18, 22}, {18, 26}, {20, 21}, {20, 22}, {20, 28}, {24, 25}, {24, 26}, {24, 28}, {0ULL, 0ULL},
  /* 290 */ {7, 15}, {11, 15}, {13, 15}, {19, 23}, {19, 27}, {21, 23}, {21, 29}, {25, 27}, {25, 29}, {0ULL, 0ULL},
  /* 300 */ {7, 15}, {7, 23}, {11, 15}, {11, 27}, {13, 15}, {13, 29}, {19, 23}, {19, 27}, {21, 23}, {21, 29}, {25, 27}, {25, 29}, {0ULL, 0ULL},
  /* 313 */ {14, 15}, {22, 23}, {26, 27}, {28, 29}, {0ULL, 0ULL},
  /* 318 */ {7, 15}, {11, 15}, {13, 15}, {14, 15}, {19, 23}, {19, 27}, {21, 23}, {21, 29}, {22, 23}, {22, 30}, {25, 27}, {25, 29}, {26, 27}, {26, 30}, {28, 29}, {28, 30}, {0ULL, 0ULL},
  /* 335 */ {7, 15}, {7, 23}, {11, 15}, {11, 27}, {13, 15}, {13, 29}, {14, 15}, {14, 30}, {19, 23}, {19, 27}, {21, 23}, {21, 29}, {22, 23}, {22, 30}, {25, 27}, {25, 29}, {26, 27}, {26, 30}, {28, 29}, {28, 30}, {0ULL, 0ULL},
  /* 356 */ {15, 31}, {23, 31}, {27, 31}, {29, 31}, {0ULL, 0ULL},
  /* 361 */ {15, 31}, {23, 31}, {27, 31}, {29, 31}, {30, 31}, {0ULL, 0ULL},
}};

// A transition in the generated R600 DFA.
struct R600Transition {
  unsigned FromDfaState; // The transitioned-from DFA state.
  uint64_t Action;       // The input symbol that causes this transition.
  unsigned ToDfaState;   // The transitioned-to DFA state.
  unsigned InfoIdx;      // Start index into R600TransitionInfo.
};

// A table of DFA transitions, ordered by {FromDfaState, Action}.
// The initial state is 1, not zero.
std::array<R600Transition, 70> R600Transitions = {{
  {1, 1, 2, 11},
  {1, 2, 3, 2},
  {1, 3, 4, 7},
  {1, 4, 5, 0},
  {2, 2, 6, 178},
  {2, 3, 6, 178},
  {2, 4, 7, 164},
  {3, 1, 6, 39},
  {3, 2, 8, 26},
  {3, 3, 9, 44},
  {3, 4, 10, 22},
  {4, 1, 6, 39},
  {4, 2, 9, 166},
  {4, 3, 9, 183},
  {4, 4, 11, 161},
  {5, 1, 7, 20},
  {5, 2, 10, 13},
  {5, 3, 11, 17},
  {6, 2, 12, 246},
  {6, 3, 12, 246},
  {6, 4, 13, 230},
  {7, 2, 13, 210},
  {7, 3, 13, 210},
  {8, 1, 12, 99},
  {8, 2, 14, 86},
  {8, 3, 15, 106},
  {8, 4, 16, 82},
  {9, 1, 12, 99},
  {9, 2, 15, 234},
  {9, 3, 15, 259},
  {9, 4, 17, 227},
  {10, 1, 13, 68},
  {10, 2, 16, 61},
  {10, 3, 17, 72},
  {11, 1, 13, 68},
  {11, 2, 17, 204},
  {11, 3, 17, 214},
  {12, 2, 18, 322},
  {12, 3, 18, 322},
  {12, 4, 19, 314},
  {13, 2, 19, 293},
  {13, 3, 19, 293},
  {14, 1, 18, 145},
  {14, 2, 20, 140},
  {14, 3, 21, 150},
  {14, 4, 20, 143},
  {15, 1, 18, 145},
  {15, 2, 21, 318},
  {15, 3, 21, 335},
  {15, 4, 22, 313},
  {16, 1, 19, 129},
  {16, 2, 20, 125},
  {16, 3, 22, 133},
  {17, 1, 19, 129},
  {17, 2, 22, 290},
  {17, 3, 22, 300},
  {18, 2, 23, 362},
  {18, 3, 23, 362},
  {18, 4, 23, 365},
  {19, 2, 23, 357},
  {19, 3, 23, 357},
  {20, 1, 23, 159},
  {20, 3, 23, 159},
  {21, 1, 23, 159},
  {21, 2, 23, 362},
  {21, 3, 23, 361},
  {21, 4, 23, 365},
  {22, 1, 23, 159},
  {22, 2, 23, 357},
  {22, 3, 23, 356},

}};

} // end anonymous namespace

namespace llvm {
DFAPacketizer *R600GenSubtargetInfo::createDFAPacketizer(const InstrItineraryData *IID) const {
  static Automaton<uint64_t> A(ArrayRef<R600Transition>(R600Transitions), R600TransitionInfo);
  unsigned ProcResIdxStart = R600ProcResourceIndexStart[IID->SchedModel.ProcID];
  unsigned ProcResIdxNum = R600ProcResourceIndexStart[IID->SchedModel.ProcID + 1] - ProcResIdxStart;
  return new DFAPacketizer(IID, A, {&R600ResourceIndices[ProcResIdxStart], ProcResIdxNum});

}

} // end namespace llvm
