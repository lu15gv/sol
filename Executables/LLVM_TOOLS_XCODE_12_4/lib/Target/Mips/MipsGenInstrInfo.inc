/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace Mips {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    INLINEASM_BR	= 2,
    CFI_INSTRUCTION	= 3,
    EH_LABEL	= 4,
    GC_LABEL	= 5,
    ANNOTATION_LABEL	= 6,
    KILL	= 7,
    EXTRACT_SUBREG	= 8,
    INSERT_SUBREG	= 9,
    IMPLICIT_DEF	= 10,
    SUBREG_TO_REG	= 11,
    COPY_TO_REGCLASS	= 12,
    DBG_VALUE	= 13,
    DBG_LABEL	= 14,
    REG_SEQUENCE	= 15,
    COPY	= 16,
    BUNDLE	= 17,
    LIFETIME_START	= 18,
    LIFETIME_END	= 19,
    STACKMAP	= 20,
    FENTRY_CALL	= 21,
    PATCHPOINT	= 22,
    LOAD_STACK_GUARD	= 23,
    STATEPOINT	= 24,
    LOCAL_ESCAPE	= 25,
    FAULTING_OP	= 26,
    PATCHABLE_OP	= 27,
    PATCHABLE_FUNCTION_ENTER	= 28,
    PATCHABLE_RET	= 29,
    PATCHABLE_FUNCTION_EXIT	= 30,
    PATCHABLE_TAIL_CALL	= 31,
    PATCHABLE_EVENT_CALL	= 32,
    PATCHABLE_TYPED_EVENT_CALL	= 33,
    ICALL_BRANCH_FUNNEL	= 34,
    G_ADD	= 35,
    G_SUB	= 36,
    G_MUL	= 37,
    G_SDIV	= 38,
    G_UDIV	= 39,
    G_SREM	= 40,
    G_UREM	= 41,
    G_AND	= 42,
    G_OR	= 43,
    G_XOR	= 44,
    G_IMPLICIT_DEF	= 45,
    G_PHI	= 46,
    G_FRAME_INDEX	= 47,
    G_GLOBAL_VALUE	= 48,
    G_EXTRACT	= 49,
    G_UNMERGE_VALUES	= 50,
    G_INSERT	= 51,
    G_MERGE_VALUES	= 52,
    G_BUILD_VECTOR	= 53,
    G_BUILD_VECTOR_TRUNC	= 54,
    G_CONCAT_VECTORS	= 55,
    G_PTRTOINT	= 56,
    G_INTTOPTR	= 57,
    G_BITCAST	= 58,
    G_INTRINSIC_TRUNC	= 59,
    G_INTRINSIC_ROUND	= 60,
    G_READCYCLECOUNTER	= 61,
    G_LOAD	= 62,
    G_SEXTLOAD	= 63,
    G_ZEXTLOAD	= 64,
    G_INDEXED_LOAD	= 65,
    G_INDEXED_SEXTLOAD	= 66,
    G_INDEXED_ZEXTLOAD	= 67,
    G_STORE	= 68,
    G_INDEXED_STORE	= 69,
    G_ATOMIC_CMPXCHG_WITH_SUCCESS	= 70,
    G_ATOMIC_CMPXCHG	= 71,
    G_ATOMICRMW_XCHG	= 72,
    G_ATOMICRMW_ADD	= 73,
    G_ATOMICRMW_SUB	= 74,
    G_ATOMICRMW_AND	= 75,
    G_ATOMICRMW_NAND	= 76,
    G_ATOMICRMW_OR	= 77,
    G_ATOMICRMW_XOR	= 78,
    G_ATOMICRMW_MAX	= 79,
    G_ATOMICRMW_MIN	= 80,
    G_ATOMICRMW_UMAX	= 81,
    G_ATOMICRMW_UMIN	= 82,
    G_ATOMICRMW_FADD	= 83,
    G_ATOMICRMW_FSUB	= 84,
    G_FENCE	= 85,
    G_BRCOND	= 86,
    G_BRINDIRECT	= 87,
    G_INTRINSIC	= 88,
    G_INTRINSIC_W_SIDE_EFFECTS	= 89,
    G_ANYEXT	= 90,
    G_TRUNC	= 91,
    G_CONSTANT	= 92,
    G_FCONSTANT	= 93,
    G_VASTART	= 94,
    G_VAARG	= 95,
    G_SEXT	= 96,
    G_SEXT_INREG	= 97,
    G_ZEXT	= 98,
    G_SHL	= 99,
    G_LSHR	= 100,
    G_ASHR	= 101,
    G_ICMP	= 102,
    G_FCMP	= 103,
    G_SELECT	= 104,
    G_UADDO	= 105,
    G_UADDE	= 106,
    G_USUBO	= 107,
    G_USUBE	= 108,
    G_SADDO	= 109,
    G_SADDE	= 110,
    G_SSUBO	= 111,
    G_SSUBE	= 112,
    G_UMULO	= 113,
    G_SMULO	= 114,
    G_UMULH	= 115,
    G_SMULH	= 116,
    G_FADD	= 117,
    G_FSUB	= 118,
    G_FMUL	= 119,
    G_FMA	= 120,
    G_FMAD	= 121,
    G_FDIV	= 122,
    G_FREM	= 123,
    G_FPOW	= 124,
    G_FEXP	= 125,
    G_FEXP2	= 126,
    G_FLOG	= 127,
    G_FLOG2	= 128,
    G_FLOG10	= 129,
    G_FNEG	= 130,
    G_FPEXT	= 131,
    G_FPTRUNC	= 132,
    G_FPTOSI	= 133,
    G_FPTOUI	= 134,
    G_SITOFP	= 135,
    G_UITOFP	= 136,
    G_FABS	= 137,
    G_FCOPYSIGN	= 138,
    G_FCANONICALIZE	= 139,
    G_FMINNUM	= 140,
    G_FMAXNUM	= 141,
    G_FMINNUM_IEEE	= 142,
    G_FMAXNUM_IEEE	= 143,
    G_FMINIMUM	= 144,
    G_FMAXIMUM	= 145,
    G_PTR_ADD	= 146,
    G_PTR_MASK	= 147,
    G_SMIN	= 148,
    G_SMAX	= 149,
    G_UMIN	= 150,
    G_UMAX	= 151,
    G_BR	= 152,
    G_BRJT	= 153,
    G_INSERT_VECTOR_ELT	= 154,
    G_EXTRACT_VECTOR_ELT	= 155,
    G_SHUFFLE_VECTOR	= 156,
    G_CTTZ	= 157,
    G_CTTZ_ZERO_UNDEF	= 158,
    G_CTLZ	= 159,
    G_CTLZ_ZERO_UNDEF	= 160,
    G_CTPOP	= 161,
    G_BSWAP	= 162,
    G_BITREVERSE	= 163,
    G_FCEIL	= 164,
    G_FCOS	= 165,
    G_FSIN	= 166,
    G_FSQRT	= 167,
    G_FFLOOR	= 168,
    G_FRINT	= 169,
    G_FNEARBYINT	= 170,
    G_ADDRSPACE_CAST	= 171,
    G_BLOCK_ADDR	= 172,
    G_JUMP_TABLE	= 173,
    G_DYN_STACKALLOC	= 174,
    ABSMacro	= 175,
    ADJCALLSTACKDOWN	= 176,
    ADJCALLSTACKUP	= 177,
    AND_V_D_PSEUDO	= 178,
    AND_V_H_PSEUDO	= 179,
    AND_V_W_PSEUDO	= 180,
    ATOMIC_CMP_SWAP_I16	= 181,
    ATOMIC_CMP_SWAP_I16_POSTRA	= 182,
    ATOMIC_CMP_SWAP_I32	= 183,
    ATOMIC_CMP_SWAP_I32_POSTRA	= 184,
    ATOMIC_CMP_SWAP_I64	= 185,
    ATOMIC_CMP_SWAP_I64_POSTRA	= 186,
    ATOMIC_CMP_SWAP_I8	= 187,
    ATOMIC_CMP_SWAP_I8_POSTRA	= 188,
    ATOMIC_LOAD_ADD_I16	= 189,
    ATOMIC_LOAD_ADD_I16_POSTRA	= 190,
    ATOMIC_LOAD_ADD_I32	= 191,
    ATOMIC_LOAD_ADD_I32_POSTRA	= 192,
    ATOMIC_LOAD_ADD_I64	= 193,
    ATOMIC_LOAD_ADD_I64_POSTRA	= 194,
    ATOMIC_LOAD_ADD_I8	= 195,
    ATOMIC_LOAD_ADD_I8_POSTRA	= 196,
    ATOMIC_LOAD_AND_I16	= 197,
    ATOMIC_LOAD_AND_I16_POSTRA	= 198,
    ATOMIC_LOAD_AND_I32	= 199,
    ATOMIC_LOAD_AND_I32_POSTRA	= 200,
    ATOMIC_LOAD_AND_I64	= 201,
    ATOMIC_LOAD_AND_I64_POSTRA	= 202,
    ATOMIC_LOAD_AND_I8	= 203,
    ATOMIC_LOAD_AND_I8_POSTRA	= 204,
    ATOMIC_LOAD_MAX_I16	= 205,
    ATOMIC_LOAD_MAX_I16_POSTRA	= 206,
    ATOMIC_LOAD_MAX_I32	= 207,
    ATOMIC_LOAD_MAX_I32_POSTRA	= 208,
    ATOMIC_LOAD_MAX_I64	= 209,
    ATOMIC_LOAD_MAX_I64_POSTRA	= 210,
    ATOMIC_LOAD_MAX_I8	= 211,
    ATOMIC_LOAD_MAX_I8_POSTRA	= 212,
    ATOMIC_LOAD_MIN_I16	= 213,
    ATOMIC_LOAD_MIN_I16_POSTRA	= 214,
    ATOMIC_LOAD_MIN_I32	= 215,
    ATOMIC_LOAD_MIN_I32_POSTRA	= 216,
    ATOMIC_LOAD_MIN_I64	= 217,
    ATOMIC_LOAD_MIN_I64_POSTRA	= 218,
    ATOMIC_LOAD_MIN_I8	= 219,
    ATOMIC_LOAD_MIN_I8_POSTRA	= 220,
    ATOMIC_LOAD_NAND_I16	= 221,
    ATOMIC_LOAD_NAND_I16_POSTRA	= 222,
    ATOMIC_LOAD_NAND_I32	= 223,
    ATOMIC_LOAD_NAND_I32_POSTRA	= 224,
    ATOMIC_LOAD_NAND_I64	= 225,
    ATOMIC_LOAD_NAND_I64_POSTRA	= 226,
    ATOMIC_LOAD_NAND_I8	= 227,
    ATOMIC_LOAD_NAND_I8_POSTRA	= 228,
    ATOMIC_LOAD_OR_I16	= 229,
    ATOMIC_LOAD_OR_I16_POSTRA	= 230,
    ATOMIC_LOAD_OR_I32	= 231,
    ATOMIC_LOAD_OR_I32_POSTRA	= 232,
    ATOMIC_LOAD_OR_I64	= 233,
    ATOMIC_LOAD_OR_I64_POSTRA	= 234,
    ATOMIC_LOAD_OR_I8	= 235,
    ATOMIC_LOAD_OR_I8_POSTRA	= 236,
    ATOMIC_LOAD_SUB_I16	= 237,
    ATOMIC_LOAD_SUB_I16_POSTRA	= 238,
    ATOMIC_LOAD_SUB_I32	= 239,
    ATOMIC_LOAD_SUB_I32_POSTRA	= 240,
    ATOMIC_LOAD_SUB_I64	= 241,
    ATOMIC_LOAD_SUB_I64_POSTRA	= 242,
    ATOMIC_LOAD_SUB_I8	= 243,
    ATOMIC_LOAD_SUB_I8_POSTRA	= 244,
    ATOMIC_LOAD_UMAX_I16	= 245,
    ATOMIC_LOAD_UMAX_I16_POSTRA	= 246,
    ATOMIC_LOAD_UMAX_I32	= 247,
    ATOMIC_LOAD_UMAX_I32_POSTRA	= 248,
    ATOMIC_LOAD_UMAX_I64	= 249,
    ATOMIC_LOAD_UMAX_I64_POSTRA	= 250,
    ATOMIC_LOAD_UMAX_I8	= 251,
    ATOMIC_LOAD_UMAX_I8_POSTRA	= 252,
    ATOMIC_LOAD_UMIN_I16	= 253,
    ATOMIC_LOAD_UMIN_I16_POSTRA	= 254,
    ATOMIC_LOAD_UMIN_I32	= 255,
    ATOMIC_LOAD_UMIN_I32_POSTRA	= 256,
    ATOMIC_LOAD_UMIN_I64	= 257,
    ATOMIC_LOAD_UMIN_I64_POSTRA	= 258,
    ATOMIC_LOAD_UMIN_I8	= 259,
    ATOMIC_LOAD_UMIN_I8_POSTRA	= 260,
    ATOMIC_LOAD_XOR_I16	= 261,
    ATOMIC_LOAD_XOR_I16_POSTRA	= 262,
    ATOMIC_LOAD_XOR_I32	= 263,
    ATOMIC_LOAD_XOR_I32_POSTRA	= 264,
    ATOMIC_LOAD_XOR_I64	= 265,
    ATOMIC_LOAD_XOR_I64_POSTRA	= 266,
    ATOMIC_LOAD_XOR_I8	= 267,
    ATOMIC_LOAD_XOR_I8_POSTRA	= 268,
    ATOMIC_SWAP_I16	= 269,
    ATOMIC_SWAP_I16_POSTRA	= 270,
    ATOMIC_SWAP_I32	= 271,
    ATOMIC_SWAP_I32_POSTRA	= 272,
    ATOMIC_SWAP_I64	= 273,
    ATOMIC_SWAP_I64_POSTRA	= 274,
    ATOMIC_SWAP_I8	= 275,
    ATOMIC_SWAP_I8_POSTRA	= 276,
    B	= 277,
    BAL_BR	= 278,
    BAL_BR_MM	= 279,
    BEQLImmMacro	= 280,
    BGE	= 281,
    BGEImmMacro	= 282,
    BGEL	= 283,
    BGELImmMacro	= 284,
    BGEU	= 285,
    BGEUImmMacro	= 286,
    BGEUL	= 287,
    BGEULImmMacro	= 288,
    BGT	= 289,
    BGTImmMacro	= 290,
    BGTL	= 291,
    BGTLImmMacro	= 292,
    BGTU	= 293,
    BGTUImmMacro	= 294,
    BGTUL	= 295,
    BGTULImmMacro	= 296,
    BLE	= 297,
    BLEImmMacro	= 298,
    BLEL	= 299,
    BLELImmMacro	= 300,
    BLEU	= 301,
    BLEUImmMacro	= 302,
    BLEUL	= 303,
    BLEULImmMacro	= 304,
    BLT	= 305,
    BLTImmMacro	= 306,
    BLTL	= 307,
    BLTLImmMacro	= 308,
    BLTU	= 309,
    BLTUImmMacro	= 310,
    BLTUL	= 311,
    BLTULImmMacro	= 312,
    BNELImmMacro	= 313,
    BPOSGE32_PSEUDO	= 314,
    BSEL_D_PSEUDO	= 315,
    BSEL_FD_PSEUDO	= 316,
    BSEL_FW_PSEUDO	= 317,
    BSEL_H_PSEUDO	= 318,
    BSEL_W_PSEUDO	= 319,
    B_MM	= 320,
    B_MMR6_Pseudo	= 321,
    B_MM_Pseudo	= 322,
    BeqImm	= 323,
    BneImm	= 324,
    BteqzT8CmpX16	= 325,
    BteqzT8CmpiX16	= 326,
    BteqzT8SltX16	= 327,
    BteqzT8SltiX16	= 328,
    BteqzT8SltiuX16	= 329,
    BteqzT8SltuX16	= 330,
    BtnezT8CmpX16	= 331,
    BtnezT8CmpiX16	= 332,
    BtnezT8SltX16	= 333,
    BtnezT8SltiX16	= 334,
    BtnezT8SltiuX16	= 335,
    BtnezT8SltuX16	= 336,
    BuildPairF64	= 337,
    BuildPairF64_64	= 338,
    CFTC1	= 339,
    CONSTPOOL_ENTRY	= 340,
    COPY_FD_PSEUDO	= 341,
    COPY_FW_PSEUDO	= 342,
    CTTC1	= 343,
    Constant32	= 344,
    DMULImmMacro	= 345,
    DMULMacro	= 346,
    DMULOMacro	= 347,
    DMULOUMacro	= 348,
    DROL	= 349,
    DROLImm	= 350,
    DROR	= 351,
    DRORImm	= 352,
    DSDivIMacro	= 353,
    DSDivMacro	= 354,
    DSRemIMacro	= 355,
    DSRemMacro	= 356,
    DUDivIMacro	= 357,
    DUDivMacro	= 358,
    DURemIMacro	= 359,
    DURemMacro	= 360,
    ERet	= 361,
    ExtractElementF64	= 362,
    ExtractElementF64_64	= 363,
    FABS_D	= 364,
    FABS_W	= 365,
    FEXP2_D_1_PSEUDO	= 366,
    FEXP2_W_1_PSEUDO	= 367,
    FILL_FD_PSEUDO	= 368,
    FILL_FW_PSEUDO	= 369,
    GotPrologue16	= 370,
    INSERT_B_VIDX64_PSEUDO	= 371,
    INSERT_B_VIDX_PSEUDO	= 372,
    INSERT_D_VIDX64_PSEUDO	= 373,
    INSERT_D_VIDX_PSEUDO	= 374,
    INSERT_FD_PSEUDO	= 375,
    INSERT_FD_VIDX64_PSEUDO	= 376,
    INSERT_FD_VIDX_PSEUDO	= 377,
    INSERT_FW_PSEUDO	= 378,
    INSERT_FW_VIDX64_PSEUDO	= 379,
    INSERT_FW_VIDX_PSEUDO	= 380,
    INSERT_H_VIDX64_PSEUDO	= 381,
    INSERT_H_VIDX_PSEUDO	= 382,
    INSERT_W_VIDX64_PSEUDO	= 383,
    INSERT_W_VIDX_PSEUDO	= 384,
    JALR64Pseudo	= 385,
    JALRHB64Pseudo	= 386,
    JALRHBPseudo	= 387,
    JALRPseudo	= 388,
    JAL_MMR6	= 389,
    JalOneReg	= 390,
    JalTwoReg	= 391,
    LDMacro	= 392,
    LD_F16	= 393,
    LOAD_ACC128	= 394,
    LOAD_ACC64	= 395,
    LOAD_ACC64DSP	= 396,
    LOAD_CCOND_DSP	= 397,
    LONG_BRANCH_ADDiu	= 398,
    LONG_BRANCH_ADDiu2Op	= 399,
    LONG_BRANCH_DADDiu	= 400,
    LONG_BRANCH_DADDiu2Op	= 401,
    LONG_BRANCH_LUi	= 402,
    LONG_BRANCH_LUi2Op	= 403,
    LONG_BRANCH_LUi2Op_64	= 404,
    LWM_MM	= 405,
    LoadAddrImm32	= 406,
    LoadAddrImm64	= 407,
    LoadAddrReg32	= 408,
    LoadAddrReg64	= 409,
    LoadImm32	= 410,
    LoadImm64	= 411,
    LoadImmDoubleFGR	= 412,
    LoadImmDoubleFGR_32	= 413,
    LoadImmDoubleGPR	= 414,
    LoadImmSingleFGR	= 415,
    LoadImmSingleGPR	= 416,
    LwConstant32	= 417,
    MFTACX	= 418,
    MFTC0	= 419,
    MFTC1	= 420,
    MFTDSP	= 421,
    MFTGPR	= 422,
    MFTHC1	= 423,
    MFTHI	= 424,
    MFTLO	= 425,
    MIPSeh_return32	= 426,
    MIPSeh_return64	= 427,
    MSA_FP_EXTEND_D_PSEUDO	= 428,
    MSA_FP_EXTEND_W_PSEUDO	= 429,
    MSA_FP_ROUND_D_PSEUDO	= 430,
    MSA_FP_ROUND_W_PSEUDO	= 431,
    MTTACX	= 432,
    MTTC0	= 433,
    MTTC1	= 434,
    MTTDSP	= 435,
    MTTGPR	= 436,
    MTTHC1	= 437,
    MTTHI	= 438,
    MTTLO	= 439,
    MULImmMacro	= 440,
    MULOMacro	= 441,
    MULOUMacro	= 442,
    MultRxRy16	= 443,
    MultRxRyRz16	= 444,
    MultuRxRy16	= 445,
    MultuRxRyRz16	= 446,
    NOP	= 447,
    NORImm	= 448,
    NORImm64	= 449,
    NOR_V_D_PSEUDO	= 450,
    NOR_V_H_PSEUDO	= 451,
    NOR_V_W_PSEUDO	= 452,
    OR_V_D_PSEUDO	= 453,
    OR_V_H_PSEUDO	= 454,
    OR_V_W_PSEUDO	= 455,
    PseudoCMPU_EQ_QB	= 456,
    PseudoCMPU_LE_QB	= 457,
    PseudoCMPU_LT_QB	= 458,
    PseudoCMP_EQ_PH	= 459,
    PseudoCMP_LE_PH	= 460,
    PseudoCMP_LT_PH	= 461,
    PseudoCVT_D32_W	= 462,
    PseudoCVT_D64_L	= 463,
    PseudoCVT_D64_W	= 464,
    PseudoCVT_S_L	= 465,
    PseudoCVT_S_W	= 466,
    PseudoDMULT	= 467,
    PseudoDMULTu	= 468,
    PseudoDSDIV	= 469,
    PseudoDUDIV	= 470,
    PseudoD_SELECT_I	= 471,
    PseudoD_SELECT_I64	= 472,
    PseudoIndirectBranch	= 473,
    PseudoIndirectBranch64	= 474,
    PseudoIndirectBranch64R6	= 475,
    PseudoIndirectBranchR6	= 476,
    PseudoIndirectBranch_MM	= 477,
    PseudoIndirectBranch_MMR6	= 478,
    PseudoIndirectHazardBranch	= 479,
    PseudoIndirectHazardBranch64	= 480,
    PseudoIndrectHazardBranch64R6	= 481,
    PseudoIndrectHazardBranchR6	= 482,
    PseudoMADD	= 483,
    PseudoMADDU	= 484,
    PseudoMADDU_MM	= 485,
    PseudoMADD_MM	= 486,
    PseudoMFHI	= 487,
    PseudoMFHI64	= 488,
    PseudoMFHI_MM	= 489,
    PseudoMFLO	= 490,
    PseudoMFLO64	= 491,
    PseudoMFLO_MM	= 492,
    PseudoMSUB	= 493,
    PseudoMSUBU	= 494,
    PseudoMSUBU_MM	= 495,
    PseudoMSUB_MM	= 496,
    PseudoMTLOHI	= 497,
    PseudoMTLOHI64	= 498,
    PseudoMTLOHI_DSP	= 499,
    PseudoMTLOHI_MM	= 500,
    PseudoMULT	= 501,
    PseudoMULT_MM	= 502,
    PseudoMULTu	= 503,
    PseudoMULTu_MM	= 504,
    PseudoPICK_PH	= 505,
    PseudoPICK_QB	= 506,
    PseudoReturn	= 507,
    PseudoReturn64	= 508,
    PseudoSDIV	= 509,
    PseudoSELECTFP_F_D32	= 510,
    PseudoSELECTFP_F_D64	= 511,
    PseudoSELECTFP_F_I	= 512,
    PseudoSELECTFP_F_I64	= 513,
    PseudoSELECTFP_F_S	= 514,
    PseudoSELECTFP_T_D32	= 515,
    PseudoSELECTFP_T_D64	= 516,
    PseudoSELECTFP_T_I	= 517,
    PseudoSELECTFP_T_I64	= 518,
    PseudoSELECTFP_T_S	= 519,
    PseudoSELECT_D32	= 520,
    PseudoSELECT_D64	= 521,
    PseudoSELECT_I	= 522,
    PseudoSELECT_I64	= 523,
    PseudoSELECT_S	= 524,
    PseudoTRUNC_W_D	= 525,
    PseudoTRUNC_W_D32	= 526,
    PseudoTRUNC_W_S	= 527,
    PseudoUDIV	= 528,
    ROL	= 529,
    ROLImm	= 530,
    ROR	= 531,
    RORImm	= 532,
    RetRA	= 533,
    RetRA16	= 534,
    SDC1_M1	= 535,
    SDIV_MM_Pseudo	= 536,
    SDMacro	= 537,
    SDivIMacro	= 538,
    SDivMacro	= 539,
    SEQIMacro	= 540,
    SEQMacro	= 541,
    SGE	= 542,
    SGEImm	= 543,
    SGEImm64	= 544,
    SGEU	= 545,
    SGEUImm	= 546,
    SGEUImm64	= 547,
    SGTImm	= 548,
    SGTImm64	= 549,
    SGTUImm	= 550,
    SGTUImm64	= 551,
    SLTImm64	= 552,
    SLTUImm64	= 553,
    SNZ_B_PSEUDO	= 554,
    SNZ_D_PSEUDO	= 555,
    SNZ_H_PSEUDO	= 556,
    SNZ_V_PSEUDO	= 557,
    SNZ_W_PSEUDO	= 558,
    SRemIMacro	= 559,
    SRemMacro	= 560,
    STORE_ACC128	= 561,
    STORE_ACC64	= 562,
    STORE_ACC64DSP	= 563,
    STORE_CCOND_DSP	= 564,
    ST_F16	= 565,
    SWM_MM	= 566,
    SZ_B_PSEUDO	= 567,
    SZ_D_PSEUDO	= 568,
    SZ_H_PSEUDO	= 569,
    SZ_V_PSEUDO	= 570,
    SZ_W_PSEUDO	= 571,
    SaaAddr	= 572,
    SaadAddr	= 573,
    SelBeqZ	= 574,
    SelBneZ	= 575,
    SelTBteqZCmp	= 576,
    SelTBteqZCmpi	= 577,
    SelTBteqZSlt	= 578,
    SelTBteqZSlti	= 579,
    SelTBteqZSltiu	= 580,
    SelTBteqZSltu	= 581,
    SelTBtneZCmp	= 582,
    SelTBtneZCmpi	= 583,
    SelTBtneZSlt	= 584,
    SelTBtneZSlti	= 585,
    SelTBtneZSltiu	= 586,
    SelTBtneZSltu	= 587,
    SltCCRxRy16	= 588,
    SltiCCRxImmX16	= 589,
    SltiuCCRxImmX16	= 590,
    SltuCCRxRy16	= 591,
    SltuRxRyRz16	= 592,
    TAILCALL	= 593,
    TAILCALL64R6REG	= 594,
    TAILCALLHB64R6REG	= 595,
    TAILCALLHBR6REG	= 596,
    TAILCALLR6REG	= 597,
    TAILCALLREG	= 598,
    TAILCALLREG64	= 599,
    TAILCALLREGHB	= 600,
    TAILCALLREGHB64	= 601,
    TAILCALLREG_MM	= 602,
    TAILCALLREG_MMR6	= 603,
    TAILCALL_MM	= 604,
    TAILCALL_MMR6	= 605,
    TRAP	= 606,
    TRAP_MM	= 607,
    UDIV_MM_Pseudo	= 608,
    UDivIMacro	= 609,
    UDivMacro	= 610,
    URemIMacro	= 611,
    URemMacro	= 612,
    Ulh	= 613,
    Ulhu	= 614,
    Ulw	= 615,
    Ush	= 616,
    Usw	= 617,
    XOR_V_D_PSEUDO	= 618,
    XOR_V_H_PSEUDO	= 619,
    XOR_V_W_PSEUDO	= 620,
    ABSQ_S_PH	= 621,
    ABSQ_S_PH_MM	= 622,
    ABSQ_S_QB	= 623,
    ABSQ_S_QB_MMR2	= 624,
    ABSQ_S_W	= 625,
    ABSQ_S_W_MM	= 626,
    ADD	= 627,
    ADDIUPC	= 628,
    ADDIUPC_MM	= 629,
    ADDIUPC_MMR6	= 630,
    ADDIUR1SP_MM	= 631,
    ADDIUR2_MM	= 632,
    ADDIUS5_MM	= 633,
    ADDIUSP_MM	= 634,
    ADDIU_MMR6	= 635,
    ADDQH_PH	= 636,
    ADDQH_PH_MMR2	= 637,
    ADDQH_R_PH	= 638,
    ADDQH_R_PH_MMR2	= 639,
    ADDQH_R_W	= 640,
    ADDQH_R_W_MMR2	= 641,
    ADDQH_W	= 642,
    ADDQH_W_MMR2	= 643,
    ADDQ_PH	= 644,
    ADDQ_PH_MM	= 645,
    ADDQ_S_PH	= 646,
    ADDQ_S_PH_MM	= 647,
    ADDQ_S_W	= 648,
    ADDQ_S_W_MM	= 649,
    ADDSC	= 650,
    ADDSC_MM	= 651,
    ADDS_A_B	= 652,
    ADDS_A_D	= 653,
    ADDS_A_H	= 654,
    ADDS_A_W	= 655,
    ADDS_S_B	= 656,
    ADDS_S_D	= 657,
    ADDS_S_H	= 658,
    ADDS_S_W	= 659,
    ADDS_U_B	= 660,
    ADDS_U_D	= 661,
    ADDS_U_H	= 662,
    ADDS_U_W	= 663,
    ADDU16_MM	= 664,
    ADDU16_MMR6	= 665,
    ADDUH_QB	= 666,
    ADDUH_QB_MMR2	= 667,
    ADDUH_R_QB	= 668,
    ADDUH_R_QB_MMR2	= 669,
    ADDU_MMR6	= 670,
    ADDU_PH	= 671,
    ADDU_PH_MMR2	= 672,
    ADDU_QB	= 673,
    ADDU_QB_MM	= 674,
    ADDU_S_PH	= 675,
    ADDU_S_PH_MMR2	= 676,
    ADDU_S_QB	= 677,
    ADDU_S_QB_MM	= 678,
    ADDVI_B	= 679,
    ADDVI_D	= 680,
    ADDVI_H	= 681,
    ADDVI_W	= 682,
    ADDV_B	= 683,
    ADDV_D	= 684,
    ADDV_H	= 685,
    ADDV_W	= 686,
    ADDWC	= 687,
    ADDWC_MM	= 688,
    ADD_A_B	= 689,
    ADD_A_D	= 690,
    ADD_A_H	= 691,
    ADD_A_W	= 692,
    ADD_MM	= 693,
    ADD_MMR6	= 694,
    ADDi	= 695,
    ADDi_MM	= 696,
    ADDiu	= 697,
    ADDiu_MM	= 698,
    ADDu	= 699,
    ADDu_MM	= 700,
    ALIGN	= 701,
    ALIGN_MMR6	= 702,
    ALUIPC	= 703,
    ALUIPC_MMR6	= 704,
    AND	= 705,
    AND16_MM	= 706,
    AND16_MMR6	= 707,
    AND64	= 708,
    ANDI16_MM	= 709,
    ANDI16_MMR6	= 710,
    ANDI_B	= 711,
    ANDI_MMR6	= 712,
    AND_MM	= 713,
    AND_MMR6	= 714,
    AND_V	= 715,
    ANDi	= 716,
    ANDi64	= 717,
    ANDi_MM	= 718,
    APPEND	= 719,
    APPEND_MMR2	= 720,
    ASUB_S_B	= 721,
    ASUB_S_D	= 722,
    ASUB_S_H	= 723,
    ASUB_S_W	= 724,
    ASUB_U_B	= 725,
    ASUB_U_D	= 726,
    ASUB_U_H	= 727,
    ASUB_U_W	= 728,
    AUI	= 729,
    AUIPC	= 730,
    AUIPC_MMR6	= 731,
    AUI_MMR6	= 732,
    AVER_S_B	= 733,
    AVER_S_D	= 734,
    AVER_S_H	= 735,
    AVER_S_W	= 736,
    AVER_U_B	= 737,
    AVER_U_D	= 738,
    AVER_U_H	= 739,
    AVER_U_W	= 740,
    AVE_S_B	= 741,
    AVE_S_D	= 742,
    AVE_S_H	= 743,
    AVE_S_W	= 744,
    AVE_U_B	= 745,
    AVE_U_D	= 746,
    AVE_U_H	= 747,
    AVE_U_W	= 748,
    AddiuRxImmX16	= 749,
    AddiuRxPcImmX16	= 750,
    AddiuRxRxImm16	= 751,
    AddiuRxRxImmX16	= 752,
    AddiuRxRyOffMemX16	= 753,
    AddiuSpImm16	= 754,
    AddiuSpImmX16	= 755,
    AdduRxRyRz16	= 756,
    AndRxRxRy16	= 757,
    B16_MM	= 758,
    BADDu	= 759,
    BAL	= 760,
    BALC	= 761,
    BALC_MMR6	= 762,
    BALIGN	= 763,
    BALIGN_MMR2	= 764,
    BBIT0	= 765,
    BBIT032	= 766,
    BBIT1	= 767,
    BBIT132	= 768,
    BC	= 769,
    BC16_MMR6	= 770,
    BC1EQZ	= 771,
    BC1EQZC_MMR6	= 772,
    BC1F	= 773,
    BC1FL	= 774,
    BC1F_MM	= 775,
    BC1NEZ	= 776,
    BC1NEZC_MMR6	= 777,
    BC1T	= 778,
    BC1TL	= 779,
    BC1T_MM	= 780,
    BC2EQZ	= 781,
    BC2EQZC_MMR6	= 782,
    BC2NEZ	= 783,
    BC2NEZC_MMR6	= 784,
    BCLRI_B	= 785,
    BCLRI_D	= 786,
    BCLRI_H	= 787,
    BCLRI_W	= 788,
    BCLR_B	= 789,
    BCLR_D	= 790,
    BCLR_H	= 791,
    BCLR_W	= 792,
    BC_MMR6	= 793,
    BEQ	= 794,
    BEQ64	= 795,
    BEQC	= 796,
    BEQC64	= 797,
    BEQC_MMR6	= 798,
    BEQL	= 799,
    BEQZ16_MM	= 800,
    BEQZALC	= 801,
    BEQZALC_MMR6	= 802,
    BEQZC	= 803,
    BEQZC16_MMR6	= 804,
    BEQZC64	= 805,
    BEQZC_MM	= 806,
    BEQZC_MMR6	= 807,
    BEQ_MM	= 808,
    BGEC	= 809,
    BGEC64	= 810,
    BGEC_MMR6	= 811,
    BGEUC	= 812,
    BGEUC64	= 813,
    BGEUC_MMR6	= 814,
    BGEZ	= 815,
    BGEZ64	= 816,
    BGEZAL	= 817,
    BGEZALC	= 818,
    BGEZALC_MMR6	= 819,
    BGEZALL	= 820,
    BGEZALS_MM	= 821,
    BGEZAL_MM	= 822,
    BGEZC	= 823,
    BGEZC64	= 824,
    BGEZC_MMR6	= 825,
    BGEZL	= 826,
    BGEZ_MM	= 827,
    BGTZ	= 828,
    BGTZ64	= 829,
    BGTZALC	= 830,
    BGTZALC_MMR6	= 831,
    BGTZC	= 832,
    BGTZC64	= 833,
    BGTZC_MMR6	= 834,
    BGTZL	= 835,
    BGTZ_MM	= 836,
    BINSLI_B	= 837,
    BINSLI_D	= 838,
    BINSLI_H	= 839,
    BINSLI_W	= 840,
    BINSL_B	= 841,
    BINSL_D	= 842,
    BINSL_H	= 843,
    BINSL_W	= 844,
    BINSRI_B	= 845,
    BINSRI_D	= 846,
    BINSRI_H	= 847,
    BINSRI_W	= 848,
    BINSR_B	= 849,
    BINSR_D	= 850,
    BINSR_H	= 851,
    BINSR_W	= 852,
    BITREV	= 853,
    BITREV_MM	= 854,
    BITSWAP	= 855,
    BITSWAP_MMR6	= 856,
    BLEZ	= 857,
    BLEZ64	= 858,
    BLEZALC	= 859,
    BLEZALC_MMR6	= 860,
    BLEZC	= 861,
    BLEZC64	= 862,
    BLEZC_MMR6	= 863,
    BLEZL	= 864,
    BLEZ_MM	= 865,
    BLTC	= 866,
    BLTC64	= 867,
    BLTC_MMR6	= 868,
    BLTUC	= 869,
    BLTUC64	= 870,
    BLTUC_MMR6	= 871,
    BLTZ	= 872,
    BLTZ64	= 873,
    BLTZAL	= 874,
    BLTZALC	= 875,
    BLTZALC_MMR6	= 876,
    BLTZALL	= 877,
    BLTZALS_MM	= 878,
    BLTZAL_MM	= 879,
    BLTZC	= 880,
    BLTZC64	= 881,
    BLTZC_MMR6	= 882,
    BLTZL	= 883,
    BLTZ_MM	= 884,
    BMNZI_B	= 885,
    BMNZ_V	= 886,
    BMZI_B	= 887,
    BMZ_V	= 888,
    BNE	= 889,
    BNE64	= 890,
    BNEC	= 891,
    BNEC64	= 892,
    BNEC_MMR6	= 893,
    BNEGI_B	= 894,
    BNEGI_D	= 895,
    BNEGI_H	= 896,
    BNEGI_W	= 897,
    BNEG_B	= 898,
    BNEG_D	= 899,
    BNEG_H	= 900,
    BNEG_W	= 901,
    BNEL	= 902,
    BNEZ16_MM	= 903,
    BNEZALC	= 904,
    BNEZALC_MMR6	= 905,
    BNEZC	= 906,
    BNEZC16_MMR6	= 907,
    BNEZC64	= 908,
    BNEZC_MM	= 909,
    BNEZC_MMR6	= 910,
    BNE_MM	= 911,
    BNVC	= 912,
    BNVC_MMR6	= 913,
    BNZ_B	= 914,
    BNZ_D	= 915,
    BNZ_H	= 916,
    BNZ_V	= 917,
    BNZ_W	= 918,
    BOVC	= 919,
    BOVC_MMR6	= 920,
    BPOSGE32	= 921,
    BPOSGE32C_MMR3	= 922,
    BPOSGE32_MM	= 923,
    BREAK	= 924,
    BREAK16_MM	= 925,
    BREAK16_MMR6	= 926,
    BREAK_MM	= 927,
    BREAK_MMR6	= 928,
    BSELI_B	= 929,
    BSEL_V	= 930,
    BSETI_B	= 931,
    BSETI_D	= 932,
    BSETI_H	= 933,
    BSETI_W	= 934,
    BSET_B	= 935,
    BSET_D	= 936,
    BSET_H	= 937,
    BSET_W	= 938,
    BZ_B	= 939,
    BZ_D	= 940,
    BZ_H	= 941,
    BZ_V	= 942,
    BZ_W	= 943,
    BeqzRxImm16	= 944,
    BeqzRxImmX16	= 945,
    Bimm16	= 946,
    BimmX16	= 947,
    BnezRxImm16	= 948,
    BnezRxImmX16	= 949,
    Break16	= 950,
    Bteqz16	= 951,
    BteqzX16	= 952,
    Btnez16	= 953,
    BtnezX16	= 954,
    CACHE	= 955,
    CACHEE	= 956,
    CACHEE_MM	= 957,
    CACHE_MM	= 958,
    CACHE_MMR6	= 959,
    CACHE_R6	= 960,
    CEIL_L_D64	= 961,
    CEIL_L_D_MMR6	= 962,
    CEIL_L_S	= 963,
    CEIL_L_S_MMR6	= 964,
    CEIL_W_D32	= 965,
    CEIL_W_D64	= 966,
    CEIL_W_D_MMR6	= 967,
    CEIL_W_MM	= 968,
    CEIL_W_S	= 969,
    CEIL_W_S_MM	= 970,
    CEIL_W_S_MMR6	= 971,
    CEQI_B	= 972,
    CEQI_D	= 973,
    CEQI_H	= 974,
    CEQI_W	= 975,
    CEQ_B	= 976,
    CEQ_D	= 977,
    CEQ_H	= 978,
    CEQ_W	= 979,
    CFC1	= 980,
    CFC1_MM	= 981,
    CFC2_MM	= 982,
    CFCMSA	= 983,
    CINS	= 984,
    CINS32	= 985,
    CINS64_32	= 986,
    CINS_i32	= 987,
    CLASS_D	= 988,
    CLASS_D_MMR6	= 989,
    CLASS_S	= 990,
    CLASS_S_MMR6	= 991,
    CLEI_S_B	= 992,
    CLEI_S_D	= 993,
    CLEI_S_H	= 994,
    CLEI_S_W	= 995,
    CLEI_U_B	= 996,
    CLEI_U_D	= 997,
    CLEI_U_H	= 998,
    CLEI_U_W	= 999,
    CLE_S_B	= 1000,
    CLE_S_D	= 1001,
    CLE_S_H	= 1002,
    CLE_S_W	= 1003,
    CLE_U_B	= 1004,
    CLE_U_D	= 1005,
    CLE_U_H	= 1006,
    CLE_U_W	= 1007,
    CLO	= 1008,
    CLO_MM	= 1009,
    CLO_MMR6	= 1010,
    CLO_R6	= 1011,
    CLTI_S_B	= 1012,
    CLTI_S_D	= 1013,
    CLTI_S_H	= 1014,
    CLTI_S_W	= 1015,
    CLTI_U_B	= 1016,
    CLTI_U_D	= 1017,
    CLTI_U_H	= 1018,
    CLTI_U_W	= 1019,
    CLT_S_B	= 1020,
    CLT_S_D	= 1021,
    CLT_S_H	= 1022,
    CLT_S_W	= 1023,
    CLT_U_B	= 1024,
    CLT_U_D	= 1025,
    CLT_U_H	= 1026,
    CLT_U_W	= 1027,
    CLZ	= 1028,
    CLZ_MM	= 1029,
    CLZ_MMR6	= 1030,
    CLZ_R6	= 1031,
    CMPGDU_EQ_QB	= 1032,
    CMPGDU_EQ_QB_MMR2	= 1033,
    CMPGDU_LE_QB	= 1034,
    CMPGDU_LE_QB_MMR2	= 1035,
    CMPGDU_LT_QB	= 1036,
    CMPGDU_LT_QB_MMR2	= 1037,
    CMPGU_EQ_QB	= 1038,
    CMPGU_EQ_QB_MM	= 1039,
    CMPGU_LE_QB	= 1040,
    CMPGU_LE_QB_MM	= 1041,
    CMPGU_LT_QB	= 1042,
    CMPGU_LT_QB_MM	= 1043,
    CMPU_EQ_QB	= 1044,
    CMPU_EQ_QB_MM	= 1045,
    CMPU_LE_QB	= 1046,
    CMPU_LE_QB_MM	= 1047,
    CMPU_LT_QB	= 1048,
    CMPU_LT_QB_MM	= 1049,
    CMP_AF_D_MMR6	= 1050,
    CMP_AF_S_MMR6	= 1051,
    CMP_EQ_D	= 1052,
    CMP_EQ_D_MMR6	= 1053,
    CMP_EQ_PH	= 1054,
    CMP_EQ_PH_MM	= 1055,
    CMP_EQ_S	= 1056,
    CMP_EQ_S_MMR6	= 1057,
    CMP_F_D	= 1058,
    CMP_F_S	= 1059,
    CMP_LE_D	= 1060,
    CMP_LE_D_MMR6	= 1061,
    CMP_LE_PH	= 1062,
    CMP_LE_PH_MM	= 1063,
    CMP_LE_S	= 1064,
    CMP_LE_S_MMR6	= 1065,
    CMP_LT_D	= 1066,
    CMP_LT_D_MMR6	= 1067,
    CMP_LT_PH	= 1068,
    CMP_LT_PH_MM	= 1069,
    CMP_LT_S	= 1070,
    CMP_LT_S_MMR6	= 1071,
    CMP_SAF_D	= 1072,
    CMP_SAF_D_MMR6	= 1073,
    CMP_SAF_S	= 1074,
    CMP_SAF_S_MMR6	= 1075,
    CMP_SEQ_D	= 1076,
    CMP_SEQ_D_MMR6	= 1077,
    CMP_SEQ_S	= 1078,
    CMP_SEQ_S_MMR6	= 1079,
    CMP_SLE_D	= 1080,
    CMP_SLE_D_MMR6	= 1081,
    CMP_SLE_S	= 1082,
    CMP_SLE_S_MMR6	= 1083,
    CMP_SLT_D	= 1084,
    CMP_SLT_D_MMR6	= 1085,
    CMP_SLT_S	= 1086,
    CMP_SLT_S_MMR6	= 1087,
    CMP_SUEQ_D	= 1088,
    CMP_SUEQ_D_MMR6	= 1089,
    CMP_SUEQ_S	= 1090,
    CMP_SUEQ_S_MMR6	= 1091,
    CMP_SULE_D	= 1092,
    CMP_SULE_D_MMR6	= 1093,
    CMP_SULE_S	= 1094,
    CMP_SULE_S_MMR6	= 1095,
    CMP_SULT_D	= 1096,
    CMP_SULT_D_MMR6	= 1097,
    CMP_SULT_S	= 1098,
    CMP_SULT_S_MMR6	= 1099,
    CMP_SUN_D	= 1100,
    CMP_SUN_D_MMR6	= 1101,
    CMP_SUN_S	= 1102,
    CMP_SUN_S_MMR6	= 1103,
    CMP_UEQ_D	= 1104,
    CMP_UEQ_D_MMR6	= 1105,
    CMP_UEQ_S	= 1106,
    CMP_UEQ_S_MMR6	= 1107,
    CMP_ULE_D	= 1108,
    CMP_ULE_D_MMR6	= 1109,
    CMP_ULE_S	= 1110,
    CMP_ULE_S_MMR6	= 1111,
    CMP_ULT_D	= 1112,
    CMP_ULT_D_MMR6	= 1113,
    CMP_ULT_S	= 1114,
    CMP_ULT_S_MMR6	= 1115,
    CMP_UN_D	= 1116,
    CMP_UN_D_MMR6	= 1117,
    CMP_UN_S	= 1118,
    CMP_UN_S_MMR6	= 1119,
    COPY_S_B	= 1120,
    COPY_S_D	= 1121,
    COPY_S_H	= 1122,
    COPY_S_W	= 1123,
    COPY_U_B	= 1124,
    COPY_U_H	= 1125,
    COPY_U_W	= 1126,
    CRC32B	= 1127,
    CRC32CB	= 1128,
    CRC32CD	= 1129,
    CRC32CH	= 1130,
    CRC32CW	= 1131,
    CRC32D	= 1132,
    CRC32H	= 1133,
    CRC32W	= 1134,
    CTC1	= 1135,
    CTC1_MM	= 1136,
    CTC2_MM	= 1137,
    CTCMSA	= 1138,
    CVT_D32_S	= 1139,
    CVT_D32_S_MM	= 1140,
    CVT_D32_W	= 1141,
    CVT_D32_W_MM	= 1142,
    CVT_D64_L	= 1143,
    CVT_D64_S	= 1144,
    CVT_D64_S_MM	= 1145,
    CVT_D64_W	= 1146,
    CVT_D64_W_MM	= 1147,
    CVT_D_L_MMR6	= 1148,
    CVT_L_D64	= 1149,
    CVT_L_D64_MM	= 1150,
    CVT_L_D_MMR6	= 1151,
    CVT_L_S	= 1152,
    CVT_L_S_MM	= 1153,
    CVT_L_S_MMR6	= 1154,
    CVT_PS_S64	= 1155,
    CVT_S_D32	= 1156,
    CVT_S_D32_MM	= 1157,
    CVT_S_D64	= 1158,
    CVT_S_D64_MM	= 1159,
    CVT_S_L	= 1160,
    CVT_S_L_MMR6	= 1161,
    CVT_S_PL64	= 1162,
    CVT_S_PU64	= 1163,
    CVT_S_W	= 1164,
    CVT_S_W_MM	= 1165,
    CVT_S_W_MMR6	= 1166,
    CVT_W_D32	= 1167,
    CVT_W_D32_MM	= 1168,
    CVT_W_D64	= 1169,
    CVT_W_D64_MM	= 1170,
    CVT_W_S	= 1171,
    CVT_W_S_MM	= 1172,
    CVT_W_S_MMR6	= 1173,
    C_EQ_D32	= 1174,
    C_EQ_D32_MM	= 1175,
    C_EQ_D64	= 1176,
    C_EQ_D64_MM	= 1177,
    C_EQ_S	= 1178,
    C_EQ_S_MM	= 1179,
    C_F_D32	= 1180,
    C_F_D32_MM	= 1181,
    C_F_D64	= 1182,
    C_F_D64_MM	= 1183,
    C_F_S	= 1184,
    C_F_S_MM	= 1185,
    C_LE_D32	= 1186,
    C_LE_D32_MM	= 1187,
    C_LE_D64	= 1188,
    C_LE_D64_MM	= 1189,
    C_LE_S	= 1190,
    C_LE_S_MM	= 1191,
    C_LT_D32	= 1192,
    C_LT_D32_MM	= 1193,
    C_LT_D64	= 1194,
    C_LT_D64_MM	= 1195,
    C_LT_S	= 1196,
    C_LT_S_MM	= 1197,
    C_NGE_D32	= 1198,
    C_NGE_D32_MM	= 1199,
    C_NGE_D64	= 1200,
    C_NGE_D64_MM	= 1201,
    C_NGE_S	= 1202,
    C_NGE_S_MM	= 1203,
    C_NGLE_D32	= 1204,
    C_NGLE_D32_MM	= 1205,
    C_NGLE_D64	= 1206,
    C_NGLE_D64_MM	= 1207,
    C_NGLE_S	= 1208,
    C_NGLE_S_MM	= 1209,
    C_NGL_D32	= 1210,
    C_NGL_D32_MM	= 1211,
    C_NGL_D64	= 1212,
    C_NGL_D64_MM	= 1213,
    C_NGL_S	= 1214,
    C_NGL_S_MM	= 1215,
    C_NGT_D32	= 1216,
    C_NGT_D32_MM	= 1217,
    C_NGT_D64	= 1218,
    C_NGT_D64_MM	= 1219,
    C_NGT_S	= 1220,
    C_NGT_S_MM	= 1221,
    C_OLE_D32	= 1222,
    C_OLE_D32_MM	= 1223,
    C_OLE_D64	= 1224,
    C_OLE_D64_MM	= 1225,
    C_OLE_S	= 1226,
    C_OLE_S_MM	= 1227,
    C_OLT_D32	= 1228,
    C_OLT_D32_MM	= 1229,
    C_OLT_D64	= 1230,
    C_OLT_D64_MM	= 1231,
    C_OLT_S	= 1232,
    C_OLT_S_MM	= 1233,
    C_SEQ_D32	= 1234,
    C_SEQ_D32_MM	= 1235,
    C_SEQ_D64	= 1236,
    C_SEQ_D64_MM	= 1237,
    C_SEQ_S	= 1238,
    C_SEQ_S_MM	= 1239,
    C_SF_D32	= 1240,
    C_SF_D32_MM	= 1241,
    C_SF_D64	= 1242,
    C_SF_D64_MM	= 1243,
    C_SF_S	= 1244,
    C_SF_S_MM	= 1245,
    C_UEQ_D32	= 1246,
    C_UEQ_D32_MM	= 1247,
    C_UEQ_D64	= 1248,
    C_UEQ_D64_MM	= 1249,
    C_UEQ_S	= 1250,
    C_UEQ_S_MM	= 1251,
    C_ULE_D32	= 1252,
    C_ULE_D32_MM	= 1253,
    C_ULE_D64	= 1254,
    C_ULE_D64_MM	= 1255,
    C_ULE_S	= 1256,
    C_ULE_S_MM	= 1257,
    C_ULT_D32	= 1258,
    C_ULT_D32_MM	= 1259,
    C_ULT_D64	= 1260,
    C_ULT_D64_MM	= 1261,
    C_ULT_S	= 1262,
    C_ULT_S_MM	= 1263,
    C_UN_D32	= 1264,
    C_UN_D32_MM	= 1265,
    C_UN_D64	= 1266,
    C_UN_D64_MM	= 1267,
    C_UN_S	= 1268,
    C_UN_S_MM	= 1269,
    CmpRxRy16	= 1270,
    CmpiRxImm16	= 1271,
    CmpiRxImmX16	= 1272,
    DADD	= 1273,
    DADDi	= 1274,
    DADDiu	= 1275,
    DADDu	= 1276,
    DAHI	= 1277,
    DALIGN	= 1278,
    DATI	= 1279,
    DAUI	= 1280,
    DBITSWAP	= 1281,
    DCLO	= 1282,
    DCLO_R6	= 1283,
    DCLZ	= 1284,
    DCLZ_R6	= 1285,
    DDIV	= 1286,
    DDIVU	= 1287,
    DERET	= 1288,
    DERET_MM	= 1289,
    DERET_MMR6	= 1290,
    DEXT	= 1291,
    DEXT64_32	= 1292,
    DEXTM	= 1293,
    DEXTU	= 1294,
    DI	= 1295,
    DINS	= 1296,
    DINSM	= 1297,
    DINSU	= 1298,
    DIV	= 1299,
    DIVU	= 1300,
    DIVU_MMR6	= 1301,
    DIV_MMR6	= 1302,
    DIV_S_B	= 1303,
    DIV_S_D	= 1304,
    DIV_S_H	= 1305,
    DIV_S_W	= 1306,
    DIV_U_B	= 1307,
    DIV_U_D	= 1308,
    DIV_U_H	= 1309,
    DIV_U_W	= 1310,
    DI_MM	= 1311,
    DI_MMR6	= 1312,
    DLSA	= 1313,
    DLSA_R6	= 1314,
    DMFC0	= 1315,
    DMFC1	= 1316,
    DMFC2	= 1317,
    DMFC2_OCTEON	= 1318,
    DMFGC0	= 1319,
    DMOD	= 1320,
    DMODU	= 1321,
    DMT	= 1322,
    DMTC0	= 1323,
    DMTC1	= 1324,
    DMTC2	= 1325,
    DMTC2_OCTEON	= 1326,
    DMTGC0	= 1327,
    DMUH	= 1328,
    DMUHU	= 1329,
    DMUL	= 1330,
    DMULT	= 1331,
    DMULTu	= 1332,
    DMULU	= 1333,
    DMUL_R6	= 1334,
    DOTP_S_D	= 1335,
    DOTP_S_H	= 1336,
    DOTP_S_W	= 1337,
    DOTP_U_D	= 1338,
    DOTP_U_H	= 1339,
    DOTP_U_W	= 1340,
    DPADD_S_D	= 1341,
    DPADD_S_H	= 1342,
    DPADD_S_W	= 1343,
    DPADD_U_D	= 1344,
    DPADD_U_H	= 1345,
    DPADD_U_W	= 1346,
    DPAQX_SA_W_PH	= 1347,
    DPAQX_SA_W_PH_MMR2	= 1348,
    DPAQX_S_W_PH	= 1349,
    DPAQX_S_W_PH_MMR2	= 1350,
    DPAQ_SA_L_W	= 1351,
    DPAQ_SA_L_W_MM	= 1352,
    DPAQ_S_W_PH	= 1353,
    DPAQ_S_W_PH_MM	= 1354,
    DPAU_H_QBL	= 1355,
    DPAU_H_QBL_MM	= 1356,
    DPAU_H_QBR	= 1357,
    DPAU_H_QBR_MM	= 1358,
    DPAX_W_PH	= 1359,
    DPAX_W_PH_MMR2	= 1360,
    DPA_W_PH	= 1361,
    DPA_W_PH_MMR2	= 1362,
    DPOP	= 1363,
    DPSQX_SA_W_PH	= 1364,
    DPSQX_SA_W_PH_MMR2	= 1365,
    DPSQX_S_W_PH	= 1366,
    DPSQX_S_W_PH_MMR2	= 1367,
    DPSQ_SA_L_W	= 1368,
    DPSQ_SA_L_W_MM	= 1369,
    DPSQ_S_W_PH	= 1370,
    DPSQ_S_W_PH_MM	= 1371,
    DPSUB_S_D	= 1372,
    DPSUB_S_H	= 1373,
    DPSUB_S_W	= 1374,
    DPSUB_U_D	= 1375,
    DPSUB_U_H	= 1376,
    DPSUB_U_W	= 1377,
    DPSU_H_QBL	= 1378,
    DPSU_H_QBL_MM	= 1379,
    DPSU_H_QBR	= 1380,
    DPSU_H_QBR_MM	= 1381,
    DPSX_W_PH	= 1382,
    DPSX_W_PH_MMR2	= 1383,
    DPS_W_PH	= 1384,
    DPS_W_PH_MMR2	= 1385,
    DROTR	= 1386,
    DROTR32	= 1387,
    DROTRV	= 1388,
    DSBH	= 1389,
    DSDIV	= 1390,
    DSHD	= 1391,
    DSLL	= 1392,
    DSLL32	= 1393,
    DSLL64_32	= 1394,
    DSLLV	= 1395,
    DSRA	= 1396,
    DSRA32	= 1397,
    DSRAV	= 1398,
    DSRL	= 1399,
    DSRL32	= 1400,
    DSRLV	= 1401,
    DSUB	= 1402,
    DSUBu	= 1403,
    DUDIV	= 1404,
    DVP	= 1405,
    DVPE	= 1406,
    DVP_MMR6	= 1407,
    DivRxRy16	= 1408,
    DivuRxRy16	= 1409,
    EHB	= 1410,
    EHB_MM	= 1411,
    EHB_MMR6	= 1412,
    EI	= 1413,
    EI_MM	= 1414,
    EI_MMR6	= 1415,
    EMT	= 1416,
    ERET	= 1417,
    ERETNC	= 1418,
    ERETNC_MMR6	= 1419,
    ERET_MM	= 1420,
    ERET_MMR6	= 1421,
    EVP	= 1422,
    EVPE	= 1423,
    EVP_MMR6	= 1424,
    EXT	= 1425,
    EXTP	= 1426,
    EXTPDP	= 1427,
    EXTPDPV	= 1428,
    EXTPDPV_MM	= 1429,
    EXTPDP_MM	= 1430,
    EXTPV	= 1431,
    EXTPV_MM	= 1432,
    EXTP_MM	= 1433,
    EXTRV_RS_W	= 1434,
    EXTRV_RS_W_MM	= 1435,
    EXTRV_R_W	= 1436,
    EXTRV_R_W_MM	= 1437,
    EXTRV_S_H	= 1438,
    EXTRV_S_H_MM	= 1439,
    EXTRV_W	= 1440,
    EXTRV_W_MM	= 1441,
    EXTR_RS_W	= 1442,
    EXTR_RS_W_MM	= 1443,
    EXTR_R_W	= 1444,
    EXTR_R_W_MM	= 1445,
    EXTR_S_H	= 1446,
    EXTR_S_H_MM	= 1447,
    EXTR_W	= 1448,
    EXTR_W_MM	= 1449,
    EXTS	= 1450,
    EXTS32	= 1451,
    EXT_MM	= 1452,
    EXT_MMR6	= 1453,
    FABS_D32	= 1454,
    FABS_D32_MM	= 1455,
    FABS_D64	= 1456,
    FABS_D64_MM	= 1457,
    FABS_S	= 1458,
    FABS_S_MM	= 1459,
    FADD_D	= 1460,
    FADD_D32	= 1461,
    FADD_D32_MM	= 1462,
    FADD_D64	= 1463,
    FADD_D64_MM	= 1464,
    FADD_S	= 1465,
    FADD_S_MM	= 1466,
    FADD_S_MMR6	= 1467,
    FADD_W	= 1468,
    FCAF_D	= 1469,
    FCAF_W	= 1470,
    FCEQ_D	= 1471,
    FCEQ_W	= 1472,
    FCLASS_D	= 1473,
    FCLASS_W	= 1474,
    FCLE_D	= 1475,
    FCLE_W	= 1476,
    FCLT_D	= 1477,
    FCLT_W	= 1478,
    FCMP_D32	= 1479,
    FCMP_D32_MM	= 1480,
    FCMP_D64	= 1481,
    FCMP_S32	= 1482,
    FCMP_S32_MM	= 1483,
    FCNE_D	= 1484,
    FCNE_W	= 1485,
    FCOR_D	= 1486,
    FCOR_W	= 1487,
    FCUEQ_D	= 1488,
    FCUEQ_W	= 1489,
    FCULE_D	= 1490,
    FCULE_W	= 1491,
    FCULT_D	= 1492,
    FCULT_W	= 1493,
    FCUNE_D	= 1494,
    FCUNE_W	= 1495,
    FCUN_D	= 1496,
    FCUN_W	= 1497,
    FDIV_D	= 1498,
    FDIV_D32	= 1499,
    FDIV_D32_MM	= 1500,
    FDIV_D64	= 1501,
    FDIV_D64_MM	= 1502,
    FDIV_S	= 1503,
    FDIV_S_MM	= 1504,
    FDIV_S_MMR6	= 1505,
    FDIV_W	= 1506,
    FEXDO_H	= 1507,
    FEXDO_W	= 1508,
    FEXP2_D	= 1509,
    FEXP2_W	= 1510,
    FEXUPL_D	= 1511,
    FEXUPL_W	= 1512,
    FEXUPR_D	= 1513,
    FEXUPR_W	= 1514,
    FFINT_S_D	= 1515,
    FFINT_S_W	= 1516,
    FFINT_U_D	= 1517,
    FFINT_U_W	= 1518,
    FFQL_D	= 1519,
    FFQL_W	= 1520,
    FFQR_D	= 1521,
    FFQR_W	= 1522,
    FILL_B	= 1523,
    FILL_D	= 1524,
    FILL_H	= 1525,
    FILL_W	= 1526,
    FLOG2_D	= 1527,
    FLOG2_W	= 1528,
    FLOOR_L_D64	= 1529,
    FLOOR_L_D_MMR6	= 1530,
    FLOOR_L_S	= 1531,
    FLOOR_L_S_MMR6	= 1532,
    FLOOR_W_D32	= 1533,
    FLOOR_W_D64	= 1534,
    FLOOR_W_D_MMR6	= 1535,
    FLOOR_W_MM	= 1536,
    FLOOR_W_S	= 1537,
    FLOOR_W_S_MM	= 1538,
    FLOOR_W_S_MMR6	= 1539,
    FMADD_D	= 1540,
    FMADD_W	= 1541,
    FMAX_A_D	= 1542,
    FMAX_A_W	= 1543,
    FMAX_D	= 1544,
    FMAX_W	= 1545,
    FMIN_A_D	= 1546,
    FMIN_A_W	= 1547,
    FMIN_D	= 1548,
    FMIN_W	= 1549,
    FMOV_D32	= 1550,
    FMOV_D32_MM	= 1551,
    FMOV_D64	= 1552,
    FMOV_D64_MM	= 1553,
    FMOV_D_MMR6	= 1554,
    FMOV_S	= 1555,
    FMOV_S_MM	= 1556,
    FMOV_S_MMR6	= 1557,
    FMSUB_D	= 1558,
    FMSUB_W	= 1559,
    FMUL_D	= 1560,
    FMUL_D32	= 1561,
    FMUL_D32_MM	= 1562,
    FMUL_D64	= 1563,
    FMUL_D64_MM	= 1564,
    FMUL_S	= 1565,
    FMUL_S_MM	= 1566,
    FMUL_S_MMR6	= 1567,
    FMUL_W	= 1568,
    FNEG_D32	= 1569,
    FNEG_D32_MM	= 1570,
    FNEG_D64	= 1571,
    FNEG_D64_MM	= 1572,
    FNEG_S	= 1573,
    FNEG_S_MM	= 1574,
    FNEG_S_MMR6	= 1575,
    FORK	= 1576,
    FRCP_D	= 1577,
    FRCP_W	= 1578,
    FRINT_D	= 1579,
    FRINT_W	= 1580,
    FRSQRT_D	= 1581,
    FRSQRT_W	= 1582,
    FSAF_D	= 1583,
    FSAF_W	= 1584,
    FSEQ_D	= 1585,
    FSEQ_W	= 1586,
    FSLE_D	= 1587,
    FSLE_W	= 1588,
    FSLT_D	= 1589,
    FSLT_W	= 1590,
    FSNE_D	= 1591,
    FSNE_W	= 1592,
    FSOR_D	= 1593,
    FSOR_W	= 1594,
    FSQRT_D	= 1595,
    FSQRT_D32	= 1596,
    FSQRT_D32_MM	= 1597,
    FSQRT_D64	= 1598,
    FSQRT_D64_MM	= 1599,
    FSQRT_S	= 1600,
    FSQRT_S_MM	= 1601,
    FSQRT_W	= 1602,
    FSUB_D	= 1603,
    FSUB_D32	= 1604,
    FSUB_D32_MM	= 1605,
    FSUB_D64	= 1606,
    FSUB_D64_MM	= 1607,
    FSUB_S	= 1608,
    FSUB_S_MM	= 1609,
    FSUB_S_MMR6	= 1610,
    FSUB_W	= 1611,
    FSUEQ_D	= 1612,
    FSUEQ_W	= 1613,
    FSULE_D	= 1614,
    FSULE_W	= 1615,
    FSULT_D	= 1616,
    FSULT_W	= 1617,
    FSUNE_D	= 1618,
    FSUNE_W	= 1619,
    FSUN_D	= 1620,
    FSUN_W	= 1621,
    FTINT_S_D	= 1622,
    FTINT_S_W	= 1623,
    FTINT_U_D	= 1624,
    FTINT_U_W	= 1625,
    FTQ_H	= 1626,
    FTQ_W	= 1627,
    FTRUNC_S_D	= 1628,
    FTRUNC_S_W	= 1629,
    FTRUNC_U_D	= 1630,
    FTRUNC_U_W	= 1631,
    GINVI	= 1632,
    GINVI_MMR6	= 1633,
    GINVT	= 1634,
    GINVT_MMR6	= 1635,
    HADD_S_D	= 1636,
    HADD_S_H	= 1637,
    HADD_S_W	= 1638,
    HADD_U_D	= 1639,
    HADD_U_H	= 1640,
    HADD_U_W	= 1641,
    HSUB_S_D	= 1642,
    HSUB_S_H	= 1643,
    HSUB_S_W	= 1644,
    HSUB_U_D	= 1645,
    HSUB_U_H	= 1646,
    HSUB_U_W	= 1647,
    HYPCALL	= 1648,
    HYPCALL_MM	= 1649,
    ILVEV_B	= 1650,
    ILVEV_D	= 1651,
    ILVEV_H	= 1652,
    ILVEV_W	= 1653,
    ILVL_B	= 1654,
    ILVL_D	= 1655,
    ILVL_H	= 1656,
    ILVL_W	= 1657,
    ILVOD_B	= 1658,
    ILVOD_D	= 1659,
    ILVOD_H	= 1660,
    ILVOD_W	= 1661,
    ILVR_B	= 1662,
    ILVR_D	= 1663,
    ILVR_H	= 1664,
    ILVR_W	= 1665,
    INS	= 1666,
    INSERT_B	= 1667,
    INSERT_D	= 1668,
    INSERT_H	= 1669,
    INSERT_W	= 1670,
    INSV	= 1671,
    INSVE_B	= 1672,
    INSVE_D	= 1673,
    INSVE_H	= 1674,
    INSVE_W	= 1675,
    INSV_MM	= 1676,
    INS_MM	= 1677,
    INS_MMR6	= 1678,
    J	= 1679,
    JAL	= 1680,
    JALR	= 1681,
    JALR16_MM	= 1682,
    JALR64	= 1683,
    JALRC16_MMR6	= 1684,
    JALRC_HB_MMR6	= 1685,
    JALRC_MMR6	= 1686,
    JALRS16_MM	= 1687,
    JALRS_MM	= 1688,
    JALR_HB	= 1689,
    JALR_HB64	= 1690,
    JALR_MM	= 1691,
    JALS_MM	= 1692,
    JALX	= 1693,
    JALX_MM	= 1694,
    JAL_MM	= 1695,
    JIALC	= 1696,
    JIALC64	= 1697,
    JIALC_MMR6	= 1698,
    JIC	= 1699,
    JIC64	= 1700,
    JIC_MMR6	= 1701,
    JR	= 1702,
    JR16_MM	= 1703,
    JR64	= 1704,
    JRADDIUSP	= 1705,
    JRC16_MM	= 1706,
    JRC16_MMR6	= 1707,
    JRCADDIUSP_MMR6	= 1708,
    JR_HB	= 1709,
    JR_HB64	= 1710,
    JR_HB64_R6	= 1711,
    JR_HB_R6	= 1712,
    JR_MM	= 1713,
    J_MM	= 1714,
    Jal16	= 1715,
    JalB16	= 1716,
    JrRa16	= 1717,
    JrcRa16	= 1718,
    JrcRx16	= 1719,
    JumpLinkReg16	= 1720,
    LB	= 1721,
    LB64	= 1722,
    LBE	= 1723,
    LBE_MM	= 1724,
    LBU16_MM	= 1725,
    LBUX	= 1726,
    LBUX_MM	= 1727,
    LBU_MMR6	= 1728,
    LB_MM	= 1729,
    LB_MMR6	= 1730,
    LBu	= 1731,
    LBu64	= 1732,
    LBuE	= 1733,
    LBuE_MM	= 1734,
    LBu_MM	= 1735,
    LD	= 1736,
    LDC1	= 1737,
    LDC164	= 1738,
    LDC1_D64_MMR6	= 1739,
    LDC1_MM	= 1740,
    LDC2	= 1741,
    LDC2_MMR6	= 1742,
    LDC2_R6	= 1743,
    LDC3	= 1744,
    LDI_B	= 1745,
    LDI_D	= 1746,
    LDI_H	= 1747,
    LDI_W	= 1748,
    LDL	= 1749,
    LDPC	= 1750,
    LDR	= 1751,
    LDXC1	= 1752,
    LDXC164	= 1753,
    LD_B	= 1754,
    LD_D	= 1755,
    LD_H	= 1756,
    LD_W	= 1757,
    LEA_ADDiu	= 1758,
    LEA_ADDiu64	= 1759,
    LEA_ADDiu_MM	= 1760,
    LH	= 1761,
    LH64	= 1762,
    LHE	= 1763,
    LHE_MM	= 1764,
    LHU16_MM	= 1765,
    LHX	= 1766,
    LHX_MM	= 1767,
    LH_MM	= 1768,
    LHu	= 1769,
    LHu64	= 1770,
    LHuE	= 1771,
    LHuE_MM	= 1772,
    LHu_MM	= 1773,
    LI16_MM	= 1774,
    LI16_MMR6	= 1775,
    LL	= 1776,
    LL64	= 1777,
    LL64_R6	= 1778,
    LLD	= 1779,
    LLD_R6	= 1780,
    LLE	= 1781,
    LLE_MM	= 1782,
    LL_MM	= 1783,
    LL_MMR6	= 1784,
    LL_R6	= 1785,
    LSA	= 1786,
    LSA_MMR6	= 1787,
    LSA_R6	= 1788,
    LUI_MMR6	= 1789,
    LUXC1	= 1790,
    LUXC164	= 1791,
    LUXC1_MM	= 1792,
    LUi	= 1793,
    LUi64	= 1794,
    LUi_MM	= 1795,
    LW	= 1796,
    LW16_MM	= 1797,
    LW64	= 1798,
    LWC1	= 1799,
    LWC1_MM	= 1800,
    LWC2	= 1801,
    LWC2_MMR6	= 1802,
    LWC2_R6	= 1803,
    LWC3	= 1804,
    LWDSP	= 1805,
    LWDSP_MM	= 1806,
    LWE	= 1807,
    LWE_MM	= 1808,
    LWGP_MM	= 1809,
    LWL	= 1810,
    LWL64	= 1811,
    LWLE	= 1812,
    LWLE_MM	= 1813,
    LWL_MM	= 1814,
    LWM16_MM	= 1815,
    LWM16_MMR6	= 1816,
    LWM32_MM	= 1817,
    LWPC	= 1818,
    LWPC_MMR6	= 1819,
    LWP_MM	= 1820,
    LWR	= 1821,
    LWR64	= 1822,
    LWRE	= 1823,
    LWRE_MM	= 1824,
    LWR_MM	= 1825,
    LWSP_MM	= 1826,
    LWUPC	= 1827,
    LWU_MM	= 1828,
    LWX	= 1829,
    LWXC1	= 1830,
    LWXC1_MM	= 1831,
    LWXS_MM	= 1832,
    LWX_MM	= 1833,
    LW_MM	= 1834,
    LW_MMR6	= 1835,
    LWu	= 1836,
    LbRxRyOffMemX16	= 1837,
    LbuRxRyOffMemX16	= 1838,
    LhRxRyOffMemX16	= 1839,
    LhuRxRyOffMemX16	= 1840,
    LiRxImm16	= 1841,
    LiRxImmAlignX16	= 1842,
    LiRxImmX16	= 1843,
    LwRxPcTcp16	= 1844,
    LwRxPcTcpX16	= 1845,
    LwRxRyOffMemX16	= 1846,
    LwRxSpImmX16	= 1847,
    MADD	= 1848,
    MADDF_D	= 1849,
    MADDF_D_MMR6	= 1850,
    MADDF_S	= 1851,
    MADDF_S_MMR6	= 1852,
    MADDR_Q_H	= 1853,
    MADDR_Q_W	= 1854,
    MADDU	= 1855,
    MADDU_DSP	= 1856,
    MADDU_DSP_MM	= 1857,
    MADDU_MM	= 1858,
    MADDV_B	= 1859,
    MADDV_D	= 1860,
    MADDV_H	= 1861,
    MADDV_W	= 1862,
    MADD_D32	= 1863,
    MADD_D32_MM	= 1864,
    MADD_D64	= 1865,
    MADD_DSP	= 1866,
    MADD_DSP_MM	= 1867,
    MADD_MM	= 1868,
    MADD_Q_H	= 1869,
    MADD_Q_W	= 1870,
    MADD_S	= 1871,
    MADD_S_MM	= 1872,
    MAQ_SA_W_PHL	= 1873,
    MAQ_SA_W_PHL_MM	= 1874,
    MAQ_SA_W_PHR	= 1875,
    MAQ_SA_W_PHR_MM	= 1876,
    MAQ_S_W_PHL	= 1877,
    MAQ_S_W_PHL_MM	= 1878,
    MAQ_S_W_PHR	= 1879,
    MAQ_S_W_PHR_MM	= 1880,
    MAXA_D	= 1881,
    MAXA_D_MMR6	= 1882,
    MAXA_S	= 1883,
    MAXA_S_MMR6	= 1884,
    MAXI_S_B	= 1885,
    MAXI_S_D	= 1886,
    MAXI_S_H	= 1887,
    MAXI_S_W	= 1888,
    MAXI_U_B	= 1889,
    MAXI_U_D	= 1890,
    MAXI_U_H	= 1891,
    MAXI_U_W	= 1892,
    MAX_A_B	= 1893,
    MAX_A_D	= 1894,
    MAX_A_H	= 1895,
    MAX_A_W	= 1896,
    MAX_D	= 1897,
    MAX_D_MMR6	= 1898,
    MAX_S	= 1899,
    MAX_S_B	= 1900,
    MAX_S_D	= 1901,
    MAX_S_H	= 1902,
    MAX_S_MMR6	= 1903,
    MAX_S_W	= 1904,
    MAX_U_B	= 1905,
    MAX_U_D	= 1906,
    MAX_U_H	= 1907,
    MAX_U_W	= 1908,
    MFC0	= 1909,
    MFC0_MMR6	= 1910,
    MFC1	= 1911,
    MFC1_D64	= 1912,
    MFC1_MM	= 1913,
    MFC1_MMR6	= 1914,
    MFC2	= 1915,
    MFC2_MMR6	= 1916,
    MFGC0	= 1917,
    MFGC0_MM	= 1918,
    MFHC0_MMR6	= 1919,
    MFHC1_D32	= 1920,
    MFHC1_D32_MM	= 1921,
    MFHC1_D64	= 1922,
    MFHC1_D64_MM	= 1923,
    MFHC2_MMR6	= 1924,
    MFHGC0	= 1925,
    MFHGC0_MM	= 1926,
    MFHI	= 1927,
    MFHI16_MM	= 1928,
    MFHI64	= 1929,
    MFHI_DSP	= 1930,
    MFHI_DSP_MM	= 1931,
    MFHI_MM	= 1932,
    MFLO	= 1933,
    MFLO16_MM	= 1934,
    MFLO64	= 1935,
    MFLO_DSP	= 1936,
    MFLO_DSP_MM	= 1937,
    MFLO_MM	= 1938,
    MFTR	= 1939,
    MINA_D	= 1940,
    MINA_D_MMR6	= 1941,
    MINA_S	= 1942,
    MINA_S_MMR6	= 1943,
    MINI_S_B	= 1944,
    MINI_S_D	= 1945,
    MINI_S_H	= 1946,
    MINI_S_W	= 1947,
    MINI_U_B	= 1948,
    MINI_U_D	= 1949,
    MINI_U_H	= 1950,
    MINI_U_W	= 1951,
    MIN_A_B	= 1952,
    MIN_A_D	= 1953,
    MIN_A_H	= 1954,
    MIN_A_W	= 1955,
    MIN_D	= 1956,
    MIN_D_MMR6	= 1957,
    MIN_S	= 1958,
    MIN_S_B	= 1959,
    MIN_S_D	= 1960,
    MIN_S_H	= 1961,
    MIN_S_MMR6	= 1962,
    MIN_S_W	= 1963,
    MIN_U_B	= 1964,
    MIN_U_D	= 1965,
    MIN_U_H	= 1966,
    MIN_U_W	= 1967,
    MOD	= 1968,
    MODSUB	= 1969,
    MODSUB_MM	= 1970,
    MODU	= 1971,
    MODU_MMR6	= 1972,
    MOD_MMR6	= 1973,
    MOD_S_B	= 1974,
    MOD_S_D	= 1975,
    MOD_S_H	= 1976,
    MOD_S_W	= 1977,
    MOD_U_B	= 1978,
    MOD_U_D	= 1979,
    MOD_U_H	= 1980,
    MOD_U_W	= 1981,
    MOVE16_MM	= 1982,
    MOVE16_MMR6	= 1983,
    MOVEP_MM	= 1984,
    MOVEP_MMR6	= 1985,
    MOVE_V	= 1986,
    MOVF_D32	= 1987,
    MOVF_D32_MM	= 1988,
    MOVF_D64	= 1989,
    MOVF_I	= 1990,
    MOVF_I64	= 1991,
    MOVF_I_MM	= 1992,
    MOVF_S	= 1993,
    MOVF_S_MM	= 1994,
    MOVN_I64_D64	= 1995,
    MOVN_I64_I	= 1996,
    MOVN_I64_I64	= 1997,
    MOVN_I64_S	= 1998,
    MOVN_I_D32	= 1999,
    MOVN_I_D32_MM	= 2000,
    MOVN_I_D64	= 2001,
    MOVN_I_I	= 2002,
    MOVN_I_I64	= 2003,
    MOVN_I_MM	= 2004,
    MOVN_I_S	= 2005,
    MOVN_I_S_MM	= 2006,
    MOVT_D32	= 2007,
    MOVT_D32_MM	= 2008,
    MOVT_D64	= 2009,
    MOVT_I	= 2010,
    MOVT_I64	= 2011,
    MOVT_I_MM	= 2012,
    MOVT_S	= 2013,
    MOVT_S_MM	= 2014,
    MOVZ_I64_D64	= 2015,
    MOVZ_I64_I	= 2016,
    MOVZ_I64_I64	= 2017,
    MOVZ_I64_S	= 2018,
    MOVZ_I_D32	= 2019,
    MOVZ_I_D32_MM	= 2020,
    MOVZ_I_D64	= 2021,
    MOVZ_I_I	= 2022,
    MOVZ_I_I64	= 2023,
    MOVZ_I_MM	= 2024,
    MOVZ_I_S	= 2025,
    MOVZ_I_S_MM	= 2026,
    MSUB	= 2027,
    MSUBF_D	= 2028,
    MSUBF_D_MMR6	= 2029,
    MSUBF_S	= 2030,
    MSUBF_S_MMR6	= 2031,
    MSUBR_Q_H	= 2032,
    MSUBR_Q_W	= 2033,
    MSUBU	= 2034,
    MSUBU_DSP	= 2035,
    MSUBU_DSP_MM	= 2036,
    MSUBU_MM	= 2037,
    MSUBV_B	= 2038,
    MSUBV_D	= 2039,
    MSUBV_H	= 2040,
    MSUBV_W	= 2041,
    MSUB_D32	= 2042,
    MSUB_D32_MM	= 2043,
    MSUB_D64	= 2044,
    MSUB_DSP	= 2045,
    MSUB_DSP_MM	= 2046,
    MSUB_MM	= 2047,
    MSUB_Q_H	= 2048,
    MSUB_Q_W	= 2049,
    MSUB_S	= 2050,
    MSUB_S_MM	= 2051,
    MTC0	= 2052,
    MTC0_MMR6	= 2053,
    MTC1	= 2054,
    MTC1_D64	= 2055,
    MTC1_D64_MM	= 2056,
    MTC1_MM	= 2057,
    MTC1_MMR6	= 2058,
    MTC2	= 2059,
    MTC2_MMR6	= 2060,
    MTGC0	= 2061,
    MTGC0_MM	= 2062,
    MTHC0_MMR6	= 2063,
    MTHC1_D32	= 2064,
    MTHC1_D32_MM	= 2065,
    MTHC1_D64	= 2066,
    MTHC1_D64_MM	= 2067,
    MTHC2_MMR6	= 2068,
    MTHGC0	= 2069,
    MTHGC0_MM	= 2070,
    MTHI	= 2071,
    MTHI64	= 2072,
    MTHI_DSP	= 2073,
    MTHI_DSP_MM	= 2074,
    MTHI_MM	= 2075,
    MTHLIP	= 2076,
    MTHLIP_MM	= 2077,
    MTLO	= 2078,
    MTLO64	= 2079,
    MTLO_DSP	= 2080,
    MTLO_DSP_MM	= 2081,
    MTLO_MM	= 2082,
    MTM0	= 2083,
    MTM1	= 2084,
    MTM2	= 2085,
    MTP0	= 2086,
    MTP1	= 2087,
    MTP2	= 2088,
    MTTR	= 2089,
    MUH	= 2090,
    MUHU	= 2091,
    MUHU_MMR6	= 2092,
    MUH_MMR6	= 2093,
    MUL	= 2094,
    MULEQ_S_W_PHL	= 2095,
    MULEQ_S_W_PHL_MM	= 2096,
    MULEQ_S_W_PHR	= 2097,
    MULEQ_S_W_PHR_MM	= 2098,
    MULEU_S_PH_QBL	= 2099,
    MULEU_S_PH_QBL_MM	= 2100,
    MULEU_S_PH_QBR	= 2101,
    MULEU_S_PH_QBR_MM	= 2102,
    MULQ_RS_PH	= 2103,
    MULQ_RS_PH_MM	= 2104,
    MULQ_RS_W	= 2105,
    MULQ_RS_W_MMR2	= 2106,
    MULQ_S_PH	= 2107,
    MULQ_S_PH_MMR2	= 2108,
    MULQ_S_W	= 2109,
    MULQ_S_W_MMR2	= 2110,
    MULR_Q_H	= 2111,
    MULR_Q_W	= 2112,
    MULSAQ_S_W_PH	= 2113,
    MULSAQ_S_W_PH_MM	= 2114,
    MULSA_W_PH	= 2115,
    MULSA_W_PH_MMR2	= 2116,
    MULT	= 2117,
    MULTU_DSP	= 2118,
    MULTU_DSP_MM	= 2119,
    MULT_DSP	= 2120,
    MULT_DSP_MM	= 2121,
    MULT_MM	= 2122,
    MULTu	= 2123,
    MULTu_MM	= 2124,
    MULU	= 2125,
    MULU_MMR6	= 2126,
    MULV_B	= 2127,
    MULV_D	= 2128,
    MULV_H	= 2129,
    MULV_W	= 2130,
    MUL_MM	= 2131,
    MUL_MMR6	= 2132,
    MUL_PH	= 2133,
    MUL_PH_MMR2	= 2134,
    MUL_Q_H	= 2135,
    MUL_Q_W	= 2136,
    MUL_R6	= 2137,
    MUL_S_PH	= 2138,
    MUL_S_PH_MMR2	= 2139,
    Mfhi16	= 2140,
    Mflo16	= 2141,
    Move32R16	= 2142,
    MoveR3216	= 2143,
    NLOC_B	= 2144,
    NLOC_D	= 2145,
    NLOC_H	= 2146,
    NLOC_W	= 2147,
    NLZC_B	= 2148,
    NLZC_D	= 2149,
    NLZC_H	= 2150,
    NLZC_W	= 2151,
    NMADD_D32	= 2152,
    NMADD_D32_MM	= 2153,
    NMADD_D64	= 2154,
    NMADD_S	= 2155,
    NMADD_S_MM	= 2156,
    NMSUB_D32	= 2157,
    NMSUB_D32_MM	= 2158,
    NMSUB_D64	= 2159,
    NMSUB_S	= 2160,
    NMSUB_S_MM	= 2161,
    NOR	= 2162,
    NOR64	= 2163,
    NORI_B	= 2164,
    NOR_MM	= 2165,
    NOR_MMR6	= 2166,
    NOR_V	= 2167,
    NOT16_MM	= 2168,
    NOT16_MMR6	= 2169,
    NegRxRy16	= 2170,
    NotRxRy16	= 2171,
    OR	= 2172,
    OR16_MM	= 2173,
    OR16_MMR6	= 2174,
    OR64	= 2175,
    ORI_B	= 2176,
    ORI_MMR6	= 2177,
    OR_MM	= 2178,
    OR_MMR6	= 2179,
    OR_V	= 2180,
    ORi	= 2181,
    ORi64	= 2182,
    ORi_MM	= 2183,
    OrRxRxRy16	= 2184,
    PACKRL_PH	= 2185,
    PACKRL_PH_MM	= 2186,
    PAUSE	= 2187,
    PAUSE_MM	= 2188,
    PAUSE_MMR6	= 2189,
    PCKEV_B	= 2190,
    PCKEV_D	= 2191,
    PCKEV_H	= 2192,
    PCKEV_W	= 2193,
    PCKOD_B	= 2194,
    PCKOD_D	= 2195,
    PCKOD_H	= 2196,
    PCKOD_W	= 2197,
    PCNT_B	= 2198,
    PCNT_D	= 2199,
    PCNT_H	= 2200,
    PCNT_W	= 2201,
    PICK_PH	= 2202,
    PICK_PH_MM	= 2203,
    PICK_QB	= 2204,
    PICK_QB_MM	= 2205,
    PLL_PS64	= 2206,
    PLU_PS64	= 2207,
    POP	= 2208,
    PRECEQU_PH_QBL	= 2209,
    PRECEQU_PH_QBLA	= 2210,
    PRECEQU_PH_QBLA_MM	= 2211,
    PRECEQU_PH_QBL_MM	= 2212,
    PRECEQU_PH_QBR	= 2213,
    PRECEQU_PH_QBRA	= 2214,
    PRECEQU_PH_QBRA_MM	= 2215,
    PRECEQU_PH_QBR_MM	= 2216,
    PRECEQ_W_PHL	= 2217,
    PRECEQ_W_PHL_MM	= 2218,
    PRECEQ_W_PHR	= 2219,
    PRECEQ_W_PHR_MM	= 2220,
    PRECEU_PH_QBL	= 2221,
    PRECEU_PH_QBLA	= 2222,
    PRECEU_PH_QBLA_MM	= 2223,
    PRECEU_PH_QBL_MM	= 2224,
    PRECEU_PH_QBR	= 2225,
    PRECEU_PH_QBRA	= 2226,
    PRECEU_PH_QBRA_MM	= 2227,
    PRECEU_PH_QBR_MM	= 2228,
    PRECRQU_S_QB_PH	= 2229,
    PRECRQU_S_QB_PH_MM	= 2230,
    PRECRQ_PH_W	= 2231,
    PRECRQ_PH_W_MM	= 2232,
    PRECRQ_QB_PH	= 2233,
    PRECRQ_QB_PH_MM	= 2234,
    PRECRQ_RS_PH_W	= 2235,
    PRECRQ_RS_PH_W_MM	= 2236,
    PRECR_QB_PH	= 2237,
    PRECR_QB_PH_MMR2	= 2238,
    PRECR_SRA_PH_W	= 2239,
    PRECR_SRA_PH_W_MMR2	= 2240,
    PRECR_SRA_R_PH_W	= 2241,
    PRECR_SRA_R_PH_W_MMR2	= 2242,
    PREF	= 2243,
    PREFE	= 2244,
    PREFE_MM	= 2245,
    PREFX_MM	= 2246,
    PREF_MM	= 2247,
    PREF_MMR6	= 2248,
    PREF_R6	= 2249,
    PREPEND	= 2250,
    PREPEND_MMR2	= 2251,
    RADDU_W_QB	= 2252,
    RADDU_W_QB_MM	= 2253,
    RDDSP	= 2254,
    RDDSP_MM	= 2255,
    RDHWR	= 2256,
    RDHWR64	= 2257,
    RDHWR_MM	= 2258,
    RDHWR_MMR6	= 2259,
    RDPGPR_MMR6	= 2260,
    RECIP_D32	= 2261,
    RECIP_D32_MM	= 2262,
    RECIP_D64	= 2263,
    RECIP_D64_MM	= 2264,
    RECIP_S	= 2265,
    RECIP_S_MM	= 2266,
    REPLV_PH	= 2267,
    REPLV_PH_MM	= 2268,
    REPLV_QB	= 2269,
    REPLV_QB_MM	= 2270,
    REPL_PH	= 2271,
    REPL_PH_MM	= 2272,
    REPL_QB	= 2273,
    REPL_QB_MM	= 2274,
    RINT_D	= 2275,
    RINT_D_MMR6	= 2276,
    RINT_S	= 2277,
    RINT_S_MMR6	= 2278,
    ROTR	= 2279,
    ROTRV	= 2280,
    ROTRV_MM	= 2281,
    ROTR_MM	= 2282,
    ROUND_L_D64	= 2283,
    ROUND_L_D_MMR6	= 2284,
    ROUND_L_S	= 2285,
    ROUND_L_S_MMR6	= 2286,
    ROUND_W_D32	= 2287,
    ROUND_W_D64	= 2288,
    ROUND_W_D_MMR6	= 2289,
    ROUND_W_MM	= 2290,
    ROUND_W_S	= 2291,
    ROUND_W_S_MM	= 2292,
    ROUND_W_S_MMR6	= 2293,
    RSQRT_D32	= 2294,
    RSQRT_D32_MM	= 2295,
    RSQRT_D64	= 2296,
    RSQRT_D64_MM	= 2297,
    RSQRT_S	= 2298,
    RSQRT_S_MM	= 2299,
    Restore16	= 2300,
    RestoreX16	= 2301,
    SAA	= 2302,
    SAAD	= 2303,
    SAT_S_B	= 2304,
    SAT_S_D	= 2305,
    SAT_S_H	= 2306,
    SAT_S_W	= 2307,
    SAT_U_B	= 2308,
    SAT_U_D	= 2309,
    SAT_U_H	= 2310,
    SAT_U_W	= 2311,
    SB	= 2312,
    SB16_MM	= 2313,
    SB16_MMR6	= 2314,
    SB64	= 2315,
    SBE	= 2316,
    SBE_MM	= 2317,
    SB_MM	= 2318,
    SB_MMR6	= 2319,
    SC	= 2320,
    SC64	= 2321,
    SC64_R6	= 2322,
    SCD	= 2323,
    SCD_R6	= 2324,
    SCE	= 2325,
    SCE_MM	= 2326,
    SC_MM	= 2327,
    SC_MMR6	= 2328,
    SC_R6	= 2329,
    SD	= 2330,
    SDBBP	= 2331,
    SDBBP16_MM	= 2332,
    SDBBP16_MMR6	= 2333,
    SDBBP_MM	= 2334,
    SDBBP_MMR6	= 2335,
    SDBBP_R6	= 2336,
    SDC1	= 2337,
    SDC164	= 2338,
    SDC1_D64_MMR6	= 2339,
    SDC1_MM	= 2340,
    SDC2	= 2341,
    SDC2_MMR6	= 2342,
    SDC2_R6	= 2343,
    SDC3	= 2344,
    SDIV	= 2345,
    SDIV_MM	= 2346,
    SDL	= 2347,
    SDR	= 2348,
    SDXC1	= 2349,
    SDXC164	= 2350,
    SEB	= 2351,
    SEB64	= 2352,
    SEB_MM	= 2353,
    SEH	= 2354,
    SEH64	= 2355,
    SEH_MM	= 2356,
    SELEQZ	= 2357,
    SELEQZ64	= 2358,
    SELEQZ_D	= 2359,
    SELEQZ_D_MMR6	= 2360,
    SELEQZ_MMR6	= 2361,
    SELEQZ_S	= 2362,
    SELEQZ_S_MMR6	= 2363,
    SELNEZ	= 2364,
    SELNEZ64	= 2365,
    SELNEZ_D	= 2366,
    SELNEZ_D_MMR6	= 2367,
    SELNEZ_MMR6	= 2368,
    SELNEZ_S	= 2369,
    SELNEZ_S_MMR6	= 2370,
    SEL_D	= 2371,
    SEL_D_MMR6	= 2372,
    SEL_S	= 2373,
    SEL_S_MMR6	= 2374,
    SEQ	= 2375,
    SEQi	= 2376,
    SH	= 2377,
    SH16_MM	= 2378,
    SH16_MMR6	= 2379,
    SH64	= 2380,
    SHE	= 2381,
    SHE_MM	= 2382,
    SHF_B	= 2383,
    SHF_H	= 2384,
    SHF_W	= 2385,
    SHILO	= 2386,
    SHILOV	= 2387,
    SHILOV_MM	= 2388,
    SHILO_MM	= 2389,
    SHLLV_PH	= 2390,
    SHLLV_PH_MM	= 2391,
    SHLLV_QB	= 2392,
    SHLLV_QB_MM	= 2393,
    SHLLV_S_PH	= 2394,
    SHLLV_S_PH_MM	= 2395,
    SHLLV_S_W	= 2396,
    SHLLV_S_W_MM	= 2397,
    SHLL_PH	= 2398,
    SHLL_PH_MM	= 2399,
    SHLL_QB	= 2400,
    SHLL_QB_MM	= 2401,
    SHLL_S_PH	= 2402,
    SHLL_S_PH_MM	= 2403,
    SHLL_S_W	= 2404,
    SHLL_S_W_MM	= 2405,
    SHRAV_PH	= 2406,
    SHRAV_PH_MM	= 2407,
    SHRAV_QB	= 2408,
    SHRAV_QB_MMR2	= 2409,
    SHRAV_R_PH	= 2410,
    SHRAV_R_PH_MM	= 2411,
    SHRAV_R_QB	= 2412,
    SHRAV_R_QB_MMR2	= 2413,
    SHRAV_R_W	= 2414,
    SHRAV_R_W_MM	= 2415,
    SHRA_PH	= 2416,
    SHRA_PH_MM	= 2417,
    SHRA_QB	= 2418,
    SHRA_QB_MMR2	= 2419,
    SHRA_R_PH	= 2420,
    SHRA_R_PH_MM	= 2421,
    SHRA_R_QB	= 2422,
    SHRA_R_QB_MMR2	= 2423,
    SHRA_R_W	= 2424,
    SHRA_R_W_MM	= 2425,
    SHRLV_PH	= 2426,
    SHRLV_PH_MMR2	= 2427,
    SHRLV_QB	= 2428,
    SHRLV_QB_MM	= 2429,
    SHRL_PH	= 2430,
    SHRL_PH_MMR2	= 2431,
    SHRL_QB	= 2432,
    SHRL_QB_MM	= 2433,
    SH_MM	= 2434,
    SH_MMR6	= 2435,
    SIGRIE	= 2436,
    SIGRIE_MMR6	= 2437,
    SLDI_B	= 2438,
    SLDI_D	= 2439,
    SLDI_H	= 2440,
    SLDI_W	= 2441,
    SLD_B	= 2442,
    SLD_D	= 2443,
    SLD_H	= 2444,
    SLD_W	= 2445,
    SLL	= 2446,
    SLL16_MM	= 2447,
    SLL16_MMR6	= 2448,
    SLL64_32	= 2449,
    SLL64_64	= 2450,
    SLLI_B	= 2451,
    SLLI_D	= 2452,
    SLLI_H	= 2453,
    SLLI_W	= 2454,
    SLLV	= 2455,
    SLLV_MM	= 2456,
    SLL_B	= 2457,
    SLL_D	= 2458,
    SLL_H	= 2459,
    SLL_MM	= 2460,
    SLL_MMR6	= 2461,
    SLL_W	= 2462,
    SLT	= 2463,
    SLT64	= 2464,
    SLT_MM	= 2465,
    SLTi	= 2466,
    SLTi64	= 2467,
    SLTi_MM	= 2468,
    SLTiu	= 2469,
    SLTiu64	= 2470,
    SLTiu_MM	= 2471,
    SLTu	= 2472,
    SLTu64	= 2473,
    SLTu_MM	= 2474,
    SNE	= 2475,
    SNEi	= 2476,
    SPLATI_B	= 2477,
    SPLATI_D	= 2478,
    SPLATI_H	= 2479,
    SPLATI_W	= 2480,
    SPLAT_B	= 2481,
    SPLAT_D	= 2482,
    SPLAT_H	= 2483,
    SPLAT_W	= 2484,
    SRA	= 2485,
    SRAI_B	= 2486,
    SRAI_D	= 2487,
    SRAI_H	= 2488,
    SRAI_W	= 2489,
    SRARI_B	= 2490,
    SRARI_D	= 2491,
    SRARI_H	= 2492,
    SRARI_W	= 2493,
    SRAR_B	= 2494,
    SRAR_D	= 2495,
    SRAR_H	= 2496,
    SRAR_W	= 2497,
    SRAV	= 2498,
    SRAV_MM	= 2499,
    SRA_B	= 2500,
    SRA_D	= 2501,
    SRA_H	= 2502,
    SRA_MM	= 2503,
    SRA_W	= 2504,
    SRL	= 2505,
    SRL16_MM	= 2506,
    SRL16_MMR6	= 2507,
    SRLI_B	= 2508,
    SRLI_D	= 2509,
    SRLI_H	= 2510,
    SRLI_W	= 2511,
    SRLRI_B	= 2512,
    SRLRI_D	= 2513,
    SRLRI_H	= 2514,
    SRLRI_W	= 2515,
    SRLR_B	= 2516,
    SRLR_D	= 2517,
    SRLR_H	= 2518,
    SRLR_W	= 2519,
    SRLV	= 2520,
    SRLV_MM	= 2521,
    SRL_B	= 2522,
    SRL_D	= 2523,
    SRL_H	= 2524,
    SRL_MM	= 2525,
    SRL_W	= 2526,
    SSNOP	= 2527,
    SSNOP_MM	= 2528,
    SSNOP_MMR6	= 2529,
    ST_B	= 2530,
    ST_D	= 2531,
    ST_H	= 2532,
    ST_W	= 2533,
    SUB	= 2534,
    SUBQH_PH	= 2535,
    SUBQH_PH_MMR2	= 2536,
    SUBQH_R_PH	= 2537,
    SUBQH_R_PH_MMR2	= 2538,
    SUBQH_R_W	= 2539,
    SUBQH_R_W_MMR2	= 2540,
    SUBQH_W	= 2541,
    SUBQH_W_MMR2	= 2542,
    SUBQ_PH	= 2543,
    SUBQ_PH_MM	= 2544,
    SUBQ_S_PH	= 2545,
    SUBQ_S_PH_MM	= 2546,
    SUBQ_S_W	= 2547,
    SUBQ_S_W_MM	= 2548,
    SUBSUS_U_B	= 2549,
    SUBSUS_U_D	= 2550,
    SUBSUS_U_H	= 2551,
    SUBSUS_U_W	= 2552,
    SUBSUU_S_B	= 2553,
    SUBSUU_S_D	= 2554,
    SUBSUU_S_H	= 2555,
    SUBSUU_S_W	= 2556,
    SUBS_S_B	= 2557,
    SUBS_S_D	= 2558,
    SUBS_S_H	= 2559,
    SUBS_S_W	= 2560,
    SUBS_U_B	= 2561,
    SUBS_U_D	= 2562,
    SUBS_U_H	= 2563,
    SUBS_U_W	= 2564,
    SUBU16_MM	= 2565,
    SUBU16_MMR6	= 2566,
    SUBUH_QB	= 2567,
    SUBUH_QB_MMR2	= 2568,
    SUBUH_R_QB	= 2569,
    SUBUH_R_QB_MMR2	= 2570,
    SUBU_MMR6	= 2571,
    SUBU_PH	= 2572,
    SUBU_PH_MMR2	= 2573,
    SUBU_QB	= 2574,
    SUBU_QB_MM	= 2575,
    SUBU_S_PH	= 2576,
    SUBU_S_PH_MMR2	= 2577,
    SUBU_S_QB	= 2578,
    SUBU_S_QB_MM	= 2579,
    SUBVI_B	= 2580,
    SUBVI_D	= 2581,
    SUBVI_H	= 2582,
    SUBVI_W	= 2583,
    SUBV_B	= 2584,
    SUBV_D	= 2585,
    SUBV_H	= 2586,
    SUBV_W	= 2587,
    SUB_MM	= 2588,
    SUB_MMR6	= 2589,
    SUBu	= 2590,
    SUBu_MM	= 2591,
    SUXC1	= 2592,
    SUXC164	= 2593,
    SUXC1_MM	= 2594,
    SW	= 2595,
    SW16_MM	= 2596,
    SW16_MMR6	= 2597,
    SW64	= 2598,
    SWC1	= 2599,
    SWC1_MM	= 2600,
    SWC2	= 2601,
    SWC2_MMR6	= 2602,
    SWC2_R6	= 2603,
    SWC3	= 2604,
    SWDSP	= 2605,
    SWDSP_MM	= 2606,
    SWE	= 2607,
    SWE_MM	= 2608,
    SWL	= 2609,
    SWL64	= 2610,
    SWLE	= 2611,
    SWLE_MM	= 2612,
    SWL_MM	= 2613,
    SWM16_MM	= 2614,
    SWM16_MMR6	= 2615,
    SWM32_MM	= 2616,
    SWP_MM	= 2617,
    SWR	= 2618,
    SWR64	= 2619,
    SWRE	= 2620,
    SWRE_MM	= 2621,
    SWR_MM	= 2622,
    SWSP_MM	= 2623,
    SWSP_MMR6	= 2624,
    SWXC1	= 2625,
    SWXC1_MM	= 2626,
    SW_MM	= 2627,
    SW_MMR6	= 2628,
    SYNC	= 2629,
    SYNCI	= 2630,
    SYNCI_MM	= 2631,
    SYNCI_MMR6	= 2632,
    SYNC_MM	= 2633,
    SYNC_MMR6	= 2634,
    SYSCALL	= 2635,
    SYSCALL_MM	= 2636,
    Save16	= 2637,
    SaveX16	= 2638,
    SbRxRyOffMemX16	= 2639,
    SebRx16	= 2640,
    SehRx16	= 2641,
    ShRxRyOffMemX16	= 2642,
    SllX16	= 2643,
    SllvRxRy16	= 2644,
    SltRxRy16	= 2645,
    SltiRxImm16	= 2646,
    SltiRxImmX16	= 2647,
    SltiuRxImm16	= 2648,
    SltiuRxImmX16	= 2649,
    SltuRxRy16	= 2650,
    SraX16	= 2651,
    SravRxRy16	= 2652,
    SrlX16	= 2653,
    SrlvRxRy16	= 2654,
    SubuRxRyRz16	= 2655,
    SwRxRyOffMemX16	= 2656,
    SwRxSpImmX16	= 2657,
    TEQ	= 2658,
    TEQI	= 2659,
    TEQI_MM	= 2660,
    TEQ_MM	= 2661,
    TGE	= 2662,
    TGEI	= 2663,
    TGEIU	= 2664,
    TGEIU_MM	= 2665,
    TGEI_MM	= 2666,
    TGEU	= 2667,
    TGEU_MM	= 2668,
    TGE_MM	= 2669,
    TLBGINV	= 2670,
    TLBGINVF	= 2671,
    TLBGINVF_MM	= 2672,
    TLBGINV_MM	= 2673,
    TLBGP	= 2674,
    TLBGP_MM	= 2675,
    TLBGR	= 2676,
    TLBGR_MM	= 2677,
    TLBGWI	= 2678,
    TLBGWI_MM	= 2679,
    TLBGWR	= 2680,
    TLBGWR_MM	= 2681,
    TLBINV	= 2682,
    TLBINVF	= 2683,
    TLBINVF_MMR6	= 2684,
    TLBINV_MMR6	= 2685,
    TLBP	= 2686,
    TLBP_MM	= 2687,
    TLBR	= 2688,
    TLBR_MM	= 2689,
    TLBWI	= 2690,
    TLBWI_MM	= 2691,
    TLBWR	= 2692,
    TLBWR_MM	= 2693,
    TLT	= 2694,
    TLTI	= 2695,
    TLTIU_MM	= 2696,
    TLTI_MM	= 2697,
    TLTU	= 2698,
    TLTU_MM	= 2699,
    TLT_MM	= 2700,
    TNE	= 2701,
    TNEI	= 2702,
    TNEI_MM	= 2703,
    TNE_MM	= 2704,
    TRUNC_L_D64	= 2705,
    TRUNC_L_D_MMR6	= 2706,
    TRUNC_L_S	= 2707,
    TRUNC_L_S_MMR6	= 2708,
    TRUNC_W_D32	= 2709,
    TRUNC_W_D64	= 2710,
    TRUNC_W_D_MMR6	= 2711,
    TRUNC_W_MM	= 2712,
    TRUNC_W_S	= 2713,
    TRUNC_W_S_MM	= 2714,
    TRUNC_W_S_MMR6	= 2715,
    TTLTIU	= 2716,
    UDIV	= 2717,
    UDIV_MM	= 2718,
    V3MULU	= 2719,
    VMM0	= 2720,
    VMULU	= 2721,
    VSHF_B	= 2722,
    VSHF_D	= 2723,
    VSHF_H	= 2724,
    VSHF_W	= 2725,
    WAIT	= 2726,
    WAIT_MM	= 2727,
    WAIT_MMR6	= 2728,
    WRDSP	= 2729,
    WRDSP_MM	= 2730,
    WRPGPR_MMR6	= 2731,
    WSBH	= 2732,
    WSBH_MM	= 2733,
    WSBH_MMR6	= 2734,
    XOR	= 2735,
    XOR16_MM	= 2736,
    XOR16_MMR6	= 2737,
    XOR64	= 2738,
    XORI_B	= 2739,
    XORI_MMR6	= 2740,
    XOR_MM	= 2741,
    XOR_MMR6	= 2742,
    XOR_V	= 2743,
    XORi	= 2744,
    XORi64	= 2745,
    XORi_MM	= 2746,
    XorRxRxRy16	= 2747,
    YIELD	= 2748,
    INSTRUCTION_LIST_END = 2749
  };

} // end namespace Mips
} // end namespace llvm
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_SCHED_ENUM
#undef GET_INSTRINFO_SCHED_ENUM
namespace llvm {

namespace Mips {
namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIPseudo	= 1,
    II_B	= 2,
    II_BCCZAL	= 3,
    II_MTC1	= 4,
    II_MFC1	= 5,
    II_JALR	= 6,
    II_JAL	= 7,
    II_CVT	= 8,
    II_DMULT	= 9,
    II_DMULTU	= 10,
    II_DDIV	= 11,
    II_DDIVU	= 12,
    II_IndirectBranchPseudo	= 13,
    II_MADD	= 14,
    II_MADDU	= 15,
    II_MFHI_MFLO	= 16,
    II_MSUB	= 17,
    II_MSUBU	= 18,
    II_MTHI_MTLO	= 19,
    II_MULT	= 20,
    II_MULTU	= 21,
    II_ReturnPseudo	= 22,
    II_DIV	= 23,
    II_DIVU	= 24,
    II_J	= 25,
    II_JR	= 26,
    II_TRAP	= 27,
    II_ADD	= 28,
    II_ADDIUPC	= 29,
    II_ADDIU	= 30,
    II_ADDU	= 31,
    II_ADDI	= 32,
    II_ALIGN	= 33,
    II_ALUIPC	= 34,
    II_AND	= 35,
    II_ANDI	= 36,
    II_AUI	= 37,
    II_AUIPC	= 38,
    IIM16Alu	= 39,
    II_BADDU	= 40,
    II_BC	= 41,
    II_BALC	= 42,
    II_BBIT	= 43,
    II_BC1CCZ	= 44,
    II_BC1F	= 45,
    II_BC1FL	= 46,
    II_BC1T	= 47,
    II_BC1TL	= 48,
    II_BC2CCZ	= 49,
    II_BCC	= 50,
    II_BCCC	= 51,
    II_BCCZ	= 52,
    II_BCCZC	= 53,
    II_BCCZALS	= 54,
    II_BITSWAP	= 55,
    II_BREAK	= 56,
    II_CACHE	= 57,
    II_CACHEE	= 58,
    II_CEIL	= 59,
    II_CFC1	= 60,
    II_CFC2	= 61,
    II_INS	= 62,
    II_CLASS_D	= 63,
    II_CLASS_S	= 64,
    II_CLO	= 65,
    II_CLZ	= 66,
    II_CMP_CC_D	= 67,
    II_CMP_CC_S	= 68,
    II_CRC32B	= 69,
    II_CRC32CB	= 70,
    II_CRC32CD	= 71,
    II_CRC32CH	= 72,
    II_CRC32CW	= 73,
    II_CRC32D	= 74,
    II_CRC32H	= 75,
    II_CRC32W	= 76,
    II_CTC1	= 77,
    II_CTC2	= 78,
    II_C_CC_D	= 79,
    II_C_CC_S	= 80,
    II_DADD	= 81,
    II_DADDI	= 82,
    II_DADDIU	= 83,
    II_DADDU	= 84,
    II_DAHI	= 85,
    II_DALIGN	= 86,
    II_DATI	= 87,
    II_DAUI	= 88,
    II_DBITSWAP	= 89,
    II_DCLO	= 90,
    II_DCLZ	= 91,
    II_DERET	= 92,
    II_EXT	= 93,
    II_DI	= 94,
    II_DLSA	= 95,
    II_DMFC0	= 96,
    II_DMFC1	= 97,
    II_DMFC2	= 98,
    II_DMFGC0	= 99,
    II_DMOD	= 100,
    II_DMODU	= 101,
    II_DMT	= 102,
    II_DMTC0	= 103,
    II_DMTC1	= 104,
    II_DMTC2	= 105,
    II_DMTGC0	= 106,
    II_DMUH	= 107,
    II_DMUHU	= 108,
    II_DMUL	= 109,
    II_POP	= 110,
    II_DROTR	= 111,
    II_DROTR32	= 112,
    II_DROTRV	= 113,
    II_DSBH	= 114,
    II_DSHD	= 115,
    II_DSLL	= 116,
    II_DSLL32	= 117,
    II_DSLLV	= 118,
    II_DSRA	= 119,
    II_DSRA32	= 120,
    II_DSRAV	= 121,
    II_DSRL	= 122,
    II_DSRL32	= 123,
    II_DSRLV	= 124,
    II_DSUB	= 125,
    II_DSUBU	= 126,
    II_DVP	= 127,
    II_DVPE	= 128,
    II_EHB	= 129,
    II_EI	= 130,
    II_EMT	= 131,
    II_ERET	= 132,
    II_ERETNC	= 133,
    II_EVP	= 134,
    II_EVPE	= 135,
    II_ABS	= 136,
    II_SQRT_D	= 137,
    II_ADD_D	= 138,
    II_ADD_S	= 139,
    II_DIV_D	= 140,
    II_DIV_S	= 141,
    II_FLOOR	= 142,
    II_MOV_D	= 143,
    II_MOV_S	= 144,
    II_MUL_D	= 145,
    II_MUL_S	= 146,
    II_NEG	= 147,
    II_FORK	= 148,
    II_SQRT_S	= 149,
    II_SUB_D	= 150,
    II_SUB_S	= 151,
    II_GINVI	= 152,
    II_GINVT	= 153,
    II_HYPCALL	= 154,
    II_JALR_HB	= 155,
    II_JALRC	= 156,
    II_JALRS	= 157,
    II_JALS	= 158,
    II_JIALC	= 159,
    II_JIC	= 160,
    II_JRADDIUSP	= 161,
    II_JRC	= 162,
    II_JR_HB	= 163,
    II_LB	= 164,
    II_LBE	= 165,
    II_LBU	= 166,
    II_LBUE	= 167,
    II_LD	= 168,
    II_LDC1	= 169,
    II_LDC2	= 170,
    II_LDC3	= 171,
    II_LDL	= 172,
    II_LDPC	= 173,
    II_LDR	= 174,
    II_LDXC1	= 175,
    II_LH	= 176,
    II_LHE	= 177,
    II_LHU	= 178,
    II_LHUE	= 179,
    II_LI	= 180,
    II_LL	= 181,
    II_LLD	= 182,
    II_LLE	= 183,
    II_LSA	= 184,
    II_LUI	= 185,
    II_LUXC1	= 186,
    II_LW	= 187,
    II_LWC1	= 188,
    II_LWC2	= 189,
    II_LWC3	= 190,
    II_LWE	= 191,
    II_LWL	= 192,
    II_LWLE	= 193,
    II_LWM	= 194,
    II_LWPC	= 195,
    II_LWP	= 196,
    II_LWR	= 197,
    II_LWRE	= 198,
    II_LWUPC	= 199,
    II_LWU	= 200,
    II_LWXC1	= 201,
    II_LWXS	= 202,
    II_MADDF_D	= 203,
    II_MADDF_S	= 204,
    II_MADD_D	= 205,
    II_MADD_S	= 206,
    II_MAX_D	= 207,
    II_MAXA_D	= 208,
    II_MAX_S	= 209,
    II_MAXA_S	= 210,
    II_MFC0	= 211,
    II_MFC2	= 212,
    II_MFGC0	= 213,
    II_MFHC0	= 214,
    II_MFHC1	= 215,
    II_MFHGC0	= 216,
    II_MFTR	= 217,
    II_MIN_S	= 218,
    II_MINA_D	= 219,
    II_MIN_D	= 220,
    II_MINA_S	= 221,
    II_MOD	= 222,
    II_MODU	= 223,
    II_MOVE	= 224,
    II_MOVF_D	= 225,
    II_MOVF	= 226,
    II_MOVF_S	= 227,
    II_MOVN_D	= 228,
    II_MOVN	= 229,
    II_MOVN_S	= 230,
    II_MOVT_D	= 231,
    II_MOVT	= 232,
    II_MOVT_S	= 233,
    II_MOVZ_D	= 234,
    II_MOVZ	= 235,
    II_MOVZ_S	= 236,
    II_MSUBF_D	= 237,
    II_MSUBF_S	= 238,
    II_MSUB_D	= 239,
    II_MSUB_S	= 240,
    II_MTC0	= 241,
    II_MTC2	= 242,
    II_MTGC0	= 243,
    II_MTHC0	= 244,
    II_MTHC1	= 245,
    II_MTHGC0	= 246,
    II_MTTR	= 247,
    II_MUH	= 248,
    II_MUHU	= 249,
    II_MUL	= 250,
    II_MULU	= 251,
    II_NMADD_D	= 252,
    II_NMADD_S	= 253,
    II_NMSUB_D	= 254,
    II_NMSUB_S	= 255,
    II_NOR	= 256,
    II_NOT	= 257,
    II_OR	= 258,
    II_ORI	= 259,
    II_PAUSE	= 260,
    II_PREF	= 261,
    II_PREFE	= 262,
    II_RDHWR	= 263,
    II_RDPGPR	= 264,
    II_RECIP_D	= 265,
    II_RECIP_S	= 266,
    II_RINT_D	= 267,
    II_RINT_S	= 268,
    II_ROTR	= 269,
    II_ROTRV	= 270,
    II_ROUND	= 271,
    II_RSQRT_D	= 272,
    II_RSQRT_S	= 273,
    II_RESTORE	= 274,
    II_SB	= 275,
    II_SBE	= 276,
    II_SC	= 277,
    II_SCD	= 278,
    II_SCE	= 279,
    II_SD	= 280,
    II_SDBBP	= 281,
    II_SDC1	= 282,
    II_SDC2	= 283,
    II_SDC3	= 284,
    II_SDL	= 285,
    II_SDR	= 286,
    II_SDXC1	= 287,
    II_SEB	= 288,
    II_SEH	= 289,
    II_SELCCZ	= 290,
    II_SELCCZ_D	= 291,
    II_SELCCZ_S	= 292,
    II_SEL_D	= 293,
    II_SEL_S	= 294,
    II_SEQ_SNE	= 295,
    II_SEQI_SNEI	= 296,
    II_SH	= 297,
    II_SHE	= 298,
    II_SIGRIE	= 299,
    II_SLL	= 300,
    II_SLLV	= 301,
    II_SLT_SLTU	= 302,
    II_SLTI_SLTIU	= 303,
    II_SRA	= 304,
    II_SRAV	= 305,
    II_SRL	= 306,
    II_SRLV	= 307,
    II_SSNOP	= 308,
    II_SUB	= 309,
    II_SUBU	= 310,
    II_SUXC1	= 311,
    II_SW	= 312,
    II_SWC1	= 313,
    II_SWC2	= 314,
    II_SWC3	= 315,
    II_SWE	= 316,
    II_SWL	= 317,
    II_SWLE	= 318,
    II_SWM	= 319,
    II_SWP	= 320,
    II_SWR	= 321,
    II_SWRE	= 322,
    II_SWXC1	= 323,
    II_SYNC	= 324,
    II_SYNCI	= 325,
    II_SYSCALL	= 326,
    II_SAVE	= 327,
    II_TEQ	= 328,
    II_TEQI	= 329,
    II_TGE	= 330,
    II_TGEI	= 331,
    II_TGEIU	= 332,
    II_TGEU	= 333,
    II_TLBGINV	= 334,
    II_TLBGINVF	= 335,
    II_TLBGP	= 336,
    II_TLBGR	= 337,
    II_TLBGWI	= 338,
    II_TLBGWR	= 339,
    II_TLBINV	= 340,
    II_TLBINVF	= 341,
    II_TLBP	= 342,
    II_TLBR	= 343,
    II_TLBWI	= 344,
    II_TLBWR	= 345,
    II_TLT	= 346,
    II_TLTI	= 347,
    II_TTLTIU	= 348,
    II_TLTU	= 349,
    II_TNE	= 350,
    II_TNEI	= 351,
    II_TRUNC	= 352,
    II_WAIT	= 353,
    II_WRPGPR	= 354,
    II_WSBH	= 355,
    II_XOR	= 356,
    II_XORI	= 357,
    II_YIELD	= 358,
    AND	= 359,
    LUi	= 360,
    NOR	= 361,
    OR	= 362,
    SLTi_SLTiu	= 363,
    SUB	= 364,
    SUBu	= 365,
    XOR	= 366,
    SSNOP	= 367,
    NOP	= 368,
    B	= 369,
    BAL	= 370,
    BAL_BR_BGEZAL_BGEZALL_BLTZAL_BLTZALL	= 371,
    BEQ_BEQL_BNE_BNEL	= 372,
    BGEZ_BGEZL_BGTZ_BGTZL_BLEZ_BLEZL_BLTZ_BLTZL	= 373,
    BREAK	= 374,
    DERET	= 375,
    ERET	= 376,
    ERet_RetRA	= 377,
    ERETNC	= 378,
    J_TAILCALL	= 379,
    JR_TAILCALLREG_TAILCALLREGHB	= 380,
    JR_HB	= 381,
    PseudoIndirectBranch_PseudoIndirectHazardBranch	= 382,
    PseudoReturn	= 383,
    SDBBP	= 384,
    SYSCALL	= 385,
    TEQ	= 386,
    TEQI	= 387,
    TGE	= 388,
    TGEI	= 389,
    TGEIU	= 390,
    TGEU	= 391,
    TLT	= 392,
    TLTI	= 393,
    TLTU	= 394,
    TNE	= 395,
    TNEI	= 396,
    TRAP	= 397,
    TTLTIU	= 398,
    WAIT	= 399,
    PAUSE	= 400,
    JAL	= 401,
    JALR_JALRHBPseudo_JALRPseudo	= 402,
    JALR_HB	= 403,
    JALX	= 404,
    TLBINV	= 405,
    TLBINVF	= 406,
    TLBP	= 407,
    TLBR	= 408,
    TLBWI	= 409,
    TLBWR	= 410,
    MFC0	= 411,
    MTC0	= 412,
    MFC2	= 413,
    MTC2	= 414,
    HYPCALL	= 415,
    MFGC0	= 416,
    MFHGC0	= 417,
    MTGC0	= 418,
    MTHGC0	= 419,
    TLBGINV	= 420,
    TLBGINVF	= 421,
    TLBGP	= 422,
    TLBGR	= 423,
    TLBGWI	= 424,
    TLBGWR	= 425,
    LB	= 426,
    LBu	= 427,
    LH	= 428,
    LHu	= 429,
    LW	= 430,
    LL	= 431,
    LWC2	= 432,
    LWC3	= 433,
    LDC2	= 434,
    LDC3	= 435,
    LBE	= 436,
    LBuE	= 437,
    LHE	= 438,
    LHuE	= 439,
    LWE	= 440,
    LLE	= 441,
    LWPC	= 442,
    LWL	= 443,
    LWR	= 444,
    LWLE	= 445,
    LWRE	= 446,
    SB	= 447,
    SH	= 448,
    SW	= 449,
    SWC2	= 450,
    SWC3	= 451,
    SDC2	= 452,
    SDC3	= 453,
    SC	= 454,
    SBE	= 455,
    SHE	= 456,
    SWE	= 457,
    SCE	= 458,
    SWL	= 459,
    SWR	= 460,
    SWLE	= 461,
    SWRE	= 462,
    PREF	= 463,
    PREFE	= 464,
    CACHE	= 465,
    CACHEE	= 466,
    SYNC	= 467,
    SYNCI	= 468,
    CLO	= 469,
    CLZ	= 470,
    DI	= 471,
    EI	= 472,
    MFHI_MFLO_PseudoMFHI_PseudoMFLO	= 473,
    EHB	= 474,
    RDHWR	= 475,
    WSBH	= 476,
    MOVN_I_I	= 477,
    MOVZ_I_I	= 478,
    DIV_PseudoSDIV_SDIV	= 479,
    DIVU_PseudoUDIV_UDIV	= 480,
    MUL	= 481,
    MULT_PseudoMULT	= 482,
    MULTu_PseudoMULTu	= 483,
    MADD_PseudoMADD	= 484,
    MADDU_PseudoMADDU	= 485,
    MSUB_PseudoMSUB	= 486,
    MSUBU_PseudoMSUBU	= 487,
    MTHI_MTLO_PseudoMTLOHI	= 488,
    EXT	= 489,
    INS	= 490,
    ADD	= 491,
    ADDi	= 492,
    ADDiu	= 493,
    ANDi	= 494,
    ORi	= 495,
    ROTR	= 496,
    SEB	= 497,
    SEH	= 498,
    SLT_SLTu	= 499,
    SLL	= 500,
    SRA	= 501,
    SRL	= 502,
    XORi	= 503,
    ADDu	= 504,
    SLLV	= 505,
    SRAV	= 506,
    SRLV	= 507,
    LSA	= 508,
    COPY	= 509,
    VSHF_B_VSHF_D_VSHF_H_VSHF_W	= 510,
    BINSLI_B_BINSLI_D_BINSLI_H_BINSLI_W_BINSL_B_BINSL_D_BINSL_H_BINSL_W	= 511,
    BINSRI_B_BINSRI_D_BINSRI_H_BINSRI_W_BINSR_B_BINSR_D_BINSR_H_BINSR_W	= 512,
    INSERT_B_INSERT_D_INSERT_H_INSERT_W	= 513,
    SLDI_B_SLDI_D_SLDI_H_SLDI_W_SLD_B_SLD_D_SLD_H_SLD_W	= 514,
    BSETI_B_BSETI_D_BSETI_H_BSETI_W_BSET_B_BSET_D_BSET_H_BSET_W	= 515,
    BCLRI_B_BCLRI_D_BCLRI_H_BCLRI_W_BCLR_B_BCLR_D_BCLR_H_BCLR_W	= 516,
    BNEGI_B_BNEGI_D_BNEGI_H_BNEGI_W_BNEG_B_BNEG_D_BNEG_H_BNEG_W	= 517,
    BSELI_B_BSEL_V	= 518,
    BMNZI_B_BMNZ_V_BMZI_B_BMZ_V	= 519,
    BSEL_D_PSEUDO_BSEL_FD_PSEUDO_BSEL_FW_PSEUDO_BSEL_H_PSEUDO_BSEL_W_PSEUDO	= 520,
    PCNT_B_PCNT_D_PCNT_H_PCNT_W	= 521,
    SAT_S_B_SAT_S_D_SAT_S_H_SAT_S_W_SAT_U_B_SAT_U_D_SAT_U_H_SAT_U_W	= 522,
    BNZ_B_BNZ_D_BNZ_H_BNZ_V_BNZ_W_BZ_B_BZ_D_BZ_H_BZ_V_BZ_W	= 523,
    CFCMSA_CTCMSA	= 524,
    FABS_S_FABS_D32_FABS_D64	= 525,
    MOVF_D32_MOVF_D64	= 526,
    MOVF_S	= 527,
    MOVT_D32_MOVT_D64	= 528,
    MOVT_S	= 529,
    FMOV_D32_FMOV_D64	= 530,
    FMOV_S	= 531,
    FNEG_S_FNEG_D32_FNEG_D64	= 532,
    ADD_A_B_ADD_A_D_ADD_A_H_ADD_A_W	= 533,
    ADDS_A_B_ADDS_A_D_ADDS_A_H_ADDS_A_W_ADDS_S_B_ADDS_S_D_ADDS_S_H_ADDS_S_W_ADDS_U_B_ADDS_U_D_ADDS_U_H_ADDS_U_W	= 534,
    ADDVI_B_ADDVI_D_ADDVI_H_ADDVI_W_ADDV_B_ADDV_D_ADDV_H_ADDV_W	= 535,
    ASUB_S_B_ASUB_S_D_ASUB_S_H_ASUB_S_W_ASUB_U_B_ASUB_U_D_ASUB_U_H_ASUB_U_W	= 536,
    AVER_S_B_AVER_S_D_AVER_S_H_AVER_S_W_AVER_U_B_AVER_U_D_AVER_U_H_AVER_U_W_AVE_S_B_AVE_S_D_AVE_S_H_AVE_S_W_AVE_U_B_AVE_U_D_AVE_U_H_AVE_U_W	= 537,
    SHF_B_SHF_H_SHF_W	= 538,
    FILL_B_FILL_D_FILL_H_FILL_W	= 539,
    SPLATI_B_SPLATI_D_SPLATI_H_SPLATI_W_SPLAT_B_SPLAT_D_SPLAT_H_SPLAT_W	= 540,
    MOVE_V	= 541,
    LDI_B_LDI_D_LDI_H_LDI_W	= 542,
    AND_V_NOR_V_OR_V_XOR_V	= 543,
    ANDI_B_NORI_B_ORI_B_XORI_B	= 544,
    AND_V_D_PSEUDO_AND_V_H_PSEUDO_AND_V_W_PSEUDO_NOR_V_D_PSEUDO_NOR_V_H_PSEUDO_NOR_V_W_PSEUDO_OR_V_D_PSEUDO_OR_V_H_PSEUDO_OR_V_W_PSEUDO_XOR_V_D_PSEUDO_XOR_V_H_PSEUDO_XOR_V_W_PSEUDO	= 545,
    FILL_FD_PSEUDO_FILL_FW_PSEUDO	= 546,
    INSERT_FD_PSEUDO_INSERT_FW_PSEUDO	= 547,
    FEXP2_D_FEXP2_W	= 548,
    CLTI_S_B_CLTI_S_D_CLTI_S_H_CLTI_S_W_CLTI_U_B_CLTI_U_D_CLTI_U_H_CLTI_U_W_CLT_S_B_CLT_S_D_CLT_S_H_CLT_S_W_CLT_U_B_CLT_U_D_CLT_U_H_CLT_U_W	= 549,
    CLEI_S_B_CLEI_S_D_CLEI_S_H_CLEI_S_W_CLEI_U_B_CLEI_U_D_CLEI_U_H_CLEI_U_W_CLE_S_B_CLE_S_D_CLE_S_H_CLE_S_W_CLE_U_B_CLE_U_D_CLE_U_H_CLE_U_W	= 550,
    CEQI_B_CEQI_D_CEQI_H_CEQI_W_CEQ_B_CEQ_D_CEQ_H_CEQ_W	= 551,
    CMP_UN_D	= 552,
    CMP_UN_S	= 553,
    CMP_UEQ_D	= 554,
    CMP_UEQ_S	= 555,
    CMP_EQ_D	= 556,
    CMP_EQ_S	= 557,
    CMP_LT_D	= 558,
    CMP_LT_S	= 559,
    CMP_ULT_D	= 560,
    CMP_ULT_S	= 561,
    CMP_LE_D	= 562,
    CMP_LE_S	= 563,
    CMP_ULE_D	= 564,
    CMP_ULE_S	= 565,
    FSAF_D_FSAF_W_FSEQ_D_FSEQ_W_FSLE_D_FSLE_W_FSLT_D_FSLT_W_FSNE_D_FSNE_W_FSOR_D_FSOR_W	= 566,
    FSUEQ_D_FSUEQ_W	= 567,
    FSULE_D_FSULE_W	= 568,
    FSULT_D_FSULT_W	= 569,
    FSUNE_D_FSUNE_W	= 570,
    FSUN_D_FSUN_W	= 571,
    FCAF_D_FCAF_W	= 572,
    FCEQ_D_FCEQ_W	= 573,
    FCLE_D_FCLE_W	= 574,
    FCLT_D_FCLT_W	= 575,
    FCNE_D_FCNE_W	= 576,
    FCOR_D_FCOR_W	= 577,
    FCUEQ_D_FCUEQ_W	= 578,
    FCULE_D_FCULE_W	= 579,
    FCULT_D_FCULT_W	= 580,
    FCUNE_D_FCUNE_W	= 581,
    FCUN_D_FCUN_W	= 582,
    FABS_D_FABS_W	= 583,
    FFINT_S_D_FFINT_S_W_FFINT_U_D_FFINT_U_W	= 584,
    FFQL_D_FFQL_W	= 585,
    FFQR_D_FFQR_W	= 586,
    FTINT_S_D_FTINT_S_W_FTINT_U_D_FTINT_U_W	= 587,
    FRINT_D_FRINT_W	= 588,
    FTQ_H_FTQ_W	= 589,
    FTRUNC_S_D_FTRUNC_S_W_FTRUNC_U_D_FTRUNC_U_W	= 590,
    FEXDO_H_FEXDO_W	= 591,
    FEXUPL_D_FEXUPL_W	= 592,
    FEXUPR_D_FEXUPR_W	= 593,
    FCLASS_D_FCLASS_W	= 594,
    FMAX_A_D_FMAX_A_W	= 595,
    FMAX_D_FMAX_W	= 596,
    FMIN_A_D_FMIN_A_W	= 597,
    FMIN_D_FMIN_W	= 598,
    FLOG2_D_FLOG2_W	= 599,
    ILVL_B_ILVL_D_ILVL_H_ILVL_W_ILVR_B_ILVR_D_ILVR_H_ILVR_W	= 600,
    ILVEV_B_ILVEV_D_ILVEV_H_ILVEV_W_ILVOD_B_ILVOD_D_ILVOD_H_ILVOD_W	= 601,
    INSVE_B_INSVE_D_INSVE_H_INSVE_W	= 602,
    SUBS_S_B_SUBS_S_D_SUBS_S_H_SUBS_S_W_SUBS_U_B_SUBS_U_D_SUBS_U_H_SUBS_U_W	= 603,
    SUBSUS_U_B_SUBSUS_U_D_SUBSUS_U_H_SUBSUS_U_W	= 604,
    SUBSUU_S_B_SUBSUU_S_D_SUBSUU_S_H_SUBSUU_S_W	= 605,
    SUBVI_B_SUBVI_D_SUBVI_H_SUBVI_W	= 606,
    SUBV_B_SUBV_D_SUBV_H_SUBV_W	= 607,
    MOD_S_B_MOD_S_D_MOD_S_H_MOD_S_W_MOD_U_B_MOD_U_D_MOD_U_H_MOD_U_W	= 608,
    DIV_S_B_DIV_S_D_DIV_S_H_DIV_S_W_DIV_U_B_DIV_U_D_DIV_U_H_DIV_U_W	= 609,
    HADD_S_D_HADD_S_H_HADD_S_W_HADD_U_D_HADD_U_H_HADD_U_W	= 610,
    HSUB_S_D_HSUB_S_H_HSUB_S_W_HSUB_U_D_HSUB_U_H_HSUB_U_W	= 611,
    MAX_S_B_MAX_S_D_MAX_S_H_MAX_S_W_MIN_S_B_MIN_S_D_MIN_S_H_MIN_S_W	= 612,
    MAX_U_B_MAX_U_D_MAX_U_H_MAX_U_W_MIN_U_B_MIN_U_D_MIN_U_H_MIN_U_W	= 613,
    MAX_A_B_MAX_A_D_MAX_A_H_MAX_A_W_MIN_A_B_MIN_A_D_MIN_A_H_MIN_A_W	= 614,
    MAXI_S_B_MAXI_S_D_MAXI_S_H_MAXI_S_W_MAXI_U_B_MAXI_U_D_MAXI_U_H_MAXI_U_W_MINI_S_B_MINI_S_D_MINI_S_H_MINI_S_W_MINI_U_B_MINI_U_D_MINI_U_H_MINI_U_W	= 615,
    SRAI_B_SRAI_D_SRAI_H_SRAI_W_SRA_B_SRA_D_SRA_H_SRA_W	= 616,
    SRLI_B_SRLI_D_SRLI_H_SRLI_W_SRL_B_SRL_D_SRL_H_SRL_W	= 617,
    SRARI_B_SRARI_D_SRARI_H_SRARI_W_SRAR_B_SRAR_D_SRAR_H_SRAR_W	= 618,
    SRLRI_B_SRLRI_D_SRLRI_H_SRLRI_W_SRLR_B_SRLR_D_SRLR_H_SRLR_W	= 619,
    SLLI_B_SLLI_D_SLLI_H_SLLI_W_SLL_B_SLL_D_SLL_H_SLL_W	= 620,
    PCKEV_B_PCKEV_D_PCKEV_H_PCKEV_W_PCKOD_B_PCKOD_D_PCKOD_H_PCKOD_W	= 621,
    NLOC_B_NLOC_D_NLOC_H_NLOC_W_NLZC_B_NLZC_D_NLZC_H_NLZC_W	= 622,
    FADD_D32_FADD_D64	= 623,
    FADD_S	= 624,
    FMUL_D32_FMUL_D64	= 625,
    FMUL_S	= 626,
    FSUB_D32_FSUB_D64	= 627,
    FSUB_S	= 628,
    TRUNC_L_D64_TRUNC_L_S_TRUNC_W_D32_TRUNC_W_D64_TRUNC_W_S	= 629,
    CVT_D32_S_CVT_D32_W_CVT_D64_L_CVT_D64_S_CVT_D64_W_CVT_L_D64_CVT_L_S_CVT_S_D32_CVT_S_D64_CVT_S_L_CVT_S_W_CVT_W_D32_CVT_W_D64_CVT_W_S	= 630,
    CVT_PS_S64_CVT_S_PL64_CVT_S_PU64	= 631,
    C_EQ_D32_C_EQ_D64_C_F_D32_C_F_D64_C_LE_D32_C_LE_D64_C_LT_D32_C_LT_D64_C_NGE_D32_C_NGE_D64_C_NGLE_D32_C_NGLE_D64_C_NGL_D32_C_NGL_D64_C_NGT_D32_C_NGT_D64_C_OLE_D32_C_OLE_D64_C_OLT_D32_C_OLT_D64_C_SEQ_D32_C_SEQ_D64_C_SF_D32_C_SF_D64_C_UEQ_D32_C_UEQ_D64_C_ULE_D32_C_ULE_D64_C_ULT_D32_C_ULT_D64_C_UN_D32_C_UN_D64	= 632,
    C_EQ_S_C_F_S_C_LE_S_C_LT_S_C_NGE_S_C_NGLE_S_C_NGL_S_C_NGT_S_C_OLE_S_C_OLT_S_C_SEQ_S_C_SF_S_C_UEQ_S_C_ULE_S_C_ULT_S_C_UN_S	= 633,
    FCMP_D32_FCMP_D64	= 634,
    FCMP_S32	= 635,
    PseudoCVT_D32_W_PseudoCVT_D64_L_PseudoCVT_D64_W_PseudoCVT_S_L_PseudoCVT_S_W	= 636,
    PLL_PS64_PLU_PS64	= 637,
    FDIV_S	= 638,
    FDIV_D32_FDIV_D64	= 639,
    FSQRT_S	= 640,
    FSQRT_D32_FSQRT_D64	= 641,
    FRCP_D_FRCP_W	= 642,
    FRSQRT_D_FRSQRT_W	= 643,
    RECIP_D32_RECIP_D64	= 644,
    RSQRT_D32_RSQRT_D64	= 645,
    RECIP_S	= 646,
    RSQRT_S	= 647,
    FMADD_D_FMADD_W	= 648,
    FMSUB_D_FMSUB_W	= 649,
    FDIV_W	= 650,
    FDIV_D	= 651,
    FSQRT_W	= 652,
    FSQRT_D	= 653,
    FMUL_D_FMUL_W	= 654,
    FADD_D_FADD_W	= 655,
    FSUB_D_FSUB_W	= 656,
    DPADD_S_D_DPADD_S_H_DPADD_S_W_DPADD_U_D_DPADD_U_H_DPADD_U_W	= 657,
    DPSUB_S_D_DPSUB_S_H_DPSUB_S_W_DPSUB_U_D_DPSUB_U_H_DPSUB_U_W	= 658,
    DOTP_S_D_DOTP_S_H_DOTP_S_W_DOTP_U_D_DOTP_U_H_DOTP_U_W	= 659,
    MSUBV_B_MSUBV_D_MSUBV_H_MSUBV_W	= 660,
    MADDV_B_MADDV_D_MADDV_H_MADDV_W	= 661,
    MULV_B_MULV_D_MULV_H_MULV_W	= 662,
    MADDR_Q_H_MADDR_Q_W	= 663,
    MADD_Q_H_MADD_Q_W	= 664,
    MSUBR_Q_H_MSUBR_Q_W	= 665,
    MSUB_Q_H_MSUB_Q_W	= 666,
    MULR_Q_H_MULR_Q_W	= 667,
    MUL_Q_H_MUL_Q_W	= 668,
    MADD_D32_MADD_D64	= 669,
    MADD_S	= 670,
    MSUB_D32_MSUB_D64	= 671,
    MSUB_S	= 672,
    NMADD_D32_NMADD_D64	= 673,
    NMADD_S	= 674,
    NMSUB_D32_NMSUB_D64	= 675,
    NMSUB_S	= 676,
    CTC1	= 677,
    MTC1_MTC1_D64_BuildPairF64_BuildPairF64_64	= 678,
    MTHC1_D32_MTHC1_D64	= 679,
    COPY_U_B_COPY_U_H_COPY_U_W	= 680,
    COPY_S_B_COPY_S_D_COPY_S_H_COPY_S_W	= 681,
    BC1F	= 682,
    BC1FL	= 683,
    BC1T	= 684,
    BC1TL	= 685,
    CFC1	= 686,
    MFC1_MFC1_D64_ExtractElementF64_ExtractElementF64_64	= 687,
    MFHC1_D32_MFHC1_D64	= 688,
    MOVF_I	= 689,
    MOVT_I	= 690,
    SDC1_SDC164	= 691,
    SDXC1_SDXC164	= 692,
    SWC1	= 693,
    SWXC1	= 694,
    SUXC1_SUXC164	= 695,
    ST_B_ST_D_ST_H_ST_W	= 696,
    ST_F16	= 697,
    MOVN_I_D32_MOVN_I_D64	= 698,
    MOVN_I_S	= 699,
    MOVZ_I_D32_MOVZ_I_D64	= 700,
    MOVZ_I_S	= 701,
    LDC1_LDC164	= 702,
    LDXC1_LDXC164	= 703,
    LWC1	= 704,
    LWXC1	= 705,
    LUXC1_LUXC164	= 706,
    LD_B_LD_D_LD_H_LD_W	= 707,
    LD_F16	= 708,
    CEIL_L_D64_CEIL_L_S_CEIL_W_D32_CEIL_W_D64_CEIL_W_S	= 709,
    FLOOR_L_D64_FLOOR_L_S_FLOOR_W_D32_FLOOR_W_D64_FLOOR_W_S	= 710,
    ROUND_L_D64_ROUND_L_S_ROUND_W_D32_ROUND_W_D64_ROUND_W_S	= 711,
    ROTRV	= 712,
    ATOMIC_SWAP_I16_POSTRA_ATOMIC_SWAP_I32_POSTRA_ATOMIC_SWAP_I64_POSTRA_ATOMIC_SWAP_I8_POSTRA	= 713,
    ATOMIC_CMP_SWAP_I16_POSTRA_ATOMIC_CMP_SWAP_I32_POSTRA_ATOMIC_CMP_SWAP_I64_POSTRA_ATOMIC_CMP_SWAP_I8_POSTRA	= 714,
    ATOMIC_LOAD_ADD_I16_POSTRA_ATOMIC_LOAD_ADD_I32_POSTRA_ATOMIC_LOAD_ADD_I64_POSTRA_ATOMIC_LOAD_ADD_I8_POSTRA_ATOMIC_LOAD_AND_I16_POSTRA_ATOMIC_LOAD_AND_I32_POSTRA_ATOMIC_LOAD_AND_I64_POSTRA_ATOMIC_LOAD_AND_I8_POSTRA_ATOMIC_LOAD_MAX_I16_POSTRA_ATOMIC_LOAD_MAX_I32_POSTRA_ATOMIC_LOAD_MAX_I64_POSTRA_ATOMIC_LOAD_MAX_I8_POSTRA_ATOMIC_LOAD_MIN_I16_POSTRA_ATOMIC_LOAD_MIN_I32_POSTRA_ATOMIC_LOAD_MIN_I64_POSTRA_ATOMIC_LOAD_MIN_I8_POSTRA_ATOMIC_LOAD_NAND_I16_POSTRA_ATOMIC_LOAD_NAND_I32_POSTRA_ATOMIC_LOAD_NAND_I64_POSTRA_ATOMIC_LOAD_NAND_I8_POSTRA_ATOMIC_LOAD_OR_I16_POSTRA_ATOMIC_LOAD_OR_I32_POSTRA_ATOMIC_LOAD_OR_I64_POSTRA_ATOMIC_LOAD_OR_I8_POSTRA_ATOMIC_LOAD_SUB_I16_POSTRA_ATOMIC_LOAD_SUB_I32_POSTRA_ATOMIC_LOAD_SUB_I64_POSTRA_ATOMIC_LOAD_SUB_I8_POSTRA_ATOMIC_LOAD_UMAX_I16_POSTRA_ATOMIC_LOAD_UMAX_I32_POSTRA_ATOMIC_LOAD_UMAX_I64_POSTRA_ATOMIC_LOAD_UMAX_I8_POSTRA_ATOMIC_LOAD_UMIN_I16_POSTRA_ATOMIC_LOAD_UMIN_I32_POSTRA_ATOMIC_LOAD_UMIN_I64_POSTRA_ATOMIC_LOAD_UMIN_I8_POSTRA_ATOMIC_LOAD_XOR_I16_POSTRA_ATOMIC_LOAD_XOR_I32_POSTRA_ATOMIC_LOAD_XOR_I64_POSTRA_ATOMIC_LOAD_XOR_I8_POSTRA	= 715,
    LEA_ADDiu	= 716,
    ADDIUPC	= 717,
    ALIGN	= 718,
    ALUIPC	= 719,
    AUI	= 720,
    AUIPC	= 721,
    BITSWAP	= 722,
    CLO_R6	= 723,
    CLZ_R6	= 724,
    LSA_R6	= 725,
    SELEQZ_SELNEZ	= 726,
    AddiuRxImmX16_AddiuRxRxImm16_AddiuRxRxImmX16_AddiuRxRyOffMemX16_AddiuRxPcImmX16_AddiuSpImm16_AddiuSpImmX16_AdduRxRyRz16_AndRxRxRy16_CmpRxRy16_CmpiRxImm16_CmpiRxImmX16_LiRxImm16_LiRxImmX16_LiRxImmAlignX16_Move32R16_MoveR3216_Mfhi16_Mflo16_NegRxRy16_NotRxRy16_OrRxRxRy16_SebRx16_SehRx16_SllX16_SllvRxRy16_SltiRxImm16_SltiRxImmX16_SltiuRxImm16_SltiuRxImmX16_SltRxRy16_SltuRxRy16_SravRxRy16_SraX16_SrlvRxRy16_SrlX16_SubuRxRyRz16_XorRxRxRy16	= 727,
    SltiCCRxImmX16_SltiuCCRxImmX16_SltCCRxRy16_SltuRxRyRz16_SltuCCRxRy16	= 728,
    Constant32_LwConstant32_GotPrologue16_CONSTPOOL_ENTRY	= 729,
    ADDIUPC_MM_ADDIUR1SP_MM_ADDIUR2_MM_ADDIUS5_MM_ADDIUSP_MM_ADDiu_MM_LEA_ADDiu_MM	= 730,
    ADDU16_MM_ADDu_MM	= 731,
    ADD_MM	= 732,
    ADDi_MM	= 733,
    AND16_MM_ANDI16_MM_AND_MM	= 734,
    ANDi_MM	= 735,
    CLO_MM	= 736,
    CLZ_MM	= 737,
    EXT_MM	= 738,
    INS_MM	= 739,
    LI16_MM	= 740,
    LUi_MM	= 741,
    MOVE16_MM	= 742,
    MOVEP_MM	= 743,
    NOR_MM	= 744,
    NOT16_MM	= 745,
    OR16_MM_OR_MM	= 746,
    ORi_MM	= 747,
    ROTRV_MM	= 748,
    ROTR_MM	= 749,
    SEB_MM	= 750,
    SEH_MM	= 751,
    SLL16_MM_SLL_MM	= 752,
    SLLV_MM	= 753,
    SLT_MM_SLTu_MM	= 754,
    SLTi_MM_SLTiu_MM	= 755,
    SRAV_MM	= 756,
    SRA_MM	= 757,
    SRL16_MM_SRL_MM	= 758,
    SRLV_MM	= 759,
    SSNOP_MM	= 760,
    SUBU16_MM_SUBu_MM	= 761,
    SUB_MM	= 762,
    WSBH_MM	= 763,
    XOR16_MM_XOR_MM	= 764,
    XORi_MM	= 765,
    ADDIUPC_MMR6	= 766,
    ADDIU_MMR6	= 767,
    ADDU16_MMR6_ADDU_MMR6	= 768,
    ADD_MMR6	= 769,
    ALIGN_MMR6	= 770,
    ALUIPC_MMR6	= 771,
    AND16_MMR6_ANDI16_MMR6_AND_MMR6	= 772,
    ANDI_MMR6	= 773,
    AUIPC_MMR6	= 774,
    AUI_MMR6	= 775,
    BITSWAP_MMR6	= 776,
    CLO_MMR6	= 777,
    CLZ_MMR6	= 778,
    EXT_MMR6	= 779,
    INS_MMR6	= 780,
    LI16_MMR6	= 781,
    LSA_MMR6	= 782,
    LUI_MMR6	= 783,
    MOVE16_MMR6	= 784,
    NOR_MMR6	= 785,
    NOT16_MMR6	= 786,
    OR16_MMR6_OR_MMR6	= 787,
    ORI_MMR6	= 788,
    SELEQZ_MMR6_SELNEZ_MMR6	= 789,
    SLL16_MMR6_SLL_MMR6	= 790,
    SRL16_MMR6	= 791,
    SSNOP_MMR6	= 792,
    SUBU16_MMR6_SUBU_MMR6	= 793,
    SUB_MMR6	= 794,
    WSBH_MMR6	= 795,
    XOR16_MMR6_XOR_MMR6	= 796,
    XORI_MMR6	= 797,
    AND64_ANDi64	= 798,
    DEXT64_32	= 799,
    DSLL64_32	= 800,
    ORi64	= 801,
    SEB64	= 802,
    SEH64	= 803,
    SLL64_32_SLL64_64	= 804,
    SLT64_SLTu64	= 805,
    SLTi64_SLTiu64	= 806,
    XOR64_XORi64	= 807,
    DADD	= 808,
    DADDi	= 809,
    DADDiu	= 810,
    DADDu	= 811,
    DCLO	= 812,
    DCLZ	= 813,
    DEXT_DEXTM_DEXTU	= 814,
    DINS_DINSM_DINSU	= 815,
    DROTR	= 816,
    DROTR32	= 817,
    DROTRV	= 818,
    DSBH	= 819,
    DSHD	= 820,
    DSLL	= 821,
    DSLL32	= 822,
    DSLLV	= 823,
    DSRA	= 824,
    DSRA32	= 825,
    DSRAV	= 826,
    DSRL	= 827,
    DSRL32	= 828,
    DSRLV	= 829,
    DSUB	= 830,
    DSUBu	= 831,
    LEA_ADDiu64	= 832,
    LUi64	= 833,
    NOR64	= 834,
    OR64	= 835,
    DALIGN	= 836,
    DAHI	= 837,
    DATI	= 838,
    DAUI	= 839,
    DCLO_R6	= 840,
    DCLZ_R6	= 841,
    DBITSWAP	= 842,
    DLSA_DLSA_R6	= 843,
    SELEQZ64_SELNEZ64	= 844,
    MADD	= 845,
    MADDU	= 846,
    MSUB	= 847,
    MSUBU	= 848,
    PseudoMADD_MM	= 849,
    PseudoMADDU_MM	= 850,
    PseudoMSUB_MM	= 851,
    PseudoMSUBU_MM	= 852,
    PseudoMULT_MM	= 853,
    PseudoMULTu_MM	= 854,
    PseudoMULT	= 855,
    PseudoMULTu	= 856,
    PseudoSDIV_SDIV	= 857,
    PseudoUDIV_UDIV	= 858,
    PseudoMFHI_MM_PseudoMFLO_MM	= 859,
    PseudoMTLOHI_MM	= 860,
    MUH	= 861,
    MUHU	= 862,
    MULU	= 863,
    MUL_R6	= 864,
    MOD	= 865,
    MODU	= 866,
    MultRxRy16_MultuRxRy16_MultRxRyRz16_MultuRxRyRz16	= 867,
    DivRxRy16	= 868,
    DivuRxRy16	= 869,
    MULT_MM	= 870,
    MULTu_MM	= 871,
    MADD_MM	= 872,
    MADDU_MM	= 873,
    MSUB_MM	= 874,
    MSUBU_MM	= 875,
    MUL_MM	= 876,
    SDIV_MM_SDIV_MM_Pseudo	= 877,
    UDIV_MM_UDIV_MM_Pseudo	= 878,
    MFHI16_MM_MFLO16_MM_MFHI_MM_MFLO_MM	= 879,
    MOVF_I_MM	= 880,
    MOVT_I_MM	= 881,
    MTHI_MM_MTLO_MM	= 882,
    RDHWR_MM	= 883,
    MUHU_MMR6	= 884,
    MUH_MMR6	= 885,
    MULU_MMR6	= 886,
    MUL_MMR6	= 887,
    MODU_MMR6	= 888,
    MOD_MMR6	= 889,
    DIVU_MMR6	= 890,
    DIV_MMR6	= 891,
    RDHWR_MMR6	= 892,
    DMULU	= 893,
    DMULT_PseudoDMULT	= 894,
    DMULTu_PseudoDMULTu	= 895,
    DSDIV_PseudoDSDIV	= 896,
    DUDIV_PseudoDUDIV	= 897,
    MFHI64_MFLO64_PseudoMFHI64_PseudoMFLO64	= 898,
    PseudoMTLOHI64	= 899,
    MTHI64_MTLO64	= 900,
    RDHWR64	= 901,
    MOVN_I_I64_MOVN_I64_I_MOVN_I64_I64	= 902,
    MOVZ_I_I64_MOVZ_I64_I_MOVZ_I64_I64	= 903,
    DMUH	= 904,
    DMUHU	= 905,
    DMUL_R6	= 906,
    DDIV	= 907,
    DMOD	= 908,
    DDIVU	= 909,
    DMODU	= 910,
    BAL_BR_BLTZAL	= 911,
    BEQ_BNE	= 912,
    BGTZ_BGEZ_BLEZ_BLTZ	= 913,
    J	= 914,
    JR	= 915,
    ERet	= 916,
    BGEZAL	= 917,
    BALC	= 918,
    BEQZALC_BGEZALC_BGTZALC_BLEZALC_BLTZALC_BNEZALC	= 919,
    JIALC	= 920,
    BC	= 921,
    BC2EQZ_BC2NEZ	= 922,
    BEQC_BGEC_BGEUC_BLTC_BLTUC_BNEC_BNVC_BOVC	= 923,
    BEQZC_BGEZC_BGTZC_BLEZC_BLTZC_BNEZC	= 924,
    JIC	= 925,
    JR_HB_R6	= 926,
    SIGRIE	= 927,
    PseudoIndirectBranchR6_PseudoIndrectHazardBranchR6	= 928,
    TAILCALLR6REG_TAILCALLHBR6REG	= 929,
    SDBBP_R6	= 930,
    Bimm16_BimmX16_BeqzRxImm16_BeqzRxImmX16_BnezRxImm16_BnezRxImmX16_Bteqz16_BteqzX16_Btnez16_BtnezX16_JrRa16_JrcRa16_JrcRx16	= 931,
    BteqzT8CmpX16_BteqzT8CmpiX16_BteqzT8SltX16_BteqzT8SltuX16_BteqzT8SltiX16_BteqzT8SltiuX16_BtnezT8CmpX16_BtnezT8CmpiX16_BtnezT8SltX16_BtnezT8SltuX16_BtnezT8SltiX16_BtnezT8SltiuX16_RetRA16	= 932,
    Jal16_JalB16	= 933,
    JumpLinkReg16	= 934,
    Break16	= 935,
    SelBeqZ_SelTBteqZCmp_SelTBteqZCmpi_SelTBteqZSlt_SelTBteqZSlti_SelTBteqZSltu_SelTBteqZSltiu_SelBneZ_SelTBtneZCmp_SelTBtneZCmpi_SelTBtneZSlt_SelTBtneZSlti_SelTBtneZSltu_SelTBtneZSltiu	= 936,
    B16_MM_B_MM	= 937,
    BAL_BR_MM	= 938,
    BC1F_MM	= 939,
    BC1T_MM	= 940,
    BEQZ16_MM_BGEZ_MM_BGTZ_MM_BLEZ_MM_BLTZ_MM_BNEZ16_MM	= 941,
    BEQZC_MM_BNEZC_MM	= 942,
    BEQ_MM_BNE_MM	= 943,
    DERET_MM	= 944,
    ERET_MM	= 945,
    JR16_MM_JR_MM	= 946,
    J_MM	= 947,
    B_MM_Pseudo	= 948,
    BGEZALS_MM_BLTZALS_MM	= 949,
    BGEZAL_MM_BLTZAL_MM	= 950,
    JALR16_MM_JALR_MM	= 951,
    JALRS16_MM_JALRS_MM	= 952,
    JALS_MM	= 953,
    JALX_MM_JAL_MM	= 954,
    TAILCALLREG_MM	= 955,
    TAILCALL_MM	= 956,
    PseudoIndirectBranch_MM	= 957,
    BREAK16_MM_BREAK_MM	= 958,
    SDBBP16_MM_SDBBP_MM	= 959,
    SYSCALL_MM	= 960,
    TEQI_MM	= 961,
    TEQ_MM	= 962,
    TGEIU_MM	= 963,
    TGEI_MM	= 964,
    TGEU_MM	= 965,
    TGE_MM	= 966,
    TLTIU_MM	= 967,
    TLTI_MM	= 968,
    TLTU_MM	= 969,
    TLT_MM	= 970,
    TNEI_MM	= 971,
    TNE_MM	= 972,
    TRAP_MM	= 973,
    BC16_MMR6_BC_MMR6	= 974,
    BC1EQZC_MMR6_BC1NEZC_MMR6	= 975,
    BC2EQZC_MMR6_BC2NEZC_MMR6	= 976,
    BEQC_MMR6_BGEC_MMR6_BGEUC_MMR6_BLTC_MMR6_BLTUC_MMR6_BNEC_MMR6_BNVC_MMR6_BOVC_MMR6	= 977,
    BEQZC16_MMR6_BNEZC16_MMR6	= 978,
    BEQZC_MMR6_BGEZC_MMR6_BGTZC_MMR6_BLEZC_MMR6_BLTZC_MMR6_BNEZC_MMR6	= 979,
    DERET_MMR6	= 980,
    ERETNC_MMR6	= 981,
    JAL_MMR6	= 982,
    ERET_MMR6	= 983,
    JIC_MMR6	= 984,
    JRADDIUSP_JRCADDIUSP_MMR6	= 985,
    JRC16_MM	= 986,
    JRC16_MMR6	= 987,
    SIGRIE_MMR6	= 988,
    B_MMR6_Pseudo	= 989,
    PseudoIndirectBranch_MMR6	= 990,
    BALC_MMR6	= 991,
    BEQZALC_MMR6_BGEZALC_MMR6_BGTZALC_MMR6_BLEZALC_MMR6_BLTZALC_MMR6_BNEZALC_MMR6	= 992,
    JALRC16_MMR6	= 993,
    JALRC_HB_MMR6	= 994,
    JALRC_MMR6	= 995,
    JIALC_MMR6	= 996,
    TAILCALLREG_MMR6	= 997,
    TAILCALL_MMR6	= 998,
    BREAK16_MMR6_BREAK_MMR6	= 999,
    SDBBP_MMR6_SDBBP16_MMR6	= 1000,
    BEQ64_BNE64	= 1001,
    BGEZ64_BGTZ64_BLEZ64_BLTZ64	= 1002,
    JR64	= 1003,
    JALR64_JALR64Pseudo_JALRHB64Pseudo	= 1004,
    JALR_HB64	= 1005,
    JR_HB64	= 1006,
    TAILCALLREG64_TAILCALLREGHB64	= 1007,
    PseudoReturn64	= 1008,
    BEQC64_BGEC64_BGEUC64_BLTC64_BLTUC64_BNEC64	= 1009,
    BEQZC64_BGEZC64_BGTZC64_BLEZC64_BLTZC64_BNEZC64	= 1010,
    JIC64	= 1011,
    PseudoIndirectBranch64_PseudoIndirectHazardBranch64	= 1012,
    JIALC64	= 1013,
    JR_HB64_R6	= 1014,
    TAILCALL64R6REG_TAILCALLHB64R6REG	= 1015,
    PseudoIndirectBranch64R6_PseudoIndrectHazardBranch64R6	= 1016,
    EVP	= 1017,
    DVP	= 1018,
    TLBP_MM	= 1019,
    TLBR_MM	= 1020,
    TLBWI_MM	= 1021,
    TLBWR_MM	= 1022,
    DI_MM	= 1023,
    EI_MM	= 1024,
    EHB_MM	= 1025,
    PAUSE_MM	= 1026,
    WAIT_MM	= 1027,
    RDPGPR_MMR6	= 1028,
    WRPGPR_MMR6	= 1029,
    TLBINV_MMR6	= 1030,
    TLBINVF_MMR6	= 1031,
    MFHC0_MMR6	= 1032,
    MFC0_MMR6	= 1033,
    MFHC2_MMR6_MFC2_MMR6	= 1034,
    MTHC0_MMR6	= 1035,
    MTC0_MMR6	= 1036,
    MTHC2_MMR6_MTC2_MMR6	= 1037,
    EVP_MMR6	= 1038,
    DVP_MMR6	= 1039,
    DI_MMR6	= 1040,
    EI_MMR6	= 1041,
    EHB_MMR6	= 1042,
    PAUSE_MMR6	= 1043,
    WAIT_MMR6	= 1044,
    DMFC0	= 1045,
    DMTC0	= 1046,
    DMFC2	= 1047,
    DMTC2	= 1048,
    CFC2_MM	= 1049,
    CTC2_MM	= 1050,
    DMT	= 1051,
    DVPE	= 1052,
    EMT	= 1053,
    EVPE	= 1054,
    MFTR	= 1055,
    MTTR	= 1056,
    YIELD	= 1057,
    FORK	= 1058,
    DMFGC0	= 1059,
    DMTGC0	= 1060,
    HYPCALL_MM	= 1061,
    TLBGINVF_MM	= 1062,
    TLBGINV_MM	= 1063,
    TLBGP_MM	= 1064,
    TLBGR_MM	= 1065,
    TLBGWI_MM	= 1066,
    TLBGWR_MM	= 1067,
    MFGC0_MM	= 1068,
    MFHGC0_MM	= 1069,
    MTGC0_MM	= 1070,
    MTHGC0_MM	= 1071,
    SC_MMR6	= 1072,
    LDC2_R6	= 1073,
    LL_R6	= 1074,
    LWC2_R6	= 1075,
    SWC2_R6	= 1076,
    SDC2_R6	= 1077,
    SC_R6	= 1078,
    PREF_R6	= 1079,
    CACHE_R6	= 1080,
    GINVI	= 1081,
    GINVT	= 1082,
    LBE_MM	= 1083,
    LBuE_MM	= 1084,
    LHE_MM	= 1085,
    LHuE_MM	= 1086,
    LWE_MM	= 1087,
    LWLE_MM	= 1088,
    LWRE_MM	= 1089,
    LLE_MM	= 1090,
    SBE_MM	= 1091,
    SB_MM	= 1092,
    SHE_MM	= 1093,
    SWE_MM	= 1094,
    SWLE_MM	= 1095,
    SWRE_MM	= 1096,
    SCE_MM	= 1097,
    PREFE_MM	= 1098,
    CACHEE_MM	= 1099,
    Restore16_RestoreX16	= 1100,
    LbRxRyOffMemX16	= 1101,
    LbuRxRyOffMemX16	= 1102,
    LhRxRyOffMemX16	= 1103,
    LhuRxRyOffMemX16	= 1104,
    LwRxRyOffMemX16_LwRxSpImmX16_LwRxPcTcp16_LwRxPcTcpX16	= 1105,
    Save16_SaveX16	= 1106,
    SbRxRyOffMemX16	= 1107,
    ShRxRyOffMemX16	= 1108,
    SwRxRyOffMemX16_SwRxSpImmX16	= 1109,
    LBU16_MM_LBu_MM	= 1110,
    LB_MM	= 1111,
    LHU16_MM_LHu_MM	= 1112,
    LH_MM	= 1113,
    LL_MM	= 1114,
    LW16_MM_LWGP_MM_LWSP_MM_LW_MM	= 1115,
    LWL_MM	= 1116,
    LWM16_MM_LWM32_MM	= 1117,
    LWP_MM	= 1118,
    LWR_MM	= 1119,
    LWU_MM	= 1120,
    LWXS_MM	= 1121,
    SB16_MM	= 1122,
    SC_MM	= 1123,
    SH16_MM_SH_MM	= 1124,
    SW16_MM_SWSP_MM_SW_MM	= 1125,
    SWL_MM	= 1126,
    SWM16_MM_SWM32_MM	= 1127,
    SWM_MM	= 1128,
    SWP_MM	= 1129,
    SWR_MM	= 1130,
    PREF_MM_PREFX_MM	= 1131,
    CACHE_MM	= 1132,
    SYNC_MM	= 1133,
    SYNCI_MM	= 1134,
    GINVI_MMR6	= 1135,
    GINVT_MMR6	= 1136,
    LBU_MMR6	= 1137,
    LB_MMR6	= 1138,
    LDC2_MMR6	= 1139,
    LL_MMR6	= 1140,
    LWM16_MMR6	= 1141,
    LWC2_MMR6	= 1142,
    LWPC_MMR6	= 1143,
    LW_MMR6	= 1144,
    SB16_MMR6_SB_MMR6	= 1145,
    SDC2_MMR6	= 1146,
    SH16_MMR6_SH_MMR6	= 1147,
    SW16_MMR6_SWSP_MMR6_SW_MMR6	= 1148,
    SWC2_MMR6	= 1149,
    SWM16_MMR6	= 1150,
    SYNC_MMR6	= 1151,
    SYNCI_MMR6	= 1152,
    PREF_MMR6	= 1153,
    CACHE_MMR6	= 1154,
    LD	= 1155,
    LL64_LLD	= 1156,
    LWu	= 1157,
    LB64	= 1158,
    LBu64	= 1159,
    LH64	= 1160,
    LHu64	= 1161,
    LW64	= 1162,
    LWL64	= 1163,
    LWR64	= 1164,
    LDL	= 1165,
    LDR	= 1166,
    SD	= 1167,
    SC64_SCD	= 1168,
    SB64	= 1169,
    SH64	= 1170,
    SW64	= 1171,
    SWL64	= 1172,
    SWR64	= 1173,
    SDL	= 1174,
    SDR	= 1175,
    LWUPC	= 1176,
    LDPC	= 1177,
    LLD_R6	= 1178,
    LL64_R6	= 1179,
    SC64_R6	= 1180,
    SCD_R6	= 1181,
    CRC32B	= 1182,
    CRC32H	= 1183,
    CRC32W	= 1184,
    CRC32CB	= 1185,
    CRC32CH	= 1186,
    CRC32CW	= 1187,
    CRC32D	= 1188,
    CRC32CD	= 1189,
    BADDu	= 1190,
    BBIT0_BBIT032_BBIT1_BBIT132	= 1191,
    CINS_CINS32_CINS64_32_CINS_i32	= 1192,
    DMFC2_OCTEON	= 1193,
    DMTC2_OCTEON	= 1194,
    DPOP_POP	= 1195,
    EXTS_EXTS32	= 1196,
    MTM0_MTM1_MTM2_MTP0_MTP1_MTP2	= 1197,
    SEQ_SNE	= 1198,
    SEQi_SNEi	= 1199,
    V3MULU_VMM0_VMULU	= 1200,
    DMUL	= 1201,
    SAA_SAAD	= 1202,
    PseudoTRUNC_W_D_PseudoTRUNC_W_D32_PseudoTRUNC_W_S	= 1203,
    MOVT_I64	= 1204,
    MOVF_I64	= 1205,
    MOVZ_I64_S	= 1206,
    MOVN_I64_D64	= 1207,
    MOVN_I64_S	= 1208,
    MOVZ_I64_D64	= 1209,
    SELEQZ_S_SELNEZ_S	= 1210,
    SELEQZ_D_SELNEZ_D	= 1211,
    MAX_S_MAXA_S	= 1212,
    MAX_D_MAXA_D	= 1213,
    MIN_S_MINA_D	= 1214,
    MIN_D_MINA_S	= 1215,
    CLASS_S	= 1216,
    CLASS_D	= 1217,
    RINT_S	= 1218,
    RINT_D	= 1219,
    BC1EQZ_BC1NEZ	= 1220,
    SEL_D	= 1221,
    SEL_S	= 1222,
    MADDF_S	= 1223,
    MSUBF_S	= 1224,
    MADDF_D	= 1225,
    MSUBF_D	= 1226,
    MOVF_D32_MM	= 1227,
    MOVF_S_MM	= 1228,
    MOVN_I_D32_MM	= 1229,
    MOVN_I_S_MM	= 1230,
    MOVT_D32_MM	= 1231,
    MOVT_S_MM	= 1232,
    MOVZ_I_D32_MM	= 1233,
    MOVZ_I_S_MM	= 1234,
    CVT_D32_S_MM_CVT_D32_W_MM_CVT_D64_S_MM_CVT_D64_W_MM_CVT_L_D64_MM_CVT_L_S_MM_CVT_S_D32_MM_CVT_S_D64_MM_CVT_S_W_MM_CVT_W_D32_MM_CVT_W_D64_MM_CVT_W_S_MM	= 1235,
    CEIL_W_MM_CEIL_W_S_MM	= 1236,
    FLOOR_W_MM_FLOOR_W_S_MM	= 1237,
    NMADD_S_MM	= 1238,
    NMADD_D32_MM	= 1239,
    NMSUB_S_MM	= 1240,
    NMSUB_D32_MM	= 1241,
    MADD_S_MM	= 1242,
    MADD_D32_MM	= 1243,
    ROUND_W_MM_ROUND_W_S_MM	= 1244,
    TRUNC_W_MM_TRUNC_W_S_MM	= 1245,
    C_F_D32_MM_C_F_D64_MM	= 1246,
    C_F_S_MM	= 1247,
    C_EQ_D32_MM_C_EQ_D64_MM_C_LE_D32_MM_C_LE_D64_MM_C_LT_D32_MM_C_LT_D64_MM_C_SF_D32_MM_C_SF_D64_MM_C_UN_D32_MM_C_UN_D64_MM	= 1248,
    C_EQ_S_MM_C_LE_S_MM_C_LT_S_MM_C_SF_S_MM_C_UN_S_MM	= 1249,
    C_NGE_D32_MM_C_NGE_D64_MM_C_NGL_D32_MM_C_NGL_D64_MM_C_NGT_D32_MM_C_NGT_D64_MM_C_OLE_D32_MM_C_OLE_D64_MM_C_OLT_D32_MM_C_OLT_D64_MM_C_SEQ_D32_MM_C_SEQ_D64_MM_C_UEQ_D32_MM_C_UEQ_D64_MM_C_ULE_D32_MM_C_ULE_D64_MM_C_ULT_D32_MM_C_ULT_D64_MM	= 1250,
    C_NGE_S_MM_C_NGL_S_MM_C_NGT_S_MM_C_OLE_S_MM_C_OLT_S_MM_C_SEQ_S_MM_C_UEQ_S_MM_C_ULE_S_MM_C_ULT_S_MM	= 1251,
    C_NGLE_D32_MM_C_NGLE_D64_MM	= 1252,
    C_NGLE_S_MM	= 1253,
    FCMP_S32_MM	= 1254,
    FCMP_D32_MM	= 1255,
    MFC1_MM	= 1256,
    MFHC1_D32_MM_MFHC1_D64_MM	= 1257,
    MTC1_MM_MTC1_D64_MM	= 1258,
    MTHC1_D32_MM_MTHC1_D64_MM	= 1259,
    FABS_D32_MM_FABS_D64_MM	= 1260,
    FABS_S_MM	= 1261,
    FNEG_D32_MM_FNEG_D64_MM_FNEG_S_MM	= 1262,
    FADD_D32_MM_FADD_D64_MM	= 1263,
    FADD_S_MM	= 1264,
    FMOV_D32_MM_FMOV_D64_MM	= 1265,
    FMOV_S_MM	= 1266,
    FMUL_D32_MM_FMUL_D64_MM	= 1267,
    FMUL_S_MM	= 1268,
    FSUB_D32_MM_FSUB_D64_MM	= 1269,
    FSUB_S_MM	= 1270,
    MSUB_S_MM	= 1271,
    MSUB_D32_MM	= 1272,
    FDIV_S_MM	= 1273,
    FDIV_D32_MM_FDIV_D64_MM	= 1274,
    FSQRT_S_MM	= 1275,
    FSQRT_D32_MM_FSQRT_D64_MM	= 1276,
    RECIP_S_MM_RSQRT_S_MM	= 1277,
    RECIP_D32_MM_RECIP_D64_MM_RSQRT_D32_MM_RSQRT_D64_MM	= 1278,
    SDC1_MM	= 1279,
    SWC1_MM	= 1280,
    SUXC1_MM	= 1281,
    SWXC1_MM	= 1282,
    CFC1_MM	= 1283,
    CTC1_MM	= 1284,
    LDC1_MM	= 1285,
    LUXC1_MM	= 1286,
    LWC1_MM	= 1287,
    LWXC1_MM	= 1288,
    FNEG_S_MMR6	= 1289,
    CMP_AF_D_MMR6_CMP_EQ_D_MMR6_CMP_LE_D_MMR6_CMP_LT_D_MMR6_CMP_UN_D_MMR6	= 1290,
    CMP_AF_S_MMR6_CMP_EQ_S_MMR6_CMP_LE_S_MMR6_CMP_LT_S_MMR6_CMP_UN_S_MMR6	= 1291,
    CMP_SAF_D_MMR6_CMP_SEQ_D_MMR6_CMP_SLE_D_MMR6_CMP_SLT_D_MMR6_CMP_SUN_D_MMR6_CMP_UEQ_D_MMR6_CMP_ULE_D_MMR6_CMP_ULT_D_MMR6	= 1292,
    CMP_SAF_S_MMR6_CMP_SEQ_S_MMR6_CMP_SLE_S_MMR6_CMP_SLT_S_MMR6_CMP_SUN_S_MMR6_CMP_UEQ_S_MMR6_CMP_ULE_S_MMR6_CMP_ULT_S_MMR6	= 1293,
    CMP_SUEQ_D_MMR6_CMP_SULE_D_MMR6_CMP_SULT_D_MMR6	= 1294,
    CMP_SUEQ_S_MMR6_CMP_SULE_S_MMR6_CMP_SULT_S_MMR6	= 1295,
    CVT_D_L_MMR6_CVT_L_D_MMR6_CVT_L_S_MMR6_CVT_S_L_MMR6_CVT_S_W_MMR6_CVT_W_S_MMR6	= 1296,
    TRUNC_L_D_MMR6_TRUNC_L_S_MMR6_TRUNC_W_D_MMR6_TRUNC_W_S_MMR6	= 1297,
    ROUND_L_D_MMR6_ROUND_L_S_MMR6_ROUND_W_D_MMR6_ROUND_W_S_MMR6	= 1298,
    FLOOR_L_D_MMR6_FLOOR_L_S_MMR6_FLOOR_W_D_MMR6_FLOOR_W_S_MMR6	= 1299,
    CEIL_L_D_MMR6_CEIL_L_S_MMR6_CEIL_W_D_MMR6_CEIL_W_S_MMR6	= 1300,
    MFC1_MMR6	= 1301,
    MTC1_MMR6	= 1302,
    CLASS_S_MMR6_CLASS_D_MMR6	= 1303,
    FADD_S_MMR6	= 1304,
    MAX_D_MMR6	= 1305,
    MAX_S_MMR6	= 1306,
    MIN_D_MMR6	= 1307,
    MIN_S_MMR6	= 1308,
    MAXA_D_MMR6	= 1309,
    MAXA_S_MMR6	= 1310,
    MINA_D_MMR6	= 1311,
    MINA_S_MMR6	= 1312,
    SELEQZ_D_MMR6_SELNEZ_D_MMR6	= 1313,
    SELEQZ_S_MMR6_SELNEZ_S_MMR6	= 1314,
    SEL_D_MMR6	= 1315,
    SEL_S_MMR6	= 1316,
    RINT_S_MMR6_RINT_D_MMR6	= 1317,
    MADDF_D_MMR6	= 1318,
    MADDF_S_MMR6	= 1319,
    MSUBF_D_MMR6	= 1320,
    MSUBF_S_MMR6	= 1321,
    FMOV_S_MMR6	= 1322,
    FMUL_S_MMR6	= 1323,
    FSUB_S_MMR6	= 1324,
    FMOV_D_MMR6	= 1325,
    FDIV_S_MMR6	= 1326,
    SDC1_D64_MMR6	= 1327,
    LDC1_D64_MMR6	= 1328,
    DMFC1	= 1329,
    DMTC1	= 1330,
    SWDSP	= 1331,
    LWDSP	= 1332,
    PseudoMTLOHI_DSP	= 1333,
    EXTRV_RS_W	= 1334,
    EXTRV_R_W	= 1335,
    EXTRV_S_H	= 1336,
    EXTRV_W	= 1337,
    EXTR_RS_W	= 1338,
    EXTR_R_W	= 1339,
    EXTR_S_H	= 1340,
    EXTR_W	= 1341,
    INSV	= 1342,
    MTHLIP	= 1343,
    MTHI_DSP	= 1344,
    MTLO_DSP	= 1345,
    ABSQ_S_PH	= 1346,
    ABSQ_S_W	= 1347,
    ADDQ_PH	= 1348,
    ADDQ_S_PH	= 1349,
    ADDQ_S_W	= 1350,
    ADDSC	= 1351,
    ADDU_QB	= 1352,
    ADDU_S_QB	= 1353,
    ADDWC	= 1354,
    BITREV	= 1355,
    BPOSGE32	= 1356,
    CMPGU_EQ_QB	= 1357,
    CMPGU_LE_QB	= 1358,
    CMPGU_LT_QB	= 1359,
    CMPU_EQ_QB	= 1360,
    CMPU_LE_QB	= 1361,
    CMPU_LT_QB	= 1362,
    CMP_EQ_PH	= 1363,
    CMP_LE_PH	= 1364,
    CMP_LT_PH	= 1365,
    DPAQ_SA_L_W	= 1366,
    DPAQ_S_W_PH	= 1367,
    DPAU_H_QBL	= 1368,
    DPAU_H_QBR	= 1369,
    DPSQ_SA_L_W	= 1370,
    DPSQ_S_W_PH	= 1371,
    DPSU_H_QBL	= 1372,
    DPSU_H_QBR	= 1373,
    EXTPDPV	= 1374,
    EXTPDP	= 1375,
    EXTPV	= 1376,
    EXTP	= 1377,
    LBUX	= 1378,
    LHX	= 1379,
    LWX	= 1380,
    MADDU_DSP	= 1381,
    MADD_DSP	= 1382,
    MAQ_SA_W_PHL	= 1383,
    MAQ_SA_W_PHR	= 1384,
    MAQ_S_W_PHL	= 1385,
    MAQ_S_W_PHR	= 1386,
    MFHI_DSP	= 1387,
    MFLO_DSP	= 1388,
    MODSUB	= 1389,
    MSUBU_DSP	= 1390,
    MSUB_DSP	= 1391,
    MULEQ_S_W_PHL	= 1392,
    MULEQ_S_W_PHR	= 1393,
    MULEU_S_PH_QBL	= 1394,
    MULEU_S_PH_QBR	= 1395,
    MULQ_RS_PH	= 1396,
    MULSAQ_S_W_PH	= 1397,
    MULTU_DSP	= 1398,
    MULT_DSP	= 1399,
    PACKRL_PH	= 1400,
    PICK_PH	= 1401,
    PICK_QB	= 1402,
    PRECEQU_PH_QBLA	= 1403,
    PRECEQU_PH_QBL	= 1404,
    PRECEQU_PH_QBRA	= 1405,
    PRECEQU_PH_QBR	= 1406,
    PRECEQ_W_PHL	= 1407,
    PRECEQ_W_PHR	= 1408,
    PRECEU_PH_QBLA	= 1409,
    PRECEU_PH_QBL	= 1410,
    PRECEU_PH_QBRA	= 1411,
    PRECEU_PH_QBR	= 1412,
    PRECRQU_S_QB_PH	= 1413,
    PRECRQ_PH_W	= 1414,
    PRECRQ_QB_PH	= 1415,
    PRECRQ_RS_PH_W	= 1416,
    RADDU_W_QB	= 1417,
    RDDSP	= 1418,
    REPLV_PH	= 1419,
    REPLV_QB	= 1420,
    REPL_PH	= 1421,
    REPL_QB	= 1422,
    SHILOV	= 1423,
    SHILO	= 1424,
    SHLLV_PH	= 1425,
    SHLLV_QB	= 1426,
    SHLLV_S_PH	= 1427,
    SHLLV_S_W	= 1428,
    SHLL_PH	= 1429,
    SHLL_QB	= 1430,
    SHLL_S_PH	= 1431,
    SHLL_S_W	= 1432,
    SHRAV_PH	= 1433,
    SHRAV_R_PH	= 1434,
    SHRAV_R_W	= 1435,
    SHRA_PH	= 1436,
    SHRA_R_PH	= 1437,
    SHRA_R_W	= 1438,
    SHRLV_QB	= 1439,
    SHRL_QB	= 1440,
    SUBQ_PH	= 1441,
    SUBQ_S_PH	= 1442,
    SUBQ_S_W	= 1443,
    SUBU_QB	= 1444,
    SUBU_S_QB	= 1445,
    WRDSP	= 1446,
    PseudoCMPU_EQ_QB_PseudoCMPU_LE_QB_PseudoCMPU_LT_QB_PseudoCMP_EQ_PH_PseudoCMP_LE_PH_PseudoCMP_LT_PH	= 1447,
    PseudoPICK_PH_PseudoPICK_QB	= 1448,
    ABSQ_S_QB	= 1449,
    ADDQH_PH	= 1450,
    ADDQH_R_PH	= 1451,
    ADDQH_R_W	= 1452,
    ADDQH_W	= 1453,
    ADDUH_QB	= 1454,
    ADDUH_R_QB	= 1455,
    ADDU_PH	= 1456,
    ADDU_S_PH	= 1457,
    APPEND	= 1458,
    BALIGN	= 1459,
    CMPGDU_EQ_QB	= 1460,
    CMPGDU_LE_QB	= 1461,
    CMPGDU_LT_QB	= 1462,
    DPA_W_PH	= 1463,
    DPAQX_SA_W_PH	= 1464,
    DPAQX_S_W_PH	= 1465,
    DPAX_W_PH	= 1466,
    DPS_W_PH	= 1467,
    DPSQX_S_W_PH	= 1468,
    DPSQX_SA_W_PH	= 1469,
    DPSX_W_PH	= 1470,
    MUL_PH	= 1471,
    MUL_S_PH	= 1472,
    MULQ_RS_W	= 1473,
    MULQ_S_PH	= 1474,
    MULQ_S_W	= 1475,
    MULSA_W_PH	= 1476,
    PRECR_QB_PH	= 1477,
    PRECR_SRA_PH_W	= 1478,
    PRECR_SRA_R_PH_W	= 1479,
    PREPEND	= 1480,
    SHRA_QB	= 1481,
    SHRA_R_QB	= 1482,
    SHRAV_QB	= 1483,
    SHRAV_R_QB	= 1484,
    SHRL_PH	= 1485,
    SHRLV_PH	= 1486,
    SUBQH_PH	= 1487,
    SUBQH_R_PH	= 1488,
    SUBQH_W	= 1489,
    SUBQH_R_W	= 1490,
    SUBU_PH	= 1491,
    SUBU_S_PH	= 1492,
    SUBUH_QB	= 1493,
    SUBUH_R_QB	= 1494,
    LWDSP_MM	= 1495,
    SWDSP_MM	= 1496,
    ABSQ_S_PH_MM	= 1497,
    ABSQ_S_W_MM	= 1498,
    ADDQ_PH_MM	= 1499,
    ADDQ_S_PH_MM	= 1500,
    ADDQ_S_W_MM	= 1501,
    ADDSC_MM	= 1502,
    ADDU_QB_MM	= 1503,
    ADDU_S_QB_MM	= 1504,
    ADDWC_MM	= 1505,
    BITREV_MM	= 1506,
    BPOSGE32_MM	= 1507,
    CMPGU_EQ_QB_MM	= 1508,
    CMPGU_LE_QB_MM	= 1509,
    CMPGU_LT_QB_MM	= 1510,
    CMPU_EQ_QB_MM	= 1511,
    CMPU_LE_QB_MM	= 1512,
    CMPU_LT_QB_MM	= 1513,
    CMP_EQ_PH_MM	= 1514,
    CMP_LE_PH_MM	= 1515,
    CMP_LT_PH_MM	= 1516,
    DPAQ_SA_L_W_MM	= 1517,
    DPAQ_S_W_PH_MM	= 1518,
    DPAU_H_QBL_MM	= 1519,
    DPAU_H_QBR_MM	= 1520,
    DPSQ_SA_L_W_MM	= 1521,
    DPSQ_S_W_PH_MM	= 1522,
    DPSU_H_QBL_MM	= 1523,
    DPSU_H_QBR_MM	= 1524,
    EXTPDPV_MM	= 1525,
    EXTPDP_MM	= 1526,
    EXTPV_MM	= 1527,
    EXTP_MM	= 1528,
    EXTRV_RS_W_MM	= 1529,
    EXTRV_R_W_MM	= 1530,
    EXTRV_S_H_MM	= 1531,
    EXTRV_W_MM	= 1532,
    EXTR_RS_W_MM	= 1533,
    EXTR_R_W_MM	= 1534,
    EXTR_S_H_MM	= 1535,
    EXTR_W_MM	= 1536,
    INSV_MM	= 1537,
    LBUX_MM	= 1538,
    LHX_MM	= 1539,
    LWX_MM	= 1540,
    MADDU_DSP_MM	= 1541,
    MADD_DSP_MM	= 1542,
    MAQ_SA_W_PHL_MM	= 1543,
    MAQ_SA_W_PHR_MM	= 1544,
    MAQ_S_W_PHL_MM	= 1545,
    MAQ_S_W_PHR_MM	= 1546,
    MFHI_DSP_MM	= 1547,
    MFLO_DSP_MM	= 1548,
    MODSUB_MM	= 1549,
    MOVEP_MMR6	= 1550,
    MOVN_I_MM	= 1551,
    MOVZ_I_MM	= 1552,
    MSUBU_DSP_MM	= 1553,
    MSUB_DSP_MM	= 1554,
    MTHI_DSP_MM	= 1555,
    MTHLIP_MM	= 1556,
    MTLO_DSP_MM	= 1557,
    MULEQ_S_W_PHL_MM	= 1558,
    MULEQ_S_W_PHR_MM	= 1559,
    MULEU_S_PH_QBL_MM	= 1560,
    MULEU_S_PH_QBR_MM	= 1561,
    MULQ_RS_PH_MM	= 1562,
    MULSAQ_S_W_PH_MM	= 1563,
    MULTU_DSP_MM	= 1564,
    MULT_DSP_MM	= 1565,
    PACKRL_PH_MM	= 1566,
    PICK_PH_MM	= 1567,
    PICK_QB_MM	= 1568,
    PRECEQU_PH_QBLA_MM	= 1569,
    PRECEQU_PH_QBL_MM	= 1570,
    PRECEQU_PH_QBRA_MM	= 1571,
    PRECEQU_PH_QBR_MM	= 1572,
    PRECEQ_W_PHL_MM	= 1573,
    PRECEQ_W_PHR_MM	= 1574,
    PRECEU_PH_QBLA_MM	= 1575,
    PRECEU_PH_QBL_MM	= 1576,
    PRECEU_PH_QBRA_MM	= 1577,
    PRECEU_PH_QBR_MM	= 1578,
    PRECRQU_S_QB_PH_MM	= 1579,
    PRECRQ_PH_W_MM	= 1580,
    PRECRQ_QB_PH_MM	= 1581,
    PRECRQ_RS_PH_W_MM	= 1582,
    RADDU_W_QB_MM	= 1583,
    RDDSP_MM	= 1584,
    REPLV_PH_MM	= 1585,
    REPLV_QB_MM	= 1586,
    REPL_PH_MM	= 1587,
    REPL_QB_MM	= 1588,
    SHILOV_MM	= 1589,
    SHILO_MM	= 1590,
    SHLLV_PH_MM	= 1591,
    SHLLV_QB_MM	= 1592,
    SHLLV_S_PH_MM	= 1593,
    SHLLV_S_W_MM	= 1594,
    SHLL_PH_MM	= 1595,
    SHLL_QB_MM	= 1596,
    SHLL_S_PH_MM	= 1597,
    SHLL_S_W_MM	= 1598,
    SHRAV_PH_MM	= 1599,
    SHRAV_R_PH_MM	= 1600,
    SHRAV_R_W_MM	= 1601,
    SHRA_PH_MM	= 1602,
    SHRA_R_PH_MM	= 1603,
    SHRA_R_W_MM	= 1604,
    SHRLV_QB_MM	= 1605,
    SHRL_QB_MM	= 1606,
    SUBQ_PH_MM	= 1607,
    SUBQ_S_PH_MM	= 1608,
    SUBQ_S_W_MM	= 1609,
    SUBU_QB_MM	= 1610,
    SUBU_S_QB_MM	= 1611,
    WRDSP_MM	= 1612,
    ABSQ_S_QB_MMR2	= 1613,
    ADDQH_PH_MMR2	= 1614,
    ADDQH_R_PH_MMR2	= 1615,
    ADDQH_R_W_MMR2	= 1616,
    ADDQH_W_MMR2	= 1617,
    ADDUH_QB_MMR2	= 1618,
    ADDUH_R_QB_MMR2	= 1619,
    ADDU_PH_MMR2	= 1620,
    ADDU_S_PH_MMR2	= 1621,
    APPEND_MMR2	= 1622,
    BALIGN_MMR2	= 1623,
    CMPGDU_EQ_QB_MMR2	= 1624,
    CMPGDU_LE_QB_MMR2	= 1625,
    CMPGDU_LT_QB_MMR2	= 1626,
    DPA_W_PH_MMR2	= 1627,
    DPAQX_SA_W_PH_MMR2	= 1628,
    DPAQX_S_W_PH_MMR2	= 1629,
    DPAX_W_PH_MMR2	= 1630,
    DPS_W_PH_MMR2	= 1631,
    DPSQX_S_W_PH_MMR2	= 1632,
    DPSQX_SA_W_PH_MMR2	= 1633,
    DPSX_W_PH_MMR2	= 1634,
    MUL_PH_MMR2	= 1635,
    MUL_S_PH_MMR2	= 1636,
    MULQ_RS_W_MMR2	= 1637,
    MULQ_S_PH_MMR2	= 1638,
    MULQ_S_W_MMR2	= 1639,
    MULSA_W_PH_MMR2	= 1640,
    PRECR_QB_PH_MMR2	= 1641,
    PRECR_SRA_PH_W_MMR2	= 1642,
    PRECR_SRA_R_PH_W_MMR2	= 1643,
    PREPEND_MMR2	= 1644,
    SHRA_QB_MMR2	= 1645,
    SHRA_R_QB_MMR2	= 1646,
    SHRAV_QB_MMR2	= 1647,
    SHRAV_R_QB_MMR2	= 1648,
    SHRL_PH_MMR2	= 1649,
    SHRLV_PH_MMR2	= 1650,
    SUBQH_PH_MMR2	= 1651,
    SUBQH_R_PH_MMR2	= 1652,
    SUBQH_W_MMR2	= 1653,
    SUBQH_R_W_MMR2	= 1654,
    SUBU_PH_MMR2	= 1655,
    SUBU_S_PH_MMR2	= 1656,
    SUBUH_QB_MMR2	= 1657,
    SUBUH_R_QB_MMR2	= 1658,
    BPOSGE32C_MMR3	= 1659,
    CMP_F_D	= 1660,
    CMP_F_S	= 1661,
    CMP_SAF_D	= 1662,
    CMP_SAF_S	= 1663,
    CMP_SEQ_D	= 1664,
    CMP_SEQ_S	= 1665,
    CMP_SLE_D	= 1666,
    CMP_SLE_S	= 1667,
    CMP_SLT_D	= 1668,
    CMP_SLT_S	= 1669,
    CMP_SUEQ_D	= 1670,
    CMP_SUEQ_S	= 1671,
    CMP_SULE_D	= 1672,
    CMP_SULE_S	= 1673,
    CMP_SULT_D	= 1674,
    CMP_SULT_S	= 1675,
    CMP_SUN_D	= 1676,
    CMP_SUN_S	= 1677,
    SCHED_LIST_END = 1678
  };
} // end namespace Sched
} // end namespace Mips
} // end namespace llvm
#endif // GET_INSTRINFO_SCHED_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { Mips::SP, 0 };
static const MCPhysReg ImplicitList2[] = { Mips::AT, 0 };
static const MCPhysReg ImplicitList3[] = { Mips::RA, 0 };
static const MCPhysReg ImplicitList4[] = { Mips::DSPPos, 0 };
static const MCPhysReg ImplicitList5[] = { Mips::V0, Mips::V1, 0 };
static const MCPhysReg ImplicitList6[] = { Mips::HI0, Mips::LO0, 0 };
static const MCPhysReg ImplicitList7[] = { Mips::T8, 0 };
static const MCPhysReg ImplicitList8[] = { Mips::DSPOutFlag20, 0 };
static const MCPhysReg ImplicitList9[] = { Mips::DSPCarry, 0 };
static const MCPhysReg ImplicitList10[] = { Mips::DSPCCond, 0 };
static const MCPhysReg ImplicitList11[] = { Mips::HI0, Mips::LO0, Mips::P0, Mips::P1, Mips::P2, 0 };
static const MCPhysReg ImplicitList12[] = { Mips::HI0_64, Mips::LO0_64, 0 };
static const MCPhysReg ImplicitList13[] = { Mips::DSPOutFlag16_19, 0 };
static const MCPhysReg ImplicitList14[] = { Mips::DSPEFI, 0 };
static const MCPhysReg ImplicitList15[] = { Mips::DSPPos, Mips::DSPEFI, 0 };
static const MCPhysReg ImplicitList16[] = { Mips::DSPOutFlag23, 0 };
static const MCPhysReg ImplicitList17[] = { Mips::FCC0, 0 };
static const MCPhysReg ImplicitList18[] = { Mips::DSPPos, Mips::DSPSCount, 0 };
static const MCPhysReg ImplicitList19[] = { Mips::AC0, 0 };
static const MCPhysReg ImplicitList20[] = { Mips::AC0_64, 0 };
static const MCPhysReg ImplicitList21[] = { Mips::HI0, 0 };
static const MCPhysReg ImplicitList22[] = { Mips::HI0_64, 0 };
static const MCPhysReg ImplicitList23[] = { Mips::LO0, 0 };
static const MCPhysReg ImplicitList24[] = { Mips::LO0_64, 0 };
static const MCPhysReg ImplicitList25[] = { Mips::MPL0, Mips::P0, Mips::P1, Mips::P2, 0 };
static const MCPhysReg ImplicitList26[] = { Mips::MPL1, Mips::P0, Mips::P1, Mips::P2, 0 };
static const MCPhysReg ImplicitList27[] = { Mips::MPL2, Mips::P0, Mips::P1, Mips::P2, 0 };
static const MCPhysReg ImplicitList28[] = { Mips::P0, 0 };
static const MCPhysReg ImplicitList29[] = { Mips::P1, 0 };
static const MCPhysReg ImplicitList30[] = { Mips::P2, 0 };
static const MCPhysReg ImplicitList31[] = { Mips::DSPOutFlag21, 0 };
static const MCPhysReg ImplicitList32[] = { Mips::DSPOutFlag22, 0 };
static const MCPhysReg ImplicitList33[] = { Mips::P0, Mips::P1, Mips::P2, 0 };
static const MCPhysReg ImplicitList34[] = { Mips::MPL1, Mips::MPL2, Mips::P0, Mips::P1, Mips::P2, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGRCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { Mips::FGRCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { Mips::MSA128F16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { Mips::ACC128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::COP0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128F16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128F16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { Mips::MSA128F16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { Mips::MSA128F16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { Mips::COP0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { Mips::ACC128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo130[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { Mips::GPR32NONZERORegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo171[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo172[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsPlusSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CCRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSACtrlRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { Mips::FGRCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { Mips::FGRCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { Mips::CCRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { Mips::MSACtrlRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo221[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::COP0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { Mips::COP0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo233[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo239[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo240[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo241[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo242[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo243[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo244[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo245[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo246[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo247[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo248[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo249[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo250[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo251[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo252[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo253[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo254[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo255[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo256[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo257[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo258[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo259[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo260[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo261[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo262[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo263[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo264[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo265[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo266[] = { { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo267[] = { { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo268[] = { { Mips::COP3RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo269[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo270[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo271[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo272[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo273[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo274[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo275[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo276[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo277[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo278[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo279[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo280[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MipsII::OPERAND_MEM_SIMM9, 0 }, { -1, 0, MipsII::OPERAND_MEM_SIMM9, 0 }, };
static const MCOperandInfo OperandInfo281[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MipsII::OPERAND_MEM_SIMM9, 0 }, { -1, 0, MipsII::OPERAND_MEM_SIMM9, 0 }, };
static const MCOperandInfo OperandInfo282[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo283[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo284[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 3, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo285[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo286[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo287[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo288[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo289[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo290[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo291[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo292[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo293[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo294[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo295[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo296[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo297[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo298[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo299[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo300[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo301[] = { { Mips::GPRMM16MovePPairFirstRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16MovePPairSecondRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16MovePRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16MovePRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo302[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo303[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo304[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo305[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo306[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo307[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo308[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo309[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo310[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo311[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo312[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo313[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo314[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo315[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo316[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo317[] = { { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo318[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo319[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo320[] = { { Mips::HI32DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo321[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo322[] = { { Mips::LO32DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo323[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo324[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo325[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo326[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo327[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo328[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo329[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo330[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo331[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::HWRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo332[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::HWRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo333[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo334[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo335[] = { { Mips::GPRMM16ZeroRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo336[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo337[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MipsII::OPERAND_MEM_SIMM9, 0 }, { -1, 0, MipsII::OPERAND_MEM_SIMM9, 0 }, };
static const MCOperandInfo OperandInfo338[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo339[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MipsII::OPERAND_MEM_SIMM9, 0 }, { -1, 0, MipsII::OPERAND_MEM_SIMM9, 0 }, };
static const MCOperandInfo OperandInfo340[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGRCCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo341[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo342[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo343[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo344[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo345[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo346[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo347[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo348[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo349[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo350[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo351[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo352[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo353[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo354[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo355[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };

extern const MCInstrDesc MipsInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1 = INLINEASM
  { 2,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2 = INLINEASM_BR
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #3 = CFI_INSTRUCTION
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #4 = EH_LABEL
  { 5,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #5 = GC_LABEL
  { 6,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #6 = ANNOTATION_LABEL
  { 7,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #7 = KILL
  { 8,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #8 = EXTRACT_SUBREG
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #9 = INSERT_SUBREG
  { 10,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #10 = IMPLICIT_DEF
  { 11,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6, -1 ,nullptr },  // Inst #11 = SUBREG_TO_REG
  { 12,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #12 = COPY_TO_REGCLASS
  { 13,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #13 = DBG_VALUE
  { 14,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #14 = DBG_LABEL
  { 15,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #15 = REG_SEQUENCE
  { 16,	2,	1,	0,	509,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #16 = COPY
  { 17,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #17 = BUNDLE
  { 18,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #18 = LIFETIME_START
  { 19,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #19 = LIFETIME_END
  { 20,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8, -1 ,nullptr },  // Inst #20 = STACKMAP
  { 21,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #21 = FENTRY_CALL
  { 22,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9, -1 ,nullptr },  // Inst #22 = PATCHPOINT
  { 23,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #23 = LOAD_STACK_GUARD
  { 24,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #24 = STATEPOINT
  { 25,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #25 = LOCAL_ESCAPE
  { 26,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #26 = FAULTING_OP
  { 27,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #27 = PATCHABLE_OP
  { 28,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #28 = PATCHABLE_FUNCTION_ENTER
  { 29,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #29 = PATCHABLE_RET
  { 30,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #30 = PATCHABLE_FUNCTION_EXIT
  { 31,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #31 = PATCHABLE_TAIL_CALL
  { 32,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #32 = PATCHABLE_EVENT_CALL
  { 33,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #33 = PATCHABLE_TYPED_EVENT_CALL
  { 34,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #34 = ICALL_BRANCH_FUNNEL
  { 35,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #35 = G_ADD
  { 36,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #36 = G_SUB
  { 37,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #37 = G_MUL
  { 38,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #38 = G_SDIV
  { 39,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #39 = G_UDIV
  { 40,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #40 = G_SREM
  { 41,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #41 = G_UREM
  { 42,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #42 = G_AND
  { 43,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #43 = G_OR
  { 44,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #44 = G_XOR
  { 45,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #45 = G_IMPLICIT_DEF
  { 46,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #46 = G_PHI
  { 47,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #47 = G_FRAME_INDEX
  { 48,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #48 = G_GLOBAL_VALUE
  { 49,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #49 = G_EXTRACT
  { 50,	2,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #50 = G_UNMERGE_VALUES
  { 51,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #51 = G_INSERT
  { 52,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #52 = G_MERGE_VALUES
  { 53,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #53 = G_BUILD_VECTOR
  { 54,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #54 = G_BUILD_VECTOR_TRUNC
  { 55,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #55 = G_CONCAT_VECTORS
  { 56,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #56 = G_PTRTOINT
  { 57,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #57 = G_INTTOPTR
  { 58,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #58 = G_BITCAST
  { 59,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #59 = G_INTRINSIC_TRUNC
  { 60,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #60 = G_INTRINSIC_ROUND
  { 61,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #61 = G_READCYCLECOUNTER
  { 62,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #62 = G_LOAD
  { 63,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #63 = G_SEXTLOAD
  { 64,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #64 = G_ZEXTLOAD
  { 65,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #65 = G_INDEXED_LOAD
  { 66,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #66 = G_INDEXED_SEXTLOAD
  { 67,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #67 = G_INDEXED_ZEXTLOAD
  { 68,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #68 = G_STORE
  { 69,	5,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #69 = G_INDEXED_STORE
  { 70,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #70 = G_ATOMIC_CMPXCHG_WITH_SUCCESS
  { 71,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #71 = G_ATOMIC_CMPXCHG
  { 72,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #72 = G_ATOMICRMW_XCHG
  { 73,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #73 = G_ATOMICRMW_ADD
  { 74,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #74 = G_ATOMICRMW_SUB
  { 75,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #75 = G_ATOMICRMW_AND
  { 76,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #76 = G_ATOMICRMW_NAND
  { 77,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #77 = G_ATOMICRMW_OR
  { 78,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #78 = G_ATOMICRMW_XOR
  { 79,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #79 = G_ATOMICRMW_MAX
  { 80,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #80 = G_ATOMICRMW_MIN
  { 81,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #81 = G_ATOMICRMW_UMAX
  { 82,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #82 = G_ATOMICRMW_UMIN
  { 83,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #83 = G_ATOMICRMW_FADD
  { 84,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #84 = G_ATOMICRMW_FSUB
  { 85,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8, -1 ,nullptr },  // Inst #85 = G_FENCE
  { 86,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #86 = G_BRCOND
  { 87,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #87 = G_BRINDIRECT
  { 88,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #88 = G_INTRINSIC
  { 89,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #89 = G_INTRINSIC_W_SIDE_EFFECTS
  { 90,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #90 = G_ANYEXT
  { 91,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #91 = G_TRUNC
  { 92,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #92 = G_CONSTANT
  { 93,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #93 = G_FCONSTANT
  { 94,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #94 = G_VASTART
  { 95,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #95 = G_VAARG
  { 96,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #96 = G_SEXT
  { 97,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #97 = G_SEXT_INREG
  { 98,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #98 = G_ZEXT
  { 99,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #99 = G_SHL
  { 100,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #100 = G_LSHR
  { 101,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #101 = G_ASHR
  { 102,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #102 = G_ICMP
  { 103,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #103 = G_FCMP
  { 104,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #104 = G_SELECT
  { 105,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #105 = G_UADDO
  { 106,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #106 = G_UADDE
  { 107,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #107 = G_USUBO
  { 108,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #108 = G_USUBE
  { 109,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #109 = G_SADDO
  { 110,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #110 = G_SADDE
  { 111,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #111 = G_SSUBO
  { 112,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #112 = G_SSUBE
  { 113,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #113 = G_UMULO
  { 114,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #114 = G_SMULO
  { 115,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #115 = G_UMULH
  { 116,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #116 = G_SMULH
  { 117,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #117 = G_FADD
  { 118,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #118 = G_FSUB
  { 119,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #119 = G_FMUL
  { 120,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #120 = G_FMA
  { 121,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #121 = G_FMAD
  { 122,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #122 = G_FDIV
  { 123,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #123 = G_FREM
  { 124,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #124 = G_FPOW
  { 125,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #125 = G_FEXP
  { 126,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #126 = G_FEXP2
  { 127,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #127 = G_FLOG
  { 128,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #128 = G_FLOG2
  { 129,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #129 = G_FLOG10
  { 130,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #130 = G_FNEG
  { 131,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #131 = G_FPEXT
  { 132,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #132 = G_FPTRUNC
  { 133,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #133 = G_FPTOSI
  { 134,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #134 = G_FPTOUI
  { 135,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #135 = G_SITOFP
  { 136,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #136 = G_UITOFP
  { 137,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #137 = G_FABS
  { 138,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #138 = G_FCOPYSIGN
  { 139,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #139 = G_FCANONICALIZE
  { 140,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #140 = G_FMINNUM
  { 141,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #141 = G_FMAXNUM
  { 142,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #142 = G_FMINNUM_IEEE
  { 143,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #143 = G_FMAXNUM_IEEE
  { 144,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #144 = G_FMINIMUM
  { 145,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #145 = G_FMAXIMUM
  { 146,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #146 = G_PTR_ADD
  { 147,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #147 = G_PTR_MASK
  { 148,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #148 = G_SMIN
  { 149,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #149 = G_SMAX
  { 150,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #150 = G_UMIN
  { 151,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #151 = G_UMAX
  { 152,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #152 = G_BR
  { 153,	3,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #153 = G_BRJT
  { 154,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #154 = G_INSERT_VECTOR_ELT
  { 155,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #155 = G_EXTRACT_VECTOR_ELT
  { 156,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #156 = G_SHUFFLE_VECTOR
  { 157,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #157 = G_CTTZ
  { 158,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #158 = G_CTTZ_ZERO_UNDEF
  { 159,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #159 = G_CTLZ
  { 160,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #160 = G_CTLZ_ZERO_UNDEF
  { 161,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #161 = G_CTPOP
  { 162,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #162 = G_BSWAP
  { 163,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #163 = G_BITREVERSE
  { 164,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #164 = G_FCEIL
  { 165,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #165 = G_FCOS
  { 166,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #166 = G_FSIN
  { 167,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #167 = G_FSQRT
  { 168,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #168 = G_FFLOOR
  { 169,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #169 = G_FRINT
  { 170,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #170 = G_FNEARBYINT
  { 171,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #171 = G_ADDRSPACE_CAST
  { 172,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #172 = G_BLOCK_ADDR
  { 173,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #173 = G_JUMP_TABLE
  { 174,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #174 = G_DYN_STACKALLOC
  { 175,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #175 = ABSMacro
  { 176,	2,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo8, -1 ,nullptr },  // Inst #176 = ADJCALLSTACKDOWN
  { 177,	2,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo8, -1 ,nullptr },  // Inst #177 = ADJCALLSTACKUP
  { 178,	3,	1,	4,	545,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #178 = AND_V_D_PSEUDO
  { 179,	3,	1,	4,	545,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #179 = AND_V_H_PSEUDO
  { 180,	3,	1,	4,	545,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #180 = AND_V_W_PSEUDO
  { 181,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #181 = ATOMIC_CMP_SWAP_I16
  { 182,	7,	1,	4,	714,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #182 = ATOMIC_CMP_SWAP_I16_POSTRA
  { 183,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #183 = ATOMIC_CMP_SWAP_I32
  { 184,	4,	1,	4,	714,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #184 = ATOMIC_CMP_SWAP_I32_POSTRA
  { 185,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #185 = ATOMIC_CMP_SWAP_I64
  { 186,	4,	1,	4,	714,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #186 = ATOMIC_CMP_SWAP_I64_POSTRA
  { 187,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #187 = ATOMIC_CMP_SWAP_I8
  { 188,	7,	1,	4,	714,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #188 = ATOMIC_CMP_SWAP_I8_POSTRA
  { 189,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #189 = ATOMIC_LOAD_ADD_I16
  { 190,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #190 = ATOMIC_LOAD_ADD_I16_POSTRA
  { 191,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #191 = ATOMIC_LOAD_ADD_I32
  { 192,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #192 = ATOMIC_LOAD_ADD_I32_POSTRA
  { 193,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #193 = ATOMIC_LOAD_ADD_I64
  { 194,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #194 = ATOMIC_LOAD_ADD_I64_POSTRA
  { 195,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #195 = ATOMIC_LOAD_ADD_I8
  { 196,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #196 = ATOMIC_LOAD_ADD_I8_POSTRA
  { 197,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #197 = ATOMIC_LOAD_AND_I16
  { 198,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #198 = ATOMIC_LOAD_AND_I16_POSTRA
  { 199,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #199 = ATOMIC_LOAD_AND_I32
  { 200,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #200 = ATOMIC_LOAD_AND_I32_POSTRA
  { 201,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #201 = ATOMIC_LOAD_AND_I64
  { 202,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #202 = ATOMIC_LOAD_AND_I64_POSTRA
  { 203,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #203 = ATOMIC_LOAD_AND_I8
  { 204,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #204 = ATOMIC_LOAD_AND_I8_POSTRA
  { 205,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #205 = ATOMIC_LOAD_MAX_I16
  { 206,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #206 = ATOMIC_LOAD_MAX_I16_POSTRA
  { 207,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #207 = ATOMIC_LOAD_MAX_I32
  { 208,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #208 = ATOMIC_LOAD_MAX_I32_POSTRA
  { 209,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #209 = ATOMIC_LOAD_MAX_I64
  { 210,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #210 = ATOMIC_LOAD_MAX_I64_POSTRA
  { 211,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #211 = ATOMIC_LOAD_MAX_I8
  { 212,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #212 = ATOMIC_LOAD_MAX_I8_POSTRA
  { 213,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #213 = ATOMIC_LOAD_MIN_I16
  { 214,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #214 = ATOMIC_LOAD_MIN_I16_POSTRA
  { 215,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #215 = ATOMIC_LOAD_MIN_I32
  { 216,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #216 = ATOMIC_LOAD_MIN_I32_POSTRA
  { 217,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #217 = ATOMIC_LOAD_MIN_I64
  { 218,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #218 = ATOMIC_LOAD_MIN_I64_POSTRA
  { 219,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #219 = ATOMIC_LOAD_MIN_I8
  { 220,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #220 = ATOMIC_LOAD_MIN_I8_POSTRA
  { 221,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #221 = ATOMIC_LOAD_NAND_I16
  { 222,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #222 = ATOMIC_LOAD_NAND_I16_POSTRA
  { 223,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #223 = ATOMIC_LOAD_NAND_I32
  { 224,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #224 = ATOMIC_LOAD_NAND_I32_POSTRA
  { 225,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #225 = ATOMIC_LOAD_NAND_I64
  { 226,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #226 = ATOMIC_LOAD_NAND_I64_POSTRA
  { 227,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #227 = ATOMIC_LOAD_NAND_I8
  { 228,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #228 = ATOMIC_LOAD_NAND_I8_POSTRA
  { 229,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #229 = ATOMIC_LOAD_OR_I16
  { 230,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #230 = ATOMIC_LOAD_OR_I16_POSTRA
  { 231,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #231 = ATOMIC_LOAD_OR_I32
  { 232,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #232 = ATOMIC_LOAD_OR_I32_POSTRA
  { 233,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #233 = ATOMIC_LOAD_OR_I64
  { 234,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #234 = ATOMIC_LOAD_OR_I64_POSTRA
  { 235,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #235 = ATOMIC_LOAD_OR_I8
  { 236,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #236 = ATOMIC_LOAD_OR_I8_POSTRA
  { 237,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #237 = ATOMIC_LOAD_SUB_I16
  { 238,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #238 = ATOMIC_LOAD_SUB_I16_POSTRA
  { 239,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #239 = ATOMIC_LOAD_SUB_I32
  { 240,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #240 = ATOMIC_LOAD_SUB_I32_POSTRA
  { 241,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #241 = ATOMIC_LOAD_SUB_I64
  { 242,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #242 = ATOMIC_LOAD_SUB_I64_POSTRA
  { 243,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #243 = ATOMIC_LOAD_SUB_I8
  { 244,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #244 = ATOMIC_LOAD_SUB_I8_POSTRA
  { 245,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #245 = ATOMIC_LOAD_UMAX_I16
  { 246,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #246 = ATOMIC_LOAD_UMAX_I16_POSTRA
  { 247,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #247 = ATOMIC_LOAD_UMAX_I32
  { 248,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #248 = ATOMIC_LOAD_UMAX_I32_POSTRA
  { 249,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #249 = ATOMIC_LOAD_UMAX_I64
  { 250,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #250 = ATOMIC_LOAD_UMAX_I64_POSTRA
  { 251,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #251 = ATOMIC_LOAD_UMAX_I8
  { 252,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #252 = ATOMIC_LOAD_UMAX_I8_POSTRA
  { 253,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #253 = ATOMIC_LOAD_UMIN_I16
  { 254,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #254 = ATOMIC_LOAD_UMIN_I16_POSTRA
  { 255,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #255 = ATOMIC_LOAD_UMIN_I32
  { 256,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #256 = ATOMIC_LOAD_UMIN_I32_POSTRA
  { 257,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #257 = ATOMIC_LOAD_UMIN_I64
  { 258,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #258 = ATOMIC_LOAD_UMIN_I64_POSTRA
  { 259,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #259 = ATOMIC_LOAD_UMIN_I8
  { 260,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #260 = ATOMIC_LOAD_UMIN_I8_POSTRA
  { 261,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #261 = ATOMIC_LOAD_XOR_I16
  { 262,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #262 = ATOMIC_LOAD_XOR_I16_POSTRA
  { 263,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #263 = ATOMIC_LOAD_XOR_I32
  { 264,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #264 = ATOMIC_LOAD_XOR_I32_POSTRA
  { 265,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #265 = ATOMIC_LOAD_XOR_I64
  { 266,	3,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #266 = ATOMIC_LOAD_XOR_I64_POSTRA
  { 267,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #267 = ATOMIC_LOAD_XOR_I8
  { 268,	6,	1,	4,	715,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #268 = ATOMIC_LOAD_XOR_I8_POSTRA
  { 269,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #269 = ATOMIC_SWAP_I16
  { 270,	6,	1,	4,	713,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #270 = ATOMIC_SWAP_I16_POSTRA
  { 271,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #271 = ATOMIC_SWAP_I32
  { 272,	3,	1,	4,	713,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #272 = ATOMIC_SWAP_I32_POSTRA
  { 273,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #273 = ATOMIC_SWAP_I64
  { 274,	3,	1,	4,	713,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #274 = ATOMIC_SWAP_I64_POSTRA
  { 275,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #275 = ATOMIC_SWAP_I8
  { 276,	6,	1,	4,	713,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #276 = ATOMIC_SWAP_I8_POSTRA
  { 277,	1,	0,	4,	369,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, ImplicitList2, OperandInfo47, -1 ,nullptr },  // Inst #277 = B
  { 278,	1,	0,	4,	911,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, ImplicitList3, OperandInfo47, -1 ,nullptr },  // Inst #278 = BAL_BR
  { 279,	1,	0,	4,	938,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, ImplicitList3, OperandInfo47, -1 ,nullptr },  // Inst #279 = BAL_BR_MM
  { 280,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #280 = BEQLImmMacro
  { 281,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #281 = BGE
  { 282,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #282 = BGEImmMacro
  { 283,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #283 = BGEL
  { 284,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #284 = BGELImmMacro
  { 285,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #285 = BGEU
  { 286,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #286 = BGEUImmMacro
  { 287,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #287 = BGEUL
  { 288,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #288 = BGEULImmMacro
  { 289,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #289 = BGT
  { 290,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #290 = BGTImmMacro
  { 291,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #291 = BGTL
  { 292,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #292 = BGTLImmMacro
  { 293,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #293 = BGTU
  { 294,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #294 = BGTUImmMacro
  { 295,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #295 = BGTUL
  { 296,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #296 = BGTULImmMacro
  { 297,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #297 = BLE
  { 298,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #298 = BLEImmMacro
  { 299,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #299 = BLEL
  { 300,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #300 = BLELImmMacro
  { 301,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #301 = BLEU
  { 302,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #302 = BLEUImmMacro
  { 303,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #303 = BLEUL
  { 304,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #304 = BLEULImmMacro
  { 305,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #305 = BLT
  { 306,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #306 = BLTImmMacro
  { 307,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #307 = BLTL
  { 308,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #308 = BLTLImmMacro
  { 309,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #309 = BLTU
  { 310,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #310 = BLTUImmMacro
  { 311,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #311 = BLTUL
  { 312,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #312 = BLTULImmMacro
  { 313,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #313 = BNELImmMacro
  { 314,	1,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #314 = BPOSGE32_PSEUDO
  { 315,	4,	1,	4,	520,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #315 = BSEL_D_PSEUDO
  { 316,	4,	1,	4,	520,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #316 = BSEL_FD_PSEUDO
  { 317,	4,	1,	4,	520,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #317 = BSEL_FW_PSEUDO
  { 318,	4,	1,	4,	520,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #318 = BSEL_H_PSEUDO
  { 319,	4,	1,	4,	520,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #319 = BSEL_W_PSEUDO
  { 320,	1,	0,	4,	937,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, ImplicitList2, OperandInfo47, -1 ,nullptr },  // Inst #320 = B_MM
  { 321,	1,	0,	4,	989,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #321 = B_MMR6_Pseudo
  { 322,	1,	0,	4,	948,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #322 = B_MM_Pseudo
  { 323,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #323 = BeqImm
  { 324,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #324 = BneImm
  { 325,	3,	0,	2,	932,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #325 = BteqzT8CmpX16
  { 326,	3,	0,	2,	932,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #326 = BteqzT8CmpiX16
  { 327,	3,	0,	2,	932,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #327 = BteqzT8SltX16
  { 328,	3,	0,	2,	932,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #328 = BteqzT8SltiX16
  { 329,	3,	0,	2,	932,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #329 = BteqzT8SltiuX16
  { 330,	3,	0,	2,	932,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #330 = BteqzT8SltuX16
  { 331,	3,	0,	2,	932,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #331 = BtnezT8CmpX16
  { 332,	3,	0,	2,	932,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #332 = BtnezT8CmpiX16
  { 333,	3,	0,	2,	932,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #333 = BtnezT8SltX16
  { 334,	3,	0,	2,	932,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #334 = BtnezT8SltiX16
  { 335,	3,	0,	2,	932,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #335 = BtnezT8SltiuX16
  { 336,	3,	0,	2,	932,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #336 = BtnezT8SltuX16
  { 337,	3,	1,	4,	678,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #337 = BuildPairF64
  { 338,	3,	1,	4,	678,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #338 = BuildPairF64_64
  { 339,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #339 = CFTC1
  { 340,	3,	0,	2,	729,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #340 = CONSTPOOL_ENTRY
  { 341,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #341 = COPY_FD_PSEUDO
  { 342,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #342 = COPY_FW_PSEUDO
  { 343,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #343 = CTTC1
  { 344,	1,	0,	2,	729,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #344 = Constant32
  { 345,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #345 = DMULImmMacro
  { 346,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #346 = DMULMacro
  { 347,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #347 = DMULOMacro
  { 348,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #348 = DMULOUMacro
  { 349,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #349 = DROL
  { 350,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #350 = DROLImm
  { 351,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #351 = DROR
  { 352,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #352 = DRORImm
  { 353,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #353 = DSDivIMacro
  { 354,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #354 = DSDivMacro
  { 355,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #355 = DSRemIMacro
  { 356,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #356 = DSRemMacro
  { 357,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #357 = DUDivIMacro
  { 358,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #358 = DUDivMacro
  { 359,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #359 = DURemIMacro
  { 360,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #360 = DURemMacro
  { 361,	0,	0,	4,	916,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #361 = ERet
  { 362,	3,	1,	4,	687,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #362 = ExtractElementF64
  { 363,	3,	1,	4,	687,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #363 = ExtractElementF64_64
  { 364,	2,	1,	4,	583,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #364 = FABS_D
  { 365,	2,	1,	4,	583,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #365 = FABS_W
  { 366,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #366 = FEXP2_D_1_PSEUDO
  { 367,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #367 = FEXP2_W_1_PSEUDO
  { 368,	2,	1,	4,	546,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #368 = FILL_FD_PSEUDO
  { 369,	2,	1,	4,	546,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #369 = FILL_FW_PSEUDO
  { 370,	4,	2,	2,	729,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #370 = GotPrologue16
  { 371,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #371 = INSERT_B_VIDX64_PSEUDO
  { 372,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #372 = INSERT_B_VIDX_PSEUDO
  { 373,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #373 = INSERT_D_VIDX64_PSEUDO
  { 374,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #374 = INSERT_D_VIDX_PSEUDO
  { 375,	4,	1,	4,	547,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #375 = INSERT_FD_PSEUDO
  { 376,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #376 = INSERT_FD_VIDX64_PSEUDO
  { 377,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #377 = INSERT_FD_VIDX_PSEUDO
  { 378,	4,	1,	4,	547,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #378 = INSERT_FW_PSEUDO
  { 379,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #379 = INSERT_FW_VIDX64_PSEUDO
  { 380,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #380 = INSERT_FW_VIDX_PSEUDO
  { 381,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #381 = INSERT_H_VIDX64_PSEUDO
  { 382,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #382 = INSERT_H_VIDX_PSEUDO
  { 383,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #383 = INSERT_W_VIDX64_PSEUDO
  { 384,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #384 = INSERT_W_VIDX_PSEUDO
  { 385,	1,	0,	4,	1004,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook), 0x10ULL, nullptr, ImplicitList3, OperandInfo87, -1 ,nullptr },  // Inst #385 = JALR64Pseudo
  { 386,	1,	0,	4,	1004,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook), 0x10ULL, nullptr, ImplicitList3, OperandInfo87, -1 ,nullptr },  // Inst #386 = JALRHB64Pseudo
  { 387,	1,	0,	4,	402,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook), 0x10ULL, nullptr, ImplicitList3, OperandInfo50, -1 ,nullptr },  // Inst #387 = JALRHBPseudo
  { 388,	1,	0,	4,	402,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook), 0x10ULL, nullptr, ImplicitList3, OperandInfo50, -1 ,nullptr },  // Inst #388 = JALRPseudo
  { 389,	1,	0,	4,	982,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call), 0x10ULL, nullptr, ImplicitList3, OperandInfo2, -1 ,nullptr },  // Inst #389 = JAL_MMR6
  { 390,	1,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #390 = JalOneReg
  { 391,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #391 = JalTwoReg
  { 392,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #392 = LDMacro
  { 393,	3,	1,	4,	708,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #393 = LD_F16
  { 394,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #394 = LOAD_ACC128
  { 395,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #395 = LOAD_ACC64
  { 396,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #396 = LOAD_ACC64DSP
  { 397,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #397 = LOAD_CCOND_DSP
  { 398,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #398 = LONG_BRANCH_ADDiu
  { 399,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #399 = LONG_BRANCH_ADDiu2Op
  { 400,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #400 = LONG_BRANCH_DADDiu
  { 401,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #401 = LONG_BRANCH_DADDiu2Op
  { 402,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #402 = LONG_BRANCH_LUi
  { 403,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #403 = LONG_BRANCH_LUi2Op
  { 404,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #404 = LONG_BRANCH_LUi2Op_64
  { 405,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #405 = LWM_MM
  { 406,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #406 = LoadAddrImm32
  { 407,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #407 = LoadAddrImm64
  { 408,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #408 = LoadAddrReg32
  { 409,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #409 = LoadAddrReg64
  { 410,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #410 = LoadImm32
  { 411,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #411 = LoadImm64
  { 412,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #412 = LoadImmDoubleFGR
  { 413,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #413 = LoadImmDoubleFGR_32
  { 414,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #414 = LoadImmDoubleGPR
  { 415,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #415 = LoadImmSingleFGR
  { 416,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #416 = LoadImmSingleGPR
  { 417,	3,	1,	2,	729,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #417 = LwConstant32
  { 418,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #418 = MFTACX
  { 419,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #419 = MFTC0
  { 420,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #420 = MFTC1
  { 421,	1,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #421 = MFTDSP
  { 422,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #422 = MFTGPR
  { 423,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #423 = MFTHC1
  { 424,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #424 = MFTHI
  { 425,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #425 = MFTLO
  { 426,	2,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x10ULL, ImplicitList5, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #426 = MIPSeh_return32
  { 427,	2,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x10ULL, ImplicitList5, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #427 = MIPSeh_return64
  { 428,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #428 = MSA_FP_EXTEND_D_PSEUDO
  { 429,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #429 = MSA_FP_EXTEND_W_PSEUDO
  { 430,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #430 = MSA_FP_ROUND_D_PSEUDO
  { 431,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #431 = MSA_FP_ROUND_W_PSEUDO
  { 432,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #432 = MTTACX
  { 433,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #433 = MTTC0
  { 434,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #434 = MTTC1
  { 435,	1,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #435 = MTTDSP
  { 436,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #436 = MTTGPR
  { 437,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #437 = MTTHC1
  { 438,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #438 = MTTHI
  { 439,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #439 = MTTLO
  { 440,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #440 = MULImmMacro
  { 441,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #441 = MULOMacro
  { 442,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #442 = MULOUMacro
  { 443,	2,	0,	2,	867,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, ImplicitList6, OperandInfo120, -1 ,nullptr },  // Inst #443 = MultRxRy16
  { 444,	3,	1,	2,	867,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, ImplicitList6, OperandInfo121, -1 ,nullptr },  // Inst #444 = MultRxRyRz16
  { 445,	2,	0,	2,	867,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, ImplicitList6, OperandInfo120, -1 ,nullptr },  // Inst #445 = MultuRxRy16
  { 446,	3,	1,	2,	867,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, ImplicitList6, OperandInfo121, -1 ,nullptr },  // Inst #446 = MultuRxRyRz16
  { 447,	0,	0,	4,	368,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #447 = NOP
  { 448,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #448 = NORImm
  { 449,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #449 = NORImm64
  { 450,	3,	1,	4,	545,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #450 = NOR_V_D_PSEUDO
  { 451,	3,	1,	4,	545,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #451 = NOR_V_H_PSEUDO
  { 452,	3,	1,	4,	545,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #452 = NOR_V_W_PSEUDO
  { 453,	3,	1,	4,	545,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #453 = OR_V_D_PSEUDO
  { 454,	3,	1,	4,	545,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #454 = OR_V_H_PSEUDO
  { 455,	3,	1,	4,	545,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #455 = OR_V_W_PSEUDO
  { 456,	3,	1,	4,	1447,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #456 = PseudoCMPU_EQ_QB
  { 457,	3,	1,	4,	1447,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #457 = PseudoCMPU_LE_QB
  { 458,	3,	1,	4,	1447,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #458 = PseudoCMPU_LT_QB
  { 459,	3,	1,	4,	1447,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #459 = PseudoCMP_EQ_PH
  { 460,	3,	1,	4,	1447,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #460 = PseudoCMP_LE_PH
  { 461,	3,	1,	4,	1447,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #461 = PseudoCMP_LT_PH
  { 462,	2,	1,	4,	636,	0|(1ULL<<MCID::Pseudo), 0x4ULL, nullptr, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #462 = PseudoCVT_D32_W
  { 463,	2,	1,	4,	636,	0|(1ULL<<MCID::Pseudo), 0x4ULL, nullptr, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #463 = PseudoCVT_D64_L
  { 464,	2,	1,	4,	636,	0|(1ULL<<MCID::Pseudo), 0x4ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #464 = PseudoCVT_D64_W
  { 465,	2,	1,	4,	636,	0|(1ULL<<MCID::Pseudo), 0x4ULL, nullptr, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #465 = PseudoCVT_S_L
  { 466,	2,	1,	4,	636,	0|(1ULL<<MCID::Pseudo), 0x4ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #466 = PseudoCVT_S_W
  { 467,	3,	1,	4,	894,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #467 = PseudoDMULT
  { 468,	3,	1,	4,	895,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #468 = PseudoDMULTu
  { 469,	3,	1,	4,	896,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #469 = PseudoDSDIV
  { 470,	3,	1,	4,	897,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #470 = PseudoDUDIV
  { 471,	7,	2,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo127, -1 ,nullptr },  // Inst #471 = PseudoD_SELECT_I
  { 472,	7,	2,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #472 = PseudoD_SELECT_I64
  { 473,	1,	0,	4,	382,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #473 = PseudoIndirectBranch
  { 474,	1,	0,	4,	1012,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #474 = PseudoIndirectBranch64
  { 475,	1,	0,	4,	1016,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #475 = PseudoIndirectBranch64R6
  { 476,	1,	0,	4,	928,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #476 = PseudoIndirectBranchR6
  { 477,	1,	0,	4,	957,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #477 = PseudoIndirectBranch_MM
  { 478,	1,	0,	4,	990,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #478 = PseudoIndirectBranch_MMR6
  { 479,	1,	0,	4,	382,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #479 = PseudoIndirectHazardBranch
  { 480,	1,	0,	4,	1012,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #480 = PseudoIndirectHazardBranch64
  { 481,	1,	0,	4,	1016,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #481 = PseudoIndrectHazardBranch64R6
  { 482,	1,	0,	4,	928,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #482 = PseudoIndrectHazardBranchR6
  { 483,	4,	1,	4,	484,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #483 = PseudoMADD
  { 484,	4,	1,	4,	485,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #484 = PseudoMADDU
  { 485,	4,	1,	4,	850,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #485 = PseudoMADDU_MM
  { 486,	4,	1,	4,	849,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #486 = PseudoMADD_MM
  { 487,	2,	1,	4,	473,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #487 = PseudoMFHI
  { 488,	2,	1,	4,	898,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #488 = PseudoMFHI64
  { 489,	2,	1,	4,	859,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #489 = PseudoMFHI_MM
  { 490,	2,	1,	4,	473,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #490 = PseudoMFLO
  { 491,	2,	1,	4,	898,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #491 = PseudoMFLO64
  { 492,	2,	1,	4,	859,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #492 = PseudoMFLO_MM
  { 493,	4,	1,	4,	486,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #493 = PseudoMSUB
  { 494,	4,	1,	4,	487,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #494 = PseudoMSUBU
  { 495,	4,	1,	4,	852,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #495 = PseudoMSUBU_MM
  { 496,	4,	1,	4,	851,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #496 = PseudoMSUB_MM
  { 497,	3,	1,	4,	488,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #497 = PseudoMTLOHI
  { 498,	3,	1,	4,	899,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #498 = PseudoMTLOHI64
  { 499,	3,	1,	4,	1333,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #499 = PseudoMTLOHI_DSP
  { 500,	3,	1,	4,	860,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #500 = PseudoMTLOHI_MM
  { 501,	3,	1,	4,	855,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #501 = PseudoMULT
  { 502,	3,	1,	4,	853,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #502 = PseudoMULT_MM
  { 503,	3,	1,	4,	856,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #503 = PseudoMULTu
  { 504,	3,	1,	4,	854,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #504 = PseudoMULTu_MM
  { 505,	4,	1,	4,	1448,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #505 = PseudoPICK_PH
  { 506,	4,	1,	4,	1448,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #506 = PseudoPICK_QB
  { 507,	1,	0,	4,	383,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #507 = PseudoReturn
  { 508,	1,	0,	4,	1008,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #508 = PseudoReturn64
  { 509,	3,	1,	4,	857,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #509 = PseudoSDIV
  { 510,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #510 = PseudoSELECTFP_F_D32
  { 511,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo136, -1 ,nullptr },  // Inst #511 = PseudoSELECTFP_F_D64
  { 512,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo137, -1 ,nullptr },  // Inst #512 = PseudoSELECTFP_F_I
  { 513,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo138, -1 ,nullptr },  // Inst #513 = PseudoSELECTFP_F_I64
  { 514,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #514 = PseudoSELECTFP_F_S
  { 515,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #515 = PseudoSELECTFP_T_D32
  { 516,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo136, -1 ,nullptr },  // Inst #516 = PseudoSELECTFP_T_D64
  { 517,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo137, -1 ,nullptr },  // Inst #517 = PseudoSELECTFP_T_I
  { 518,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo138, -1 ,nullptr },  // Inst #518 = PseudoSELECTFP_T_I64
  { 519,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #519 = PseudoSELECTFP_T_S
  { 520,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #520 = PseudoSELECT_D32
  { 521,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #521 = PseudoSELECT_D64
  { 522,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo142, -1 ,nullptr },  // Inst #522 = PseudoSELECT_I
  { 523,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #523 = PseudoSELECT_I64
  { 524,	4,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo144, -1 ,nullptr },  // Inst #524 = PseudoSELECT_S
  { 525,	3,	1,	4,	1203,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #525 = PseudoTRUNC_W_D
  { 526,	3,	1,	4,	1203,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #526 = PseudoTRUNC_W_D32
  { 527,	3,	1,	4,	1203,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #527 = PseudoTRUNC_W_S
  { 528,	3,	1,	4,	858,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #528 = PseudoUDIV
  { 529,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #529 = ROL
  { 530,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #530 = ROLImm
  { 531,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #531 = ROR
  { 532,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #532 = RORImm
  { 533,	0,	0,	4,	377,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #533 = RetRA
  { 534,	0,	0,	2,	932,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #534 = RetRA16
  { 535,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #535 = SDC1_M1
  { 536,	3,	1,	4,	877,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #536 = SDIV_MM_Pseudo
  { 537,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #537 = SDMacro
  { 538,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #538 = SDivIMacro
  { 539,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #539 = SDivMacro
  { 540,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #540 = SEQIMacro
  { 541,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #541 = SEQMacro
  { 542,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #542 = SGE
  { 543,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #543 = SGEImm
  { 544,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #544 = SGEImm64
  { 545,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #545 = SGEU
  { 546,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #546 = SGEUImm
  { 547,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #547 = SGEUImm64
  { 548,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #548 = SGTImm
  { 549,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #549 = SGTImm64
  { 550,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #550 = SGTUImm
  { 551,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #551 = SGTUImm64
  { 552,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #552 = SLTImm64
  { 553,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #553 = SLTUImm64
  { 554,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #554 = SNZ_B_PSEUDO
  { 555,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #555 = SNZ_D_PSEUDO
  { 556,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo152, -1 ,nullptr },  // Inst #556 = SNZ_H_PSEUDO
  { 557,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #557 = SNZ_V_PSEUDO
  { 558,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #558 = SNZ_W_PSEUDO
  { 559,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #559 = SRemIMacro
  { 560,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #560 = SRemMacro
  { 561,	3,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #561 = STORE_ACC128
  { 562,	3,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #562 = STORE_ACC64
  { 563,	3,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #563 = STORE_ACC64DSP
  { 564,	3,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #564 = STORE_CCOND_DSP
  { 565,	3,	0,	4,	697,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #565 = ST_F16
  { 566,	3,	0,	4,	1128,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #566 = SWM_MM
  { 567,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #567 = SZ_B_PSEUDO
  { 568,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #568 = SZ_D_PSEUDO
  { 569,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo152, -1 ,nullptr },  // Inst #569 = SZ_H_PSEUDO
  { 570,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #570 = SZ_V_PSEUDO
  { 571,	2,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #571 = SZ_W_PSEUDO
  { 572,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #572 = SaaAddr
  { 573,	3,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #573 = SaadAddr
  { 574,	4,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #574 = SelBeqZ
  { 575,	4,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #575 = SelBneZ
  { 576,	5,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #576 = SelTBteqZCmp
  { 577,	5,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #577 = SelTBteqZCmpi
  { 578,	5,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #578 = SelTBteqZSlt
  { 579,	5,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #579 = SelTBteqZSlti
  { 580,	5,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #580 = SelTBteqZSltiu
  { 581,	5,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #581 = SelTBteqZSltu
  { 582,	5,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #582 = SelTBtneZCmp
  { 583,	5,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #583 = SelTBtneZCmpi
  { 584,	5,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #584 = SelTBtneZSlt
  { 585,	5,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #585 = SelTBtneZSlti
  { 586,	5,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #586 = SelTBtneZSltiu
  { 587,	5,	1,	2,	936,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #587 = SelTBtneZSltu
  { 588,	3,	1,	2,	728,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #588 = SltCCRxRy16
  { 589,	3,	1,	2,	728,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo157, -1 ,nullptr },  // Inst #589 = SltiCCRxImmX16
  { 590,	3,	1,	2,	728,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo157, -1 ,nullptr },  // Inst #590 = SltiuCCRxImmX16
  { 591,	3,	1,	2,	728,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #591 = SltuCCRxRy16
  { 592,	3,	1,	2,	728,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo121, -1 ,nullptr },  // Inst #592 = SltuRxRyRz16
  { 593,	1,	0,	4,	379,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, ImplicitList2, OperandInfo2, -1 ,nullptr },  // Inst #593 = TAILCALL
  { 594,	1,	0,	4,	1015,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, ImplicitList2, OperandInfo87, -1 ,nullptr },  // Inst #594 = TAILCALL64R6REG
  { 595,	1,	0,	4,	1015,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, ImplicitList2, OperandInfo87, -1 ,nullptr },  // Inst #595 = TAILCALLHB64R6REG
  { 596,	1,	0,	4,	929,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, ImplicitList2, OperandInfo50, -1 ,nullptr },  // Inst #596 = TAILCALLHBR6REG
  { 597,	1,	0,	4,	929,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, ImplicitList2, OperandInfo50, -1 ,nullptr },  // Inst #597 = TAILCALLR6REG
  { 598,	1,	0,	4,	380,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, ImplicitList2, OperandInfo50, -1 ,nullptr },  // Inst #598 = TAILCALLREG
  { 599,	1,	0,	4,	1007,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, ImplicitList2, OperandInfo87, -1 ,nullptr },  // Inst #599 = TAILCALLREG64
  { 600,	1,	0,	4,	380,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, ImplicitList2, OperandInfo50, -1 ,nullptr },  // Inst #600 = TAILCALLREGHB
  { 601,	1,	0,	4,	1007,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, ImplicitList2, OperandInfo87, -1 ,nullptr },  // Inst #601 = TAILCALLREGHB64
  { 602,	1,	0,	4,	955,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, ImplicitList2, OperandInfo50, -1 ,nullptr },  // Inst #602 = TAILCALLREG_MM
  { 603,	1,	0,	4,	997,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, ImplicitList2, OperandInfo50, -1 ,nullptr },  // Inst #603 = TAILCALLREG_MMR6
  { 604,	1,	0,	4,	956,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, ImplicitList2, OperandInfo2, -1 ,nullptr },  // Inst #604 = TAILCALL_MM
  { 605,	1,	0,	4,	998,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, ImplicitList2, OperandInfo2, -1 ,nullptr },  // Inst #605 = TAILCALL_MMR6
  { 606,	0,	0,	4,	397,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #606 = TRAP
  { 607,	0,	0,	4,	973,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #607 = TRAP_MM
  { 608,	3,	1,	4,	878,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #608 = UDIV_MM_Pseudo
  { 609,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #609 = UDivIMacro
  { 610,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #610 = UDivMacro
  { 611,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #611 = URemIMacro
  { 612,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #612 = URemMacro
  { 613,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #613 = Ulh
  { 614,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #614 = Ulhu
  { 615,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #615 = Ulw
  { 616,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #616 = Ush
  { 617,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #617 = Usw
  { 618,	3,	1,	4,	545,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #618 = XOR_V_D_PSEUDO
  { 619,	3,	1,	4,	545,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #619 = XOR_V_H_PSEUDO
  { 620,	3,	1,	4,	545,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #620 = XOR_V_W_PSEUDO
  { 621,	2,	1,	4,	1346,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo158, -1 ,nullptr },  // Inst #621 = ABSQ_S_PH
  { 622,	2,	1,	4,	1497,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo158, -1 ,nullptr },  // Inst #622 = ABSQ_S_PH_MM
  { 623,	2,	1,	4,	1449,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo158, -1 ,nullptr },  // Inst #623 = ABSQ_S_QB
  { 624,	2,	1,	4,	1613,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo158, -1 ,nullptr },  // Inst #624 = ABSQ_S_QB_MMR2
  { 625,	2,	1,	4,	1347,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo37, -1 ,nullptr },  // Inst #625 = ABSQ_S_W
  { 626,	2,	1,	4,	1498,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo37, -1 ,nullptr },  // Inst #626 = ABSQ_S_W_MM
  { 627,	3,	1,	4,	491,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #627 = ADD
  { 628,	2,	1,	4,	717,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #628 = ADDIUPC
  { 629,	2,	1,	4,	730,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #629 = ADDIUPC_MM
  { 630,	2,	1,	4,	766,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #630 = ADDIUPC_MMR6
  { 631,	2,	1,	2,	730,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #631 = ADDIUR1SP_MM
  { 632,	3,	1,	2,	730,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #632 = ADDIUR2_MM
  { 633,	3,	1,	2,	730,	0, 0x0ULL, nullptr, nullptr, OperandInfo161, -1 ,nullptr },  // Inst #633 = ADDIUS5_MM
  { 634,	1,	0,	2,	730,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #634 = ADDIUSP_MM
  { 635,	3,	1,	4,	767,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #635 = ADDIU_MMR6
  { 636,	3,	1,	4,	1450,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #636 = ADDQH_PH
  { 637,	3,	1,	4,	1614,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #637 = ADDQH_PH_MMR2
  { 638,	3,	1,	4,	1451,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #638 = ADDQH_R_PH
  { 639,	3,	1,	4,	1615,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #639 = ADDQH_R_PH_MMR2
  { 640,	3,	1,	4,	1452,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #640 = ADDQH_R_W
  { 641,	3,	1,	4,	1616,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #641 = ADDQH_R_W_MMR2
  { 642,	3,	1,	4,	1453,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #642 = ADDQH_W
  { 643,	3,	1,	4,	1617,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #643 = ADDQH_W_MMR2
  { 644,	3,	1,	4,	1348,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #644 = ADDQ_PH
  { 645,	3,	1,	4,	1499,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #645 = ADDQ_PH_MM
  { 646,	3,	1,	4,	1349,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #646 = ADDQ_S_PH
  { 647,	3,	1,	4,	1500,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #647 = ADDQ_S_PH_MM
  { 648,	3,	1,	4,	1350,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo64, -1 ,nullptr },  // Inst #648 = ADDQ_S_W
  { 649,	3,	1,	4,	1501,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo64, -1 ,nullptr },  // Inst #649 = ADDQ_S_W_MM
  { 650,	3,	1,	4,	1351,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList9, OperandInfo64, -1 ,nullptr },  // Inst #650 = ADDSC
  { 651,	3,	1,	4,	1502,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList9, OperandInfo64, -1 ,nullptr },  // Inst #651 = ADDSC_MM
  { 652,	3,	1,	4,	534,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #652 = ADDS_A_B
  { 653,	3,	1,	4,	534,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #653 = ADDS_A_D
  { 654,	3,	1,	4,	534,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #654 = ADDS_A_H
  { 655,	3,	1,	4,	534,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #655 = ADDS_A_W
  { 656,	3,	1,	4,	534,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #656 = ADDS_S_B
  { 657,	3,	1,	4,	534,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #657 = ADDS_S_D
  { 658,	3,	1,	4,	534,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #658 = ADDS_S_H
  { 659,	3,	1,	4,	534,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #659 = ADDS_S_W
  { 660,	3,	1,	4,	534,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #660 = ADDS_U_B
  { 661,	3,	1,	4,	534,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #661 = ADDS_U_D
  { 662,	3,	1,	4,	534,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #662 = ADDS_U_H
  { 663,	3,	1,	4,	534,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #663 = ADDS_U_W
  { 664,	3,	1,	2,	731,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #664 = ADDU16_MM
  { 665,	3,	1,	2,	768,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #665 = ADDU16_MMR6
  { 666,	3,	1,	4,	1454,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #666 = ADDUH_QB
  { 667,	3,	1,	4,	1618,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #667 = ADDUH_QB_MMR2
  { 668,	3,	1,	4,	1455,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #668 = ADDUH_R_QB
  { 669,	3,	1,	4,	1619,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #669 = ADDUH_R_QB_MMR2
  { 670,	3,	1,	4,	768,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #670 = ADDU_MMR6
  { 671,	3,	1,	4,	1456,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #671 = ADDU_PH
  { 672,	3,	1,	4,	1620,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #672 = ADDU_PH_MMR2
  { 673,	3,	1,	4,	1352,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #673 = ADDU_QB
  { 674,	3,	1,	4,	1503,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #674 = ADDU_QB_MM
  { 675,	3,	1,	4,	1457,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #675 = ADDU_S_PH
  { 676,	3,	1,	4,	1621,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #676 = ADDU_S_PH_MMR2
  { 677,	3,	1,	4,	1353,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #677 = ADDU_S_QB
  { 678,	3,	1,	4,	1504,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #678 = ADDU_S_QB_MM
  { 679,	3,	1,	4,	535,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #679 = ADDVI_B
  { 680,	3,	1,	4,	535,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #680 = ADDVI_D
  { 681,	3,	1,	4,	535,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #681 = ADDVI_H
  { 682,	3,	1,	4,	535,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #682 = ADDVI_W
  { 683,	3,	1,	4,	535,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #683 = ADDV_B
  { 684,	3,	1,	4,	535,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #684 = ADDV_D
  { 685,	3,	1,	4,	535,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #685 = ADDV_H
  { 686,	3,	1,	4,	535,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #686 = ADDV_W
  { 687,	3,	1,	4,	1354,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList9, ImplicitList8, OperandInfo64, -1 ,nullptr },  // Inst #687 = ADDWC
  { 688,	3,	1,	4,	1505,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList9, ImplicitList8, OperandInfo64, -1 ,nullptr },  // Inst #688 = ADDWC_MM
  { 689,	3,	1,	4,	533,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #689 = ADD_A_B
  { 690,	3,	1,	4,	533,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #690 = ADD_A_D
  { 691,	3,	1,	4,	533,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #691 = ADD_A_H
  { 692,	3,	1,	4,	533,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #692 = ADD_A_W
  { 693,	3,	1,	4,	732,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #693 = ADD_MM
  { 694,	3,	1,	4,	769,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #694 = ADD_MMR6
  { 695,	3,	1,	4,	492,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #695 = ADDi
  { 696,	3,	1,	4,	733,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #696 = ADDi_MM
  { 697,	3,	1,	4,	493,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #697 = ADDiu
  { 698,	3,	1,	4,	730,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #698 = ADDiu_MM
  { 699,	3,	1,	4,	504,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #699 = ADDu
  { 700,	3,	1,	4,	731,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #700 = ADDu_MM
  { 701,	4,	1,	4,	718,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo169, -1 ,nullptr },  // Inst #701 = ALIGN
  { 702,	4,	1,	4,	770,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo169, -1 ,nullptr },  // Inst #702 = ALIGN_MMR6
  { 703,	2,	1,	4,	719,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #703 = ALUIPC
  { 704,	2,	1,	4,	771,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #704 = ALUIPC_MMR6
  { 705,	3,	1,	4,	359,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #705 = AND
  { 706,	3,	1,	2,	734,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #706 = AND16_MM
  { 707,	3,	1,	2,	772,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #707 = AND16_MMR6
  { 708,	3,	1,	4,	798,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #708 = AND64
  { 709,	3,	1,	2,	734,	0, 0x0ULL, nullptr, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #709 = ANDI16_MM
  { 710,	3,	1,	2,	772,	0, 0x0ULL, nullptr, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #710 = ANDI16_MMR6
  { 711,	3,	1,	4,	544,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #711 = ANDI_B
  { 712,	3,	1,	4,	773,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #712 = ANDI_MMR6
  { 713,	3,	1,	4,	734,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #713 = AND_MM
  { 714,	3,	1,	4,	772,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #714 = AND_MMR6
  { 715,	3,	1,	4,	543,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #715 = AND_V
  { 716,	3,	1,	4,	494,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #716 = ANDi
  { 717,	3,	1,	4,	798,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #717 = ANDi64
  { 718,	3,	1,	4,	735,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #718 = ANDi_MM
  { 719,	4,	1,	4,	1458,	0, 0x6ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #719 = APPEND
  { 720,	4,	1,	4,	1622,	0, 0x6ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #720 = APPEND_MMR2
  { 721,	3,	1,	4,	536,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #721 = ASUB_S_B
  { 722,	3,	1,	4,	536,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #722 = ASUB_S_D
  { 723,	3,	1,	4,	536,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #723 = ASUB_S_H
  { 724,	3,	1,	4,	536,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #724 = ASUB_S_W
  { 725,	3,	1,	4,	536,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #725 = ASUB_U_B
  { 726,	3,	1,	4,	536,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #726 = ASUB_U_D
  { 727,	3,	1,	4,	536,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #727 = ASUB_U_H
  { 728,	3,	1,	4,	536,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #728 = ASUB_U_W
  { 729,	3,	1,	4,	720,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #729 = AUI
  { 730,	2,	1,	4,	721,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #730 = AUIPC
  { 731,	2,	1,	4,	774,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #731 = AUIPC_MMR6
  { 732,	3,	1,	4,	775,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #732 = AUI_MMR6
  { 733,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #733 = AVER_S_B
  { 734,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #734 = AVER_S_D
  { 735,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #735 = AVER_S_H
  { 736,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #736 = AVER_S_W
  { 737,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #737 = AVER_U_B
  { 738,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #738 = AVER_U_D
  { 739,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #739 = AVER_U_H
  { 740,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #740 = AVER_U_W
  { 741,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #741 = AVE_S_B
  { 742,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #742 = AVE_S_D
  { 743,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #743 = AVE_S_H
  { 744,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #744 = AVE_S_W
  { 745,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #745 = AVE_U_B
  { 746,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #746 = AVE_U_D
  { 747,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #747 = AVE_U_H
  { 748,	3,	1,	4,	537,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #748 = AVE_U_W
  { 749,	2,	1,	4,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #749 = AddiuRxImmX16
  { 750,	2,	1,	4,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #750 = AddiuRxPcImmX16
  { 751,	3,	1,	2,	727,	0|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo173, -1 ,nullptr },  // Inst #751 = AddiuRxRxImm16
  { 752,	3,	1,	4,	727,	0|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo173, -1 ,nullptr },  // Inst #752 = AddiuRxRxImmX16
  { 753,	3,	1,	4,	727,	0, 0x0ULL, nullptr, nullptr, OperandInfo174, -1 ,nullptr },  // Inst #753 = AddiuRxRyOffMemX16
  { 754,	1,	0,	2,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo2, -1 ,nullptr },  // Inst #754 = AddiuSpImm16
  { 755,	1,	0,	4,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo2, -1 ,nullptr },  // Inst #755 = AddiuSpImmX16
  { 756,	3,	1,	2,	727,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #756 = AdduRxRyRz16
  { 757,	3,	1,	2,	727,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo175, -1 ,nullptr },  // Inst #757 = AndRxRxRy16
  { 758,	1,	0,	2,	937,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList2, OperandInfo47, -1 ,nullptr },  // Inst #758 = B16_MM
  { 759,	3,	1,	4,	1190,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #759 = BADDu
  { 760,	1,	0,	4,	370,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList3, OperandInfo47, -1 ,nullptr },  // Inst #760 = BAL
  { 761,	1,	0,	4,	918,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList3, OperandInfo47, -1 ,nullptr },  // Inst #761 = BALC
  { 762,	1,	0,	4,	991,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList3, OperandInfo47, -1 ,nullptr },  // Inst #762 = BALC_MMR6
  { 763,	4,	1,	4,	1459,	0, 0x6ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #763 = BALIGN
  { 764,	4,	1,	4,	1623,	0, 0x6ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #764 = BALIGN_MMR2
  { 765,	3,	0,	4,	1191,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x2ULL, nullptr, ImplicitList2, OperandInfo176, -1 ,nullptr },  // Inst #765 = BBIT0
  { 766,	3,	0,	4,	1191,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x2ULL, nullptr, ImplicitList2, OperandInfo176, -1 ,nullptr },  // Inst #766 = BBIT032
  { 767,	3,	0,	4,	1191,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x2ULL, nullptr, ImplicitList2, OperandInfo176, -1 ,nullptr },  // Inst #767 = BBIT1
  { 768,	3,	0,	4,	1191,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x2ULL, nullptr, ImplicitList2, OperandInfo176, -1 ,nullptr },  // Inst #768 = BBIT132
  { 769,	1,	0,	4,	921,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #769 = BC
  { 770,	1,	0,	2,	974,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList2, OperandInfo47, -1 ,nullptr },  // Inst #770 = BC16_MMR6
  { 771,	2,	0,	4,	1220,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo177, -1 ,nullptr },  // Inst #771 = BC1EQZ
  { 772,	2,	0,	4,	975,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList2, OperandInfo177, -1 ,nullptr },  // Inst #772 = BC1EQZC_MMR6
  { 773,	2,	0,	4,	682,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x45ULL, nullptr, ImplicitList2, OperandInfo178, -1 ,nullptr },  // Inst #773 = BC1F
  { 774,	2,	0,	4,	683,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x45ULL, nullptr, ImplicitList2, OperandInfo178, -1 ,nullptr },  // Inst #774 = BC1FL
  { 775,	2,	0,	4,	939,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x45ULL, nullptr, ImplicitList2, OperandInfo178, -1 ,nullptr },  // Inst #775 = BC1F_MM
  { 776,	2,	0,	4,	1220,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo177, -1 ,nullptr },  // Inst #776 = BC1NEZ
  { 777,	2,	0,	4,	975,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList2, OperandInfo177, -1 ,nullptr },  // Inst #777 = BC1NEZC_MMR6
  { 778,	2,	0,	4,	684,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x45ULL, nullptr, ImplicitList2, OperandInfo178, -1 ,nullptr },  // Inst #778 = BC1T
  { 779,	2,	0,	4,	685,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x45ULL, nullptr, ImplicitList2, OperandInfo178, -1 ,nullptr },  // Inst #779 = BC1TL
  { 780,	2,	0,	4,	940,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x45ULL, nullptr, ImplicitList2, OperandInfo178, -1 ,nullptr },  // Inst #780 = BC1T_MM
  { 781,	2,	0,	4,	922,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo179, -1 ,nullptr },  // Inst #781 = BC2EQZ
  { 782,	2,	0,	4,	976,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo179, -1 ,nullptr },  // Inst #782 = BC2EQZC_MMR6
  { 783,	2,	0,	4,	922,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo179, -1 ,nullptr },  // Inst #783 = BC2NEZ
  { 784,	2,	0,	4,	976,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo179, -1 ,nullptr },  // Inst #784 = BC2NEZC_MMR6
  { 785,	3,	1,	4,	516,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #785 = BCLRI_B
  { 786,	3,	1,	4,	516,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #786 = BCLRI_D
  { 787,	3,	1,	4,	516,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #787 = BCLRI_H
  { 788,	3,	1,	4,	516,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #788 = BCLRI_W
  { 789,	3,	1,	4,	516,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #789 = BCLR_B
  { 790,	3,	1,	4,	516,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #790 = BCLR_D
  { 791,	3,	1,	4,	516,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #791 = BCLR_H
  { 792,	3,	1,	4,	516,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #792 = BCLR_W
  { 793,	1,	0,	4,	974,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x16ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #793 = BC_MMR6
  { 794,	3,	0,	4,	912,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #794 = BEQ
  { 795,	3,	0,	4,	1001,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo96, -1 ,nullptr },  // Inst #795 = BEQ64
  { 796,	3,	0,	4,	923,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #796 = BEQC
  { 797,	3,	0,	4,	1009,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo96, -1 ,nullptr },  // Inst #797 = BEQC64
  { 798,	3,	0,	4,	977,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #798 = BEQC_MMR6
  { 799,	3,	0,	4,	372,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #799 = BEQL
  { 800,	2,	0,	2,	941,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList2, OperandInfo180, -1 ,nullptr },  // Inst #800 = BEQZ16_MM
  { 801,	2,	0,	4,	919,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #801 = BEQZALC
  { 802,	2,	0,	4,	992,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #802 = BEQZALC_MMR6
  { 803,	2,	0,	4,	924,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #803 = BEQZC
  { 804,	2,	0,	2,	978,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList2, OperandInfo180, -1 ,nullptr },  // Inst #804 = BEQZC16_MMR6
  { 805,	2,	0,	4,	1010,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo99, -1 ,nullptr },  // Inst #805 = BEQZC64
  { 806,	2,	0,	4,	942,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #806 = BEQZC_MM
  { 807,	2,	0,	4,	979,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x36ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #807 = BEQZC_MMR6
  { 808,	3,	0,	4,	943,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #808 = BEQ_MM
  { 809,	3,	0,	4,	923,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #809 = BGEC
  { 810,	3,	0,	4,	1009,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo96, -1 ,nullptr },  // Inst #810 = BGEC64
  { 811,	3,	0,	4,	977,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #811 = BGEC_MMR6
  { 812,	3,	0,	4,	923,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #812 = BGEUC
  { 813,	3,	0,	4,	1009,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo96, -1 ,nullptr },  // Inst #813 = BGEUC64
  { 814,	3,	0,	4,	977,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #814 = BGEUC_MMR6
  { 815,	2,	0,	4,	913,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #815 = BGEZ
  { 816,	2,	0,	4,	1002,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo99, -1 ,nullptr },  // Inst #816 = BGEZ64
  { 817,	2,	0,	4,	917,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #817 = BGEZAL
  { 818,	2,	0,	4,	919,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #818 = BGEZALC
  { 819,	2,	0,	4,	992,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #819 = BGEZALC_MMR6
  { 820,	2,	0,	4,	371,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #820 = BGEZALL
  { 821,	2,	0,	4,	949,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #821 = BGEZALS_MM
  { 822,	2,	0,	4,	950,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #822 = BGEZAL_MM
  { 823,	2,	0,	4,	924,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #823 = BGEZC
  { 824,	2,	0,	4,	1010,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo99, -1 ,nullptr },  // Inst #824 = BGEZC64
  { 825,	2,	0,	4,	979,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #825 = BGEZC_MMR6
  { 826,	2,	0,	4,	373,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #826 = BGEZL
  { 827,	2,	0,	4,	941,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #827 = BGEZ_MM
  { 828,	2,	0,	4,	913,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #828 = BGTZ
  { 829,	2,	0,	4,	1002,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo99, -1 ,nullptr },  // Inst #829 = BGTZ64
  { 830,	2,	0,	4,	919,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #830 = BGTZALC
  { 831,	2,	0,	4,	992,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #831 = BGTZALC_MMR6
  { 832,	2,	0,	4,	924,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #832 = BGTZC
  { 833,	2,	0,	4,	1010,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo99, -1 ,nullptr },  // Inst #833 = BGTZC64
  { 834,	2,	0,	4,	979,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #834 = BGTZC_MMR6
  { 835,	2,	0,	4,	373,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #835 = BGTZL
  { 836,	2,	0,	4,	941,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #836 = BGTZ_MM
  { 837,	4,	1,	4,	511,	0, 0x6ULL, nullptr, nullptr, OperandInfo181, -1 ,nullptr },  // Inst #837 = BINSLI_B
  { 838,	4,	1,	4,	511,	0, 0x6ULL, nullptr, nullptr, OperandInfo182, -1 ,nullptr },  // Inst #838 = BINSLI_D
  { 839,	4,	1,	4,	511,	0, 0x6ULL, nullptr, nullptr, OperandInfo183, -1 ,nullptr },  // Inst #839 = BINSLI_H
  { 840,	4,	1,	4,	511,	0, 0x6ULL, nullptr, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #840 = BINSLI_W
  { 841,	4,	1,	4,	511,	0, 0x6ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #841 = BINSL_B
  { 842,	4,	1,	4,	511,	0, 0x6ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #842 = BINSL_D
  { 843,	4,	1,	4,	511,	0, 0x6ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #843 = BINSL_H
  { 844,	4,	1,	4,	511,	0, 0x6ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #844 = BINSL_W
  { 845,	4,	1,	4,	512,	0, 0x6ULL, nullptr, nullptr, OperandInfo181, -1 ,nullptr },  // Inst #845 = BINSRI_B
  { 846,	4,	1,	4,	512,	0, 0x6ULL, nullptr, nullptr, OperandInfo182, -1 ,nullptr },  // Inst #846 = BINSRI_D
  { 847,	4,	1,	4,	512,	0, 0x6ULL, nullptr, nullptr, OperandInfo183, -1 ,nullptr },  // Inst #847 = BINSRI_H
  { 848,	4,	1,	4,	512,	0, 0x6ULL, nullptr, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #848 = BINSRI_W
  { 849,	4,	1,	4,	512,	0, 0x6ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #849 = BINSR_B
  { 850,	4,	1,	4,	512,	0, 0x6ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #850 = BINSR_D
  { 851,	4,	1,	4,	512,	0, 0x6ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #851 = BINSR_H
  { 852,	4,	1,	4,	512,	0, 0x6ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #852 = BINSR_W
  { 853,	2,	1,	4,	1355,	0, 0x6ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #853 = BITREV
  { 854,	2,	1,	4,	1506,	0, 0x6ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #854 = BITREV_MM
  { 855,	2,	1,	4,	722,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #855 = BITSWAP
  { 856,	2,	1,	4,	776,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #856 = BITSWAP_MMR6
  { 857,	2,	0,	4,	913,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #857 = BLEZ
  { 858,	2,	0,	4,	1002,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo99, -1 ,nullptr },  // Inst #858 = BLEZ64
  { 859,	2,	0,	4,	919,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #859 = BLEZALC
  { 860,	2,	0,	4,	992,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #860 = BLEZALC_MMR6
  { 861,	2,	0,	4,	924,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #861 = BLEZC
  { 862,	2,	0,	4,	1010,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo99, -1 ,nullptr },  // Inst #862 = BLEZC64
  { 863,	2,	0,	4,	979,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #863 = BLEZC_MMR6
  { 864,	2,	0,	4,	373,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #864 = BLEZL
  { 865,	2,	0,	4,	941,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #865 = BLEZ_MM
  { 866,	3,	0,	4,	923,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #866 = BLTC
  { 867,	3,	0,	4,	1009,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo96, -1 ,nullptr },  // Inst #867 = BLTC64
  { 868,	3,	0,	4,	977,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #868 = BLTC_MMR6
  { 869,	3,	0,	4,	923,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #869 = BLTUC
  { 870,	3,	0,	4,	1009,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo96, -1 ,nullptr },  // Inst #870 = BLTUC64
  { 871,	3,	0,	4,	977,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #871 = BLTUC_MMR6
  { 872,	2,	0,	4,	913,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #872 = BLTZ
  { 873,	2,	0,	4,	1002,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo99, -1 ,nullptr },  // Inst #873 = BLTZ64
  { 874,	2,	0,	4,	911,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #874 = BLTZAL
  { 875,	2,	0,	4,	919,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #875 = BLTZALC
  { 876,	2,	0,	4,	992,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #876 = BLTZALC_MMR6
  { 877,	2,	0,	4,	371,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #877 = BLTZALL
  { 878,	2,	0,	4,	949,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #878 = BLTZALS_MM
  { 879,	2,	0,	4,	950,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #879 = BLTZAL_MM
  { 880,	2,	0,	4,	924,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #880 = BLTZC
  { 881,	2,	0,	4,	1010,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo99, -1 ,nullptr },  // Inst #881 = BLTZC64
  { 882,	2,	0,	4,	979,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #882 = BLTZC_MMR6
  { 883,	2,	0,	4,	373,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #883 = BLTZL
  { 884,	2,	0,	4,	941,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #884 = BLTZ_MM
  { 885,	4,	1,	4,	519,	0, 0x6ULL, nullptr, nullptr, OperandInfo181, -1 ,nullptr },  // Inst #885 = BMNZI_B
  { 886,	4,	1,	4,	519,	0, 0x6ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #886 = BMNZ_V
  { 887,	4,	1,	4,	519,	0, 0x6ULL, nullptr, nullptr, OperandInfo181, -1 ,nullptr },  // Inst #887 = BMZI_B
  { 888,	4,	1,	4,	519,	0, 0x6ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #888 = BMZ_V
  { 889,	3,	0,	4,	912,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #889 = BNE
  { 890,	3,	0,	4,	1001,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo96, -1 ,nullptr },  // Inst #890 = BNE64
  { 891,	3,	0,	4,	923,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #891 = BNEC
  { 892,	3,	0,	4,	1009,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo96, -1 ,nullptr },  // Inst #892 = BNEC64
  { 893,	3,	0,	4,	977,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #893 = BNEC_MMR6
  { 894,	3,	1,	4,	517,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #894 = BNEGI_B
  { 895,	3,	1,	4,	517,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #895 = BNEGI_D
  { 896,	3,	1,	4,	517,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #896 = BNEGI_H
  { 897,	3,	1,	4,	517,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #897 = BNEGI_W
  { 898,	3,	1,	4,	517,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #898 = BNEG_B
  { 899,	3,	1,	4,	517,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #899 = BNEG_D
  { 900,	3,	1,	4,	517,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #900 = BNEG_H
  { 901,	3,	1,	4,	517,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #901 = BNEG_W
  { 902,	3,	0,	4,	372,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #902 = BNEL
  { 903,	2,	0,	2,	941,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList2, OperandInfo180, -1 ,nullptr },  // Inst #903 = BNEZ16_MM
  { 904,	2,	0,	4,	919,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #904 = BNEZALC
  { 905,	2,	0,	4,	992,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList3, OperandInfo98, -1 ,nullptr },  // Inst #905 = BNEZALC_MMR6
  { 906,	2,	0,	4,	924,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #906 = BNEZC
  { 907,	2,	0,	2,	978,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList2, OperandInfo180, -1 ,nullptr },  // Inst #907 = BNEZC16_MMR6
  { 908,	2,	0,	4,	1010,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo99, -1 ,nullptr },  // Inst #908 = BNEZC64
  { 909,	2,	0,	4,	942,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #909 = BNEZC_MM
  { 910,	2,	0,	4,	979,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x36ULL, nullptr, ImplicitList2, OperandInfo98, -1 ,nullptr },  // Inst #910 = BNEZC_MMR6
  { 911,	3,	0,	4,	943,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #911 = BNE_MM
  { 912,	3,	0,	4,	923,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #912 = BNVC
  { 913,	3,	0,	4,	977,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #913 = BNVC_MMR6
  { 914,	2,	0,	4,	523,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList2, OperandInfo186, -1 ,nullptr },  // Inst #914 = BNZ_B
  { 915,	2,	0,	4,	523,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList2, OperandInfo187, -1 ,nullptr },  // Inst #915 = BNZ_D
  { 916,	2,	0,	4,	523,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList2, OperandInfo188, -1 ,nullptr },  // Inst #916 = BNZ_H
  { 917,	2,	0,	4,	523,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList2, OperandInfo186, -1 ,nullptr },  // Inst #917 = BNZ_V
  { 918,	2,	0,	4,	523,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList2, OperandInfo189, -1 ,nullptr },  // Inst #918 = BNZ_W
  { 919,	3,	0,	4,	923,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #919 = BOVC
  { 920,	3,	0,	4,	977,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo49, -1 ,nullptr },  // Inst #920 = BOVC_MMR6
  { 921,	1,	0,	4,	1356,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #921 = BPOSGE32
  { 922,	1,	0,	4,	1659,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #922 = BPOSGE32C_MMR3
  { 923,	1,	0,	4,	1507,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #923 = BPOSGE32_MM
  { 924,	2,	0,	4,	374,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #924 = BREAK
  { 925,	1,	0,	2,	958,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #925 = BREAK16_MM
  { 926,	1,	0,	2,	999,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #926 = BREAK16_MMR6
  { 927,	2,	0,	4,	958,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #927 = BREAK_MM
  { 928,	2,	0,	4,	999,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #928 = BREAK_MMR6
  { 929,	4,	1,	4,	518,	0, 0x6ULL, nullptr, nullptr, OperandInfo181, -1 ,nullptr },  // Inst #929 = BSELI_B
  { 930,	4,	1,	4,	518,	0, 0x6ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #930 = BSEL_V
  { 931,	3,	1,	4,	515,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #931 = BSETI_B
  { 932,	3,	1,	4,	515,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #932 = BSETI_D
  { 933,	3,	1,	4,	515,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #933 = BSETI_H
  { 934,	3,	1,	4,	515,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #934 = BSETI_W
  { 935,	3,	1,	4,	515,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #935 = BSET_B
  { 936,	3,	1,	4,	515,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #936 = BSET_D
  { 937,	3,	1,	4,	515,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #937 = BSET_H
  { 938,	3,	1,	4,	515,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #938 = BSET_W
  { 939,	2,	0,	4,	523,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList2, OperandInfo186, -1 ,nullptr },  // Inst #939 = BZ_B
  { 940,	2,	0,	4,	523,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList2, OperandInfo187, -1 ,nullptr },  // Inst #940 = BZ_D
  { 941,	2,	0,	4,	523,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList2, OperandInfo188, -1 ,nullptr },  // Inst #941 = BZ_H
  { 942,	2,	0,	4,	523,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList2, OperandInfo186, -1 ,nullptr },  // Inst #942 = BZ_V
  { 943,	2,	0,	4,	523,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList2, OperandInfo189, -1 ,nullptr },  // Inst #943 = BZ_W
  { 944,	2,	0,	2,	931,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #944 = BeqzRxImm16
  { 945,	2,	0,	4,	931,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #945 = BeqzRxImmX16
  { 946,	1,	0,	2,	931,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #946 = Bimm16
  { 947,	1,	0,	4,	931,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #947 = BimmX16
  { 948,	2,	0,	2,	931,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #948 = BnezRxImm16
  { 949,	2,	0,	4,	931,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #949 = BnezRxImmX16
  { 950,	0,	0,	2,	935,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #950 = Break16
  { 951,	1,	0,	2,	931,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #951 = Bteqz16
  { 952,	1,	0,	4,	931,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #952 = BteqzX16
  { 953,	1,	0,	2,	931,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #953 = Btnez16
  { 954,	1,	0,	4,	931,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #954 = BtnezX16
  { 955,	3,	0,	4,	465,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #955 = CACHE
  { 956,	3,	0,	4,	466,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #956 = CACHEE
  { 957,	3,	0,	4,	1099,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #957 = CACHEE_MM
  { 958,	3,	0,	4,	1132,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #958 = CACHE_MM
  { 959,	3,	0,	4,	1154,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #959 = CACHE_MMR6
  { 960,	3,	0,	4,	1080,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #960 = CACHE_R6
  { 961,	2,	1,	4,	709,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #961 = CEIL_L_D64
  { 962,	2,	1,	4,	1300,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #962 = CEIL_L_D_MMR6
  { 963,	2,	1,	4,	709,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #963 = CEIL_L_S
  { 964,	2,	1,	4,	1300,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #964 = CEIL_L_S_MMR6
  { 965,	2,	1,	4,	709,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #965 = CEIL_W_D32
  { 966,	2,	1,	4,	709,	0, 0x4ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #966 = CEIL_W_D64
  { 967,	2,	1,	4,	1300,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #967 = CEIL_W_D_MMR6
  { 968,	2,	1,	4,	1236,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #968 = CEIL_W_MM
  { 969,	2,	1,	4,	709,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #969 = CEIL_W_S
  { 970,	2,	1,	4,	1236,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #970 = CEIL_W_S_MM
  { 971,	2,	1,	4,	1300,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #971 = CEIL_W_S_MMR6
  { 972,	3,	1,	4,	551,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #972 = CEQI_B
  { 973,	3,	1,	4,	551,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #973 = CEQI_D
  { 974,	3,	1,	4,	551,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #974 = CEQI_H
  { 975,	3,	1,	4,	551,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #975 = CEQI_W
  { 976,	3,	1,	4,	551,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #976 = CEQ_B
  { 977,	3,	1,	4,	551,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #977 = CEQ_D
  { 978,	3,	1,	4,	551,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #978 = CEQ_H
  { 979,	3,	1,	4,	551,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #979 = CEQ_W
  { 980,	2,	1,	4,	686,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #980 = CFC1
  { 981,	2,	1,	4,	1283,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #981 = CFC1_MM
  { 982,	2,	1,	4,	1049,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #982 = CFC2_MM
  { 983,	2,	1,	4,	524,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo199, -1 ,nullptr },  // Inst #983 = CFCMSA
  { 984,	4,	1,	4,	1192,	0, 0x1ULL, nullptr, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #984 = CINS
  { 985,	4,	1,	4,	1192,	0, 0x1ULL, nullptr, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #985 = CINS32
  { 986,	4,	1,	4,	1192,	0, 0x1ULL, nullptr, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #986 = CINS64_32
  { 987,	4,	1,	4,	1192,	0, 0x1ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #987 = CINS_i32
  { 988,	2,	1,	4,	1217,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #988 = CLASS_D
  { 989,	2,	1,	4,	1303,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #989 = CLASS_D_MMR6
  { 990,	2,	1,	4,	1216,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #990 = CLASS_S
  { 991,	2,	1,	4,	1303,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #991 = CLASS_S_MMR6
  { 992,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #992 = CLEI_S_B
  { 993,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #993 = CLEI_S_D
  { 994,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #994 = CLEI_S_H
  { 995,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #995 = CLEI_S_W
  { 996,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #996 = CLEI_U_B
  { 997,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #997 = CLEI_U_D
  { 998,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #998 = CLEI_U_H
  { 999,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #999 = CLEI_U_W
  { 1000,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1000 = CLE_S_B
  { 1001,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1001 = CLE_S_D
  { 1002,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1002 = CLE_S_H
  { 1003,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1003 = CLE_S_W
  { 1004,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1004 = CLE_U_B
  { 1005,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1005 = CLE_U_D
  { 1006,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1006 = CLE_U_H
  { 1007,	3,	1,	4,	550,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1007 = CLE_U_W
  { 1008,	2,	1,	4,	469,	0, 0x1ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #1008 = CLO
  { 1009,	2,	1,	4,	736,	0, 0x1ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #1009 = CLO_MM
  { 1010,	2,	1,	4,	777,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #1010 = CLO_MMR6
  { 1011,	2,	1,	4,	723,	0, 0x6ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #1011 = CLO_R6
  { 1012,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1012 = CLTI_S_B
  { 1013,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #1013 = CLTI_S_D
  { 1014,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #1014 = CLTI_S_H
  { 1015,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #1015 = CLTI_S_W
  { 1016,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1016 = CLTI_U_B
  { 1017,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #1017 = CLTI_U_D
  { 1018,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #1018 = CLTI_U_H
  { 1019,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #1019 = CLTI_U_W
  { 1020,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1020 = CLT_S_B
  { 1021,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1021 = CLT_S_D
  { 1022,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1022 = CLT_S_H
  { 1023,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1023 = CLT_S_W
  { 1024,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1024 = CLT_U_B
  { 1025,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1025 = CLT_U_D
  { 1026,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1026 = CLT_U_H
  { 1027,	3,	1,	4,	549,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1027 = CLT_U_W
  { 1028,	2,	1,	4,	470,	0, 0x1ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #1028 = CLZ
  { 1029,	2,	1,	4,	737,	0, 0x1ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #1029 = CLZ_MM
  { 1030,	2,	1,	4,	778,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #1030 = CLZ_MMR6
  { 1031,	2,	1,	4,	724,	0, 0x6ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #1031 = CLZ_R6
  { 1032,	3,	1,	4,	1460,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo203, -1 ,nullptr },  // Inst #1032 = CMPGDU_EQ_QB
  { 1033,	3,	1,	4,	1624,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo203, -1 ,nullptr },  // Inst #1033 = CMPGDU_EQ_QB_MMR2
  { 1034,	3,	1,	4,	1461,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo203, -1 ,nullptr },  // Inst #1034 = CMPGDU_LE_QB
  { 1035,	3,	1,	4,	1625,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo203, -1 ,nullptr },  // Inst #1035 = CMPGDU_LE_QB_MMR2
  { 1036,	3,	1,	4,	1462,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo203, -1 ,nullptr },  // Inst #1036 = CMPGDU_LT_QB
  { 1037,	3,	1,	4,	1626,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo203, -1 ,nullptr },  // Inst #1037 = CMPGDU_LT_QB_MMR2
  { 1038,	3,	1,	4,	1357,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1038 = CMPGU_EQ_QB
  { 1039,	3,	1,	4,	1508,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1039 = CMPGU_EQ_QB_MM
  { 1040,	3,	1,	4,	1358,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1040 = CMPGU_LE_QB
  { 1041,	3,	1,	4,	1509,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1041 = CMPGU_LE_QB_MM
  { 1042,	3,	1,	4,	1359,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1042 = CMPGU_LT_QB
  { 1043,	3,	1,	4,	1510,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1043 = CMPGU_LT_QB_MM
  { 1044,	2,	0,	4,	1360,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo158, -1 ,nullptr },  // Inst #1044 = CMPU_EQ_QB
  { 1045,	2,	0,	4,	1511,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo158, -1 ,nullptr },  // Inst #1045 = CMPU_EQ_QB_MM
  { 1046,	2,	0,	4,	1361,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo158, -1 ,nullptr },  // Inst #1046 = CMPU_LE_QB
  { 1047,	2,	0,	4,	1512,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo158, -1 ,nullptr },  // Inst #1047 = CMPU_LE_QB_MM
  { 1048,	2,	0,	4,	1362,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo158, -1 ,nullptr },  // Inst #1048 = CMPU_LT_QB
  { 1049,	2,	0,	4,	1513,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo158, -1 ,nullptr },  // Inst #1049 = CMPU_LT_QB_MM
  { 1050,	3,	1,	4,	1290,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1050 = CMP_AF_D_MMR6
  { 1051,	3,	1,	4,	1291,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1051 = CMP_AF_S_MMR6
  { 1052,	3,	1,	4,	556,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1052 = CMP_EQ_D
  { 1053,	3,	1,	4,	1290,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1053 = CMP_EQ_D_MMR6
  { 1054,	2,	0,	4,	1363,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo158, -1 ,nullptr },  // Inst #1054 = CMP_EQ_PH
  { 1055,	2,	0,	4,	1514,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo158, -1 ,nullptr },  // Inst #1055 = CMP_EQ_PH_MM
  { 1056,	3,	1,	4,	557,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1056 = CMP_EQ_S
  { 1057,	3,	1,	4,	1291,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1057 = CMP_EQ_S_MMR6
  { 1058,	3,	1,	4,	1660,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1058 = CMP_F_D
  { 1059,	3,	1,	4,	1661,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1059 = CMP_F_S
  { 1060,	3,	1,	4,	562,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1060 = CMP_LE_D
  { 1061,	3,	1,	4,	1290,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1061 = CMP_LE_D_MMR6
  { 1062,	2,	0,	4,	1364,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo158, -1 ,nullptr },  // Inst #1062 = CMP_LE_PH
  { 1063,	2,	0,	4,	1515,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo158, -1 ,nullptr },  // Inst #1063 = CMP_LE_PH_MM
  { 1064,	3,	1,	4,	563,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1064 = CMP_LE_S
  { 1065,	3,	1,	4,	1291,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1065 = CMP_LE_S_MMR6
  { 1066,	3,	1,	4,	558,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1066 = CMP_LT_D
  { 1067,	3,	1,	4,	1290,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1067 = CMP_LT_D_MMR6
  { 1068,	2,	0,	4,	1365,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo158, -1 ,nullptr },  // Inst #1068 = CMP_LT_PH
  { 1069,	2,	0,	4,	1516,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList10, OperandInfo158, -1 ,nullptr },  // Inst #1069 = CMP_LT_PH_MM
  { 1070,	3,	1,	4,	559,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1070 = CMP_LT_S
  { 1071,	3,	1,	4,	1291,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1071 = CMP_LT_S_MMR6
  { 1072,	3,	1,	4,	1662,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1072 = CMP_SAF_D
  { 1073,	3,	1,	4,	1292,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1073 = CMP_SAF_D_MMR6
  { 1074,	3,	1,	4,	1663,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1074 = CMP_SAF_S
  { 1075,	3,	1,	4,	1293,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1075 = CMP_SAF_S_MMR6
  { 1076,	3,	1,	4,	1664,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1076 = CMP_SEQ_D
  { 1077,	3,	1,	4,	1292,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1077 = CMP_SEQ_D_MMR6
  { 1078,	3,	1,	4,	1665,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1078 = CMP_SEQ_S
  { 1079,	3,	1,	4,	1293,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1079 = CMP_SEQ_S_MMR6
  { 1080,	3,	1,	4,	1666,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1080 = CMP_SLE_D
  { 1081,	3,	1,	4,	1292,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1081 = CMP_SLE_D_MMR6
  { 1082,	3,	1,	4,	1667,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1082 = CMP_SLE_S
  { 1083,	3,	1,	4,	1293,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1083 = CMP_SLE_S_MMR6
  { 1084,	3,	1,	4,	1668,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1084 = CMP_SLT_D
  { 1085,	3,	1,	4,	1292,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1085 = CMP_SLT_D_MMR6
  { 1086,	3,	1,	4,	1669,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1086 = CMP_SLT_S
  { 1087,	3,	1,	4,	1293,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1087 = CMP_SLT_S_MMR6
  { 1088,	3,	1,	4,	1670,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1088 = CMP_SUEQ_D
  { 1089,	3,	1,	4,	1294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1089 = CMP_SUEQ_D_MMR6
  { 1090,	3,	1,	4,	1671,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1090 = CMP_SUEQ_S
  { 1091,	3,	1,	4,	1295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1091 = CMP_SUEQ_S_MMR6
  { 1092,	3,	1,	4,	1672,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1092 = CMP_SULE_D
  { 1093,	3,	1,	4,	1294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1093 = CMP_SULE_D_MMR6
  { 1094,	3,	1,	4,	1673,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1094 = CMP_SULE_S
  { 1095,	3,	1,	4,	1295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1095 = CMP_SULE_S_MMR6
  { 1096,	3,	1,	4,	1674,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1096 = CMP_SULT_D
  { 1097,	3,	1,	4,	1294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1097 = CMP_SULT_D_MMR6
  { 1098,	3,	1,	4,	1675,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1098 = CMP_SULT_S
  { 1099,	3,	1,	4,	1295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1099 = CMP_SULT_S_MMR6
  { 1100,	3,	1,	4,	1676,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1100 = CMP_SUN_D
  { 1101,	3,	1,	4,	1292,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1101 = CMP_SUN_D_MMR6
  { 1102,	3,	1,	4,	1677,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1102 = CMP_SUN_S
  { 1103,	3,	1,	4,	1293,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1103 = CMP_SUN_S_MMR6
  { 1104,	3,	1,	4,	554,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1104 = CMP_UEQ_D
  { 1105,	3,	1,	4,	1292,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1105 = CMP_UEQ_D_MMR6
  { 1106,	3,	1,	4,	555,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1106 = CMP_UEQ_S
  { 1107,	3,	1,	4,	1293,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1107 = CMP_UEQ_S_MMR6
  { 1108,	3,	1,	4,	564,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1108 = CMP_ULE_D
  { 1109,	3,	1,	4,	1292,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1109 = CMP_ULE_D_MMR6
  { 1110,	3,	1,	4,	565,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1110 = CMP_ULE_S
  { 1111,	3,	1,	4,	1293,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1111 = CMP_ULE_S_MMR6
  { 1112,	3,	1,	4,	560,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1112 = CMP_ULT_D
  { 1113,	3,	1,	4,	1292,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1113 = CMP_ULT_D_MMR6
  { 1114,	3,	1,	4,	561,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1114 = CMP_ULT_S
  { 1115,	3,	1,	4,	1293,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1115 = CMP_ULT_S_MMR6
  { 1116,	3,	1,	4,	552,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1116 = CMP_UN_D
  { 1117,	3,	1,	4,	1290,	0, 0x16ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1117 = CMP_UN_D_MMR6
  { 1118,	3,	1,	4,	553,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1118 = CMP_UN_S
  { 1119,	3,	1,	4,	1291,	0, 0x16ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1119 = CMP_UN_S_MMR6
  { 1120,	3,	1,	4,	681,	0, 0x6ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1120 = COPY_S_B
  { 1121,	3,	1,	4,	681,	0, 0x6ULL, nullptr, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1121 = COPY_S_D
  { 1122,	3,	1,	4,	681,	0, 0x6ULL, nullptr, nullptr, OperandInfo208, -1 ,nullptr },  // Inst #1122 = COPY_S_H
  { 1123,	3,	1,	4,	681,	0, 0x6ULL, nullptr, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1123 = COPY_S_W
  { 1124,	3,	1,	4,	680,	0, 0x6ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1124 = COPY_U_B
  { 1125,	3,	1,	4,	680,	0, 0x6ULL, nullptr, nullptr, OperandInfo208, -1 ,nullptr },  // Inst #1125 = COPY_U_H
  { 1126,	3,	1,	4,	680,	0, 0x6ULL, nullptr, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1126 = COPY_U_W
  { 1127,	3,	1,	4,	1182,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1127 = CRC32B
  { 1128,	3,	1,	4,	1185,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1128 = CRC32CB
  { 1129,	3,	1,	4,	1189,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1129 = CRC32CD
  { 1130,	3,	1,	4,	1186,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1130 = CRC32CH
  { 1131,	3,	1,	4,	1187,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1131 = CRC32CW
  { 1132,	3,	1,	4,	1188,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1132 = CRC32D
  { 1133,	3,	1,	4,	1183,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1133 = CRC32H
  { 1134,	3,	1,	4,	1184,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1134 = CRC32W
  { 1135,	2,	1,	4,	677,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1135 = CTC1
  { 1136,	2,	1,	4,	1284,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1136 = CTC1_MM
  { 1137,	2,	1,	4,	1050,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo211, -1 ,nullptr },  // Inst #1137 = CTC2_MM
  { 1138,	2,	0,	4,	524,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1138 = CTCMSA
  { 1139,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1139 = CVT_D32_S
  { 1140,	2,	1,	4,	1235,	0, 0x4ULL, nullptr, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1140 = CVT_D32_S_MM
  { 1141,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1141 = CVT_D32_W
  { 1142,	2,	1,	4,	1235,	0, 0x4ULL, nullptr, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1142 = CVT_D32_W_MM
  { 1143,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1143 = CVT_D64_L
  { 1144,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1144 = CVT_D64_S
  { 1145,	2,	1,	4,	1235,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1145 = CVT_D64_S_MM
  { 1146,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1146 = CVT_D64_W
  { 1147,	2,	1,	4,	1235,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1147 = CVT_D64_W_MM
  { 1148,	2,	1,	4,	1296,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1148 = CVT_D_L_MMR6
  { 1149,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1149 = CVT_L_D64
  { 1150,	2,	1,	4,	1235,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1150 = CVT_L_D64_MM
  { 1151,	2,	1,	4,	1296,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1151 = CVT_L_D_MMR6
  { 1152,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1152 = CVT_L_S
  { 1153,	2,	1,	4,	1235,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1153 = CVT_L_S_MM
  { 1154,	2,	1,	4,	1296,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1154 = CVT_L_S_MMR6
  { 1155,	3,	1,	4,	631,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1155 = CVT_PS_S64
  { 1156,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1156 = CVT_S_D32
  { 1157,	2,	1,	4,	1235,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1157 = CVT_S_D32_MM
  { 1158,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1158 = CVT_S_D64
  { 1159,	2,	1,	4,	1235,	0, 0x4ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1159 = CVT_S_D64_MM
  { 1160,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1160 = CVT_S_L
  { 1161,	2,	1,	4,	1296,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1161 = CVT_S_L_MMR6
  { 1162,	2,	1,	4,	631,	0, 0x4ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1162 = CVT_S_PL64
  { 1163,	2,	1,	4,	631,	0, 0x4ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1163 = CVT_S_PU64
  { 1164,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1164 = CVT_S_W
  { 1165,	2,	1,	4,	1235,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1165 = CVT_S_W_MM
  { 1166,	2,	1,	4,	1296,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1166 = CVT_S_W_MMR6
  { 1167,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1167 = CVT_W_D32
  { 1168,	2,	1,	4,	1235,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1168 = CVT_W_D32_MM
  { 1169,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1169 = CVT_W_D64
  { 1170,	2,	1,	4,	1235,	0, 0x4ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1170 = CVT_W_D64_MM
  { 1171,	2,	1,	4,	630,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1171 = CVT_W_S
  { 1172,	2,	1,	4,	1235,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1172 = CVT_W_S_MM
  { 1173,	2,	1,	4,	1296,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1173 = CVT_W_S_MMR6
  { 1174,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1174 = C_EQ_D32
  { 1175,	3,	1,	4,	1248,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1175 = C_EQ_D32_MM
  { 1176,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1176 = C_EQ_D64
  { 1177,	3,	1,	4,	1248,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1177 = C_EQ_D64_MM
  { 1178,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1178 = C_EQ_S
  { 1179,	3,	1,	4,	1249,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1179 = C_EQ_S_MM
  { 1180,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1180 = C_F_D32
  { 1181,	3,	1,	4,	1246,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1181 = C_F_D32_MM
  { 1182,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1182 = C_F_D64
  { 1183,	3,	1,	4,	1246,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1183 = C_F_D64_MM
  { 1184,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1184 = C_F_S
  { 1185,	3,	1,	4,	1247,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1185 = C_F_S_MM
  { 1186,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1186 = C_LE_D32
  { 1187,	3,	1,	4,	1248,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1187 = C_LE_D32_MM
  { 1188,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1188 = C_LE_D64
  { 1189,	3,	1,	4,	1248,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1189 = C_LE_D64_MM
  { 1190,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1190 = C_LE_S
  { 1191,	3,	1,	4,	1249,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1191 = C_LE_S_MM
  { 1192,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1192 = C_LT_D32
  { 1193,	3,	1,	4,	1248,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1193 = C_LT_D32_MM
  { 1194,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1194 = C_LT_D64
  { 1195,	3,	1,	4,	1248,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1195 = C_LT_D64_MM
  { 1196,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1196 = C_LT_S
  { 1197,	3,	1,	4,	1249,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1197 = C_LT_S_MM
  { 1198,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1198 = C_NGE_D32
  { 1199,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1199 = C_NGE_D32_MM
  { 1200,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1200 = C_NGE_D64
  { 1201,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1201 = C_NGE_D64_MM
  { 1202,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1202 = C_NGE_S
  { 1203,	3,	1,	4,	1251,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1203 = C_NGE_S_MM
  { 1204,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1204 = C_NGLE_D32
  { 1205,	3,	1,	4,	1252,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1205 = C_NGLE_D32_MM
  { 1206,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1206 = C_NGLE_D64
  { 1207,	3,	1,	4,	1252,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1207 = C_NGLE_D64_MM
  { 1208,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1208 = C_NGLE_S
  { 1209,	3,	1,	4,	1253,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1209 = C_NGLE_S_MM
  { 1210,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1210 = C_NGL_D32
  { 1211,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1211 = C_NGL_D32_MM
  { 1212,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1212 = C_NGL_D64
  { 1213,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1213 = C_NGL_D64_MM
  { 1214,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1214 = C_NGL_S
  { 1215,	3,	1,	4,	1251,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1215 = C_NGL_S_MM
  { 1216,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1216 = C_NGT_D32
  { 1217,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1217 = C_NGT_D32_MM
  { 1218,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1218 = C_NGT_D64
  { 1219,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1219 = C_NGT_D64_MM
  { 1220,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1220 = C_NGT_S
  { 1221,	3,	1,	4,	1251,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1221 = C_NGT_S_MM
  { 1222,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1222 = C_OLE_D32
  { 1223,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1223 = C_OLE_D32_MM
  { 1224,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1224 = C_OLE_D64
  { 1225,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1225 = C_OLE_D64_MM
  { 1226,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1226 = C_OLE_S
  { 1227,	3,	1,	4,	1251,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1227 = C_OLE_S_MM
  { 1228,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1228 = C_OLT_D32
  { 1229,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1229 = C_OLT_D32_MM
  { 1230,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1230 = C_OLT_D64
  { 1231,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1231 = C_OLT_D64_MM
  { 1232,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1232 = C_OLT_S
  { 1233,	3,	1,	4,	1251,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1233 = C_OLT_S_MM
  { 1234,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1234 = C_SEQ_D32
  { 1235,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1235 = C_SEQ_D32_MM
  { 1236,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1236 = C_SEQ_D64
  { 1237,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1237 = C_SEQ_D64_MM
  { 1238,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1238 = C_SEQ_S
  { 1239,	3,	1,	4,	1251,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1239 = C_SEQ_S_MM
  { 1240,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1240 = C_SF_D32
  { 1241,	3,	1,	4,	1248,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1241 = C_SF_D32_MM
  { 1242,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1242 = C_SF_D64
  { 1243,	3,	1,	4,	1248,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1243 = C_SF_D64_MM
  { 1244,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1244 = C_SF_S
  { 1245,	3,	1,	4,	1249,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1245 = C_SF_S_MM
  { 1246,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1246 = C_UEQ_D32
  { 1247,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1247 = C_UEQ_D32_MM
  { 1248,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1248 = C_UEQ_D64
  { 1249,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1249 = C_UEQ_D64_MM
  { 1250,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1250 = C_UEQ_S
  { 1251,	3,	1,	4,	1251,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1251 = C_UEQ_S_MM
  { 1252,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1252 = C_ULE_D32
  { 1253,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1253 = C_ULE_D32_MM
  { 1254,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1254 = C_ULE_D64
  { 1255,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1255 = C_ULE_D64_MM
  { 1256,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1256 = C_ULE_S
  { 1257,	3,	1,	4,	1251,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1257 = C_ULE_S_MM
  { 1258,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1258 = C_ULT_D32
  { 1259,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1259 = C_ULT_D32_MM
  { 1260,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1260 = C_ULT_D64
  { 1261,	3,	1,	4,	1250,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1261 = C_ULT_D64_MM
  { 1262,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1262 = C_ULT_S
  { 1263,	3,	1,	4,	1251,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1263 = C_ULT_S_MM
  { 1264,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1264 = C_UN_D32
  { 1265,	3,	1,	4,	1248,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1265 = C_UN_D32_MM
  { 1266,	3,	1,	4,	632,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1266 = C_UN_D64
  { 1267,	3,	1,	4,	1248,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1267 = C_UN_D64_MM
  { 1268,	3,	1,	4,	633,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1268 = C_UN_S
  { 1269,	3,	1,	4,	1249,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1269 = C_UN_S_MM
  { 1270,	2,	0,	2,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo120, -1 ,nullptr },  // Inst #1270 = CmpRxRy16
  { 1271,	2,	0,	2,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo172, -1 ,nullptr },  // Inst #1271 = CmpiRxImm16
  { 1272,	2,	0,	4,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo172, -1 ,nullptr },  // Inst #1272 = CmpiRxImmX16
  { 1273,	3,	1,	4,	808,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #1273 = DADD
  { 1274,	3,	1,	4,	809,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #1274 = DADDi
  { 1275,	3,	1,	4,	810,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #1275 = DADDiu
  { 1276,	3,	1,	4,	811,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #1276 = DADDu
  { 1277,	3,	1,	4,	837,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo218, -1 ,nullptr },  // Inst #1277 = DAHI
  { 1278,	4,	1,	4,	836,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo219, -1 ,nullptr },  // Inst #1278 = DALIGN
  { 1279,	3,	1,	4,	838,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo218, -1 ,nullptr },  // Inst #1279 = DATI
  { 1280,	3,	1,	4,	839,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #1280 = DAUI
  { 1281,	2,	1,	4,	842,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1281 = DBITSWAP
  { 1282,	2,	1,	4,	812,	0, 0x1ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1282 = DCLO
  { 1283,	2,	1,	4,	840,	0, 0x6ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1283 = DCLO_R6
  { 1284,	2,	1,	4,	813,	0, 0x1ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1284 = DCLZ
  { 1285,	2,	1,	4,	841,	0, 0x6ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1285 = DCLZ_R6
  { 1286,	3,	1,	4,	907,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #1286 = DDIV
  { 1287,	3,	1,	4,	909,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #1287 = DDIVU
  { 1288,	0,	0,	4,	375,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1288 = DERET
  { 1289,	0,	0,	4,	944,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1289 = DERET_MM
  { 1290,	0,	0,	4,	980,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1290 = DERET_MMR6
  { 1291,	4,	1,	4,	814,	0, 0x1ULL, nullptr, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #1291 = DEXT
  { 1292,	4,	1,	4,	799,	0, 0x1ULL, nullptr, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1292 = DEXT64_32
  { 1293,	4,	1,	4,	814,	0, 0x1ULL, nullptr, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #1293 = DEXTM
  { 1294,	4,	1,	4,	814,	0, 0x1ULL, nullptr, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #1294 = DEXTU
  { 1295,	1,	1,	4,	471,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1295 = DI
  { 1296,	5,	1,	4,	815,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1296 = DINS
  { 1297,	5,	1,	4,	815,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1297 = DINSM
  { 1298,	5,	1,	4,	815,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1298 = DINSU
  { 1299,	3,	1,	4,	479,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1299 = DIV
  { 1300,	3,	1,	4,	480,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1300 = DIVU
  { 1301,	3,	1,	4,	890,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1301 = DIVU_MMR6
  { 1302,	3,	1,	4,	891,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1302 = DIV_MMR6
  { 1303,	3,	1,	4,	609,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1303 = DIV_S_B
  { 1304,	3,	1,	4,	609,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1304 = DIV_S_D
  { 1305,	3,	1,	4,	609,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1305 = DIV_S_H
  { 1306,	3,	1,	4,	609,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1306 = DIV_S_W
  { 1307,	3,	1,	4,	609,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1307 = DIV_U_B
  { 1308,	3,	1,	4,	609,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1308 = DIV_U_D
  { 1309,	3,	1,	4,	609,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1309 = DIV_U_H
  { 1310,	3,	1,	4,	609,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1310 = DIV_U_W
  { 1311,	1,	1,	4,	1023,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1311 = DI_MM
  { 1312,	1,	1,	4,	1040,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1312 = DI_MMR6
  { 1313,	4,	1,	4,	843,	0, 0x6ULL, nullptr, nullptr, OperandInfo219, -1 ,nullptr },  // Inst #1313 = DLSA
  { 1314,	4,	1,	4,	843,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo219, -1 ,nullptr },  // Inst #1314 = DLSA_R6
  { 1315,	3,	1,	4,	1045,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1315 = DMFC0
  { 1316,	2,	1,	4,	1329,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Bitcast), 0x4ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1316 = DMFC1
  { 1317,	3,	1,	4,	1047,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1317 = DMFC2
  { 1318,	2,	2,	4,	1193,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #1318 = DMFC2_OCTEON
  { 1319,	3,	1,	4,	1059,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1319 = DMFGC0
  { 1320,	3,	1,	4,	908,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #1320 = DMOD
  { 1321,	3,	1,	4,	910,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #1321 = DMODU
  { 1322,	1,	1,	4,	1051,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1322 = DMT
  { 1323,	3,	1,	4,	1046,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1323 = DMTC0
  { 1324,	2,	1,	4,	1330,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Bitcast), 0x4ULL, nullptr, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #1324 = DMTC1
  { 1325,	3,	1,	4,	1048,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1325 = DMTC2
  { 1326,	2,	2,	4,	1194,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #1326 = DMTC2_OCTEON
  { 1327,	3,	1,	4,	1060,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1327 = DMTGC0
  { 1328,	3,	1,	4,	904,	0, 0x6ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #1328 = DMUH
  { 1329,	3,	1,	4,	905,	0, 0x6ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #1329 = DMUHU
  { 1330,	3,	1,	4,	1201,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, ImplicitList11, OperandInfo63, -1 ,nullptr },  // Inst #1330 = DMUL
  { 1331,	2,	0,	4,	894,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, ImplicitList12, OperandInfo112, -1 ,nullptr },  // Inst #1331 = DMULT
  { 1332,	2,	0,	4,	895,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, ImplicitList12, OperandInfo112, -1 ,nullptr },  // Inst #1332 = DMULTu
  { 1333,	3,	1,	4,	893,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #1333 = DMULU
  { 1334,	3,	1,	4,	906,	0, 0x6ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #1334 = DMUL_R6
  { 1335,	3,	1,	4,	659,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1335 = DOTP_S_D
  { 1336,	3,	1,	4,	659,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1336 = DOTP_S_H
  { 1337,	3,	1,	4,	659,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1337 = DOTP_S_W
  { 1338,	3,	1,	4,	659,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1338 = DOTP_U_D
  { 1339,	3,	1,	4,	659,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1339 = DOTP_U_H
  { 1340,	3,	1,	4,	659,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1340 = DOTP_U_W
  { 1341,	4,	1,	4,	657,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1341 = DPADD_S_D
  { 1342,	4,	1,	4,	657,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo230, -1 ,nullptr },  // Inst #1342 = DPADD_S_H
  { 1343,	4,	1,	4,	657,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1343 = DPADD_S_W
  { 1344,	4,	1,	4,	657,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1344 = DPADD_U_D
  { 1345,	4,	1,	4,	657,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo230, -1 ,nullptr },  // Inst #1345 = DPADD_U_H
  { 1346,	4,	1,	4,	657,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1346 = DPADD_U_W
  { 1347,	4,	1,	4,	1464,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1347 = DPAQX_SA_W_PH
  { 1348,	4,	1,	4,	1628,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1348 = DPAQX_SA_W_PH_MMR2
  { 1349,	4,	1,	4,	1465,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1349 = DPAQX_S_W_PH
  { 1350,	4,	1,	4,	1629,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1350 = DPAQX_S_W_PH_MMR2
  { 1351,	4,	1,	4,	1366,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1351 = DPAQ_SA_L_W
  { 1352,	4,	1,	4,	1517,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1352 = DPAQ_SA_L_W_MM
  { 1353,	4,	1,	4,	1367,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1353 = DPAQ_S_W_PH
  { 1354,	4,	1,	4,	1518,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1354 = DPAQ_S_W_PH_MM
  { 1355,	4,	1,	4,	1368,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1355 = DPAU_H_QBL
  { 1356,	4,	1,	4,	1519,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1356 = DPAU_H_QBL_MM
  { 1357,	4,	1,	4,	1369,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1357 = DPAU_H_QBR
  { 1358,	4,	1,	4,	1520,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1358 = DPAU_H_QBR_MM
  { 1359,	4,	1,	4,	1466,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1359 = DPAX_W_PH
  { 1360,	4,	1,	4,	1630,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1360 = DPAX_W_PH_MMR2
  { 1361,	4,	1,	4,	1463,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1361 = DPA_W_PH
  { 1362,	4,	1,	4,	1627,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1362 = DPA_W_PH_MMR2
  { 1363,	2,	1,	4,	1195,	0, 0x1ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1363 = DPOP
  { 1364,	4,	1,	4,	1469,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1364 = DPSQX_SA_W_PH
  { 1365,	4,	1,	4,	1633,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1365 = DPSQX_SA_W_PH_MMR2
  { 1366,	4,	1,	4,	1468,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1366 = DPSQX_S_W_PH
  { 1367,	4,	1,	4,	1632,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1367 = DPSQX_S_W_PH_MMR2
  { 1368,	4,	1,	4,	1370,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1368 = DPSQ_SA_L_W
  { 1369,	4,	1,	4,	1521,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1369 = DPSQ_SA_L_W_MM
  { 1370,	4,	1,	4,	1371,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1370 = DPSQ_S_W_PH
  { 1371,	4,	1,	4,	1522,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1371 = DPSQ_S_W_PH_MM
  { 1372,	4,	1,	4,	658,	0, 0x6ULL, nullptr, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1372 = DPSUB_S_D
  { 1373,	4,	1,	4,	658,	0, 0x6ULL, nullptr, nullptr, OperandInfo230, -1 ,nullptr },  // Inst #1373 = DPSUB_S_H
  { 1374,	4,	1,	4,	658,	0, 0x6ULL, nullptr, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1374 = DPSUB_S_W
  { 1375,	4,	1,	4,	658,	0, 0x6ULL, nullptr, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1375 = DPSUB_U_D
  { 1376,	4,	1,	4,	658,	0, 0x6ULL, nullptr, nullptr, OperandInfo230, -1 ,nullptr },  // Inst #1376 = DPSUB_U_H
  { 1377,	4,	1,	4,	658,	0, 0x6ULL, nullptr, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1377 = DPSUB_U_W
  { 1378,	4,	1,	4,	1372,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1378 = DPSU_H_QBL
  { 1379,	4,	1,	4,	1523,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1379 = DPSU_H_QBL_MM
  { 1380,	4,	1,	4,	1373,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1380 = DPSU_H_QBR
  { 1381,	4,	1,	4,	1524,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1381 = DPSU_H_QBR_MM
  { 1382,	4,	1,	4,	1470,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1382 = DPSX_W_PH
  { 1383,	4,	1,	4,	1634,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1383 = DPSX_W_PH_MMR2
  { 1384,	4,	1,	4,	1467,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1384 = DPS_W_PH
  { 1385,	4,	1,	4,	1631,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1385 = DPS_W_PH_MMR2
  { 1386,	3,	1,	4,	816,	0, 0x1ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #1386 = DROTR
  { 1387,	3,	1,	4,	817,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #1387 = DROTR32
  { 1388,	3,	1,	4,	818,	0, 0x1ULL, nullptr, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1388 = DROTRV
  { 1389,	2,	1,	4,	819,	0, 0x1ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1389 = DSBH
  { 1390,	2,	0,	4,	896,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, ImplicitList12, OperandInfo112, -1 ,nullptr },  // Inst #1390 = DSDIV
  { 1391,	2,	1,	4,	820,	0, 0x1ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1391 = DSHD
  { 1392,	3,	1,	4,	821,	0, 0x1ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #1392 = DSLL
  { 1393,	3,	1,	4,	822,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #1393 = DSLL32
  { 1394,	2,	1,	4,	800,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1394 = DSLL64_32
  { 1395,	3,	1,	4,	823,	0, 0x1ULL, nullptr, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1395 = DSLLV
  { 1396,	3,	1,	4,	824,	0, 0x1ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #1396 = DSRA
  { 1397,	3,	1,	4,	825,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #1397 = DSRA32
  { 1398,	3,	1,	4,	826,	0, 0x1ULL, nullptr, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1398 = DSRAV
  { 1399,	3,	1,	4,	827,	0, 0x1ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #1399 = DSRL
  { 1400,	3,	1,	4,	828,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #1400 = DSRL32
  { 1401,	3,	1,	4,	829,	0, 0x1ULL, nullptr, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1401 = DSRLV
  { 1402,	3,	1,	4,	830,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #1402 = DSUB
  { 1403,	3,	1,	4,	831,	0|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #1403 = DSUBu
  { 1404,	2,	0,	4,	897,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, ImplicitList12, OperandInfo112, -1 ,nullptr },  // Inst #1404 = DUDIV
  { 1405,	1,	1,	4,	1018,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1405 = DVP
  { 1406,	1,	1,	4,	1052,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1406 = DVPE
  { 1407,	1,	1,	4,	1039,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1407 = DVP_MMR6
  { 1408,	2,	0,	2,	868,	0, 0x0ULL, nullptr, ImplicitList6, OperandInfo120, -1 ,nullptr },  // Inst #1408 = DivRxRy16
  { 1409,	2,	0,	2,	869,	0, 0x0ULL, nullptr, ImplicitList6, OperandInfo120, -1 ,nullptr },  // Inst #1409 = DivuRxRy16
  { 1410,	0,	0,	4,	474,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1410 = EHB
  { 1411,	0,	0,	4,	1025,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1411 = EHB_MM
  { 1412,	0,	0,	4,	1042,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1412 = EHB_MMR6
  { 1413,	1,	1,	4,	472,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1413 = EI
  { 1414,	1,	1,	4,	1024,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1414 = EI_MM
  { 1415,	1,	1,	4,	1041,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1415 = EI_MMR6
  { 1416,	1,	1,	4,	1053,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1416 = EMT
  { 1417,	0,	0,	4,	376,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1417 = ERET
  { 1418,	0,	0,	4,	378,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1418 = ERETNC
  { 1419,	0,	0,	4,	981,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1419 = ERETNC_MMR6
  { 1420,	0,	0,	4,	945,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1420 = ERET_MM
  { 1421,	0,	0,	4,	983,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1421 = ERET_MMR6
  { 1422,	1,	1,	4,	1017,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1422 = EVP
  { 1423,	1,	1,	4,	1054,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1423 = EVPE
  { 1424,	1,	1,	4,	1038,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1424 = EVP_MMR6
  { 1425,	4,	1,	4,	489,	0, 0x1ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1425 = EXT
  { 1426,	3,	1,	4,	1377,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList4, ImplicitList14, OperandInfo235, -1 ,nullptr },  // Inst #1426 = EXTP
  { 1427,	3,	1,	4,	1375,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList4, ImplicitList15, OperandInfo235, -1 ,nullptr },  // Inst #1427 = EXTPDP
  { 1428,	3,	1,	4,	1374,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList4, ImplicitList15, OperandInfo236, -1 ,nullptr },  // Inst #1428 = EXTPDPV
  { 1429,	3,	1,	4,	1525,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList4, ImplicitList15, OperandInfo236, -1 ,nullptr },  // Inst #1429 = EXTPDPV_MM
  { 1430,	3,	1,	4,	1526,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList4, ImplicitList15, OperandInfo235, -1 ,nullptr },  // Inst #1430 = EXTPDP_MM
  { 1431,	3,	1,	4,	1376,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList4, ImplicitList14, OperandInfo236, -1 ,nullptr },  // Inst #1431 = EXTPV
  { 1432,	3,	1,	4,	1527,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList4, ImplicitList14, OperandInfo236, -1 ,nullptr },  // Inst #1432 = EXTPV_MM
  { 1433,	3,	1,	4,	1528,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList4, ImplicitList14, OperandInfo235, -1 ,nullptr },  // Inst #1433 = EXTP_MM
  { 1434,	3,	1,	4,	1334,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo236, -1 ,nullptr },  // Inst #1434 = EXTRV_RS_W
  { 1435,	3,	1,	4,	1529,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo236, -1 ,nullptr },  // Inst #1435 = EXTRV_RS_W_MM
  { 1436,	3,	1,	4,	1335,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo236, -1 ,nullptr },  // Inst #1436 = EXTRV_R_W
  { 1437,	3,	1,	4,	1530,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo236, -1 ,nullptr },  // Inst #1437 = EXTRV_R_W_MM
  { 1438,	3,	1,	4,	1336,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo236, -1 ,nullptr },  // Inst #1438 = EXTRV_S_H
  { 1439,	3,	1,	4,	1531,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo236, -1 ,nullptr },  // Inst #1439 = EXTRV_S_H_MM
  { 1440,	3,	1,	4,	1337,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo236, -1 ,nullptr },  // Inst #1440 = EXTRV_W
  { 1441,	3,	1,	4,	1532,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo236, -1 ,nullptr },  // Inst #1441 = EXTRV_W_MM
  { 1442,	3,	1,	4,	1338,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo235, -1 ,nullptr },  // Inst #1442 = EXTR_RS_W
  { 1443,	3,	1,	4,	1533,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo235, -1 ,nullptr },  // Inst #1443 = EXTR_RS_W_MM
  { 1444,	3,	1,	4,	1339,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo235, -1 ,nullptr },  // Inst #1444 = EXTR_R_W
  { 1445,	3,	1,	4,	1534,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo235, -1 ,nullptr },  // Inst #1445 = EXTR_R_W_MM
  { 1446,	3,	1,	4,	1340,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo235, -1 ,nullptr },  // Inst #1446 = EXTR_S_H
  { 1447,	3,	1,	4,	1535,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo235, -1 ,nullptr },  // Inst #1447 = EXTR_S_H_MM
  { 1448,	3,	1,	4,	1341,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo235, -1 ,nullptr },  // Inst #1448 = EXTR_W
  { 1449,	3,	1,	4,	1536,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList16, OperandInfo235, -1 ,nullptr },  // Inst #1449 = EXTR_W_MM
  { 1450,	4,	1,	4,	1196,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #1450 = EXTS
  { 1451,	4,	1,	4,	1196,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #1451 = EXTS32
  { 1452,	4,	1,	4,	738,	0, 0x1ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1452 = EXT_MM
  { 1453,	4,	1,	4,	779,	0, 0x1ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1453 = EXT_MMR6
  { 1454,	2,	1,	4,	525,	0, 0x4ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1454 = FABS_D32
  { 1455,	2,	1,	4,	1260,	0, 0x4ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1455 = FABS_D32_MM
  { 1456,	2,	1,	4,	525,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1456 = FABS_D64
  { 1457,	2,	1,	4,	1260,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1457 = FABS_D64_MM
  { 1458,	2,	1,	4,	525,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1458 = FABS_S
  { 1459,	2,	1,	4,	1261,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1459 = FABS_S_MM
  { 1460,	3,	1,	4,	655,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1460 = FADD_D
  { 1461,	3,	1,	4,	623,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1461 = FADD_D32
  { 1462,	3,	1,	4,	1263,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1462 = FADD_D32_MM
  { 1463,	3,	1,	4,	623,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1463 = FADD_D64
  { 1464,	3,	1,	4,	1263,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1464 = FADD_D64_MM
  { 1465,	3,	1,	4,	624,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1465 = FADD_S
  { 1466,	3,	1,	4,	1264,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1466 = FADD_S_MM
  { 1467,	3,	1,	4,	1304,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1467 = FADD_S_MMR6
  { 1468,	3,	1,	4,	655,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1468 = FADD_W
  { 1469,	3,	1,	4,	572,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1469 = FCAF_D
  { 1470,	3,	1,	4,	572,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1470 = FCAF_W
  { 1471,	3,	1,	4,	573,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1471 = FCEQ_D
  { 1472,	3,	1,	4,	573,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1472 = FCEQ_W
  { 1473,	2,	1,	4,	594,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #1473 = FCLASS_D
  { 1474,	2,	1,	4,	594,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #1474 = FCLASS_W
  { 1475,	3,	1,	4,	574,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1475 = FCLE_D
  { 1476,	3,	1,	4,	574,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1476 = FCLE_W
  { 1477,	3,	1,	4,	575,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1477 = FCLT_D
  { 1478,	3,	1,	4,	575,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1478 = FCLT_W
  { 1479,	3,	0,	4,	634,	0, 0x44ULL, nullptr, ImplicitList17, OperandInfo241, -1 ,nullptr },  // Inst #1479 = FCMP_D32
  { 1480,	3,	0,	4,	1255,	0, 0x44ULL, nullptr, ImplicitList17, OperandInfo241, -1 ,nullptr },  // Inst #1480 = FCMP_D32_MM
  { 1481,	3,	0,	4,	634,	0, 0x44ULL, nullptr, ImplicitList17, OperandInfo242, -1 ,nullptr },  // Inst #1481 = FCMP_D64
  { 1482,	3,	0,	4,	635,	0, 0x44ULL, nullptr, ImplicitList17, OperandInfo243, -1 ,nullptr },  // Inst #1482 = FCMP_S32
  { 1483,	3,	0,	4,	1254,	0, 0x44ULL, nullptr, ImplicitList17, OperandInfo243, -1 ,nullptr },  // Inst #1483 = FCMP_S32_MM
  { 1484,	3,	1,	4,	576,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1484 = FCNE_D
  { 1485,	3,	1,	4,	576,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1485 = FCNE_W
  { 1486,	3,	1,	4,	577,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1486 = FCOR_D
  { 1487,	3,	1,	4,	577,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1487 = FCOR_W
  { 1488,	3,	1,	4,	578,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1488 = FCUEQ_D
  { 1489,	3,	1,	4,	578,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1489 = FCUEQ_W
  { 1490,	3,	1,	4,	579,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1490 = FCULE_D
  { 1491,	3,	1,	4,	579,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1491 = FCULE_W
  { 1492,	3,	1,	4,	580,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1492 = FCULT_D
  { 1493,	3,	1,	4,	580,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1493 = FCULT_W
  { 1494,	3,	1,	4,	581,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1494 = FCUNE_D
  { 1495,	3,	1,	4,	581,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1495 = FCUNE_W
  { 1496,	3,	1,	4,	582,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1496 = FCUN_D
  { 1497,	3,	1,	4,	582,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1497 = FCUN_W
  { 1498,	3,	1,	4,	651,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1498 = FDIV_D
  { 1499,	3,	1,	4,	639,	0, 0x4ULL, nullptr, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1499 = FDIV_D32
  { 1500,	3,	1,	4,	1274,	0, 0x4ULL, nullptr, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1500 = FDIV_D32_MM
  { 1501,	3,	1,	4,	639,	0, 0x4ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1501 = FDIV_D64
  { 1502,	3,	1,	4,	1274,	0, 0x4ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1502 = FDIV_D64_MM
  { 1503,	3,	1,	4,	638,	0, 0x4ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1503 = FDIV_S
  { 1504,	3,	1,	4,	1273,	0, 0x4ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1504 = FDIV_S_MM
  { 1505,	3,	1,	4,	1326,	0, 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1505 = FDIV_S_MMR6
  { 1506,	3,	1,	4,	650,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1506 = FDIV_W
  { 1507,	3,	1,	4,	591,	0, 0x6ULL, nullptr, nullptr, OperandInfo244, -1 ,nullptr },  // Inst #1507 = FEXDO_H
  { 1508,	3,	1,	4,	591,	0, 0x6ULL, nullptr, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1508 = FEXDO_W
  { 1509,	3,	1,	4,	548,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1509 = FEXP2_D
  { 1510,	3,	1,	4,	548,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1510 = FEXP2_W
  { 1511,	2,	1,	4,	592,	0, 0x6ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1511 = FEXUPL_D
  { 1512,	2,	1,	4,	592,	0, 0x6ULL, nullptr, nullptr, OperandInfo247, -1 ,nullptr },  // Inst #1512 = FEXUPL_W
  { 1513,	2,	1,	4,	593,	0, 0x6ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1513 = FEXUPR_D
  { 1514,	2,	1,	4,	593,	0, 0x6ULL, nullptr, nullptr, OperandInfo247, -1 ,nullptr },  // Inst #1514 = FEXUPR_W
  { 1515,	2,	1,	4,	584,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #1515 = FFINT_S_D
  { 1516,	2,	1,	4,	584,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #1516 = FFINT_S_W
  { 1517,	2,	1,	4,	584,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #1517 = FFINT_U_D
  { 1518,	2,	1,	4,	584,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #1518 = FFINT_U_W
  { 1519,	2,	1,	4,	585,	0, 0x6ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1519 = FFQL_D
  { 1520,	2,	1,	4,	585,	0, 0x6ULL, nullptr, nullptr, OperandInfo247, -1 ,nullptr },  // Inst #1520 = FFQL_W
  { 1521,	2,	1,	4,	586,	0, 0x6ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1521 = FFQR_D
  { 1522,	2,	1,	4,	586,	0, 0x6ULL, nullptr, nullptr, OperandInfo247, -1 ,nullptr },  // Inst #1522 = FFQR_W
  { 1523,	2,	1,	4,	539,	0, 0x6ULL, nullptr, nullptr, OperandInfo248, -1 ,nullptr },  // Inst #1523 = FILL_B
  { 1524,	2,	1,	4,	539,	0, 0x6ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1524 = FILL_D
  { 1525,	2,	1,	4,	539,	0, 0x6ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1525 = FILL_H
  { 1526,	2,	1,	4,	539,	0, 0x6ULL, nullptr, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1526 = FILL_W
  { 1527,	2,	1,	4,	599,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #1527 = FLOG2_D
  { 1528,	2,	1,	4,	599,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #1528 = FLOG2_W
  { 1529,	2,	1,	4,	710,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1529 = FLOOR_L_D64
  { 1530,	2,	1,	4,	1299,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1530 = FLOOR_L_D_MMR6
  { 1531,	2,	1,	4,	710,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1531 = FLOOR_L_S
  { 1532,	2,	1,	4,	1299,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1532 = FLOOR_L_S_MMR6
  { 1533,	2,	1,	4,	710,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1533 = FLOOR_W_D32
  { 1534,	2,	1,	4,	710,	0, 0x4ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1534 = FLOOR_W_D64
  { 1535,	2,	1,	4,	1299,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1535 = FLOOR_W_D_MMR6
  { 1536,	2,	1,	4,	1237,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1536 = FLOOR_W_MM
  { 1537,	2,	1,	4,	710,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1537 = FLOOR_W_S
  { 1538,	2,	1,	4,	1237,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1538 = FLOOR_W_S_MM
  { 1539,	2,	1,	4,	1299,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1539 = FLOOR_W_S_MMR6
  { 1540,	4,	1,	4,	648,	0, 0x6ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #1540 = FMADD_D
  { 1541,	4,	1,	4,	648,	0, 0x6ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #1541 = FMADD_W
  { 1542,	3,	1,	4,	595,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1542 = FMAX_A_D
  { 1543,	3,	1,	4,	595,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1543 = FMAX_A_W
  { 1544,	3,	1,	4,	596,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1544 = FMAX_D
  { 1545,	3,	1,	4,	596,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1545 = FMAX_W
  { 1546,	3,	1,	4,	597,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1546 = FMIN_A_D
  { 1547,	3,	1,	4,	597,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1547 = FMIN_A_W
  { 1548,	3,	1,	4,	598,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1548 = FMIN_D
  { 1549,	3,	1,	4,	598,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1549 = FMIN_W
  { 1550,	2,	1,	4,	530,	0|(1ULL<<MCID::MoveReg), 0x4ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1550 = FMOV_D32
  { 1551,	2,	1,	4,	1265,	0, 0x4ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1551 = FMOV_D32_MM
  { 1552,	2,	1,	4,	530,	0|(1ULL<<MCID::MoveReg), 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1552 = FMOV_D64
  { 1553,	2,	1,	4,	1265,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1553 = FMOV_D64_MM
  { 1554,	2,	1,	4,	1325,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1554 = FMOV_D_MMR6
  { 1555,	2,	1,	4,	531,	0|(1ULL<<MCID::MoveReg), 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1555 = FMOV_S
  { 1556,	2,	1,	4,	1266,	0|(1ULL<<MCID::MoveReg), 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1556 = FMOV_S_MM
  { 1557,	2,	1,	4,	1322,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1557 = FMOV_S_MMR6
  { 1558,	4,	1,	4,	649,	0, 0x6ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #1558 = FMSUB_D
  { 1559,	4,	1,	4,	649,	0, 0x6ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #1559 = FMSUB_W
  { 1560,	3,	1,	4,	654,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1560 = FMUL_D
  { 1561,	3,	1,	4,	625,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1561 = FMUL_D32
  { 1562,	3,	1,	4,	1267,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1562 = FMUL_D32_MM
  { 1563,	3,	1,	4,	625,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1563 = FMUL_D64
  { 1564,	3,	1,	4,	1267,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1564 = FMUL_D64_MM
  { 1565,	3,	1,	4,	626,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1565 = FMUL_S
  { 1566,	3,	1,	4,	1268,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1566 = FMUL_S_MM
  { 1567,	3,	1,	4,	1323,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1567 = FMUL_S_MMR6
  { 1568,	3,	1,	4,	654,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1568 = FMUL_W
  { 1569,	2,	1,	4,	532,	0, 0x4ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1569 = FNEG_D32
  { 1570,	2,	1,	4,	1262,	0, 0x4ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1570 = FNEG_D32_MM
  { 1571,	2,	1,	4,	532,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1571 = FNEG_D64
  { 1572,	2,	1,	4,	1262,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1572 = FNEG_D64_MM
  { 1573,	2,	1,	4,	532,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1573 = FNEG_S
  { 1574,	2,	1,	4,	1262,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1574 = FNEG_S_MM
  { 1575,	2,	1,	4,	1289,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1575 = FNEG_S_MMR6
  { 1576,	3,	2,	4,	1058,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1576 = FORK
  { 1577,	2,	1,	4,	642,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #1577 = FRCP_D
  { 1578,	2,	1,	4,	642,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #1578 = FRCP_W
  { 1579,	2,	1,	4,	588,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #1579 = FRINT_D
  { 1580,	2,	1,	4,	588,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #1580 = FRINT_W
  { 1581,	2,	1,	4,	643,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #1581 = FRSQRT_D
  { 1582,	2,	1,	4,	643,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #1582 = FRSQRT_W
  { 1583,	3,	1,	4,	566,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1583 = FSAF_D
  { 1584,	3,	1,	4,	566,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1584 = FSAF_W
  { 1585,	3,	1,	4,	566,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1585 = FSEQ_D
  { 1586,	3,	1,	4,	566,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1586 = FSEQ_W
  { 1587,	3,	1,	4,	566,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1587 = FSLE_D
  { 1588,	3,	1,	4,	566,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1588 = FSLE_W
  { 1589,	3,	1,	4,	566,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1589 = FSLT_D
  { 1590,	3,	1,	4,	566,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1590 = FSLT_W
  { 1591,	3,	1,	4,	566,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1591 = FSNE_D
  { 1592,	3,	1,	4,	566,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1592 = FSNE_W
  { 1593,	3,	1,	4,	566,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1593 = FSOR_D
  { 1594,	3,	1,	4,	566,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1594 = FSOR_W
  { 1595,	2,	1,	4,	653,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #1595 = FSQRT_D
  { 1596,	2,	1,	4,	641,	0, 0x4ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1596 = FSQRT_D32
  { 1597,	2,	1,	4,	1276,	0, 0x4ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1597 = FSQRT_D32_MM
  { 1598,	2,	1,	4,	641,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1598 = FSQRT_D64
  { 1599,	2,	1,	4,	1276,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1599 = FSQRT_D64_MM
  { 1600,	2,	1,	4,	640,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1600 = FSQRT_S
  { 1601,	2,	1,	4,	1275,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1601 = FSQRT_S_MM
  { 1602,	2,	1,	4,	652,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #1602 = FSQRT_W
  { 1603,	3,	1,	4,	656,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1603 = FSUB_D
  { 1604,	3,	1,	4,	627,	0, 0x4ULL, nullptr, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1604 = FSUB_D32
  { 1605,	3,	1,	4,	1269,	0, 0x4ULL, nullptr, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1605 = FSUB_D32_MM
  { 1606,	3,	1,	4,	627,	0, 0x4ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1606 = FSUB_D64
  { 1607,	3,	1,	4,	1269,	0, 0x4ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1607 = FSUB_D64_MM
  { 1608,	3,	1,	4,	628,	0, 0x4ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1608 = FSUB_S
  { 1609,	3,	1,	4,	1270,	0, 0x4ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1609 = FSUB_S_MM
  { 1610,	3,	1,	4,	1324,	0, 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1610 = FSUB_S_MMR6
  { 1611,	3,	1,	4,	656,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1611 = FSUB_W
  { 1612,	3,	1,	4,	567,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1612 = FSUEQ_D
  { 1613,	3,	1,	4,	567,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1613 = FSUEQ_W
  { 1614,	3,	1,	4,	568,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1614 = FSULE_D
  { 1615,	3,	1,	4,	568,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1615 = FSULE_W
  { 1616,	3,	1,	4,	569,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1616 = FSULT_D
  { 1617,	3,	1,	4,	569,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1617 = FSULT_W
  { 1618,	3,	1,	4,	570,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1618 = FSUNE_D
  { 1619,	3,	1,	4,	570,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1619 = FSUNE_W
  { 1620,	3,	1,	4,	571,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1620 = FSUN_D
  { 1621,	3,	1,	4,	571,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1621 = FSUN_W
  { 1622,	2,	1,	4,	587,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #1622 = FTINT_S_D
  { 1623,	2,	1,	4,	587,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #1623 = FTINT_S_W
  { 1624,	2,	1,	4,	587,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #1624 = FTINT_U_D
  { 1625,	2,	1,	4,	587,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #1625 = FTINT_U_W
  { 1626,	3,	1,	4,	589,	0, 0x6ULL, nullptr, nullptr, OperandInfo244, -1 ,nullptr },  // Inst #1626 = FTQ_H
  { 1627,	3,	1,	4,	589,	0, 0x6ULL, nullptr, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1627 = FTQ_W
  { 1628,	2,	1,	4,	590,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #1628 = FTRUNC_S_D
  { 1629,	2,	1,	4,	590,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #1629 = FTRUNC_S_W
  { 1630,	2,	1,	4,	590,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #1630 = FTRUNC_U_D
  { 1631,	2,	1,	4,	590,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #1631 = FTRUNC_U_W
  { 1632,	1,	0,	4,	1081,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1632 = GINVI
  { 1633,	1,	0,	4,	1135,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1633 = GINVI_MMR6
  { 1634,	2,	0,	4,	1082,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1634 = GINVT
  { 1635,	2,	0,	4,	1136,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1635 = GINVT_MMR6
  { 1636,	3,	1,	4,	610,	0, 0x6ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1636 = HADD_S_D
  { 1637,	3,	1,	4,	610,	0, 0x6ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1637 = HADD_S_H
  { 1638,	3,	1,	4,	610,	0, 0x6ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1638 = HADD_S_W
  { 1639,	3,	1,	4,	610,	0, 0x6ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1639 = HADD_U_D
  { 1640,	3,	1,	4,	610,	0, 0x6ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1640 = HADD_U_H
  { 1641,	3,	1,	4,	610,	0, 0x6ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1641 = HADD_U_W
  { 1642,	3,	1,	4,	611,	0, 0x6ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1642 = HSUB_S_D
  { 1643,	3,	1,	4,	611,	0, 0x6ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1643 = HSUB_S_H
  { 1644,	3,	1,	4,	611,	0, 0x6ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1644 = HSUB_S_W
  { 1645,	3,	1,	4,	611,	0, 0x6ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1645 = HSUB_U_D
  { 1646,	3,	1,	4,	611,	0, 0x6ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1646 = HSUB_U_H
  { 1647,	3,	1,	4,	611,	0, 0x6ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1647 = HSUB_U_W
  { 1648,	1,	0,	4,	415,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1648 = HYPCALL
  { 1649,	1,	0,	4,	1061,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1649 = HYPCALL_MM
  { 1650,	3,	1,	4,	601,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1650 = ILVEV_B
  { 1651,	3,	1,	4,	601,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1651 = ILVEV_D
  { 1652,	3,	1,	4,	601,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1652 = ILVEV_H
  { 1653,	3,	1,	4,	601,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1653 = ILVEV_W
  { 1654,	3,	1,	4,	600,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1654 = ILVL_B
  { 1655,	3,	1,	4,	600,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1655 = ILVL_D
  { 1656,	3,	1,	4,	600,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1656 = ILVL_H
  { 1657,	3,	1,	4,	600,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1657 = ILVL_W
  { 1658,	3,	1,	4,	601,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1658 = ILVOD_B
  { 1659,	3,	1,	4,	601,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1659 = ILVOD_D
  { 1660,	3,	1,	4,	601,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1660 = ILVOD_H
  { 1661,	3,	1,	4,	601,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1661 = ILVOD_W
  { 1662,	3,	1,	4,	600,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1662 = ILVR_B
  { 1663,	3,	1,	4,	600,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1663 = ILVR_D
  { 1664,	3,	1,	4,	600,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1664 = ILVR_H
  { 1665,	3,	1,	4,	600,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1665 = ILVR_W
  { 1666,	5,	1,	4,	490,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1666 = INS
  { 1667,	4,	1,	4,	513,	0, 0x6ULL, nullptr, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1667 = INSERT_B
  { 1668,	4,	1,	4,	513,	0, 0x6ULL, nullptr, nullptr, OperandInfo254, -1 ,nullptr },  // Inst #1668 = INSERT_D
  { 1669,	4,	1,	4,	513,	0, 0x6ULL, nullptr, nullptr, OperandInfo255, -1 ,nullptr },  // Inst #1669 = INSERT_H
  { 1670,	4,	1,	4,	513,	0, 0x6ULL, nullptr, nullptr, OperandInfo256, -1 ,nullptr },  // Inst #1670 = INSERT_W
  { 1671,	3,	1,	4,	1342,	0|(1ULL<<MCID::MayLoad), 0x6ULL, ImplicitList18, nullptr, OperandInfo257, -1 ,nullptr },  // Inst #1671 = INSV
  { 1672,	5,	1,	4,	602,	0, 0x6ULL, nullptr, nullptr, OperandInfo258, -1 ,nullptr },  // Inst #1672 = INSVE_B
  { 1673,	5,	1,	4,	602,	0, 0x6ULL, nullptr, nullptr, OperandInfo259, -1 ,nullptr },  // Inst #1673 = INSVE_D
  { 1674,	5,	1,	4,	602,	0, 0x6ULL, nullptr, nullptr, OperandInfo260, -1 ,nullptr },  // Inst #1674 = INSVE_H
  { 1675,	5,	1,	4,	602,	0, 0x6ULL, nullptr, nullptr, OperandInfo261, -1 ,nullptr },  // Inst #1675 = INSVE_W
  { 1676,	3,	1,	4,	1537,	0|(1ULL<<MCID::MayLoad), 0x6ULL, ImplicitList18, nullptr, OperandInfo257, -1 ,nullptr },  // Inst #1676 = INSV_MM
  { 1677,	5,	1,	4,	739,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1677 = INS_MM
  { 1678,	5,	1,	4,	780,	0, 0x1ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1678 = INS_MMR6
  { 1679,	1,	0,	4,	914,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x13ULL, nullptr, ImplicitList2, OperandInfo2, -1 ,nullptr },  // Inst #1679 = J
  { 1680,	1,	0,	4,	401,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call), 0x13ULL, nullptr, ImplicitList3, OperandInfo2, -1 ,nullptr },  // Inst #1680 = JAL
  { 1681,	2,	1,	4,	402,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::UnmodeledSideEffects), 0x11ULL, nullptr, ImplicitList3, OperandInfo37, -1 ,nullptr },  // Inst #1681 = JALR
  { 1682,	1,	0,	2,	951,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook), 0x0ULL, nullptr, ImplicitList3, OperandInfo50, -1 ,nullptr },  // Inst #1682 = JALR16_MM
  { 1683,	2,	1,	4,	1004,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::UnmodeledSideEffects), 0x11ULL, nullptr, ImplicitList3, OperandInfo112, -1 ,nullptr },  // Inst #1683 = JALR64
  { 1684,	1,	0,	2,	993,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook), 0x0ULL, nullptr, ImplicitList3, OperandInfo50, -1 ,nullptr },  // Inst #1684 = JALRC16_MMR6
  { 1685,	2,	1,	4,	994,	0|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::UnmodeledSideEffects), 0x3ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #1685 = JALRC_HB_MMR6
  { 1686,	2,	1,	4,	995,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList3, OperandInfo37, -1 ,nullptr },  // Inst #1686 = JALRC_MMR6
  { 1687,	1,	0,	2,	952,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo50, -1 ,nullptr },  // Inst #1687 = JALRS16_MM
  { 1688,	2,	1,	4,	952,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, ImplicitList3, OperandInfo37, -1 ,nullptr },  // Inst #1688 = JALRS_MM
  { 1689,	2,	1,	4,	403,	0|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x13ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #1689 = JALR_HB
  { 1690,	2,	1,	4,	1005,	0|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x13ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1690 = JALR_HB64
  { 1691,	2,	1,	4,	951,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::UnmodeledSideEffects), 0x11ULL, nullptr, ImplicitList3, OperandInfo37, -1 ,nullptr },  // Inst #1691 = JALR_MM
  { 1692,	1,	0,	4,	953,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x3ULL, nullptr, ImplicitList3, OperandInfo2, -1 ,nullptr },  // Inst #1692 = JALS_MM
  { 1693,	1,	0,	4,	404,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call), 0x13ULL, nullptr, ImplicitList3, OperandInfo2, -1 ,nullptr },  // Inst #1693 = JALX
  { 1694,	1,	0,	4,	954,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call), 0x13ULL, nullptr, ImplicitList3, OperandInfo2, -1 ,nullptr },  // Inst #1694 = JALX_MM
  { 1695,	1,	0,	4,	954,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call), 0x13ULL, nullptr, ImplicitList3, OperandInfo2, -1 ,nullptr },  // Inst #1695 = JAL_MM
  { 1696,	2,	0,	4,	920,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList3, OperandInfo104, -1 ,nullptr },  // Inst #1696 = JIALC
  { 1697,	2,	0,	4,	1013,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList3, OperandInfo102, -1 ,nullptr },  // Inst #1697 = JIALC64
  { 1698,	2,	0,	4,	996,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList3, OperandInfo104, -1 ,nullptr },  // Inst #1698 = JIALC_MMR6
  { 1699,	2,	0,	4,	925,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo104, -1 ,nullptr },  // Inst #1699 = JIC
  { 1700,	2,	0,	4,	1011,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, ImplicitList2, OperandInfo102, -1 ,nullptr },  // Inst #1700 = JIC64
  { 1701,	2,	0,	4,	984,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList2, OperandInfo104, -1 ,nullptr },  // Inst #1701 = JIC_MMR6
  { 1702,	1,	0,	4,	915,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x11ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1702 = JR
  { 1703,	1,	0,	2,	946,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1703 = JR16_MM
  { 1704,	1,	0,	4,	1003,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x11ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #1704 = JR64
  { 1705,	1,	0,	2,	985,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1705 = JRADDIUSP
  { 1706,	1,	0,	2,	986,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1706 = JRC16_MM
  { 1707,	1,	0,	2,	987,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1707 = JRC16_MMR6
  { 1708,	1,	0,	2,	985,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1708 = JRCADDIUSP_MMR6
  { 1709,	1,	0,	4,	381,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x13ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1709 = JR_HB
  { 1710,	1,	0,	4,	1006,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x13ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #1710 = JR_HB64
  { 1711,	1,	0,	4,	1014,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #1711 = JR_HB64_R6
  { 1712,	1,	0,	4,	926,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1712 = JR_HB_R6
  { 1713,	1,	0,	4,	946,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x11ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1713 = JR_MM
  { 1714,	1,	0,	4,	947,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x13ULL, nullptr, ImplicitList2, OperandInfo2, -1 ,nullptr },  // Inst #1714 = J_MM
  { 1715,	1,	0,	6,	933,	0|(1ULL<<MCID::Call), 0x0ULL, nullptr, ImplicitList3, OperandInfo2, -1 ,nullptr },  // Inst #1715 = Jal16
  { 1716,	1,	0,	6,	933,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo2, -1 ,nullptr },  // Inst #1716 = JalB16
  { 1717,	0,	0,	2,	931,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1717 = JrRa16
  { 1718,	0,	0,	2,	931,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1718 = JrcRa16
  { 1719,	1,	0,	2,	931,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo262, -1 ,nullptr },  // Inst #1719 = JrcRx16
  { 1720,	1,	0,	2,	934,	0|(1ULL<<MCID::Call), 0x0ULL, nullptr, ImplicitList3, OperandInfo262, -1 ,nullptr },  // Inst #1720 = JumpLinkReg16
  { 1721,	3,	1,	4,	426,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1721 = LB
  { 1722,	3,	1,	4,	1158,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #1722 = LB64
  { 1723,	3,	1,	4,	436,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1723 = LBE
  { 1724,	3,	1,	4,	1083,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1724 = LBE_MM
  { 1725,	3,	1,	2,	1110,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo263, -1 ,nullptr },  // Inst #1725 = LBU16_MM
  { 1726,	3,	1,	4,	1378,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo264, -1 ,nullptr },  // Inst #1726 = LBUX
  { 1727,	3,	1,	4,	1538,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo264, -1 ,nullptr },  // Inst #1727 = LBUX_MM
  { 1728,	3,	1,	4,	1137,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1728 = LBU_MMR6
  { 1729,	3,	1,	4,	1111,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1729 = LB_MM
  { 1730,	3,	1,	4,	1138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1730 = LB_MMR6
  { 1731,	3,	1,	4,	427,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1731 = LBu
  { 1732,	3,	1,	4,	1159,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #1732 = LBu64
  { 1733,	3,	1,	4,	437,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1733 = LBuE
  { 1734,	3,	1,	4,	1084,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1734 = LBuE_MM
  { 1735,	3,	1,	4,	1110,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1735 = LBu_MM
  { 1736,	3,	1,	4,	1155,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #1736 = LD
  { 1737,	3,	1,	4,	702,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1737 = LDC1
  { 1738,	3,	1,	4,	702,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, nullptr, OperandInfo265, -1 ,nullptr },  // Inst #1738 = LDC164
  { 1739,	3,	1,	4,	1328,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo265, -1 ,nullptr },  // Inst #1739 = LDC1_D64_MMR6
  { 1740,	3,	1,	4,	1285,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1740 = LDC1_MM
  { 1741,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, nullptr, OperandInfo266, -1 ,nullptr },  // Inst #1741 = LDC2
  { 1742,	3,	1,	4,	1139,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo267, -1 ,nullptr },  // Inst #1742 = LDC2_MMR6
  { 1743,	3,	1,	4,	1073,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo266, -1 ,nullptr },  // Inst #1743 = LDC2_R6
  { 1744,	3,	1,	4,	435,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, nullptr, OperandInfo268, -1 ,nullptr },  // Inst #1744 = LDC3
  { 1745,	2,	1,	4,	542,	0|(1ULL<<MCID::Rematerializable), 0x6ULL, nullptr, nullptr, OperandInfo269, -1 ,nullptr },  // Inst #1745 = LDI_B
  { 1746,	2,	1,	4,	542,	0|(1ULL<<MCID::Rematerializable), 0x6ULL, nullptr, nullptr, OperandInfo270, -1 ,nullptr },  // Inst #1746 = LDI_D
  { 1747,	2,	1,	4,	542,	0|(1ULL<<MCID::Rematerializable), 0x6ULL, nullptr, nullptr, OperandInfo271, -1 ,nullptr },  // Inst #1747 = LDI_H
  { 1748,	2,	1,	4,	542,	0|(1ULL<<MCID::Rematerializable), 0x6ULL, nullptr, nullptr, OperandInfo272, -1 ,nullptr },  // Inst #1748 = LDI_W
  { 1749,	4,	1,	4,	1165,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo273, -1 ,nullptr },  // Inst #1749 = LDL
  { 1750,	2,	1,	4,	1177,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #1750 = LDPC
  { 1751,	4,	1,	4,	1166,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo273, -1 ,nullptr },  // Inst #1751 = LDR
  { 1752,	3,	1,	4,	703,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, nullptr, OperandInfo274, -1 ,nullptr },  // Inst #1752 = LDXC1
  { 1753,	3,	1,	4,	703,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, nullptr, OperandInfo275, -1 ,nullptr },  // Inst #1753 = LDXC164
  { 1754,	3,	1,	4,	707,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo276, -1 ,nullptr },  // Inst #1754 = LD_B
  { 1755,	3,	1,	4,	707,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo277, -1 ,nullptr },  // Inst #1755 = LD_D
  { 1756,	3,	1,	4,	707,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo278, -1 ,nullptr },  // Inst #1756 = LD_H
  { 1757,	3,	1,	4,	707,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo279, -1 ,nullptr },  // Inst #1757 = LD_W
  { 1758,	3,	1,	4,	716,	0, 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1758 = LEA_ADDiu
  { 1759,	3,	1,	4,	832,	0, 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #1759 = LEA_ADDiu64
  { 1760,	3,	1,	4,	730,	0, 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1760 = LEA_ADDiu_MM
  { 1761,	3,	1,	4,	428,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1761 = LH
  { 1762,	3,	1,	4,	1160,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #1762 = LH64
  { 1763,	3,	1,	4,	438,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1763 = LHE
  { 1764,	3,	1,	4,	1085,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1764 = LHE_MM
  { 1765,	3,	1,	2,	1112,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo263, -1 ,nullptr },  // Inst #1765 = LHU16_MM
  { 1766,	3,	1,	4,	1379,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo264, -1 ,nullptr },  // Inst #1766 = LHX
  { 1767,	3,	1,	4,	1539,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo264, -1 ,nullptr },  // Inst #1767 = LHX_MM
  { 1768,	3,	1,	4,	1113,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1768 = LH_MM
  { 1769,	3,	1,	4,	429,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1769 = LHu
  { 1770,	3,	1,	4,	1161,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #1770 = LHu64
  { 1771,	3,	1,	4,	439,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1771 = LHuE
  { 1772,	3,	1,	4,	1086,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1772 = LHuE_MM
  { 1773,	3,	1,	4,	1112,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1773 = LHu_MM
  { 1774,	2,	1,	2,	740,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #1774 = LI16_MM
  { 1775,	2,	1,	2,	781,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #1775 = LI16_MMR6
  { 1776,	3,	1,	4,	431,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1776 = LL
  { 1777,	3,	1,	4,	1156,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1777 = LL64
  { 1778,	3,	1,	4,	1179,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo280, -1 ,nullptr },  // Inst #1778 = LL64_R6
  { 1779,	3,	1,	4,	1156,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #1779 = LLD
  { 1780,	3,	1,	4,	1178,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo281, -1 ,nullptr },  // Inst #1780 = LLD_R6
  { 1781,	3,	1,	4,	441,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1781 = LLE
  { 1782,	3,	1,	4,	1090,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1782 = LLE_MM
  { 1783,	3,	1,	4,	1114,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1783 = LL_MM
  { 1784,	3,	1,	4,	1140,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1784 = LL_MMR6
  { 1785,	3,	1,	4,	1074,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo280, -1 ,nullptr },  // Inst #1785 = LL_R6
  { 1786,	4,	1,	4,	508,	0, 0x6ULL, nullptr, nullptr, OperandInfo169, -1 ,nullptr },  // Inst #1786 = LSA
  { 1787,	4,	1,	4,	782,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo169, -1 ,nullptr },  // Inst #1787 = LSA_MMR6
  { 1788,	4,	1,	4,	725,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo169, -1 ,nullptr },  // Inst #1788 = LSA_R6
  { 1789,	2,	1,	4,	783,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1789 = LUI_MMR6
  { 1790,	3,	1,	4,	706,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, nullptr, OperandInfo274, -1 ,nullptr },  // Inst #1790 = LUXC1
  { 1791,	3,	1,	4,	706,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, nullptr, OperandInfo275, -1 ,nullptr },  // Inst #1791 = LUXC164
  { 1792,	3,	1,	4,	1286,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, nullptr, OperandInfo275, -1 ,nullptr },  // Inst #1792 = LUXC1_MM
  { 1793,	2,	1,	4,	360,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1793 = LUi
  { 1794,	2,	1,	4,	833,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #1794 = LUi64
  { 1795,	2,	1,	4,	741,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1795 = LUi_MM
  { 1796,	3,	1,	4,	430,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1796 = LW
  { 1797,	3,	1,	2,	1115,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo263, -1 ,nullptr },  // Inst #1797 = LW16_MM
  { 1798,	3,	1,	4,	1162,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #1798 = LW64
  { 1799,	3,	1,	4,	704,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, nullptr, OperandInfo282, -1 ,nullptr },  // Inst #1799 = LWC1
  { 1800,	3,	1,	4,	1287,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, nullptr, OperandInfo282, -1 ,nullptr },  // Inst #1800 = LWC1_MM
  { 1801,	3,	1,	4,	432,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, nullptr, OperandInfo266, -1 ,nullptr },  // Inst #1801 = LWC2
  { 1802,	3,	1,	4,	1142,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo267, -1 ,nullptr },  // Inst #1802 = LWC2_MMR6
  { 1803,	3,	1,	4,	1075,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo266, -1 ,nullptr },  // Inst #1803 = LWC2_R6
  { 1804,	3,	1,	4,	433,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, nullptr, OperandInfo268, -1 ,nullptr },  // Inst #1804 = LWC3
  { 1805,	3,	1,	4,	1332,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo283, -1 ,nullptr },  // Inst #1805 = LWDSP
  { 1806,	3,	1,	4,	1495,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo283, -1 ,nullptr },  // Inst #1806 = LWDSP_MM
  { 1807,	3,	1,	4,	440,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1807 = LWE
  { 1808,	3,	1,	4,	1087,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1808 = LWE_MM
  { 1809,	3,	1,	2,	1115,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo284, -1 ,nullptr },  // Inst #1809 = LWGP_MM
  { 1810,	4,	1,	4,	443,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo285, -1 ,nullptr },  // Inst #1810 = LWL
  { 1811,	4,	1,	4,	1163,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo273, -1 ,nullptr },  // Inst #1811 = LWL64
  { 1812,	4,	1,	4,	445,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo285, -1 ,nullptr },  // Inst #1812 = LWLE
  { 1813,	4,	1,	4,	1088,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo285, -1 ,nullptr },  // Inst #1813 = LWLE_MM
  { 1814,	4,	1,	4,	1116,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo285, -1 ,nullptr },  // Inst #1814 = LWL_MM
  { 1815,	3,	1,	2,	1117,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo286, -1 ,nullptr },  // Inst #1815 = LWM16_MM
  { 1816,	3,	1,	2,	1141,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo286, -1 ,nullptr },  // Inst #1816 = LWM16_MMR6
  { 1817,	3,	1,	4,	1117,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #1817 = LWM32_MM
  { 1818,	2,	1,	4,	442,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1818 = LWPC
  { 1819,	2,	1,	4,	1143,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1819 = LWPC_MMR6
  { 1820,	4,	2,	4,	1118,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo287, -1 ,nullptr },  // Inst #1820 = LWP_MM
  { 1821,	4,	1,	4,	444,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo285, -1 ,nullptr },  // Inst #1821 = LWR
  { 1822,	4,	1,	4,	1164,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo273, -1 ,nullptr },  // Inst #1822 = LWR64
  { 1823,	4,	1,	4,	446,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo285, -1 ,nullptr },  // Inst #1823 = LWRE
  { 1824,	4,	1,	4,	1089,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo285, -1 ,nullptr },  // Inst #1824 = LWRE_MM
  { 1825,	4,	1,	4,	1119,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo285, -1 ,nullptr },  // Inst #1825 = LWR_MM
  { 1826,	3,	1,	2,	1115,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo288, -1 ,nullptr },  // Inst #1826 = LWSP_MM
  { 1827,	2,	1,	4,	1176,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1827 = LWUPC
  { 1828,	3,	1,	4,	1120,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1828 = LWU_MM
  { 1829,	3,	1,	4,	1380,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo264, -1 ,nullptr },  // Inst #1829 = LWX
  { 1830,	3,	1,	4,	705,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, nullptr, OperandInfo289, -1 ,nullptr },  // Inst #1830 = LWXC1
  { 1831,	3,	1,	4,	1288,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, nullptr, OperandInfo289, -1 ,nullptr },  // Inst #1831 = LWXC1_MM
  { 1832,	3,	1,	4,	1121,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, nullptr, OperandInfo264, -1 ,nullptr },  // Inst #1832 = LWXS_MM
  { 1833,	3,	1,	4,	1540,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo264, -1 ,nullptr },  // Inst #1833 = LWX_MM
  { 1834,	3,	1,	4,	1115,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1834 = LW_MM
  { 1835,	3,	1,	4,	1144,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1835 = LW_MMR6
  { 1836,	3,	1,	4,	1157,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #1836 = LWu
  { 1837,	3,	1,	4,	1101,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo290, -1 ,nullptr },  // Inst #1837 = LbRxRyOffMemX16
  { 1838,	3,	1,	4,	1102,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo290, -1 ,nullptr },  // Inst #1838 = LbuRxRyOffMemX16
  { 1839,	3,	1,	4,	1103,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo290, -1 ,nullptr },  // Inst #1839 = LhRxRyOffMemX16
  { 1840,	3,	1,	4,	1104,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo290, -1 ,nullptr },  // Inst #1840 = LhuRxRyOffMemX16
  { 1841,	2,	1,	2,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #1841 = LiRxImm16
  { 1842,	2,	1,	4,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #1842 = LiRxImmAlignX16
  { 1843,	2,	1,	4,	727,	0, 0x0ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #1843 = LiRxImmX16
  { 1844,	3,	1,	2,	1105,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo291, -1 ,nullptr },  // Inst #1844 = LwRxPcTcp16
  { 1845,	3,	1,	4,	1105,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo291, -1 ,nullptr },  // Inst #1845 = LwRxPcTcpX16
  { 1846,	3,	1,	4,	1105,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo290, -1 ,nullptr },  // Inst #1846 = LwRxRyOffMemX16
  { 1847,	3,	1,	4,	1105,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo174, -1 ,nullptr },  // Inst #1847 = LwRxSpImmX16
  { 1848,	2,	0,	4,	845,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList6, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #1848 = MADD
  { 1849,	4,	1,	4,	1225,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo292, -1 ,nullptr },  // Inst #1849 = MADDF_D
  { 1850,	4,	1,	4,	1318,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo292, -1 ,nullptr },  // Inst #1850 = MADDF_D_MMR6
  { 1851,	4,	1,	4,	1223,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo293, -1 ,nullptr },  // Inst #1851 = MADDF_S
  { 1852,	4,	1,	4,	1319,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo293, -1 ,nullptr },  // Inst #1852 = MADDF_S_MMR6
  { 1853,	4,	1,	4,	663,	0, 0x6ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #1853 = MADDR_Q_H
  { 1854,	4,	1,	4,	663,	0, 0x6ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #1854 = MADDR_Q_W
  { 1855,	2,	0,	4,	846,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList6, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #1855 = MADDU
  { 1856,	4,	1,	4,	1381,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1856 = MADDU_DSP
  { 1857,	4,	1,	4,	1541,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1857 = MADDU_DSP_MM
  { 1858,	2,	0,	4,	873,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList6, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #1858 = MADDU_MM
  { 1859,	4,	1,	4,	661,	0, 0x6ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #1859 = MADDV_B
  { 1860,	4,	1,	4,	661,	0, 0x6ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #1860 = MADDV_D
  { 1861,	4,	1,	4,	661,	0, 0x6ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #1861 = MADDV_H
  { 1862,	4,	1,	4,	661,	0, 0x6ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #1862 = MADDV_W
  { 1863,	4,	1,	4,	669,	0, 0x4ULL, nullptr, nullptr, OperandInfo294, -1 ,nullptr },  // Inst #1863 = MADD_D32
  { 1864,	4,	1,	4,	1243,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo294, -1 ,nullptr },  // Inst #1864 = MADD_D32_MM
  { 1865,	4,	1,	4,	669,	0, 0x4ULL, nullptr, nullptr, OperandInfo295, -1 ,nullptr },  // Inst #1865 = MADD_D64
  { 1866,	4,	1,	4,	1382,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1866 = MADD_DSP
  { 1867,	4,	1,	4,	1542,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1867 = MADD_DSP_MM
  { 1868,	2,	0,	4,	872,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList6, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #1868 = MADD_MM
  { 1869,	4,	1,	4,	664,	0, 0x6ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #1869 = MADD_Q_H
  { 1870,	4,	1,	4,	664,	0, 0x6ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #1870 = MADD_Q_W
  { 1871,	4,	1,	4,	670,	0, 0x4ULL, nullptr, nullptr, OperandInfo296, -1 ,nullptr },  // Inst #1871 = MADD_S
  { 1872,	4,	1,	4,	1242,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo296, -1 ,nullptr },  // Inst #1872 = MADD_S_MM
  { 1873,	4,	1,	4,	1383,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1873 = MAQ_SA_W_PHL
  { 1874,	4,	1,	4,	1543,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1874 = MAQ_SA_W_PHL_MM
  { 1875,	4,	1,	4,	1384,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1875 = MAQ_SA_W_PHR
  { 1876,	4,	1,	4,	1544,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1876 = MAQ_SA_W_PHR_MM
  { 1877,	4,	1,	4,	1385,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1877 = MAQ_S_W_PHL
  { 1878,	4,	1,	4,	1545,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1878 = MAQ_S_W_PHL_MM
  { 1879,	4,	1,	4,	1386,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1879 = MAQ_S_W_PHR
  { 1880,	4,	1,	4,	1546,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #1880 = MAQ_S_W_PHR_MM
  { 1881,	3,	1,	4,	1213,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1881 = MAXA_D
  { 1882,	3,	1,	4,	1309,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1882 = MAXA_D_MMR6
  { 1883,	3,	1,	4,	1212,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1883 = MAXA_S
  { 1884,	3,	1,	4,	1310,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1884 = MAXA_S_MMR6
  { 1885,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1885 = MAXI_S_B
  { 1886,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #1886 = MAXI_S_D
  { 1887,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #1887 = MAXI_S_H
  { 1888,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #1888 = MAXI_S_W
  { 1889,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1889 = MAXI_U_B
  { 1890,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #1890 = MAXI_U_D
  { 1891,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #1891 = MAXI_U_H
  { 1892,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #1892 = MAXI_U_W
  { 1893,	3,	1,	4,	614,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1893 = MAX_A_B
  { 1894,	3,	1,	4,	614,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1894 = MAX_A_D
  { 1895,	3,	1,	4,	614,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1895 = MAX_A_H
  { 1896,	3,	1,	4,	614,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1896 = MAX_A_W
  { 1897,	3,	1,	4,	1213,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1897 = MAX_D
  { 1898,	3,	1,	4,	1305,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1898 = MAX_D_MMR6
  { 1899,	3,	1,	4,	1212,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1899 = MAX_S
  { 1900,	3,	1,	4,	612,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1900 = MAX_S_B
  { 1901,	3,	1,	4,	612,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1901 = MAX_S_D
  { 1902,	3,	1,	4,	612,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1902 = MAX_S_H
  { 1903,	3,	1,	4,	1306,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1903 = MAX_S_MMR6
  { 1904,	3,	1,	4,	612,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1904 = MAX_S_W
  { 1905,	3,	1,	4,	613,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1905 = MAX_U_B
  { 1906,	3,	1,	4,	613,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1906 = MAX_U_D
  { 1907,	3,	1,	4,	613,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1907 = MAX_U_H
  { 1908,	3,	1,	4,	613,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1908 = MAX_U_W
  { 1909,	3,	1,	4,	411,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #1909 = MFC0
  { 1910,	3,	1,	4,	1033,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #1910 = MFC0_MMR6
  { 1911,	2,	1,	4,	687,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Bitcast), 0x4ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1911 = MFC1
  { 1912,	2,	1,	4,	687,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo297, -1 ,nullptr },  // Inst #1912 = MFC1_D64
  { 1913,	2,	1,	4,	1256,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Bitcast), 0x4ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1913 = MFC1_MM
  { 1914,	2,	1,	4,	1301,	0|(1ULL<<MCID::Bitcast), 0x6ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1914 = MFC1_MMR6
  { 1915,	3,	1,	4,	413,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo298, -1 ,nullptr },  // Inst #1915 = MFC2
  { 1916,	2,	1,	4,	1034,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1916 = MFC2_MMR6
  { 1917,	3,	1,	4,	416,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #1917 = MFGC0
  { 1918,	3,	1,	4,	1068,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #1918 = MFGC0_MM
  { 1919,	3,	1,	4,	1032,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #1919 = MFHC0_MMR6
  { 1920,	2,	1,	4,	688,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo299, -1 ,nullptr },  // Inst #1920 = MFHC1_D32
  { 1921,	2,	1,	4,	1257,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo299, -1 ,nullptr },  // Inst #1921 = MFHC1_D32_MM
  { 1922,	2,	1,	4,	688,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo297, -1 ,nullptr },  // Inst #1922 = MFHC1_D64
  { 1923,	2,	1,	4,	1257,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo297, -1 ,nullptr },  // Inst #1923 = MFHC1_D64_MM
  { 1924,	2,	1,	4,	1034,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1924 = MFHC2_MMR6
  { 1925,	3,	1,	4,	417,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #1925 = MFHGC0
  { 1926,	3,	1,	4,	1069,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #1926 = MFHGC0_MM
  { 1927,	1,	1,	4,	473,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList19, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1927 = MFHI
  { 1928,	1,	1,	2,	879,	0|(1ULL<<MCID::MoveReg), 0x0ULL, ImplicitList19, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1928 = MFHI16_MM
  { 1929,	1,	1,	4,	898,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList20, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #1929 = MFHI64
  { 1930,	2,	1,	4,	1387,	0|(1ULL<<MCID::MoveReg), 0x6ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #1930 = MFHI_DSP
  { 1931,	2,	1,	4,	1547,	0, 0x6ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #1931 = MFHI_DSP_MM
  { 1932,	1,	1,	4,	879,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList19, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1932 = MFHI_MM
  { 1933,	1,	1,	4,	473,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList19, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1933 = MFLO
  { 1934,	1,	1,	2,	879,	0|(1ULL<<MCID::MoveReg), 0x0ULL, ImplicitList19, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1934 = MFLO16_MM
  { 1935,	1,	1,	4,	898,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList20, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #1935 = MFLO64
  { 1936,	2,	1,	4,	1388,	0|(1ULL<<MCID::MoveReg), 0x6ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #1936 = MFLO_DSP
  { 1937,	2,	1,	4,	1548,	0, 0x6ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #1937 = MFLO_DSP_MM
  { 1938,	1,	1,	4,	879,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList19, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1938 = MFLO_MM
  { 1939,	5,	1,	4,	1055,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo300, -1 ,nullptr },  // Inst #1939 = MFTR
  { 1940,	3,	1,	4,	1214,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1940 = MINA_D
  { 1941,	3,	1,	4,	1311,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1941 = MINA_D_MMR6
  { 1942,	3,	1,	4,	1215,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1942 = MINA_S
  { 1943,	3,	1,	4,	1312,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1943 = MINA_S_MMR6
  { 1944,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1944 = MINI_S_B
  { 1945,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #1945 = MINI_S_D
  { 1946,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #1946 = MINI_S_H
  { 1947,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #1947 = MINI_S_W
  { 1948,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1948 = MINI_U_B
  { 1949,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #1949 = MINI_U_D
  { 1950,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #1950 = MINI_U_H
  { 1951,	3,	1,	4,	615,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #1951 = MINI_U_W
  { 1952,	3,	1,	4,	614,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1952 = MIN_A_B
  { 1953,	3,	1,	4,	614,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1953 = MIN_A_D
  { 1954,	3,	1,	4,	614,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1954 = MIN_A_H
  { 1955,	3,	1,	4,	614,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1955 = MIN_A_W
  { 1956,	3,	1,	4,	1215,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1956 = MIN_D
  { 1957,	3,	1,	4,	1307,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1957 = MIN_D_MMR6
  { 1958,	3,	1,	4,	1214,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1958 = MIN_S
  { 1959,	3,	1,	4,	612,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1959 = MIN_S_B
  { 1960,	3,	1,	4,	612,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1960 = MIN_S_D
  { 1961,	3,	1,	4,	612,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1961 = MIN_S_H
  { 1962,	3,	1,	4,	1308,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1962 = MIN_S_MMR6
  { 1963,	3,	1,	4,	612,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1963 = MIN_S_W
  { 1964,	3,	1,	4,	613,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1964 = MIN_U_B
  { 1965,	3,	1,	4,	613,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1965 = MIN_U_D
  { 1966,	3,	1,	4,	613,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1966 = MIN_U_H
  { 1967,	3,	1,	4,	613,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1967 = MIN_U_W
  { 1968,	3,	1,	4,	865,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1968 = MOD
  { 1969,	3,	1,	4,	1389,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1969 = MODSUB
  { 1970,	3,	1,	4,	1549,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1970 = MODSUB_MM
  { 1971,	3,	1,	4,	866,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1971 = MODU
  { 1972,	3,	1,	4,	888,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1972 = MODU_MMR6
  { 1973,	3,	1,	4,	889,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1973 = MOD_MMR6
  { 1974,	3,	1,	4,	608,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1974 = MOD_S_B
  { 1975,	3,	1,	4,	608,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1975 = MOD_S_D
  { 1976,	3,	1,	4,	608,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1976 = MOD_S_H
  { 1977,	3,	1,	4,	608,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1977 = MOD_S_W
  { 1978,	3,	1,	4,	608,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1978 = MOD_U_B
  { 1979,	3,	1,	4,	608,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1979 = MOD_U_D
  { 1980,	3,	1,	4,	608,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #1980 = MOD_U_H
  { 1981,	3,	1,	4,	608,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #1981 = MOD_U_W
  { 1982,	2,	1,	2,	742,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #1982 = MOVE16_MM
  { 1983,	2,	1,	2,	784,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #1983 = MOVE16_MMR6
  { 1984,	4,	2,	2,	743,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo301, -1 ,nullptr },  // Inst #1984 = MOVEP_MM
  { 1985,	4,	2,	2,	1550,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo301, -1 ,nullptr },  // Inst #1985 = MOVEP_MMR6
  { 1986,	2,	1,	4,	541,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo302, -1 ,nullptr },  // Inst #1986 = MOVE_V
  { 1987,	4,	1,	4,	526,	0, 0x4ULL, nullptr, nullptr, OperandInfo303, -1 ,nullptr },  // Inst #1987 = MOVF_D32
  { 1988,	4,	1,	4,	1227,	0, 0x4ULL, nullptr, nullptr, OperandInfo303, -1 ,nullptr },  // Inst #1988 = MOVF_D32_MM
  { 1989,	4,	1,	4,	526,	0, 0x4ULL, nullptr, nullptr, OperandInfo304, -1 ,nullptr },  // Inst #1989 = MOVF_D64
  { 1990,	4,	1,	4,	689,	0, 0x4ULL, nullptr, nullptr, OperandInfo305, -1 ,nullptr },  // Inst #1990 = MOVF_I
  { 1991,	4,	1,	4,	1205,	0, 0x4ULL, nullptr, nullptr, OperandInfo306, -1 ,nullptr },  // Inst #1991 = MOVF_I64
  { 1992,	4,	1,	4,	880,	0, 0x4ULL, nullptr, nullptr, OperandInfo305, -1 ,nullptr },  // Inst #1992 = MOVF_I_MM
  { 1993,	4,	1,	4,	527,	0, 0x4ULL, nullptr, nullptr, OperandInfo307, -1 ,nullptr },  // Inst #1993 = MOVF_S
  { 1994,	4,	1,	4,	1228,	0, 0x4ULL, nullptr, nullptr, OperandInfo307, -1 ,nullptr },  // Inst #1994 = MOVF_S_MM
  { 1995,	4,	1,	4,	1207,	0, 0x4ULL, nullptr, nullptr, OperandInfo308, -1 ,nullptr },  // Inst #1995 = MOVN_I64_D64
  { 1996,	4,	1,	4,	902,	0, 0x4ULL, nullptr, nullptr, OperandInfo309, -1 ,nullptr },  // Inst #1996 = MOVN_I64_I
  { 1997,	4,	1,	4,	902,	0, 0x4ULL, nullptr, nullptr, OperandInfo310, -1 ,nullptr },  // Inst #1997 = MOVN_I64_I64
  { 1998,	4,	1,	4,	1208,	0, 0x4ULL, nullptr, nullptr, OperandInfo311, -1 ,nullptr },  // Inst #1998 = MOVN_I64_S
  { 1999,	4,	1,	4,	698,	0, 0x4ULL, nullptr, nullptr, OperandInfo312, -1 ,nullptr },  // Inst #1999 = MOVN_I_D32
  { 2000,	4,	1,	4,	1229,	0, 0x4ULL, nullptr, nullptr, OperandInfo312, -1 ,nullptr },  // Inst #2000 = MOVN_I_D32_MM
  { 2001,	4,	1,	4,	698,	0, 0x4ULL, nullptr, nullptr, OperandInfo313, -1 ,nullptr },  // Inst #2001 = MOVN_I_D64
  { 2002,	4,	1,	4,	477,	0, 0x4ULL, nullptr, nullptr, OperandInfo314, -1 ,nullptr },  // Inst #2002 = MOVN_I_I
  { 2003,	4,	1,	4,	902,	0, 0x4ULL, nullptr, nullptr, OperandInfo315, -1 ,nullptr },  // Inst #2003 = MOVN_I_I64
  { 2004,	4,	1,	4,	1551,	0, 0x4ULL, nullptr, nullptr, OperandInfo314, -1 ,nullptr },  // Inst #2004 = MOVN_I_MM
  { 2005,	4,	1,	4,	699,	0, 0x4ULL, nullptr, nullptr, OperandInfo316, -1 ,nullptr },  // Inst #2005 = MOVN_I_S
  { 2006,	4,	1,	4,	1230,	0, 0x4ULL, nullptr, nullptr, OperandInfo316, -1 ,nullptr },  // Inst #2006 = MOVN_I_S_MM
  { 2007,	4,	1,	4,	528,	0, 0x4ULL, nullptr, nullptr, OperandInfo303, -1 ,nullptr },  // Inst #2007 = MOVT_D32
  { 2008,	4,	1,	4,	1231,	0, 0x4ULL, nullptr, nullptr, OperandInfo303, -1 ,nullptr },  // Inst #2008 = MOVT_D32_MM
  { 2009,	4,	1,	4,	528,	0, 0x4ULL, nullptr, nullptr, OperandInfo304, -1 ,nullptr },  // Inst #2009 = MOVT_D64
  { 2010,	4,	1,	4,	690,	0, 0x4ULL, nullptr, nullptr, OperandInfo305, -1 ,nullptr },  // Inst #2010 = MOVT_I
  { 2011,	4,	1,	4,	1204,	0, 0x4ULL, nullptr, nullptr, OperandInfo306, -1 ,nullptr },  // Inst #2011 = MOVT_I64
  { 2012,	4,	1,	4,	881,	0, 0x4ULL, nullptr, nullptr, OperandInfo305, -1 ,nullptr },  // Inst #2012 = MOVT_I_MM
  { 2013,	4,	1,	4,	529,	0, 0x4ULL, nullptr, nullptr, OperandInfo307, -1 ,nullptr },  // Inst #2013 = MOVT_S
  { 2014,	4,	1,	4,	1232,	0, 0x4ULL, nullptr, nullptr, OperandInfo307, -1 ,nullptr },  // Inst #2014 = MOVT_S_MM
  { 2015,	4,	1,	4,	1209,	0, 0x4ULL, nullptr, nullptr, OperandInfo308, -1 ,nullptr },  // Inst #2015 = MOVZ_I64_D64
  { 2016,	4,	1,	4,	903,	0, 0x4ULL, nullptr, nullptr, OperandInfo309, -1 ,nullptr },  // Inst #2016 = MOVZ_I64_I
  { 2017,	4,	1,	4,	903,	0, 0x4ULL, nullptr, nullptr, OperandInfo310, -1 ,nullptr },  // Inst #2017 = MOVZ_I64_I64
  { 2018,	4,	1,	4,	1206,	0, 0x4ULL, nullptr, nullptr, OperandInfo311, -1 ,nullptr },  // Inst #2018 = MOVZ_I64_S
  { 2019,	4,	1,	4,	700,	0, 0x4ULL, nullptr, nullptr, OperandInfo312, -1 ,nullptr },  // Inst #2019 = MOVZ_I_D32
  { 2020,	4,	1,	4,	1233,	0, 0x4ULL, nullptr, nullptr, OperandInfo312, -1 ,nullptr },  // Inst #2020 = MOVZ_I_D32_MM
  { 2021,	4,	1,	4,	700,	0, 0x4ULL, nullptr, nullptr, OperandInfo313, -1 ,nullptr },  // Inst #2021 = MOVZ_I_D64
  { 2022,	4,	1,	4,	478,	0, 0x4ULL, nullptr, nullptr, OperandInfo314, -1 ,nullptr },  // Inst #2022 = MOVZ_I_I
  { 2023,	4,	1,	4,	903,	0, 0x4ULL, nullptr, nullptr, OperandInfo315, -1 ,nullptr },  // Inst #2023 = MOVZ_I_I64
  { 2024,	4,	1,	4,	1552,	0, 0x4ULL, nullptr, nullptr, OperandInfo314, -1 ,nullptr },  // Inst #2024 = MOVZ_I_MM
  { 2025,	4,	1,	4,	701,	0, 0x4ULL, nullptr, nullptr, OperandInfo316, -1 ,nullptr },  // Inst #2025 = MOVZ_I_S
  { 2026,	4,	1,	4,	1234,	0, 0x4ULL, nullptr, nullptr, OperandInfo316, -1 ,nullptr },  // Inst #2026 = MOVZ_I_S_MM
  { 2027,	2,	0,	4,	847,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList6, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #2027 = MSUB
  { 2028,	4,	1,	4,	1226,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo292, -1 ,nullptr },  // Inst #2028 = MSUBF_D
  { 2029,	4,	1,	4,	1320,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo292, -1 ,nullptr },  // Inst #2029 = MSUBF_D_MMR6
  { 2030,	4,	1,	4,	1224,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo293, -1 ,nullptr },  // Inst #2030 = MSUBF_S
  { 2031,	4,	1,	4,	1321,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo293, -1 ,nullptr },  // Inst #2031 = MSUBF_S_MMR6
  { 2032,	4,	1,	4,	665,	0, 0x6ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #2032 = MSUBR_Q_H
  { 2033,	4,	1,	4,	665,	0, 0x6ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #2033 = MSUBR_Q_W
  { 2034,	2,	0,	4,	848,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList6, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #2034 = MSUBU
  { 2035,	4,	1,	4,	1390,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #2035 = MSUBU_DSP
  { 2036,	4,	1,	4,	1553,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #2036 = MSUBU_DSP_MM
  { 2037,	2,	0,	4,	875,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList6, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #2037 = MSUBU_MM
  { 2038,	4,	1,	4,	660,	0, 0x6ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #2038 = MSUBV_B
  { 2039,	4,	1,	4,	660,	0, 0x6ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #2039 = MSUBV_D
  { 2040,	4,	1,	4,	660,	0, 0x6ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #2040 = MSUBV_H
  { 2041,	4,	1,	4,	660,	0, 0x6ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #2041 = MSUBV_W
  { 2042,	4,	1,	4,	671,	0, 0x4ULL, nullptr, nullptr, OperandInfo294, -1 ,nullptr },  // Inst #2042 = MSUB_D32
  { 2043,	4,	1,	4,	1272,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo294, -1 ,nullptr },  // Inst #2043 = MSUB_D32_MM
  { 2044,	4,	1,	4,	671,	0, 0x4ULL, nullptr, nullptr, OperandInfo295, -1 ,nullptr },  // Inst #2044 = MSUB_D64
  { 2045,	4,	1,	4,	1391,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #2045 = MSUB_DSP
  { 2046,	4,	1,	4,	1554,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #2046 = MSUB_DSP_MM
  { 2047,	2,	0,	4,	874,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList6, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #2047 = MSUB_MM
  { 2048,	4,	1,	4,	666,	0, 0x6ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #2048 = MSUB_Q_H
  { 2049,	4,	1,	4,	666,	0, 0x6ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #2049 = MSUB_Q_W
  { 2050,	4,	1,	4,	672,	0, 0x4ULL, nullptr, nullptr, OperandInfo296, -1 ,nullptr },  // Inst #2050 = MSUB_S
  { 2051,	4,	1,	4,	1271,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo296, -1 ,nullptr },  // Inst #2051 = MSUB_S_MM
  { 2052,	3,	1,	4,	412,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #2052 = MTC0
  { 2053,	3,	1,	4,	1036,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #2053 = MTC0_MMR6
  { 2054,	2,	1,	4,	678,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Bitcast), 0x4ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #2054 = MTC1
  { 2055,	2,	1,	4,	678,	0|(1ULL<<MCID::MoveReg), 0x4ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #2055 = MTC1_D64
  { 2056,	2,	1,	4,	1258,	0|(1ULL<<MCID::MoveReg), 0x4ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #2056 = MTC1_D64_MM
  { 2057,	2,	1,	4,	1258,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Bitcast), 0x4ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #2057 = MTC1_MM
  { 2058,	2,	1,	4,	1302,	0|(1ULL<<MCID::Bitcast), 0x6ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #2058 = MTC1_MMR6
  { 2059,	3,	1,	4,	414,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo317, -1 ,nullptr },  // Inst #2059 = MTC2
  { 2060,	2,	1,	4,	1037,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo211, -1 ,nullptr },  // Inst #2060 = MTC2_MMR6
  { 2061,	3,	1,	4,	418,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #2061 = MTGC0
  { 2062,	3,	1,	4,	1070,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #2062 = MTGC0_MM
  { 2063,	3,	1,	4,	1035,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #2063 = MTHC0_MMR6
  { 2064,	3,	1,	4,	679,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo318, -1 ,nullptr },  // Inst #2064 = MTHC1_D32
  { 2065,	3,	1,	4,	1259,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo318, -1 ,nullptr },  // Inst #2065 = MTHC1_D32_MM
  { 2066,	3,	1,	4,	679,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo319, -1 ,nullptr },  // Inst #2066 = MTHC1_D64
  { 2067,	3,	1,	4,	1259,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo319, -1 ,nullptr },  // Inst #2067 = MTHC1_D64_MM
  { 2068,	2,	1,	4,	1037,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo211, -1 ,nullptr },  // Inst #2068 = MTHC2_MMR6
  { 2069,	3,	1,	4,	419,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #2069 = MTHGC0
  { 2070,	3,	1,	4,	1071,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #2070 = MTHGC0_MM
  { 2071,	1,	0,	4,	488,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, ImplicitList21, OperandInfo50, -1 ,nullptr },  // Inst #2071 = MTHI
  { 2072,	1,	0,	4,	900,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, ImplicitList22, OperandInfo87, -1 ,nullptr },  // Inst #2072 = MTHI64
  { 2073,	2,	1,	4,	1344,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo320, -1 ,nullptr },  // Inst #2073 = MTHI_DSP
  { 2074,	2,	1,	4,	1555,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo320, -1 ,nullptr },  // Inst #2074 = MTHI_DSP_MM
  { 2075,	1,	0,	4,	882,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, ImplicitList21, OperandInfo50, -1 ,nullptr },  // Inst #2075 = MTHI_MM
  { 2076,	3,	1,	4,	1343,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList4, OperandInfo321, -1 ,nullptr },  // Inst #2076 = MTHLIP
  { 2077,	3,	1,	4,	1556,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList4, OperandInfo321, -1 ,nullptr },  // Inst #2077 = MTHLIP_MM
  { 2078,	1,	0,	4,	488,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, ImplicitList23, OperandInfo50, -1 ,nullptr },  // Inst #2078 = MTLO
  { 2079,	1,	0,	4,	900,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, ImplicitList24, OperandInfo87, -1 ,nullptr },  // Inst #2079 = MTLO64
  { 2080,	2,	1,	4,	1345,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo322, -1 ,nullptr },  // Inst #2080 = MTLO_DSP
  { 2081,	2,	1,	4,	1557,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo322, -1 ,nullptr },  // Inst #2081 = MTLO_DSP_MM
  { 2082,	1,	0,	4,	882,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, ImplicitList23, OperandInfo50, -1 ,nullptr },  // Inst #2082 = MTLO_MM
  { 2083,	1,	0,	4,	1197,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, ImplicitList25, OperandInfo87, -1 ,nullptr },  // Inst #2083 = MTM0
  { 2084,	1,	0,	4,	1197,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, ImplicitList26, OperandInfo87, -1 ,nullptr },  // Inst #2084 = MTM1
  { 2085,	1,	0,	4,	1197,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, ImplicitList27, OperandInfo87, -1 ,nullptr },  // Inst #2085 = MTM2
  { 2086,	1,	0,	4,	1197,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, ImplicitList28, OperandInfo87, -1 ,nullptr },  // Inst #2086 = MTP0
  { 2087,	1,	0,	4,	1197,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, ImplicitList29, OperandInfo87, -1 ,nullptr },  // Inst #2087 = MTP1
  { 2088,	1,	0,	4,	1197,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, ImplicitList30, OperandInfo87, -1 ,nullptr },  // Inst #2088 = MTP2
  { 2089,	5,	1,	4,	1056,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo300, -1 ,nullptr },  // Inst #2089 = MTTR
  { 2090,	3,	1,	4,	861,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2090 = MUH
  { 2091,	3,	1,	4,	862,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2091 = MUHU
  { 2092,	3,	1,	4,	884,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2092 = MUHU_MMR6
  { 2093,	3,	1,	4,	885,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2093 = MUH_MMR6
  { 2094,	3,	1,	4,	481,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, ImplicitList6, OperandInfo64, -1 ,nullptr },  // Inst #2094 = MUL
  { 2095,	3,	1,	4,	1392,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo203, -1 ,nullptr },  // Inst #2095 = MULEQ_S_W_PHL
  { 2096,	3,	1,	4,	1558,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo203, -1 ,nullptr },  // Inst #2096 = MULEQ_S_W_PHL_MM
  { 2097,	3,	1,	4,	1393,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo203, -1 ,nullptr },  // Inst #2097 = MULEQ_S_W_PHR
  { 2098,	3,	1,	4,	1559,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo203, -1 ,nullptr },  // Inst #2098 = MULEQ_S_W_PHR_MM
  { 2099,	3,	1,	4,	1394,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo162, -1 ,nullptr },  // Inst #2099 = MULEU_S_PH_QBL
  { 2100,	3,	1,	4,	1560,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo162, -1 ,nullptr },  // Inst #2100 = MULEU_S_PH_QBL_MM
  { 2101,	3,	1,	4,	1395,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo162, -1 ,nullptr },  // Inst #2101 = MULEU_S_PH_QBR
  { 2102,	3,	1,	4,	1561,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo162, -1 ,nullptr },  // Inst #2102 = MULEU_S_PH_QBR_MM
  { 2103,	3,	1,	4,	1396,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo162, -1 ,nullptr },  // Inst #2103 = MULQ_RS_PH
  { 2104,	3,	1,	4,	1562,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo162, -1 ,nullptr },  // Inst #2104 = MULQ_RS_PH_MM
  { 2105,	3,	1,	4,	1473,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo64, -1 ,nullptr },  // Inst #2105 = MULQ_RS_W
  { 2106,	3,	1,	4,	1637,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo64, -1 ,nullptr },  // Inst #2106 = MULQ_RS_W_MMR2
  { 2107,	3,	1,	4,	1474,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo162, -1 ,nullptr },  // Inst #2107 = MULQ_S_PH
  { 2108,	3,	1,	4,	1638,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo162, -1 ,nullptr },  // Inst #2108 = MULQ_S_PH_MMR2
  { 2109,	3,	1,	4,	1475,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo64, -1 ,nullptr },  // Inst #2109 = MULQ_S_W
  { 2110,	3,	1,	4,	1639,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo64, -1 ,nullptr },  // Inst #2110 = MULQ_S_W_MMR2
  { 2111,	3,	1,	4,	667,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2111 = MULR_Q_H
  { 2112,	3,	1,	4,	667,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2112 = MULR_Q_W
  { 2113,	4,	1,	4,	1397,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #2113 = MULSAQ_S_W_PH
  { 2114,	4,	1,	4,	1563,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList13, OperandInfo232, -1 ,nullptr },  // Inst #2114 = MULSAQ_S_W_PH_MM
  { 2115,	4,	1,	4,	1476,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #2115 = MULSA_W_PH
  { 2116,	4,	1,	4,	1640,	0, 0x6ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #2116 = MULSA_W_PH_MMR2
  { 2117,	2,	0,	4,	482,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #2117 = MULT
  { 2118,	3,	1,	4,	1398,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #2118 = MULTU_DSP
  { 2119,	3,	1,	4,	1564,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #2119 = MULTU_DSP_MM
  { 2120,	3,	1,	4,	1399,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #2120 = MULT_DSP
  { 2121,	3,	1,	4,	1565,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #2121 = MULT_DSP_MM
  { 2122,	2,	0,	4,	870,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #2122 = MULT_MM
  { 2123,	2,	0,	4,	483,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #2123 = MULTu
  { 2124,	2,	0,	4,	871,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #2124 = MULTu_MM
  { 2125,	3,	1,	4,	863,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2125 = MULU
  { 2126,	3,	1,	4,	886,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2126 = MULU_MMR6
  { 2127,	3,	1,	4,	662,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2127 = MULV_B
  { 2128,	3,	1,	4,	662,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #2128 = MULV_D
  { 2129,	3,	1,	4,	662,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2129 = MULV_H
  { 2130,	3,	1,	4,	662,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2130 = MULV_W
  { 2131,	3,	1,	4,	876,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, ImplicitList6, OperandInfo64, -1 ,nullptr },  // Inst #2131 = MUL_MM
  { 2132,	3,	1,	4,	887,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2132 = MUL_MMR6
  { 2133,	3,	1,	4,	1471,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo162, -1 ,nullptr },  // Inst #2133 = MUL_PH
  { 2134,	3,	1,	4,	1635,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo162, -1 ,nullptr },  // Inst #2134 = MUL_PH_MMR2
  { 2135,	3,	1,	4,	668,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2135 = MUL_Q_H
  { 2136,	3,	1,	4,	668,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2136 = MUL_Q_W
  { 2137,	3,	1,	4,	864,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2137 = MUL_R6
  { 2138,	3,	1,	4,	1472,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo162, -1 ,nullptr },  // Inst #2138 = MUL_S_PH
  { 2139,	3,	1,	4,	1636,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList31, OperandInfo162, -1 ,nullptr },  // Inst #2139 = MUL_S_PH_MMR2
  { 2140,	1,	1,	2,	727,	0|(1ULL<<MCID::MoveReg), 0x0ULL, ImplicitList21, nullptr, OperandInfo262, -1 ,nullptr },  // Inst #2140 = Mfhi16
  { 2141,	1,	1,	2,	727,	0, 0x0ULL, ImplicitList23, nullptr, OperandInfo262, -1 ,nullptr },  // Inst #2141 = Mflo16
  { 2142,	2,	1,	2,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323, -1 ,nullptr },  // Inst #2142 = Move32R16
  { 2143,	2,	1,	2,	727,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo324, -1 ,nullptr },  // Inst #2143 = MoveR3216
  { 2144,	2,	1,	4,	622,	0, 0x6ULL, nullptr, nullptr, OperandInfo302, -1 ,nullptr },  // Inst #2144 = NLOC_B
  { 2145,	2,	1,	4,	622,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #2145 = NLOC_D
  { 2146,	2,	1,	4,	622,	0, 0x6ULL, nullptr, nullptr, OperandInfo325, -1 ,nullptr },  // Inst #2146 = NLOC_H
  { 2147,	2,	1,	4,	622,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #2147 = NLOC_W
  { 2148,	2,	1,	4,	622,	0, 0x6ULL, nullptr, nullptr, OperandInfo302, -1 ,nullptr },  // Inst #2148 = NLZC_B
  { 2149,	2,	1,	4,	622,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #2149 = NLZC_D
  { 2150,	2,	1,	4,	622,	0, 0x6ULL, nullptr, nullptr, OperandInfo325, -1 ,nullptr },  // Inst #2150 = NLZC_H
  { 2151,	2,	1,	4,	622,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #2151 = NLZC_W
  { 2152,	4,	1,	4,	673,	0, 0x4ULL, nullptr, nullptr, OperandInfo294, -1 ,nullptr },  // Inst #2152 = NMADD_D32
  { 2153,	4,	1,	4,	1239,	0, 0x4ULL, nullptr, nullptr, OperandInfo294, -1 ,nullptr },  // Inst #2153 = NMADD_D32_MM
  { 2154,	4,	1,	4,	673,	0, 0x4ULL, nullptr, nullptr, OperandInfo295, -1 ,nullptr },  // Inst #2154 = NMADD_D64
  { 2155,	4,	1,	4,	674,	0, 0x4ULL, nullptr, nullptr, OperandInfo296, -1 ,nullptr },  // Inst #2155 = NMADD_S
  { 2156,	4,	1,	4,	1238,	0, 0x4ULL, nullptr, nullptr, OperandInfo296, -1 ,nullptr },  // Inst #2156 = NMADD_S_MM
  { 2157,	4,	1,	4,	675,	0, 0x4ULL, nullptr, nullptr, OperandInfo294, -1 ,nullptr },  // Inst #2157 = NMSUB_D32
  { 2158,	4,	1,	4,	1241,	0, 0x4ULL, nullptr, nullptr, OperandInfo294, -1 ,nullptr },  // Inst #2158 = NMSUB_D32_MM
  { 2159,	4,	1,	4,	675,	0, 0x4ULL, nullptr, nullptr, OperandInfo295, -1 ,nullptr },  // Inst #2159 = NMSUB_D64
  { 2160,	4,	1,	4,	676,	0, 0x4ULL, nullptr, nullptr, OperandInfo296, -1 ,nullptr },  // Inst #2160 = NMSUB_S
  { 2161,	4,	1,	4,	1240,	0, 0x4ULL, nullptr, nullptr, OperandInfo296, -1 ,nullptr },  // Inst #2161 = NMSUB_S_MM
  { 2162,	3,	1,	4,	361,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2162 = NOR
  { 2163,	3,	1,	4,	834,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #2163 = NOR64
  { 2164,	3,	1,	4,	544,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #2164 = NORI_B
  { 2165,	3,	1,	4,	744,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2165 = NOR_MM
  { 2166,	3,	1,	4,	785,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2166 = NOR_MMR6
  { 2167,	3,	1,	4,	543,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2167 = NOR_V
  { 2168,	2,	1,	2,	745,	0, 0x0ULL, nullptr, nullptr, OperandInfo326, -1 ,nullptr },  // Inst #2168 = NOT16_MM
  { 2169,	2,	1,	2,	786,	0, 0x0ULL, nullptr, nullptr, OperandInfo326, -1 ,nullptr },  // Inst #2169 = NOT16_MMR6
  { 2170,	2,	1,	2,	727,	0, 0x0ULL, nullptr, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #2170 = NegRxRy16
  { 2171,	2,	1,	2,	727,	0, 0x0ULL, nullptr, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #2171 = NotRxRy16
  { 2172,	3,	1,	4,	362,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2172 = OR
  { 2173,	3,	1,	2,	746,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #2173 = OR16_MM
  { 2174,	3,	1,	2,	787,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #2174 = OR16_MMR6
  { 2175,	3,	1,	4,	835,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #2175 = OR64
  { 2176,	3,	1,	4,	544,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #2176 = ORI_B
  { 2177,	3,	1,	4,	788,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2177 = ORI_MMR6
  { 2178,	3,	1,	4,	746,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2178 = OR_MM
  { 2179,	3,	1,	4,	787,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2179 = OR_MMR6
  { 2180,	3,	1,	4,	543,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2180 = OR_V
  { 2181,	3,	1,	4,	495,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2181 = ORi
  { 2182,	3,	1,	4,	801,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #2182 = ORi64
  { 2183,	3,	1,	4,	747,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2183 = ORi_MM
  { 2184,	3,	1,	2,	727,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo175, -1 ,nullptr },  // Inst #2184 = OrRxRxRy16
  { 2185,	3,	1,	4,	1400,	0, 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2185 = PACKRL_PH
  { 2186,	3,	1,	4,	1566,	0, 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2186 = PACKRL_PH_MM
  { 2187,	0,	0,	4,	400,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2187 = PAUSE
  { 2188,	0,	0,	4,	1026,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2188 = PAUSE_MM
  { 2189,	0,	0,	4,	1043,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2189 = PAUSE_MMR6
  { 2190,	3,	1,	4,	621,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2190 = PCKEV_B
  { 2191,	3,	1,	4,	621,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #2191 = PCKEV_D
  { 2192,	3,	1,	4,	621,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2192 = PCKEV_H
  { 2193,	3,	1,	4,	621,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2193 = PCKEV_W
  { 2194,	3,	1,	4,	621,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2194 = PCKOD_B
  { 2195,	3,	1,	4,	621,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #2195 = PCKOD_D
  { 2196,	3,	1,	4,	621,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2196 = PCKOD_H
  { 2197,	3,	1,	4,	621,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2197 = PCKOD_W
  { 2198,	2,	1,	4,	521,	0, 0x6ULL, nullptr, nullptr, OperandInfo302, -1 ,nullptr },  // Inst #2198 = PCNT_B
  { 2199,	2,	1,	4,	521,	0, 0x6ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #2199 = PCNT_D
  { 2200,	2,	1,	4,	521,	0, 0x6ULL, nullptr, nullptr, OperandInfo325, -1 ,nullptr },  // Inst #2200 = PCNT_H
  { 2201,	2,	1,	4,	521,	0, 0x6ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #2201 = PCNT_W
  { 2202,	3,	1,	4,	1401,	0|(1ULL<<MCID::MayLoad), 0x6ULL, ImplicitList10, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2202 = PICK_PH
  { 2203,	3,	1,	4,	1567,	0|(1ULL<<MCID::MayLoad), 0x6ULL, ImplicitList10, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2203 = PICK_PH_MM
  { 2204,	3,	1,	4,	1402,	0|(1ULL<<MCID::MayLoad), 0x6ULL, ImplicitList10, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2204 = PICK_QB
  { 2205,	3,	1,	4,	1568,	0|(1ULL<<MCID::MayLoad), 0x6ULL, ImplicitList10, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2205 = PICK_QB_MM
  { 2206,	3,	1,	4,	637,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #2206 = PLL_PS64
  { 2207,	3,	1,	4,	637,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #2207 = PLU_PS64
  { 2208,	2,	1,	4,	1195,	0, 0x1ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #2208 = POP
  { 2209,	2,	1,	4,	1404,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2209 = PRECEQU_PH_QBL
  { 2210,	2,	1,	4,	1403,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2210 = PRECEQU_PH_QBLA
  { 2211,	2,	1,	4,	1569,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2211 = PRECEQU_PH_QBLA_MM
  { 2212,	2,	1,	4,	1570,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2212 = PRECEQU_PH_QBL_MM
  { 2213,	2,	1,	4,	1406,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2213 = PRECEQU_PH_QBR
  { 2214,	2,	1,	4,	1405,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2214 = PRECEQU_PH_QBRA
  { 2215,	2,	1,	4,	1571,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2215 = PRECEQU_PH_QBRA_MM
  { 2216,	2,	1,	4,	1572,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2216 = PRECEQU_PH_QBR_MM
  { 2217,	2,	1,	4,	1407,	0, 0x6ULL, nullptr, nullptr, OperandInfo327, -1 ,nullptr },  // Inst #2217 = PRECEQ_W_PHL
  { 2218,	2,	1,	4,	1573,	0, 0x6ULL, nullptr, nullptr, OperandInfo327, -1 ,nullptr },  // Inst #2218 = PRECEQ_W_PHL_MM
  { 2219,	2,	1,	4,	1408,	0, 0x6ULL, nullptr, nullptr, OperandInfo327, -1 ,nullptr },  // Inst #2219 = PRECEQ_W_PHR
  { 2220,	2,	1,	4,	1574,	0, 0x6ULL, nullptr, nullptr, OperandInfo327, -1 ,nullptr },  // Inst #2220 = PRECEQ_W_PHR_MM
  { 2221,	2,	1,	4,	1410,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2221 = PRECEU_PH_QBL
  { 2222,	2,	1,	4,	1409,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2222 = PRECEU_PH_QBLA
  { 2223,	2,	1,	4,	1575,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2223 = PRECEU_PH_QBLA_MM
  { 2224,	2,	1,	4,	1576,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2224 = PRECEU_PH_QBL_MM
  { 2225,	2,	1,	4,	1412,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2225 = PRECEU_PH_QBR
  { 2226,	2,	1,	4,	1411,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2226 = PRECEU_PH_QBRA
  { 2227,	2,	1,	4,	1577,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2227 = PRECEU_PH_QBRA_MM
  { 2228,	2,	1,	4,	1578,	0, 0x6ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #2228 = PRECEU_PH_QBR_MM
  { 2229,	3,	1,	4,	1413,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo162, -1 ,nullptr },  // Inst #2229 = PRECRQU_S_QB_PH
  { 2230,	3,	1,	4,	1579,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo162, -1 ,nullptr },  // Inst #2230 = PRECRQU_S_QB_PH_MM
  { 2231,	3,	1,	4,	1414,	0, 0x6ULL, nullptr, nullptr, OperandInfo328, -1 ,nullptr },  // Inst #2231 = PRECRQ_PH_W
  { 2232,	3,	1,	4,	1580,	0, 0x6ULL, nullptr, nullptr, OperandInfo328, -1 ,nullptr },  // Inst #2232 = PRECRQ_PH_W_MM
  { 2233,	3,	1,	4,	1415,	0, 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2233 = PRECRQ_QB_PH
  { 2234,	3,	1,	4,	1581,	0, 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2234 = PRECRQ_QB_PH_MM
  { 2235,	3,	1,	4,	1416,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo328, -1 ,nullptr },  // Inst #2235 = PRECRQ_RS_PH_W
  { 2236,	3,	1,	4,	1582,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo328, -1 ,nullptr },  // Inst #2236 = PRECRQ_RS_PH_W_MM
  { 2237,	3,	1,	4,	1477,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2237 = PRECR_QB_PH
  { 2238,	3,	1,	4,	1641,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2238 = PRECR_QB_PH_MMR2
  { 2239,	4,	1,	4,	1478,	0, 0x6ULL, nullptr, nullptr, OperandInfo329, -1 ,nullptr },  // Inst #2239 = PRECR_SRA_PH_W
  { 2240,	4,	1,	4,	1642,	0, 0x6ULL, nullptr, nullptr, OperandInfo329, -1 ,nullptr },  // Inst #2240 = PRECR_SRA_PH_W_MMR2
  { 2241,	4,	1,	4,	1479,	0, 0x6ULL, nullptr, nullptr, OperandInfo329, -1 ,nullptr },  // Inst #2241 = PRECR_SRA_R_PH_W
  { 2242,	4,	1,	4,	1643,	0, 0x6ULL, nullptr, nullptr, OperandInfo329, -1 ,nullptr },  // Inst #2242 = PRECR_SRA_R_PH_W_MMR2
  { 2243,	3,	0,	4,	463,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #2243 = PREF
  { 2244,	3,	0,	4,	464,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #2244 = PREFE
  { 2245,	3,	0,	4,	1098,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #2245 = PREFE_MM
  { 2246,	3,	0,	4,	1131,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo330, -1 ,nullptr },  // Inst #2246 = PREFX_MM
  { 2247,	3,	0,	4,	1131,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #2247 = PREF_MM
  { 2248,	3,	0,	4,	1153,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #2248 = PREF_MMR6
  { 2249,	3,	0,	4,	1079,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #2249 = PREF_R6
  { 2250,	4,	1,	4,	1480,	0, 0x6ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #2250 = PREPEND
  { 2251,	4,	1,	4,	1644,	0, 0x6ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #2251 = PREPEND_MMR2
  { 2252,	2,	1,	4,	1417,	0, 0x6ULL, nullptr, nullptr, OperandInfo327, -1 ,nullptr },  // Inst #2252 = RADDU_W_QB
  { 2253,	2,	1,	4,	1583,	0, 0x6ULL, nullptr, nullptr, OperandInfo327, -1 ,nullptr },  // Inst #2253 = RADDU_W_QB_MM
  { 2254,	2,	1,	4,	1418,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2254 = RDDSP
  { 2255,	2,	1,	4,	1584,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2255 = RDDSP_MM
  { 2256,	3,	1,	4,	475,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo331, -1 ,nullptr },  // Inst #2256 = RDHWR
  { 2257,	3,	1,	4,	901,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo332, -1 ,nullptr },  // Inst #2257 = RDHWR64
  { 2258,	3,	1,	4,	883,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo331, -1 ,nullptr },  // Inst #2258 = RDHWR_MM
  { 2259,	3,	1,	4,	892,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo331, -1 ,nullptr },  // Inst #2259 = RDHWR_MMR6
  { 2260,	2,	1,	4,	1028,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #2260 = RDPGPR_MMR6
  { 2261,	2,	1,	4,	644,	0, 0x4ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #2261 = RECIP_D32
  { 2262,	2,	1,	4,	1278,	0, 0x4ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #2262 = RECIP_D32_MM
  { 2263,	2,	1,	4,	644,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #2263 = RECIP_D64
  { 2264,	2,	1,	4,	1278,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #2264 = RECIP_D64_MM
  { 2265,	2,	1,	4,	646,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #2265 = RECIP_S
  { 2266,	2,	1,	4,	1277,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #2266 = RECIP_S_MM
  { 2267,	2,	1,	4,	1419,	0, 0x6ULL, nullptr, nullptr, OperandInfo333, -1 ,nullptr },  // Inst #2267 = REPLV_PH
  { 2268,	2,	1,	4,	1585,	0, 0x6ULL, nullptr, nullptr, OperandInfo333, -1 ,nullptr },  // Inst #2268 = REPLV_PH_MM
  { 2269,	2,	1,	4,	1420,	0, 0x6ULL, nullptr, nullptr, OperandInfo333, -1 ,nullptr },  // Inst #2269 = REPLV_QB
  { 2270,	2,	1,	4,	1586,	0, 0x6ULL, nullptr, nullptr, OperandInfo333, -1 ,nullptr },  // Inst #2270 = REPLV_QB_MM
  { 2271,	2,	1,	4,	1421,	0, 0x6ULL, nullptr, nullptr, OperandInfo334, -1 ,nullptr },  // Inst #2271 = REPL_PH
  { 2272,	2,	1,	4,	1587,	0, 0x6ULL, nullptr, nullptr, OperandInfo334, -1 ,nullptr },  // Inst #2272 = REPL_PH_MM
  { 2273,	2,	1,	4,	1422,	0, 0x6ULL, nullptr, nullptr, OperandInfo334, -1 ,nullptr },  // Inst #2273 = REPL_QB
  { 2274,	2,	1,	4,	1588,	0, 0x6ULL, nullptr, nullptr, OperandInfo334, -1 ,nullptr },  // Inst #2274 = REPL_QB_MM
  { 2275,	2,	1,	4,	1219,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #2275 = RINT_D
  { 2276,	2,	1,	4,	1317,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #2276 = RINT_D_MMR6
  { 2277,	2,	1,	4,	1218,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #2277 = RINT_S
  { 2278,	2,	1,	4,	1317,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #2278 = RINT_S_MMR6
  { 2279,	3,	1,	4,	496,	0, 0x1ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2279 = ROTR
  { 2280,	3,	1,	4,	712,	0, 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2280 = ROTRV
  { 2281,	3,	1,	4,	748,	0, 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2281 = ROTRV_MM
  { 2282,	3,	1,	4,	749,	0, 0x1ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2282 = ROTR_MM
  { 2283,	2,	1,	4,	711,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #2283 = ROUND_L_D64
  { 2284,	2,	1,	4,	1298,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #2284 = ROUND_L_D_MMR6
  { 2285,	2,	1,	4,	711,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #2285 = ROUND_L_S
  { 2286,	2,	1,	4,	1298,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #2286 = ROUND_L_S_MMR6
  { 2287,	2,	1,	4,	711,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #2287 = ROUND_W_D32
  { 2288,	2,	1,	4,	711,	0, 0x4ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #2288 = ROUND_W_D64
  { 2289,	2,	1,	4,	1298,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #2289 = ROUND_W_D_MMR6
  { 2290,	2,	1,	4,	1244,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #2290 = ROUND_W_MM
  { 2291,	2,	1,	4,	711,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #2291 = ROUND_W_S
  { 2292,	2,	1,	4,	1244,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #2292 = ROUND_W_S_MM
  { 2293,	2,	1,	4,	1298,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #2293 = ROUND_W_S_MMR6
  { 2294,	2,	1,	4,	645,	0, 0x4ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #2294 = RSQRT_D32
  { 2295,	2,	1,	4,	1278,	0, 0x4ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #2295 = RSQRT_D32_MM
  { 2296,	2,	1,	4,	645,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #2296 = RSQRT_D64
  { 2297,	2,	1,	4,	1278,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #2297 = RSQRT_D64_MM
  { 2298,	2,	1,	4,	647,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #2298 = RSQRT_S
  { 2299,	2,	1,	4,	1277,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #2299 = RSQRT_S_MM
  { 2300,	0,	0,	2,	1100,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, nullptr, -1 ,nullptr },  // Inst #2300 = Restore16
  { 2301,	0,	0,	2,	1100,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, nullptr, -1 ,nullptr },  // Inst #2301 = RestoreX16
  { 2302,	2,	0,	4,	1202,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #2302 = SAA
  { 2303,	2,	0,	4,	1202,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #2303 = SAAD
  { 2304,	3,	1,	4,	522,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #2304 = SAT_S_B
  { 2305,	3,	1,	4,	522,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #2305 = SAT_S_D
  { 2306,	3,	1,	4,	522,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #2306 = SAT_S_H
  { 2307,	3,	1,	4,	522,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #2307 = SAT_S_W
  { 2308,	3,	1,	4,	522,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #2308 = SAT_U_B
  { 2309,	3,	1,	4,	522,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #2309 = SAT_U_D
  { 2310,	3,	1,	4,	522,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #2310 = SAT_U_H
  { 2311,	3,	1,	4,	522,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #2311 = SAT_U_W
  { 2312,	3,	0,	4,	447,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2312 = SB
  { 2313,	3,	0,	2,	1122,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo335, -1 ,nullptr },  // Inst #2313 = SB16_MM
  { 2314,	3,	0,	2,	1145,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo335, -1 ,nullptr },  // Inst #2314 = SB16_MMR6
  { 2315,	3,	0,	4,	1169,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #2315 = SB64
  { 2316,	3,	0,	4,	455,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2316 = SBE
  { 2317,	3,	0,	4,	1091,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2317 = SBE_MM
  { 2318,	3,	0,	4,	1092,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2318 = SB_MM
  { 2319,	3,	0,	4,	1145,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2319 = SB_MMR6
  { 2320,	4,	1,	4,	454,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo336, -1 ,nullptr },  // Inst #2320 = SC
  { 2321,	4,	1,	4,	1168,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo336, -1 ,nullptr },  // Inst #2321 = SC64
  { 2322,	4,	1,	4,	1180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo337, -1 ,nullptr },  // Inst #2322 = SC64_R6
  { 2323,	4,	1,	4,	1168,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo338, -1 ,nullptr },  // Inst #2323 = SCD
  { 2324,	4,	1,	4,	1181,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo339, -1 ,nullptr },  // Inst #2324 = SCD_R6
  { 2325,	4,	1,	4,	458,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo336, -1 ,nullptr },  // Inst #2325 = SCE
  { 2326,	4,	1,	4,	1097,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo336, -1 ,nullptr },  // Inst #2326 = SCE_MM
  { 2327,	4,	1,	4,	1123,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo336, -1 ,nullptr },  // Inst #2327 = SC_MM
  { 2328,	4,	1,	4,	1072,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo336, -1 ,nullptr },  // Inst #2328 = SC_MMR6
  { 2329,	4,	1,	4,	1078,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo337, -1 ,nullptr },  // Inst #2329 = SC_R6
  { 2330,	3,	0,	4,	1167,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #2330 = SD
  { 2331,	1,	0,	4,	384,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2331 = SDBBP
  { 2332,	1,	0,	2,	959,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2332 = SDBBP16_MM
  { 2333,	1,	0,	2,	1000,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2333 = SDBBP16_MMR6
  { 2334,	1,	0,	4,	959,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2334 = SDBBP_MM
  { 2335,	1,	0,	4,	1000,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2335 = SDBBP_MMR6
  { 2336,	1,	0,	4,	930,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2336 = SDBBP_R6
  { 2337,	3,	0,	4,	691,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #2337 = SDC1
  { 2338,	3,	0,	4,	691,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, nullptr, OperandInfo265, -1 ,nullptr },  // Inst #2338 = SDC164
  { 2339,	3,	0,	4,	1327,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, nullptr, OperandInfo265, -1 ,nullptr },  // Inst #2339 = SDC1_D64_MMR6
  { 2340,	3,	0,	4,	1279,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #2340 = SDC1_MM
  { 2341,	3,	0,	4,	452,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, nullptr, OperandInfo266, -1 ,nullptr },  // Inst #2341 = SDC2
  { 2342,	3,	0,	4,	1146,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, nullptr, OperandInfo267, -1 ,nullptr },  // Inst #2342 = SDC2_MMR6
  { 2343,	3,	0,	4,	1077,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo266, -1 ,nullptr },  // Inst #2343 = SDC2_R6
  { 2344,	3,	0,	4,	453,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, nullptr, OperandInfo268, -1 ,nullptr },  // Inst #2344 = SDC3
  { 2345,	2,	0,	4,	857,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #2345 = SDIV
  { 2346,	2,	0,	4,	877,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #2346 = SDIV_MM
  { 2347,	3,	0,	4,	1174,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #2347 = SDL
  { 2348,	3,	0,	4,	1175,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #2348 = SDR
  { 2349,	3,	0,	4,	692,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, nullptr, OperandInfo274, -1 ,nullptr },  // Inst #2349 = SDXC1
  { 2350,	3,	0,	4,	692,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, nullptr, OperandInfo275, -1 ,nullptr },  // Inst #2350 = SDXC164
  { 2351,	2,	1,	4,	497,	0, 0x1ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #2351 = SEB
  { 2352,	2,	1,	4,	802,	0, 0x1ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #2352 = SEB64
  { 2353,	2,	1,	4,	750,	0, 0x1ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #2353 = SEB_MM
  { 2354,	2,	1,	4,	498,	0, 0x1ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #2354 = SEH
  { 2355,	2,	1,	4,	803,	0, 0x1ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #2355 = SEH64
  { 2356,	2,	1,	4,	751,	0, 0x1ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #2356 = SEH_MM
  { 2357,	3,	1,	4,	726,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2357 = SELEQZ
  { 2358,	3,	1,	4,	844,	0, 0x6ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #2358 = SELEQZ64
  { 2359,	3,	1,	4,	1211,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #2359 = SELEQZ_D
  { 2360,	3,	1,	4,	1313,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #2360 = SELEQZ_D_MMR6
  { 2361,	3,	1,	4,	789,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2361 = SELEQZ_MMR6
  { 2362,	3,	1,	4,	1210,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #2362 = SELEQZ_S
  { 2363,	3,	1,	4,	1314,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #2363 = SELEQZ_S_MMR6
  { 2364,	3,	1,	4,	726,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2364 = SELNEZ
  { 2365,	3,	1,	4,	844,	0, 0x6ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #2365 = SELNEZ64
  { 2366,	3,	1,	4,	1211,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #2366 = SELNEZ_D
  { 2367,	3,	1,	4,	1313,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #2367 = SELNEZ_D_MMR6
  { 2368,	3,	1,	4,	789,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2368 = SELNEZ_MMR6
  { 2369,	3,	1,	4,	1210,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #2369 = SELNEZ_S
  { 2370,	3,	1,	4,	1314,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #2370 = SELNEZ_S_MMR6
  { 2371,	4,	1,	4,	1221,	0, 0x6ULL, nullptr, nullptr, OperandInfo292, -1 ,nullptr },  // Inst #2371 = SEL_D
  { 2372,	4,	1,	4,	1315,	0, 0x6ULL, nullptr, nullptr, OperandInfo292, -1 ,nullptr },  // Inst #2372 = SEL_D_MMR6
  { 2373,	4,	1,	4,	1222,	0, 0x6ULL, nullptr, nullptr, OperandInfo340, -1 ,nullptr },  // Inst #2373 = SEL_S
  { 2374,	4,	1,	4,	1316,	0, 0x6ULL, nullptr, nullptr, OperandInfo340, -1 ,nullptr },  // Inst #2374 = SEL_S_MMR6
  { 2375,	3,	1,	4,	1198,	0, 0x1ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #2375 = SEQ
  { 2376,	3,	1,	4,	1199,	0, 0x2ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #2376 = SEQi
  { 2377,	3,	0,	4,	448,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2377 = SH
  { 2378,	3,	0,	2,	1124,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo335, -1 ,nullptr },  // Inst #2378 = SH16_MM
  { 2379,	3,	0,	2,	1147,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo335, -1 ,nullptr },  // Inst #2379 = SH16_MMR6
  { 2380,	3,	0,	4,	1170,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #2380 = SH64
  { 2381,	3,	0,	4,	456,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2381 = SHE
  { 2382,	3,	0,	4,	1093,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2382 = SHE_MM
  { 2383,	3,	1,	4,	538,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #2383 = SHF_B
  { 2384,	3,	1,	4,	538,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #2384 = SHF_H
  { 2385,	3,	1,	4,	538,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #2385 = SHF_W
  { 2386,	3,	1,	4,	1424,	0, 0x6ULL, nullptr, nullptr, OperandInfo341, -1 ,nullptr },  // Inst #2386 = SHILO
  { 2387,	3,	1,	4,	1423,	0, 0x6ULL, nullptr, nullptr, OperandInfo321, -1 ,nullptr },  // Inst #2387 = SHILOV
  { 2388,	3,	1,	4,	1589,	0, 0x6ULL, nullptr, nullptr, OperandInfo321, -1 ,nullptr },  // Inst #2388 = SHILOV_MM
  { 2389,	3,	1,	4,	1590,	0, 0x6ULL, nullptr, nullptr, OperandInfo341, -1 ,nullptr },  // Inst #2389 = SHILO_MM
  { 2390,	3,	1,	4,	1425,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo342, -1 ,nullptr },  // Inst #2390 = SHLLV_PH
  { 2391,	3,	1,	4,	1591,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo342, -1 ,nullptr },  // Inst #2391 = SHLLV_PH_MM
  { 2392,	3,	1,	4,	1426,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo342, -1 ,nullptr },  // Inst #2392 = SHLLV_QB
  { 2393,	3,	1,	4,	1592,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo342, -1 ,nullptr },  // Inst #2393 = SHLLV_QB_MM
  { 2394,	3,	1,	4,	1427,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo342, -1 ,nullptr },  // Inst #2394 = SHLLV_S_PH
  { 2395,	3,	1,	4,	1593,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo342, -1 ,nullptr },  // Inst #2395 = SHLLV_S_PH_MM
  { 2396,	3,	1,	4,	1428,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo64, -1 ,nullptr },  // Inst #2396 = SHLLV_S_W
  { 2397,	3,	1,	4,	1594,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo64, -1 ,nullptr },  // Inst #2397 = SHLLV_S_W_MM
  { 2398,	3,	1,	4,	1429,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo343, -1 ,nullptr },  // Inst #2398 = SHLL_PH
  { 2399,	3,	1,	4,	1595,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo343, -1 ,nullptr },  // Inst #2399 = SHLL_PH_MM
  { 2400,	3,	1,	4,	1430,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo343, -1 ,nullptr },  // Inst #2400 = SHLL_QB
  { 2401,	3,	1,	4,	1596,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo343, -1 ,nullptr },  // Inst #2401 = SHLL_QB_MM
  { 2402,	3,	1,	4,	1431,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo343, -1 ,nullptr },  // Inst #2402 = SHLL_S_PH
  { 2403,	3,	1,	4,	1597,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo343, -1 ,nullptr },  // Inst #2403 = SHLL_S_PH_MM
  { 2404,	3,	1,	4,	1432,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo65, -1 ,nullptr },  // Inst #2404 = SHLL_S_W
  { 2405,	3,	1,	4,	1598,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList32, OperandInfo65, -1 ,nullptr },  // Inst #2405 = SHLL_S_W_MM
  { 2406,	3,	1,	4,	1433,	0, 0x6ULL, nullptr, nullptr, OperandInfo342, -1 ,nullptr },  // Inst #2406 = SHRAV_PH
  { 2407,	3,	1,	4,	1599,	0, 0x6ULL, nullptr, nullptr, OperandInfo342, -1 ,nullptr },  // Inst #2407 = SHRAV_PH_MM
  { 2408,	3,	1,	4,	1483,	0, 0x6ULL, nullptr, nullptr, OperandInfo342, -1 ,nullptr },  // Inst #2408 = SHRAV_QB
  { 2409,	3,	1,	4,	1647,	0, 0x6ULL, nullptr, nullptr, OperandInfo342, -1 ,nullptr },  // Inst #2409 = SHRAV_QB_MMR2
  { 2410,	3,	1,	4,	1434,	0, 0x6ULL, nullptr, nullptr, OperandInfo342, -1 ,nullptr },  // Inst #2410 = SHRAV_R_PH
  { 2411,	3,	1,	4,	1600,	0, 0x6ULL, nullptr, nullptr, OperandInfo342, -1 ,nullptr },  // Inst #2411 = SHRAV_R_PH_MM
  { 2412,	3,	1,	4,	1484,	0, 0x6ULL, nullptr, nullptr, OperandInfo342, -1 ,nullptr },  // Inst #2412 = SHRAV_R_QB
  { 2413,	3,	1,	4,	1648,	0, 0x6ULL, nullptr, nullptr, OperandInfo342, -1 ,nullptr },  // Inst #2413 = SHRAV_R_QB_MMR2
  { 2414,	3,	1,	4,	1435,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2414 = SHRAV_R_W
  { 2415,	3,	1,	4,	1601,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2415 = SHRAV_R_W_MM
  { 2416,	3,	1,	4,	1436,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo343, -1 ,nullptr },  // Inst #2416 = SHRA_PH
  { 2417,	3,	1,	4,	1602,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo343, -1 ,nullptr },  // Inst #2417 = SHRA_PH_MM
  { 2418,	3,	1,	4,	1481,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo343, -1 ,nullptr },  // Inst #2418 = SHRA_QB
  { 2419,	3,	1,	4,	1645,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo343, -1 ,nullptr },  // Inst #2419 = SHRA_QB_MMR2
  { 2420,	3,	1,	4,	1437,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo343, -1 ,nullptr },  // Inst #2420 = SHRA_R_PH
  { 2421,	3,	1,	4,	1603,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo343, -1 ,nullptr },  // Inst #2421 = SHRA_R_PH_MM
  { 2422,	3,	1,	4,	1482,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo343, -1 ,nullptr },  // Inst #2422 = SHRA_R_QB
  { 2423,	3,	1,	4,	1646,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo343, -1 ,nullptr },  // Inst #2423 = SHRA_R_QB_MMR2
  { 2424,	3,	1,	4,	1438,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2424 = SHRA_R_W
  { 2425,	3,	1,	4,	1604,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2425 = SHRA_R_W_MM
  { 2426,	3,	1,	4,	1486,	0, 0x6ULL, nullptr, nullptr, OperandInfo342, -1 ,nullptr },  // Inst #2426 = SHRLV_PH
  { 2427,	3,	1,	4,	1650,	0, 0x6ULL, nullptr, nullptr, OperandInfo342, -1 ,nullptr },  // Inst #2427 = SHRLV_PH_MMR2
  { 2428,	3,	1,	4,	1439,	0, 0x6ULL, nullptr, nullptr, OperandInfo342, -1 ,nullptr },  // Inst #2428 = SHRLV_QB
  { 2429,	3,	1,	4,	1605,	0, 0x6ULL, nullptr, nullptr, OperandInfo342, -1 ,nullptr },  // Inst #2429 = SHRLV_QB_MM
  { 2430,	3,	1,	4,	1485,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo343, -1 ,nullptr },  // Inst #2430 = SHRL_PH
  { 2431,	3,	1,	4,	1649,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo343, -1 ,nullptr },  // Inst #2431 = SHRL_PH_MMR2
  { 2432,	3,	1,	4,	1440,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo343, -1 ,nullptr },  // Inst #2432 = SHRL_QB
  { 2433,	3,	1,	4,	1606,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo343, -1 ,nullptr },  // Inst #2433 = SHRL_QB_MM
  { 2434,	3,	0,	4,	1124,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2434 = SH_MM
  { 2435,	3,	0,	4,	1147,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2435 = SH_MMR6
  { 2436,	1,	0,	4,	927,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2436 = SIGRIE
  { 2437,	1,	0,	4,	988,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2437 = SIGRIE_MMR6
  { 2438,	4,	1,	4,	514,	0, 0x6ULL, nullptr, nullptr, OperandInfo181, -1 ,nullptr },  // Inst #2438 = SLDI_B
  { 2439,	4,	1,	4,	514,	0, 0x6ULL, nullptr, nullptr, OperandInfo182, -1 ,nullptr },  // Inst #2439 = SLDI_D
  { 2440,	4,	1,	4,	514,	0, 0x6ULL, nullptr, nullptr, OperandInfo183, -1 ,nullptr },  // Inst #2440 = SLDI_H
  { 2441,	4,	1,	4,	514,	0, 0x6ULL, nullptr, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #2441 = SLDI_W
  { 2442,	4,	1,	4,	514,	0, 0x6ULL, nullptr, nullptr, OperandInfo344, -1 ,nullptr },  // Inst #2442 = SLD_B
  { 2443,	4,	1,	4,	514,	0, 0x6ULL, nullptr, nullptr, OperandInfo345, -1 ,nullptr },  // Inst #2443 = SLD_D
  { 2444,	4,	1,	4,	514,	0, 0x6ULL, nullptr, nullptr, OperandInfo346, -1 ,nullptr },  // Inst #2444 = SLD_H
  { 2445,	4,	1,	4,	514,	0, 0x6ULL, nullptr, nullptr, OperandInfo347, -1 ,nullptr },  // Inst #2445 = SLD_W
  { 2446,	3,	1,	4,	500,	0, 0x1ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2446 = SLL
  { 2447,	3,	1,	2,	752,	0, 0x0ULL, nullptr, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #2447 = SLL16_MM
  { 2448,	3,	1,	2,	790,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #2448 = SLL16_MMR6
  { 2449,	2,	1,	4,	804,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #2449 = SLL64_32
  { 2450,	2,	1,	4,	804,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #2450 = SLL64_64
  { 2451,	3,	1,	4,	620,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #2451 = SLLI_B
  { 2452,	3,	1,	4,	620,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #2452 = SLLI_D
  { 2453,	3,	1,	4,	620,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #2453 = SLLI_H
  { 2454,	3,	1,	4,	620,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #2454 = SLLI_W
  { 2455,	3,	1,	4,	505,	0, 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2455 = SLLV
  { 2456,	3,	1,	4,	753,	0, 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2456 = SLLV_MM
  { 2457,	3,	1,	4,	620,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2457 = SLL_B
  { 2458,	3,	1,	4,	620,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #2458 = SLL_D
  { 2459,	3,	1,	4,	620,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2459 = SLL_H
  { 2460,	3,	1,	4,	752,	0, 0x1ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2460 = SLL_MM
  { 2461,	3,	1,	4,	790,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2461 = SLL_MMR6
  { 2462,	3,	1,	4,	620,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2462 = SLL_W
  { 2463,	3,	1,	4,	499,	0, 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2463 = SLT
  { 2464,	3,	1,	4,	805,	0, 0x1ULL, nullptr, nullptr, OperandInfo348, -1 ,nullptr },  // Inst #2464 = SLT64
  { 2465,	3,	1,	4,	754,	0, 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2465 = SLT_MM
  { 2466,	3,	1,	4,	363,	0, 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2466 = SLTi
  { 2467,	3,	1,	4,	806,	0, 0x2ULL, nullptr, nullptr, OperandInfo349, -1 ,nullptr },  // Inst #2467 = SLTi64
  { 2468,	3,	1,	4,	755,	0, 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2468 = SLTi_MM
  { 2469,	3,	1,	4,	363,	0, 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2469 = SLTiu
  { 2470,	3,	1,	4,	806,	0, 0x2ULL, nullptr, nullptr, OperandInfo349, -1 ,nullptr },  // Inst #2470 = SLTiu64
  { 2471,	3,	1,	4,	755,	0, 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2471 = SLTiu_MM
  { 2472,	3,	1,	4,	499,	0, 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2472 = SLTu
  { 2473,	3,	1,	4,	805,	0, 0x1ULL, nullptr, nullptr, OperandInfo348, -1 ,nullptr },  // Inst #2473 = SLTu64
  { 2474,	3,	1,	4,	754,	0, 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2474 = SLTu_MM
  { 2475,	3,	1,	4,	1198,	0, 0x1ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #2475 = SNE
  { 2476,	3,	1,	4,	1199,	0, 0x2ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #2476 = SNEi
  { 2477,	3,	1,	4,	540,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #2477 = SPLATI_B
  { 2478,	3,	1,	4,	540,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #2478 = SPLATI_D
  { 2479,	3,	1,	4,	540,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #2479 = SPLATI_H
  { 2480,	3,	1,	4,	540,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #2480 = SPLATI_W
  { 2481,	3,	1,	4,	540,	0, 0x6ULL, nullptr, nullptr, OperandInfo350, -1 ,nullptr },  // Inst #2481 = SPLAT_B
  { 2482,	3,	1,	4,	540,	0, 0x6ULL, nullptr, nullptr, OperandInfo351, -1 ,nullptr },  // Inst #2482 = SPLAT_D
  { 2483,	3,	1,	4,	540,	0, 0x6ULL, nullptr, nullptr, OperandInfo352, -1 ,nullptr },  // Inst #2483 = SPLAT_H
  { 2484,	3,	1,	4,	540,	0, 0x6ULL, nullptr, nullptr, OperandInfo353, -1 ,nullptr },  // Inst #2484 = SPLAT_W
  { 2485,	3,	1,	4,	501,	0, 0x1ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2485 = SRA
  { 2486,	3,	1,	4,	616,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #2486 = SRAI_B
  { 2487,	3,	1,	4,	616,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #2487 = SRAI_D
  { 2488,	3,	1,	4,	616,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #2488 = SRAI_H
  { 2489,	3,	1,	4,	616,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #2489 = SRAI_W
  { 2490,	3,	1,	4,	618,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #2490 = SRARI_B
  { 2491,	3,	1,	4,	618,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #2491 = SRARI_D
  { 2492,	3,	1,	4,	618,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #2492 = SRARI_H
  { 2493,	3,	1,	4,	618,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #2493 = SRARI_W
  { 2494,	3,	1,	4,	618,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2494 = SRAR_B
  { 2495,	3,	1,	4,	618,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #2495 = SRAR_D
  { 2496,	3,	1,	4,	618,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2496 = SRAR_H
  { 2497,	3,	1,	4,	618,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2497 = SRAR_W
  { 2498,	3,	1,	4,	506,	0, 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2498 = SRAV
  { 2499,	3,	1,	4,	756,	0, 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2499 = SRAV_MM
  { 2500,	3,	1,	4,	616,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2500 = SRA_B
  { 2501,	3,	1,	4,	616,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #2501 = SRA_D
  { 2502,	3,	1,	4,	616,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2502 = SRA_H
  { 2503,	3,	1,	4,	757,	0, 0x1ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2503 = SRA_MM
  { 2504,	3,	1,	4,	616,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2504 = SRA_W
  { 2505,	3,	1,	4,	502,	0, 0x1ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2505 = SRL
  { 2506,	3,	1,	2,	758,	0, 0x0ULL, nullptr, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #2506 = SRL16_MM
  { 2507,	3,	1,	2,	791,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #2507 = SRL16_MMR6
  { 2508,	3,	1,	4,	617,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #2508 = SRLI_B
  { 2509,	3,	1,	4,	617,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #2509 = SRLI_D
  { 2510,	3,	1,	4,	617,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #2510 = SRLI_H
  { 2511,	3,	1,	4,	617,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #2511 = SRLI_W
  { 2512,	3,	1,	4,	619,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #2512 = SRLRI_B
  { 2513,	3,	1,	4,	619,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #2513 = SRLRI_D
  { 2514,	3,	1,	4,	619,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #2514 = SRLRI_H
  { 2515,	3,	1,	4,	619,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #2515 = SRLRI_W
  { 2516,	3,	1,	4,	619,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2516 = SRLR_B
  { 2517,	3,	1,	4,	619,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #2517 = SRLR_D
  { 2518,	3,	1,	4,	619,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2518 = SRLR_H
  { 2519,	3,	1,	4,	619,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2519 = SRLR_W
  { 2520,	3,	1,	4,	507,	0, 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2520 = SRLV
  { 2521,	3,	1,	4,	759,	0, 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2521 = SRLV_MM
  { 2522,	3,	1,	4,	617,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2522 = SRL_B
  { 2523,	3,	1,	4,	617,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #2523 = SRL_D
  { 2524,	3,	1,	4,	617,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2524 = SRL_H
  { 2525,	3,	1,	4,	758,	0, 0x1ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2525 = SRL_MM
  { 2526,	3,	1,	4,	617,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2526 = SRL_W
  { 2527,	0,	0,	4,	367,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2527 = SSNOP
  { 2528,	0,	0,	4,	760,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2528 = SSNOP_MM
  { 2529,	0,	0,	4,	792,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2529 = SSNOP_MMR6
  { 2530,	3,	0,	4,	696,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, nullptr, OperandInfo276, -1 ,nullptr },  // Inst #2530 = ST_B
  { 2531,	3,	0,	4,	696,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, nullptr, OperandInfo277, -1 ,nullptr },  // Inst #2531 = ST_D
  { 2532,	3,	0,	4,	696,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, nullptr, OperandInfo278, -1 ,nullptr },  // Inst #2532 = ST_H
  { 2533,	3,	0,	4,	696,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, nullptr, OperandInfo279, -1 ,nullptr },  // Inst #2533 = ST_W
  { 2534,	3,	1,	4,	364,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2534 = SUB
  { 2535,	3,	1,	4,	1487,	0, 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2535 = SUBQH_PH
  { 2536,	3,	1,	4,	1651,	0, 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2536 = SUBQH_PH_MMR2
  { 2537,	3,	1,	4,	1488,	0, 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2537 = SUBQH_R_PH
  { 2538,	3,	1,	4,	1652,	0, 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2538 = SUBQH_R_PH_MMR2
  { 2539,	3,	1,	4,	1490,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2539 = SUBQH_R_W
  { 2540,	3,	1,	4,	1654,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2540 = SUBQH_R_W_MMR2
  { 2541,	3,	1,	4,	1489,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2541 = SUBQH_W
  { 2542,	3,	1,	4,	1653,	0, 0x6ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2542 = SUBQH_W_MMR2
  { 2543,	3,	1,	4,	1441,	0, 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #2543 = SUBQ_PH
  { 2544,	3,	1,	4,	1607,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #2544 = SUBQ_PH_MM
  { 2545,	3,	1,	4,	1442,	0, 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #2545 = SUBQ_S_PH
  { 2546,	3,	1,	4,	1608,	0, 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #2546 = SUBQ_S_PH_MM
  { 2547,	3,	1,	4,	1443,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo64, -1 ,nullptr },  // Inst #2547 = SUBQ_S_W
  { 2548,	3,	1,	4,	1609,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo64, -1 ,nullptr },  // Inst #2548 = SUBQ_S_W_MM
  { 2549,	3,	1,	4,	604,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2549 = SUBSUS_U_B
  { 2550,	3,	1,	4,	604,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #2550 = SUBSUS_U_D
  { 2551,	3,	1,	4,	604,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2551 = SUBSUS_U_H
  { 2552,	3,	1,	4,	604,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2552 = SUBSUS_U_W
  { 2553,	3,	1,	4,	605,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2553 = SUBSUU_S_B
  { 2554,	3,	1,	4,	605,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #2554 = SUBSUU_S_D
  { 2555,	3,	1,	4,	605,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2555 = SUBSUU_S_H
  { 2556,	3,	1,	4,	605,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2556 = SUBSUU_S_W
  { 2557,	3,	1,	4,	603,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2557 = SUBS_S_B
  { 2558,	3,	1,	4,	603,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #2558 = SUBS_S_D
  { 2559,	3,	1,	4,	603,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2559 = SUBS_S_H
  { 2560,	3,	1,	4,	603,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2560 = SUBS_S_W
  { 2561,	3,	1,	4,	603,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2561 = SUBS_U_B
  { 2562,	3,	1,	4,	603,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #2562 = SUBS_U_D
  { 2563,	3,	1,	4,	603,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2563 = SUBS_U_H
  { 2564,	3,	1,	4,	603,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2564 = SUBS_U_W
  { 2565,	3,	1,	2,	761,	0, 0x0ULL, nullptr, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #2565 = SUBU16_MM
  { 2566,	3,	1,	2,	793,	0, 0x0ULL, nullptr, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #2566 = SUBU16_MMR6
  { 2567,	3,	1,	4,	1493,	0, 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2567 = SUBUH_QB
  { 2568,	3,	1,	4,	1657,	0, 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2568 = SUBUH_QB_MMR2
  { 2569,	3,	1,	4,	1494,	0, 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2569 = SUBUH_R_QB
  { 2570,	3,	1,	4,	1658,	0, 0x6ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #2570 = SUBUH_R_QB_MMR2
  { 2571,	3,	1,	4,	793,	0|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2571 = SUBU_MMR6
  { 2572,	3,	1,	4,	1491,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #2572 = SUBU_PH
  { 2573,	3,	1,	4,	1655,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #2573 = SUBU_PH_MMR2
  { 2574,	3,	1,	4,	1444,	0, 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #2574 = SUBU_QB
  { 2575,	3,	1,	4,	1610,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #2575 = SUBU_QB_MM
  { 2576,	3,	1,	4,	1492,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #2576 = SUBU_S_PH
  { 2577,	3,	1,	4,	1656,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #2577 = SUBU_S_PH_MMR2
  { 2578,	3,	1,	4,	1445,	0, 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #2578 = SUBU_S_QB
  { 2579,	3,	1,	4,	1611,	0, 0x6ULL, nullptr, ImplicitList8, OperandInfo162, -1 ,nullptr },  // Inst #2579 = SUBU_S_QB_MM
  { 2580,	3,	1,	4,	606,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #2580 = SUBVI_B
  { 2581,	3,	1,	4,	606,	0, 0x6ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #2581 = SUBVI_D
  { 2582,	3,	1,	4,	606,	0, 0x6ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #2582 = SUBVI_H
  { 2583,	3,	1,	4,	606,	0, 0x6ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #2583 = SUBVI_W
  { 2584,	3,	1,	4,	607,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2584 = SUBV_B
  { 2585,	3,	1,	4,	607,	0, 0x6ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #2585 = SUBV_D
  { 2586,	3,	1,	4,	607,	0, 0x6ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #2586 = SUBV_H
  { 2587,	3,	1,	4,	607,	0, 0x6ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #2587 = SUBV_W
  { 2588,	3,	1,	4,	762,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2588 = SUB_MM
  { 2589,	3,	1,	4,	794,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2589 = SUB_MMR6
  { 2590,	3,	1,	4,	365,	0|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2590 = SUBu
  { 2591,	3,	1,	4,	761,	0|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2591 = SUBu_MM
  { 2592,	3,	0,	4,	695,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, nullptr, OperandInfo274, -1 ,nullptr },  // Inst #2592 = SUXC1
  { 2593,	3,	0,	4,	695,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, nullptr, OperandInfo275, -1 ,nullptr },  // Inst #2593 = SUXC164
  { 2594,	3,	0,	4,	1281,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, nullptr, OperandInfo275, -1 ,nullptr },  // Inst #2594 = SUXC1_MM
  { 2595,	3,	0,	4,	449,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2595 = SW
  { 2596,	3,	0,	2,	1125,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo335, -1 ,nullptr },  // Inst #2596 = SW16_MM
  { 2597,	3,	0,	2,	1148,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo335, -1 ,nullptr },  // Inst #2597 = SW16_MMR6
  { 2598,	3,	0,	4,	1171,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #2598 = SW64
  { 2599,	3,	0,	4,	693,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, nullptr, OperandInfo282, -1 ,nullptr },  // Inst #2599 = SWC1
  { 2600,	3,	0,	4,	1280,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, nullptr, OperandInfo282, -1 ,nullptr },  // Inst #2600 = SWC1_MM
  { 2601,	3,	0,	4,	450,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, nullptr, OperandInfo266, -1 ,nullptr },  // Inst #2601 = SWC2
  { 2602,	3,	0,	4,	1149,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, nullptr, OperandInfo267, -1 ,nullptr },  // Inst #2602 = SWC2_MMR6
  { 2603,	3,	0,	4,	1076,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo266, -1 ,nullptr },  // Inst #2603 = SWC2_R6
  { 2604,	3,	0,	4,	451,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, nullptr, OperandInfo268, -1 ,nullptr },  // Inst #2604 = SWC3
  { 2605,	3,	0,	4,	1331,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo283, -1 ,nullptr },  // Inst #2605 = SWDSP
  { 2606,	3,	0,	4,	1496,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo283, -1 ,nullptr },  // Inst #2606 = SWDSP_MM
  { 2607,	3,	0,	4,	457,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2607 = SWE
  { 2608,	3,	0,	4,	1094,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2608 = SWE_MM
  { 2609,	3,	0,	4,	459,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2609 = SWL
  { 2610,	3,	0,	4,	1172,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #2610 = SWL64
  { 2611,	3,	0,	4,	461,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2611 = SWLE
  { 2612,	3,	0,	4,	1095,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2612 = SWLE_MM
  { 2613,	3,	0,	4,	1126,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2613 = SWL_MM
  { 2614,	3,	0,	2,	1127,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo286, -1 ,nullptr },  // Inst #2614 = SWM16_MM
  { 2615,	3,	0,	2,	1150,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo286, -1 ,nullptr },  // Inst #2615 = SWM16_MMR6
  { 2616,	3,	0,	4,	1127,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #2616 = SWM32_MM
  { 2617,	4,	0,	4,	1129,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo287, -1 ,nullptr },  // Inst #2617 = SWP_MM
  { 2618,	3,	0,	4,	460,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2618 = SWR
  { 2619,	3,	0,	4,	1173,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #2619 = SWR64
  { 2620,	3,	0,	4,	462,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2620 = SWRE
  { 2621,	3,	0,	4,	1096,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2621 = SWRE_MM
  { 2622,	3,	0,	4,	1130,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2622 = SWR_MM
  { 2623,	3,	0,	2,	1125,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo288, -1 ,nullptr },  // Inst #2623 = SWSP_MM
  { 2624,	3,	0,	2,	1148,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo288, -1 ,nullptr },  // Inst #2624 = SWSP_MMR6
  { 2625,	3,	0,	4,	694,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, nullptr, OperandInfo289, -1 ,nullptr },  // Inst #2625 = SWXC1
  { 2626,	3,	0,	4,	1282,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, nullptr, OperandInfo289, -1 ,nullptr },  // Inst #2626 = SWXC1_MM
  { 2627,	3,	0,	4,	1125,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2627 = SW_MM
  { 2628,	3,	0,	4,	1148,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #2628 = SW_MMR6
  { 2629,	1,	0,	4,	467,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2629 = SYNC
  { 2630,	2,	0,	4,	468,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo354, -1 ,nullptr },  // Inst #2630 = SYNCI
  { 2631,	2,	0,	4,	1134,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo354, -1 ,nullptr },  // Inst #2631 = SYNCI_MM
  { 2632,	2,	0,	4,	1152,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo354, -1 ,nullptr },  // Inst #2632 = SYNCI_MMR6
  { 2633,	1,	0,	4,	1133,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2633 = SYNC_MM
  { 2634,	1,	0,	4,	1151,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2634 = SYNC_MMR6
  { 2635,	1,	0,	4,	385,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2635 = SYSCALL
  { 2636,	1,	0,	4,	960,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2636 = SYSCALL_MM
  { 2637,	0,	0,	2,	1106,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, nullptr, -1 ,nullptr },  // Inst #2637 = Save16
  { 2638,	0,	0,	2,	1106,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, nullptr, -1 ,nullptr },  // Inst #2638 = SaveX16
  { 2639,	3,	0,	4,	1107,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo290, -1 ,nullptr },  // Inst #2639 = SbRxRyOffMemX16
  { 2640,	2,	1,	2,	727,	0, 0x0ULL, nullptr, nullptr, OperandInfo355, -1 ,nullptr },  // Inst #2640 = SebRx16
  { 2641,	2,	1,	2,	727,	0, 0x0ULL, nullptr, nullptr, OperandInfo355, -1 ,nullptr },  // Inst #2641 = SehRx16
  { 2642,	3,	0,	4,	1108,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo290, -1 ,nullptr },  // Inst #2642 = ShRxRyOffMemX16
  { 2643,	3,	1,	4,	727,	0, 0x0ULL, nullptr, nullptr, OperandInfo157, -1 ,nullptr },  // Inst #2643 = SllX16
  { 2644,	3,	1,	2,	727,	0, 0x0ULL, nullptr, nullptr, OperandInfo175, -1 ,nullptr },  // Inst #2644 = SllvRxRy16
  { 2645,	2,	0,	2,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo120, -1 ,nullptr },  // Inst #2645 = SltRxRy16
  { 2646,	2,	0,	2,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo172, -1 ,nullptr },  // Inst #2646 = SltiRxImm16
  { 2647,	2,	0,	4,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo172, -1 ,nullptr },  // Inst #2647 = SltiRxImmX16
  { 2648,	2,	0,	2,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo172, -1 ,nullptr },  // Inst #2648 = SltiuRxImm16
  { 2649,	2,	0,	4,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo172, -1 ,nullptr },  // Inst #2649 = SltiuRxImmX16
  { 2650,	2,	0,	2,	727,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo120, -1 ,nullptr },  // Inst #2650 = SltuRxRy16
  { 2651,	3,	1,	4,	727,	0, 0x0ULL, nullptr, nullptr, OperandInfo157, -1 ,nullptr },  // Inst #2651 = SraX16
  { 2652,	3,	1,	2,	727,	0, 0x0ULL, nullptr, nullptr, OperandInfo175, -1 ,nullptr },  // Inst #2652 = SravRxRy16
  { 2653,	3,	1,	4,	727,	0, 0x0ULL, nullptr, nullptr, OperandInfo157, -1 ,nullptr },  // Inst #2653 = SrlX16
  { 2654,	3,	1,	2,	727,	0, 0x0ULL, nullptr, nullptr, OperandInfo175, -1 ,nullptr },  // Inst #2654 = SrlvRxRy16
  { 2655,	3,	1,	2,	727,	0|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #2655 = SubuRxRyRz16
  { 2656,	3,	0,	4,	1109,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo290, -1 ,nullptr },  // Inst #2656 = SwRxRyOffMemX16
  { 2657,	3,	0,	4,	1109,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo174, -1 ,nullptr },  // Inst #2657 = SwRxSpImmX16
  { 2658,	3,	0,	4,	386,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2658 = TEQ
  { 2659,	2,	0,	4,	387,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2659 = TEQI
  { 2660,	2,	0,	4,	961,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2660 = TEQI_MM
  { 2661,	3,	0,	4,	962,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2661 = TEQ_MM
  { 2662,	3,	0,	4,	388,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2662 = TGE
  { 2663,	2,	0,	4,	389,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2663 = TGEI
  { 2664,	2,	0,	4,	390,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2664 = TGEIU
  { 2665,	2,	0,	4,	963,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2665 = TGEIU_MM
  { 2666,	2,	0,	4,	964,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2666 = TGEI_MM
  { 2667,	3,	0,	4,	391,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2667 = TGEU
  { 2668,	3,	0,	4,	965,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2668 = TGEU_MM
  { 2669,	3,	0,	4,	966,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2669 = TGE_MM
  { 2670,	0,	0,	4,	420,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2670 = TLBGINV
  { 2671,	0,	0,	4,	421,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2671 = TLBGINVF
  { 2672,	0,	0,	4,	1062,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2672 = TLBGINVF_MM
  { 2673,	0,	0,	4,	1063,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2673 = TLBGINV_MM
  { 2674,	0,	0,	4,	422,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2674 = TLBGP
  { 2675,	0,	0,	4,	1064,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2675 = TLBGP_MM
  { 2676,	0,	0,	4,	423,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2676 = TLBGR
  { 2677,	0,	0,	4,	1065,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2677 = TLBGR_MM
  { 2678,	0,	0,	4,	424,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2678 = TLBGWI
  { 2679,	0,	0,	4,	1066,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2679 = TLBGWI_MM
  { 2680,	0,	0,	4,	425,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2680 = TLBGWR
  { 2681,	0,	0,	4,	1067,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2681 = TLBGWR_MM
  { 2682,	0,	0,	4,	405,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2682 = TLBINV
  { 2683,	0,	0,	4,	406,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2683 = TLBINVF
  { 2684,	0,	0,	4,	1031,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2684 = TLBINVF_MMR6
  { 2685,	0,	0,	4,	1030,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2685 = TLBINV_MMR6
  { 2686,	0,	0,	4,	407,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2686 = TLBP
  { 2687,	0,	0,	4,	1019,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2687 = TLBP_MM
  { 2688,	0,	0,	4,	408,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2688 = TLBR
  { 2689,	0,	0,	4,	1020,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2689 = TLBR_MM
  { 2690,	0,	0,	4,	409,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2690 = TLBWI
  { 2691,	0,	0,	4,	1021,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2691 = TLBWI_MM
  { 2692,	0,	0,	4,	410,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2692 = TLBWR
  { 2693,	0,	0,	4,	1022,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2693 = TLBWR_MM
  { 2694,	3,	0,	4,	392,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2694 = TLT
  { 2695,	2,	0,	4,	393,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2695 = TLTI
  { 2696,	2,	0,	4,	967,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2696 = TLTIU_MM
  { 2697,	2,	0,	4,	968,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2697 = TLTI_MM
  { 2698,	3,	0,	4,	394,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2698 = TLTU
  { 2699,	3,	0,	4,	969,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2699 = TLTU_MM
  { 2700,	3,	0,	4,	970,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2700 = TLT_MM
  { 2701,	3,	0,	4,	395,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2701 = TNE
  { 2702,	2,	0,	4,	396,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2702 = TNEI
  { 2703,	2,	0,	4,	971,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2703 = TNEI_MM
  { 2704,	3,	0,	4,	972,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2704 = TNE_MM
  { 2705,	2,	1,	4,	629,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #2705 = TRUNC_L_D64
  { 2706,	2,	1,	4,	1297,	0, 0x4ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #2706 = TRUNC_L_D_MMR6
  { 2707,	2,	1,	4,	629,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #2707 = TRUNC_L_S
  { 2708,	2,	1,	4,	1297,	0, 0x4ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #2708 = TRUNC_L_S_MMR6
  { 2709,	2,	1,	4,	629,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #2709 = TRUNC_W_D32
  { 2710,	2,	1,	4,	629,	0, 0x4ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #2710 = TRUNC_W_D64
  { 2711,	2,	1,	4,	1297,	0, 0x4ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #2711 = TRUNC_W_D_MMR6
  { 2712,	2,	1,	4,	1245,	0, 0x4ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #2712 = TRUNC_W_MM
  { 2713,	2,	1,	4,	629,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #2713 = TRUNC_W_S
  { 2714,	2,	1,	4,	1245,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #2714 = TRUNC_W_S_MM
  { 2715,	2,	1,	4,	1297,	0, 0x4ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #2715 = TRUNC_W_S_MMR6
  { 2716,	2,	0,	4,	398,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2716 = TTLTIU
  { 2717,	2,	0,	4,	858,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #2717 = UDIV
  { 2718,	2,	0,	4,	878,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, ImplicitList6, OperandInfo37, -1 ,nullptr },  // Inst #2718 = UDIV_MM
  { 2719,	3,	1,	4,	1200,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, ImplicitList33, OperandInfo63, -1 ,nullptr },  // Inst #2719 = V3MULU
  { 2720,	3,	1,	4,	1200,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, ImplicitList25, OperandInfo63, -1 ,nullptr },  // Inst #2720 = VMM0
  { 2721,	3,	1,	4,	1200,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, ImplicitList34, OperandInfo63, -1 ,nullptr },  // Inst #2721 = VMULU
  { 2722,	4,	1,	4,	510,	0, 0x6ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #2722 = VSHF_B
  { 2723,	4,	1,	4,	510,	0, 0x6ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #2723 = VSHF_D
  { 2724,	4,	1,	4,	510,	0, 0x6ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #2724 = VSHF_H
  { 2725,	4,	1,	4,	510,	0, 0x6ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #2725 = VSHF_W
  { 2726,	0,	0,	4,	399,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #2726 = WAIT
  { 2727,	1,	0,	4,	1027,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2727 = WAIT_MM
  { 2728,	1,	0,	4,	1044,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2728 = WAIT_MMR6
  { 2729,	2,	0,	4,	1446,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2729 = WRDSP
  { 2730,	2,	0,	4,	1612,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #2730 = WRDSP_MM
  { 2731,	2,	1,	4,	1029,	0, 0x6ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #2731 = WRPGPR_MMR6
  { 2732,	2,	1,	4,	476,	0, 0x1ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #2732 = WSBH
  { 2733,	2,	1,	4,	763,	0, 0x1ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #2733 = WSBH_MM
  { 2734,	2,	1,	4,	795,	0, 0x6ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #2734 = WSBH_MMR6
  { 2735,	3,	1,	4,	366,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2735 = XOR
  { 2736,	3,	1,	2,	764,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #2736 = XOR16_MM
  { 2737,	3,	1,	2,	796,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #2737 = XOR16_MMR6
  { 2738,	3,	1,	4,	807,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #2738 = XOR64
  { 2739,	3,	1,	4,	544,	0, 0x6ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #2739 = XORI_B
  { 2740,	3,	1,	4,	797,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2740 = XORI_MMR6
  { 2741,	3,	1,	4,	764,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2741 = XOR_MM
  { 2742,	3,	1,	4,	796,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #2742 = XOR_MMR6
  { 2743,	3,	1,	4,	543,	0, 0x6ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #2743 = XOR_V
  { 2744,	3,	1,	4,	503,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2744 = XORi
  { 2745,	3,	1,	4,	807,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #2745 = XORi64
  { 2746,	3,	1,	4,	765,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #2746 = XORi_MM
  { 2747,	3,	1,	2,	727,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo175, -1 ,nullptr },  // Inst #2747 = XorRxRxRy16
  { 2748,	2,	1,	4,	1057,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #2748 = YIELD
};

extern const char MipsInstrNameData[] = {
  /* 0 */ 'G', '_', 'F', 'L', 'O', 'G', '1', '0', 0,
  /* 9 */ 'D', 'M', 'F', 'C', '0', 0,
  /* 15 */ 'D', 'M', 'F', 'G', 'C', '0', 0,
  /* 22 */ 'M', 'F', 'H', 'G', 'C', '0', 0,
  /* 29 */ 'M', 'T', 'H', 'G', 'C', '0', 0,
  /* 36 */ 'D', 'M', 'T', 'G', 'C', '0', 0,
  /* 43 */ 'M', 'F', 'T', 'C', '0', 0,
  /* 49 */ 'D', 'M', 'T', 'C', '0', 0,
  /* 55 */ 'M', 'T', 'T', 'C', '0', 0,
  /* 61 */ 'V', 'M', 'M', '0', 0,
  /* 66 */ 'M', 'T', 'M', '0', 0,
  /* 71 */ 'M', 'T', 'P', '0', 0,
  /* 76 */ 'B', 'B', 'I', 'T', '0', 0,
  /* 82 */ 'L', 'D', 'C', '1', 0,
  /* 87 */ 'S', 'D', 'C', '1', 0,
  /* 92 */ 'C', 'F', 'C', '1', 0,
  /* 97 */ 'D', 'M', 'F', 'C', '1', 0,
  /* 103 */ 'M', 'F', 'T', 'H', 'C', '1', 0,
  /* 110 */ 'M', 'T', 'T', 'H', 'C', '1', 0,
  /* 117 */ 'C', 'T', 'C', '1', 0,
  /* 122 */ 'C', 'F', 'T', 'C', '1', 0,
  /* 128 */ 'M', 'F', 'T', 'C', '1', 0,
  /* 134 */ 'D', 'M', 'T', 'C', '1', 0,
  /* 140 */ 'C', 'T', 'T', 'C', '1', 0,
  /* 146 */ 'M', 'T', 'T', 'C', '1', 0,
  /* 152 */ 'L', 'W', 'C', '1', 0,
  /* 157 */ 'S', 'W', 'C', '1', 0,
  /* 162 */ 'L', 'D', 'X', 'C', '1', 0,
  /* 168 */ 'S', 'D', 'X', 'C', '1', 0,
  /* 174 */ 'L', 'U', 'X', 'C', '1', 0,
  /* 180 */ 'S', 'U', 'X', 'C', '1', 0,
  /* 186 */ 'L', 'W', 'X', 'C', '1', 0,
  /* 192 */ 'S', 'W', 'X', 'C', '1', 0,
  /* 198 */ 'M', 'T', 'M', '1', 0,
  /* 203 */ 'S', 'D', 'C', '1', '_', 'M', '1', 0,
  /* 211 */ 'M', 'T', 'P', '1', 0,
  /* 216 */ 'B', 'B', 'I', 'T', '1', 0,
  /* 222 */ 'B', 'B', 'I', 'T', '0', '3', '2', 0,
  /* 230 */ 'B', 'B', 'I', 'T', '1', '3', '2', 0,
  /* 238 */ 'D', 'S', 'R', 'A', '3', '2', 0,
  /* 245 */ 'M', 'F', 'H', 'C', '1', '_', 'D', '3', '2', 0,
  /* 255 */ 'M', 'T', 'H', 'C', '1', '_', 'D', '3', '2', 0,
  /* 265 */ 'F', 'S', 'U', 'B', '_', 'D', '3', '2', 0,
  /* 274 */ 'N', 'M', 'S', 'U', 'B', '_', 'D', '3', '2', 0,
  /* 284 */ 'F', 'A', 'D', 'D', '_', 'D', '3', '2', 0,
  /* 293 */ 'N', 'M', 'A', 'D', 'D', '_', 'D', '3', '2', 0,
  /* 303 */ 'C', '_', 'N', 'G', 'E', '_', 'D', '3', '2', 0,
  /* 313 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 324 */ 'C', '_', 'O', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 334 */ 'C', '_', 'U', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 344 */ 'C', '_', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 353 */ 'C', '_', 'S', 'F', '_', 'D', '3', '2', 0,
  /* 362 */ 'M', 'O', 'V', 'F', '_', 'D', '3', '2', 0,
  /* 371 */ 'C', '_', 'F', '_', 'D', '3', '2', 0,
  /* 379 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', 'F', 'P', '_', 'F', '_', 'D', '3', '2', 0,
  /* 400 */ 'F', 'N', 'E', 'G', '_', 'D', '3', '2', 0,
  /* 409 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'D', '3', '2', 0,
  /* 420 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'D', '3', '2', 0,
  /* 431 */ 'C', '_', 'N', 'G', 'L', '_', 'D', '3', '2', 0,
  /* 441 */ 'F', 'M', 'U', 'L', '_', 'D', '3', '2', 0,
  /* 450 */ 'C', '_', 'U', 'N', '_', 'D', '3', '2', 0,
  /* 459 */ 'R', 'E', 'C', 'I', 'P', '_', 'D', '3', '2', 0,
  /* 469 */ 'F', 'C', 'M', 'P', '_', 'D', '3', '2', 0,
  /* 478 */ 'C', '_', 'S', 'E', 'Q', '_', 'D', '3', '2', 0,
  /* 488 */ 'C', '_', 'U', 'E', 'Q', '_', 'D', '3', '2', 0,
  /* 498 */ 'C', '_', 'E', 'Q', '_', 'D', '3', '2', 0,
  /* 507 */ 'F', 'A', 'B', 'S', '_', 'D', '3', '2', 0,
  /* 516 */ 'C', 'V', 'T', '_', 'S', '_', 'D', '3', '2', 0,
  /* 526 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'D', '3', '2', 0,
  /* 543 */ 'C', '_', 'N', 'G', 'T', '_', 'D', '3', '2', 0,
  /* 553 */ 'C', '_', 'O', 'L', 'T', '_', 'D', '3', '2', 0,
  /* 563 */ 'C', '_', 'U', 'L', 'T', '_', 'D', '3', '2', 0,
  /* 573 */ 'C', '_', 'L', 'T', '_', 'D', '3', '2', 0,
  /* 582 */ 'F', 'S', 'Q', 'R', 'T', '_', 'D', '3', '2', 0,
  /* 592 */ 'R', 'S', 'Q', 'R', 'T', '_', 'D', '3', '2', 0,
  /* 602 */ 'M', 'O', 'V', 'T', '_', 'D', '3', '2', 0,
  /* 611 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', 'F', 'P', '_', 'T', '_', 'D', '3', '2', 0,
  /* 632 */ 'F', 'D', 'I', 'V', '_', 'D', '3', '2', 0,
  /* 641 */ 'F', 'M', 'O', 'V', '_', 'D', '3', '2', 0,
  /* 650 */ 'P', 's', 'e', 'u', 'd', 'o', 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'D', '3', '2', 0,
  /* 668 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'D', '3', '2', 0,
  /* 680 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'D', '3', '2', 0,
  /* 691 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'D', '3', '2', 0,
  /* 703 */ 'C', 'V', 'T', '_', 'W', '_', 'D', '3', '2', 0,
  /* 713 */ 'B', 'P', 'O', 'S', 'G', 'E', '3', '2', 0,
  /* 722 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 742 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 762 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 783 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 803 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 824 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 844 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 860 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 880 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 900 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 919 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 940 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 960 */ 'D', 'S', 'L', 'L', '3', '2', 0,
  /* 967 */ 'D', 'S', 'R', 'L', '3', '2', 0,
  /* 974 */ 'D', 'R', 'O', 'T', 'R', '3', '2', 0,
  /* 982 */ 'C', 'I', 'N', 'S', '3', '2', 0,
  /* 989 */ 'E', 'X', 'T', 'S', '3', '2', 0,
  /* 996 */ 'F', 'C', 'M', 'P', '_', 'S', '3', '2', 0,
  /* 1005 */ 'D', 'S', 'L', 'L', '6', '4', '_', '3', '2', 0,
  /* 1015 */ 'C', 'I', 'N', 'S', '6', '4', '_', '3', '2', 0,
  /* 1025 */ 'D', 'E', 'X', 'T', '6', '4', '_', '3', '2', 0,
  /* 1035 */ 'L', 'o', 'a', 'd', 'I', 'm', 'm', 'D', 'o', 'u', 'b', 'l', 'e', 'F', 'G', 'R', '_', '3', '2', 0,
  /* 1055 */ 'L', 'o', 'a', 'd', 'A', 'd', 'd', 'r', 'R', 'e', 'g', '3', '2', 0,
  /* 1069 */ 'C', 'I', 'N', 'S', '_', 'i', '3', '2', 0,
  /* 1078 */ 'L', 'o', 'a', 'd', 'I', 'm', 'm', '3', '2', 0,
  /* 1088 */ 'L', 'o', 'a', 'd', 'A', 'd', 'd', 'r', 'I', 'm', 'm', '3', '2', 0,
  /* 1102 */ 'M', 'I', 'P', 'S', 'e', 'h', '_', 'r', 'e', 't', 'u', 'r', 'n', '3', '2', 0,
  /* 1118 */ 'L', 'w', 'C', 'o', 'n', 's', 't', 'a', 'n', 't', '3', '2', 0,
  /* 1131 */ 'L', 'D', 'C', '2', 0,
  /* 1136 */ 'S', 'D', 'C', '2', 0,
  /* 1141 */ 'D', 'M', 'F', 'C', '2', 0,
  /* 1147 */ 'D', 'M', 'T', 'C', '2', 0,
  /* 1153 */ 'L', 'W', 'C', '2', 0,
  /* 1158 */ 'S', 'W', 'C', '2', 0,
  /* 1163 */ 'G', '_', 'F', 'L', 'O', 'G', '2', 0,
  /* 1171 */ 'M', 'T', 'M', '2', 0,
  /* 1176 */ 'M', 'T', 'P', '2', 0,
  /* 1181 */ 'G', '_', 'F', 'E', 'X', 'P', '2', 0,
  /* 1189 */ 'S', 'H', 'R', 'A', '_', 'Q', 'B', '_', 'M', 'M', 'R', '2', 0,
  /* 1202 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'L', 'E', '_', 'Q', 'B', '_', 'M', 'M', 'R', '2', 0,
  /* 1220 */ 'S', 'U', 'B', 'U', 'H', '_', 'Q', 'B', '_', 'M', 'M', 'R', '2', 0,
  /* 1234 */ 'A', 'D', 'D', 'U', 'H', '_', 'Q', 'B', '_', 'M', 'M', 'R', '2', 0,
  /* 1248 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'E', 'Q', '_', 'Q', 'B', '_', 'M', 'M', 'R', '2', 0,
  /* 1266 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'Q', 'B', '_', 'M', 'M', 'R', '2', 0,
  /* 1281 */ 'S', 'U', 'B', 'U', 'H', '_', 'R', '_', 'Q', 'B', '_', 'M', 'M', 'R', '2', 0,
  /* 1297 */ 'A', 'D', 'D', 'U', 'H', '_', 'R', '_', 'Q', 'B', '_', 'M', 'M', 'R', '2', 0,
  /* 1313 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'Q', 'B', '_', 'M', 'M', 'R', '2', 0,
  /* 1329 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'Q', 'B', '_', 'M', 'M', 'R', '2', 0,
  /* 1344 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'L', 'T', '_', 'Q', 'B', '_', 'M', 'M', 'R', '2', 0,
  /* 1362 */ 'S', 'H', 'R', 'A', 'V', '_', 'Q', 'B', '_', 'M', 'M', 'R', '2', 0,
  /* 1376 */ 'P', 'R', 'E', 'P', 'E', 'N', 'D', '_', 'M', 'M', 'R', '2', 0,
  /* 1389 */ 'A', 'P', 'P', 'E', 'N', 'D', '_', 'M', 'M', 'R', '2', 0,
  /* 1401 */ 'P', 'R', 'E', 'C', 'R', '_', 'Q', 'B', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1418 */ 'S', 'U', 'B', 'Q', 'H', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1432 */ 'A', 'D', 'D', 'Q', 'H', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1446 */ 'S', 'H', 'R', 'L', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1459 */ 'M', 'U', 'L', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1471 */ 'S', 'U', 'B', 'Q', 'H', '_', 'R', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1487 */ 'A', 'D', 'D', 'Q', 'H', '_', 'R', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1503 */ 'M', 'U', 'L', '_', 'S', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1517 */ 'M', 'U', 'L', 'Q', '_', 'S', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1532 */ 'S', 'U', 'B', 'U', '_', 'S', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1547 */ 'A', 'D', 'D', 'U', '_', 'S', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1562 */ 'S', 'U', 'B', 'U', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1575 */ 'A', 'D', 'D', 'U', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1588 */ 'S', 'H', 'R', 'L', 'V', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1602 */ 'D', 'P', 'A', '_', 'W', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1616 */ 'M', 'U', 'L', 'S', 'A', '_', 'W', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1632 */ 'D', 'P', 'A', 'Q', 'X', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1651 */ 'D', 'P', 'S', 'Q', 'X', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1670 */ 'D', 'P', 'S', '_', 'W', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1684 */ 'D', 'P', 'A', 'Q', 'X', '_', 'S', '_', 'W', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1702 */ 'D', 'P', 'S', 'Q', 'X', '_', 'S', '_', 'W', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1720 */ 'D', 'P', 'A', 'X', '_', 'W', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1735 */ 'D', 'P', 'S', 'X', '_', 'W', '_', 'P', 'H', '_', 'M', 'M', 'R', '2', 0,
  /* 1750 */ 'B', 'A', 'L', 'I', 'G', 'N', '_', 'M', 'M', 'R', '2', 0,
  /* 1762 */ 'P', 'R', 'E', 'C', 'R', '_', 'S', 'R', 'A', '_', 'P', 'H', '_', 'W', '_', 'M', 'M', 'R', '2', 0,
  /* 1782 */ 'P', 'R', 'E', 'C', 'R', '_', 'S', 'R', 'A', '_', 'R', '_', 'P', 'H', '_', 'W', '_', 'M', 'M', 'R', '2', 0,
  /* 1804 */ 'S', 'U', 'B', 'Q', 'H', '_', 'W', '_', 'M', 'M', 'R', '2', 0,
  /* 1817 */ 'A', 'D', 'D', 'Q', 'H', '_', 'W', '_', 'M', 'M', 'R', '2', 0,
  /* 1830 */ 'S', 'U', 'B', 'Q', 'H', '_', 'R', '_', 'W', '_', 'M', 'M', 'R', '2', 0,
  /* 1845 */ 'A', 'D', 'D', 'Q', 'H', '_', 'R', '_', 'W', '_', 'M', 'M', 'R', '2', 0,
  /* 1860 */ 'M', 'U', 'L', 'Q', '_', 'R', 'S', '_', 'W', '_', 'M', 'M', 'R', '2', 0,
  /* 1875 */ 'M', 'U', 'L', 'Q', '_', 'S', '_', 'W', '_', 'M', 'M', 'R', '2', 0,
  /* 1889 */ 'L', 'D', 'C', '3', 0,
  /* 1894 */ 'S', 'D', 'C', '3', 0,
  /* 1899 */ 'L', 'W', 'C', '3', 0,
  /* 1904 */ 'S', 'W', 'C', '3', 0,
  /* 1909 */ 'B', 'P', 'O', 'S', 'G', 'E', '3', '2', 'C', '_', 'M', 'M', 'R', '3', 0,
  /* 1924 */ 'L', 'D', 'C', '1', '6', '4', 0,
  /* 1931 */ 'S', 'D', 'C', '1', '6', '4', 0,
  /* 1938 */ 'L', 'D', 'X', 'C', '1', '6', '4', 0,
  /* 1946 */ 'S', 'D', 'X', 'C', '1', '6', '4', 0,
  /* 1954 */ 'L', 'U', 'X', 'C', '1', '6', '4', 0,
  /* 1962 */ 'S', 'U', 'X', 'C', '1', '6', '4', 0,
  /* 1970 */ 'S', 'E', 'B', '6', '4', 0,
  /* 1976 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', 'R', 'E', 'G', 'H', 'B', '6', '4', 0,
  /* 1992 */ 'J', 'R', '_', 'H', 'B', '6', '4', 0,
  /* 2000 */ 'J', 'A', 'L', 'R', '_', 'H', 'B', '6', '4', 0,
  /* 2010 */ 'L', 'B', '6', '4', 0,
  /* 2015 */ 'S', 'B', '6', '4', 0,
  /* 2020 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', 'C', '6', '4', 0,
  /* 2031 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', '6', '4', 0,
  /* 2043 */ 'B', 'G', 'E', 'C', '6', '4', 0,
  /* 2050 */ 'B', 'N', 'E', 'C', '6', '4', 0,
  /* 2057 */ 'J', 'I', 'C', '6', '4', 0,
  /* 2063 */ 'J', 'I', 'A', 'L', 'C', '6', '4', 0,
  /* 2071 */ 'B', 'E', 'Q', 'C', '6', '4', 0,
  /* 2078 */ 'S', 'C', '6', '4', 0,
  /* 2083 */ 'B', 'L', 'T', 'C', '6', '4', 0,
  /* 2090 */ 'B', 'G', 'E', 'U', 'C', '6', '4', 0,
  /* 2098 */ 'B', 'L', 'T', 'U', 'C', '6', '4', 0,
  /* 2106 */ 'B', 'G', 'E', 'Z', 'C', '6', '4', 0,
  /* 2114 */ 'B', 'L', 'E', 'Z', 'C', '6', '4', 0,
  /* 2122 */ 'B', 'N', 'E', 'Z', 'C', '6', '4', 0,
  /* 2130 */ 'B', 'E', 'Q', 'Z', 'C', '6', '4', 0,
  /* 2138 */ 'B', 'G', 'T', 'Z', 'C', '6', '4', 0,
  /* 2146 */ 'B', 'L', 'T', 'Z', 'C', '6', '4', 0,
  /* 2154 */ 'A', 'N', 'D', '6', '4', 0,
  /* 2160 */ 'M', 'F', 'C', '1', '_', 'D', '6', '4', 0,
  /* 2169 */ 'M', 'F', 'H', 'C', '1', '_', 'D', '6', '4', 0,
  /* 2179 */ 'M', 'T', 'H', 'C', '1', '_', 'D', '6', '4', 0,
  /* 2189 */ 'M', 'T', 'C', '1', '_', 'D', '6', '4', 0,
  /* 2198 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'D', '6', '4', 0,
  /* 2211 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'D', '6', '4', 0,
  /* 2224 */ 'F', 'S', 'U', 'B', '_', 'D', '6', '4', 0,
  /* 2233 */ 'N', 'M', 'S', 'U', 'B', '_', 'D', '6', '4', 0,
  /* 2243 */ 'F', 'A', 'D', 'D', '_', 'D', '6', '4', 0,
  /* 2252 */ 'N', 'M', 'A', 'D', 'D', '_', 'D', '6', '4', 0,
  /* 2262 */ 'C', '_', 'N', 'G', 'E', '_', 'D', '6', '4', 0,
  /* 2272 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 2283 */ 'C', '_', 'O', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 2293 */ 'C', '_', 'U', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 2303 */ 'C', '_', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 2312 */ 'C', '_', 'S', 'F', '_', 'D', '6', '4', 0,
  /* 2321 */ 'M', 'O', 'V', 'F', '_', 'D', '6', '4', 0,
  /* 2330 */ 'C', '_', 'F', '_', 'D', '6', '4', 0,
  /* 2338 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', 'F', 'P', '_', 'F', '_', 'D', '6', '4', 0,
  /* 2359 */ 'F', 'N', 'E', 'G', '_', 'D', '6', '4', 0,
  /* 2368 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'D', '6', '4', 0,
  /* 2379 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'D', '6', '4', 0,
  /* 2390 */ 'C', '_', 'N', 'G', 'L', '_', 'D', '6', '4', 0,
  /* 2400 */ 'F', 'M', 'U', 'L', '_', 'D', '6', '4', 0,
  /* 2409 */ 'T', 'R', 'U', 'N', 'C', '_', 'L', '_', 'D', '6', '4', 0,
  /* 2421 */ 'R', 'O', 'U', 'N', 'D', '_', 'L', '_', 'D', '6', '4', 0,
  /* 2433 */ 'C', 'E', 'I', 'L', '_', 'L', '_', 'D', '6', '4', 0,
  /* 2444 */ 'F', 'L', 'O', 'O', 'R', '_', 'L', '_', 'D', '6', '4', 0,
  /* 2456 */ 'C', 'V', 'T', '_', 'L', '_', 'D', '6', '4', 0,
  /* 2466 */ 'C', '_', 'U', 'N', '_', 'D', '6', '4', 0,
  /* 2475 */ 'R', 'E', 'C', 'I', 'P', '_', 'D', '6', '4', 0,
  /* 2485 */ 'F', 'C', 'M', 'P', '_', 'D', '6', '4', 0,
  /* 2494 */ 'C', '_', 'S', 'E', 'Q', '_', 'D', '6', '4', 0,
  /* 2504 */ 'C', '_', 'U', 'E', 'Q', '_', 'D', '6', '4', 0,
  /* 2514 */ 'C', '_', 'E', 'Q', '_', 'D', '6', '4', 0,
  /* 2523 */ 'F', 'A', 'B', 'S', '_', 'D', '6', '4', 0,
  /* 2532 */ 'C', 'V', 'T', '_', 'S', '_', 'D', '6', '4', 0,
  /* 2542 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'D', '6', '4', 0,
  /* 2559 */ 'C', '_', 'N', 'G', 'T', '_', 'D', '6', '4', 0,
  /* 2569 */ 'C', '_', 'O', 'L', 'T', '_', 'D', '6', '4', 0,
  /* 2579 */ 'C', '_', 'U', 'L', 'T', '_', 'D', '6', '4', 0,
  /* 2589 */ 'C', '_', 'L', 'T', '_', 'D', '6', '4', 0,
  /* 2598 */ 'F', 'S', 'Q', 'R', 'T', '_', 'D', '6', '4', 0,
  /* 2608 */ 'R', 'S', 'Q', 'R', 'T', '_', 'D', '6', '4', 0,
  /* 2618 */ 'M', 'O', 'V', 'T', '_', 'D', '6', '4', 0,
  /* 2627 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', 'F', 'P', '_', 'T', '_', 'D', '6', '4', 0,
  /* 2648 */ 'F', 'D', 'I', 'V', '_', 'D', '6', '4', 0,
  /* 2657 */ 'F', 'M', 'O', 'V', '_', 'D', '6', '4', 0,
  /* 2666 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'D', '6', '4', 0,
  /* 2678 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'D', '6', '4', 0,
  /* 2690 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'D', '6', '4', 0,
  /* 2701 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'D', '6', '4', 0,
  /* 2713 */ 'C', 'V', 'T', '_', 'W', '_', 'D', '6', '4', 0,
  /* 2723 */ 'B', 'N', 'E', '6', '4', 0,
  /* 2729 */ 'B', 'u', 'i', 'l', 'd', 'P', 'a', 'i', 'r', 'F', '6', '4', 0,
  /* 2742 */ 'E', 'x', 't', 'r', 'a', 'c', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', '6', '4', 0,
  /* 2760 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', 'R', 'E', 'G', '6', '4', 0,
  /* 2774 */ 'S', 'E', 'H', '6', '4', 0,
  /* 2780 */ 'L', 'H', '6', '4', 0,
  /* 2785 */ 'S', 'H', '6', '4', 0,
  /* 2790 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'F', 'H', 'I', '6', '4', 0,
  /* 2803 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'T', 'L', 'O', 'H', 'I', '6', '4', 0,
  /* 2818 */ 'M', 'T', 'H', 'I', '6', '4', 0,
  /* 2825 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'I', '6', '4', 0,
  /* 2838 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'I', '6', '4', 0,
  /* 2851 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 2871 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 2891 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 2912 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 2932 */ 'M', 'O', 'V', 'F', '_', 'I', '6', '4', 0,
  /* 2941 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', 'F', 'P', '_', 'F', '_', 'I', '6', '4', 0,
  /* 2962 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'I', '6', '4', 0,
  /* 2973 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'I', '6', '4', 0,
  /* 2984 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 3005 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 3025 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 3041 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 3061 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 3081 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 3100 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', '_', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '6', '4', 0,
  /* 3119 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '6', '4', 0,
  /* 3136 */ 'M', 'O', 'V', 'T', '_', 'I', '6', '4', 0,
  /* 3145 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', 'F', 'P', '_', 'T', '_', 'I', '6', '4', 0,
  /* 3166 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 3187 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 3207 */ 'L', 'L', '6', '4', 0,
  /* 3212 */ 'C', 'V', 'T', '_', 'S', '_', 'P', 'L', '6', '4', 0,
  /* 3223 */ 'L', 'W', 'L', '6', '4', 0,
  /* 3229 */ 'S', 'W', 'L', '6', '4', 0,
  /* 3235 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'F', 'L', 'O', '6', '4', 0,
  /* 3248 */ 'M', 'T', 'L', 'O', '6', '4', 0,
  /* 3255 */ 'B', 'E', 'Q', '6', '4', 0,
  /* 3261 */ 'J', 'R', '6', '4', 0,
  /* 3266 */ 'J', 'A', 'L', 'R', '6', '4', 0,
  /* 3273 */ 'N', 'O', 'R', '6', '4', 0,
  /* 3279 */ 'X', 'O', 'R', '6', '4', 0,
  /* 3285 */ 'R', 'D', 'H', 'W', 'R', '6', '4', 0,
  /* 3293 */ 'L', 'W', 'R', '6', '4', 0,
  /* 3299 */ 'S', 'W', 'R', '6', '4', 0,
  /* 3305 */ 'P', 'L', 'L', '_', 'P', 'S', '6', '4', 0,
  /* 3314 */ 'P', 'L', 'U', '_', 'P', 'S', '6', '4', 0,
  /* 3323 */ 'C', 'V', 'T', '_', 'P', 'S', '_', 'S', '6', '4', 0,
  /* 3334 */ 'S', 'L', 'T', '6', '4', 0,
  /* 3340 */ 'C', 'V', 'T', '_', 'S', '_', 'P', 'U', '6', '4', 0,
  /* 3351 */ 'L', 'W', '6', '4', 0,
  /* 3356 */ 'S', 'W', '6', '4', 0,
  /* 3361 */ 'B', 'G', 'E', 'Z', '6', '4', 0,
  /* 3368 */ 'B', 'L', 'E', 'Z', '6', '4', 0,
  /* 3375 */ 'S', 'E', 'L', 'N', 'E', 'Z', '6', '4', 0,
  /* 3384 */ 'S', 'E', 'L', 'E', 'Q', 'Z', '6', '4', 0,
  /* 3393 */ 'B', 'G', 'T', 'Z', '6', '4', 0,
  /* 3400 */ 'B', 'L', 'T', 'Z', '6', '4', 0,
  /* 3407 */ 'B', 'u', 'i', 'l', 'd', 'P', 'a', 'i', 'r', 'F', '6', '4', '_', '6', '4', 0,
  /* 3423 */ 'E', 'x', 't', 'r', 'a', 'c', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', '6', '4', '_', '6', '4', 0,
  /* 3444 */ 'S', 'L', 'L', '6', '4', '_', '6', '4', 0,
  /* 3453 */ 'L', 'O', 'N', 'G', '_', 'B', 'R', 'A', 'N', 'C', 'H', '_', 'L', 'U', 'i', '2', 'O', 'p', '_', '6', '4', 0,
  /* 3475 */ 'L', 'o', 'a', 'd', 'A', 'd', 'd', 'r', 'R', 'e', 'g', '6', '4', 0,
  /* 3489 */ 'P', 's', 'e', 'u', 'd', 'o', 'I', 'n', 'd', 'i', 'r', 'e', 'c', 't', 'H', 'a', 'z', 'a', 'r', 'd', 'B', 'r', 'a', 'n', 'c', 'h', '6', '4', 0,
  /* 3518 */ 'P', 's', 'e', 'u', 'd', 'o', 'I', 'n', 'd', 'i', 'r', 'e', 'c', 't', 'B', 'r', 'a', 'n', 'c', 'h', '6', '4', 0,
  /* 3541 */ 'A', 'N', 'D', 'i', '6', '4', 0,
  /* 3548 */ 'X', 'O', 'R', 'i', '6', '4', 0,
  /* 3555 */ 'S', 'L', 'T', 'i', '6', '4', 0,
  /* 3562 */ 'L', 'U', 'i', '6', '4', 0,
  /* 3568 */ 'S', 'G', 'E', 'I', 'm', 'm', '6', '4', 0,
  /* 3577 */ 'N', 'O', 'R', 'I', 'm', 'm', '6', '4', 0,
  /* 3586 */ 'S', 'G', 'T', 'I', 'm', 'm', '6', '4', 0,
  /* 3595 */ 'S', 'L', 'T', 'I', 'm', 'm', '6', '4', 0,
  /* 3604 */ 'S', 'G', 'E', 'U', 'I', 'm', 'm', '6', '4', 0,
  /* 3614 */ 'S', 'G', 'T', 'U', 'I', 'm', 'm', '6', '4', 0,
  /* 3624 */ 'S', 'L', 'T', 'U', 'I', 'm', 'm', '6', '4', 0,
  /* 3634 */ 'L', 'o', 'a', 'd', 'I', 'm', 'm', '6', '4', 0,
  /* 3644 */ 'L', 'o', 'a', 'd', 'A', 'd', 'd', 'r', 'I', 'm', 'm', '6', '4', 0,
  /* 3658 */ 'P', 's', 'e', 'u', 'd', 'o', 'R', 'e', 't', 'u', 'r', 'n', '6', '4', 0,
  /* 3673 */ 'M', 'I', 'P', 'S', 'e', 'h', '_', 'r', 'e', 't', 'u', 'r', 'n', '6', '4', 0,
  /* 3689 */ 'L', 'B', 'u', '6', '4', 0,
  /* 3695 */ 'L', 'H', 'u', '6', '4', 0,
  /* 3701 */ 'S', 'L', 'T', 'u', '6', '4', 0,
  /* 3708 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'i', 'u', '6', '4', 0,
  /* 3720 */ 'S', 'L', 'T', 'i', 'u', '6', '4', 0,
  /* 3728 */ 'M', 'o', 'v', 'e', 'R', '3', '2', '1', '6', 0,
  /* 3738 */ 'R', 'e', 't', 'R', 'A', '1', '6', 0,
  /* 3746 */ 'J', 'a', 'l', 'B', '1', '6', 0,
  /* 3753 */ 'L', 'D', '_', 'F', '1', '6', 0,
  /* 3760 */ 'S', 'T', '_', 'F', '1', '6', 0,
  /* 3767 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 3787 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 3807 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 3828 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 3848 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 3869 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 3889 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 3905 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 3925 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 3945 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 3964 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 3985 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 4005 */ 'M', 'o', 'v', 'e', '3', '2', 'R', '1', '6', 0,
  /* 4015 */ 'S', 'r', 'a', 'X', '1', '6', 0,
  /* 4022 */ 'R', 'e', 's', 't', 'o', 'r', 'e', 'X', '1', '6', 0,
  /* 4033 */ 'S', 'a', 'v', 'e', 'X', '1', '6', 0,
  /* 4041 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'C', 'm', 'p', 'i', 'X', '1', '6', 0,
  /* 4056 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'C', 'm', 'p', 'i', 'X', '1', '6', 0,
  /* 4071 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'i', 'X', '1', '6', 0,
  /* 4086 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'i', 'X', '1', '6', 0,
  /* 4101 */ 'S', 'l', 'l', 'X', '1', '6', 0,
  /* 4108 */ 'S', 'r', 'l', 'X', '1', '6', 0,
  /* 4115 */ 'L', 'b', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 4131 */ 'S', 'b', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 4147 */ 'L', 'h', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 4163 */ 'S', 'h', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 4179 */ 'L', 'b', 'u', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 4196 */ 'L', 'h', 'u', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 4213 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 4232 */ 'L', 'w', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 4248 */ 'S', 'w', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 4264 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'P', 'c', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4280 */ 'A', 'd', 'd', 'i', 'u', 'S', 'p', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4294 */ 'L', 'w', 'R', 'x', 'S', 'p', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4307 */ 'S', 'w', 'R', 'x', 'S', 'p', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4320 */ 'S', 'l', 't', 'i', 'C', 'C', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4335 */ 'S', 'l', 't', 'i', 'u', 'C', 'C', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4351 */ 'L', 'i', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4362 */ 'C', 'm', 'p', 'i', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4375 */ 'S', 'l', 't', 'i', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4388 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4402 */ 'S', 'l', 't', 'i', 'u', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4416 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4432 */ 'B', 'n', 'e', 'z', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4445 */ 'B', 'e', 'q', 'z', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 4458 */ 'B', 'i', 'm', 'm', 'X', '1', '6', 0,
  /* 4466 */ 'L', 'i', 'R', 'x', 'I', 'm', 'm', 'A', 'l', 'i', 'g', 'n', 'X', '1', '6', 0,
  /* 4482 */ 'L', 'w', 'R', 'x', 'P', 'c', 'T', 'c', 'p', 'X', '1', '6', 0,
  /* 4495 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'C', 'm', 'p', 'X', '1', '6', 0,
  /* 4509 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'C', 'm', 'p', 'X', '1', '6', 0,
  /* 4523 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'X', '1', '6', 0,
  /* 4537 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'X', '1', '6', 0,
  /* 4551 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'i', 'u', 'X', '1', '6', 0,
  /* 4567 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'i', 'u', 'X', '1', '6', 0,
  /* 4583 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'u', 'X', '1', '6', 0,
  /* 4598 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'u', 'X', '1', '6', 0,
  /* 4613 */ 'B', 't', 'n', 'e', 'z', 'X', '1', '6', 0,
  /* 4622 */ 'B', 't', 'e', 'q', 'z', 'X', '1', '6', 0,
  /* 4631 */ 'J', 'r', 'c', 'R', 'a', '1', '6', 0,
  /* 4639 */ 'J', 'r', 'R', 'a', '1', '6', 0,
  /* 4646 */ 'R', 'e', 's', 't', 'o', 'r', 'e', '1', '6', 0,
  /* 4656 */ 'G', 'o', 't', 'P', 'r', 'o', 'l', 'o', 'g', 'u', 'e', '1', '6', 0,
  /* 4670 */ 'S', 'a', 'v', 'e', '1', '6', 0,
  /* 4677 */ 'J', 'u', 'm', 'p', 'L', 'i', 'n', 'k', 'R', 'e', 'g', '1', '6', 0,
  /* 4691 */ 'M', 'f', 'h', 'i', '1', '6', 0,
  /* 4698 */ 'B', 'r', 'e', 'a', 'k', '1', '6', 0,
  /* 4706 */ 'J', 'a', 'l', '1', '6', 0,
  /* 4712 */ 'A', 'd', 'd', 'i', 'u', 'S', 'p', 'I', 'm', 'm', '1', '6', 0,
  /* 4725 */ 'L', 'i', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 4735 */ 'C', 'm', 'p', 'i', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 4747 */ 'S', 'l', 't', 'i', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 4759 */ 'S', 'l', 't', 'i', 'u', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 4772 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 4787 */ 'B', 'n', 'e', 'z', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 4799 */ 'B', 'e', 'q', 'z', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 4811 */ 'B', 'i', 'm', 'm', '1', '6', 0,
  /* 4818 */ 'M', 'f', 'l', 'o', '1', '6', 0,
  /* 4825 */ 'L', 'w', 'R', 'x', 'P', 'c', 'T', 'c', 'p', '1', '6', 0,
  /* 4837 */ 'S', 'e', 'b', 'R', 'x', '1', '6', 0,
  /* 4845 */ 'J', 'r', 'c', 'R', 'x', '1', '6', 0,
  /* 4853 */ 'S', 'e', 'h', 'R', 'x', '1', '6', 0,
  /* 4861 */ 'S', 'l', 't', 'C', 'C', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 4873 */ 'S', 'l', 't', 'u', 'C', 'C', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 4886 */ 'N', 'e', 'g', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 4896 */ 'C', 'm', 'p', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 4906 */ 'S', 'l', 't', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 4916 */ 'M', 'u', 'l', 't', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 4927 */ 'N', 'o', 't', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 4937 */ 'S', 'l', 't', 'u', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 4948 */ 'M', 'u', 'l', 't', 'u', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 4960 */ 'D', 'i', 'v', 'u', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 4971 */ 'S', 'r', 'a', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 4982 */ 'D', 'i', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 4992 */ 'S', 'l', 'l', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 5003 */ 'S', 'r', 'l', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 5014 */ 'A', 'n', 'd', 'R', 'x', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 5026 */ 'O', 'r', 'R', 'x', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 5037 */ 'X', 'o', 'r', 'R', 'x', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 5049 */ 'M', 'u', 'l', 't', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 5062 */ 'S', 'u', 'b', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 5075 */ 'A', 'd', 'd', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 5088 */ 'S', 'l', 't', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 5101 */ 'M', 'u', 'l', 't', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 5115 */ 'B', 't', 'n', 'e', 'z', '1', '6', 0,
  /* 5123 */ 'B', 't', 'e', 'q', 'z', '1', '6', 0,
  /* 5131 */ 'P', 's', 'e', 'u', 'd', 'o', 'I', 'n', 'd', 'r', 'e', 'c', 't', 'H', 'a', 'z', 'a', 'r', 'd', 'B', 'r', 'a', 'n', 'c', 'h', '6', '4', 'R', '6', 0,
  /* 5161 */ 'P', 's', 'e', 'u', 'd', 'o', 'I', 'n', 'd', 'i', 'r', 'e', 'c', 't', 'B', 'r', 'a', 'n', 'c', 'h', '6', '4', 'R', '6', 0,
  /* 5186 */ 'M', 'F', 'C', '0', '_', 'M', 'M', 'R', '6', 0,
  /* 5196 */ 'M', 'F', 'H', 'C', '0', '_', 'M', 'M', 'R', '6', 0,
  /* 5207 */ 'M', 'T', 'H', 'C', '0', '_', 'M', 'M', 'R', '6', 0,
  /* 5218 */ 'M', 'T', 'C', '0', '_', 'M', 'M', 'R', '6', 0,
  /* 5228 */ 'M', 'F', 'C', '1', '_', 'M', 'M', 'R', '6', 0,
  /* 5238 */ 'M', 'T', 'C', '1', '_', 'M', 'M', 'R', '6', 0,
  /* 5248 */ 'L', 'D', 'C', '2', '_', 'M', 'M', 'R', '6', 0,
  /* 5258 */ 'S', 'D', 'C', '2', '_', 'M', 'M', 'R', '6', 0,
  /* 5268 */ 'M', 'F', 'C', '2', '_', 'M', 'M', 'R', '6', 0,
  /* 5278 */ 'M', 'F', 'H', 'C', '2', '_', 'M', 'M', 'R', '6', 0,
  /* 5289 */ 'M', 'T', 'H', 'C', '2', '_', 'M', 'M', 'R', '6', 0,
  /* 5300 */ 'M', 'T', 'C', '2', '_', 'M', 'M', 'R', '6', 0,
  /* 5310 */ 'L', 'W', 'C', '2', '_', 'M', 'M', 'R', '6', 0,
  /* 5320 */ 'S', 'W', 'C', '2', '_', 'M', 'M', 'R', '6', 0,
  /* 5330 */ 'L', 'D', 'C', '1', '_', 'D', '6', '4', '_', 'M', 'M', 'R', '6', 0,
  /* 5344 */ 'S', 'D', 'C', '1', '_', 'D', '6', '4', '_', 'M', 'M', 'R', '6', 0,
  /* 5358 */ 'S', 'B', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5368 */ 'B', 'C', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5378 */ 'J', 'R', 'C', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5389 */ 'J', 'A', 'L', 'R', 'C', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5402 */ 'B', 'N', 'E', 'Z', 'C', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5415 */ 'B', 'E', 'Q', 'Z', 'C', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5428 */ 'A', 'N', 'D', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5439 */ 'M', 'O', 'V', 'E', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5451 */ 'S', 'H', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5461 */ 'A', 'N', 'D', 'I', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5473 */ 'L', 'I', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5483 */ 'B', 'R', 'E', 'A', 'K', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5496 */ 'S', 'L', 'L', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5507 */ 'S', 'R', 'L', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5518 */ 'L', 'W', 'M', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5529 */ 'S', 'W', 'M', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5540 */ 'S', 'D', 'B', 'B', 'P', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5553 */ 'X', 'O', 'R', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5564 */ 'N', 'O', 'T', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5575 */ 'S', 'U', 'B', 'U', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5587 */ 'A', 'D', 'D', 'U', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5599 */ 'S', 'W', '1', '6', '_', 'M', 'M', 'R', '6', 0,
  /* 5609 */ 'L', 'S', 'A', '_', 'M', 'M', 'R', '6', 0,
  /* 5618 */ 'E', 'H', 'B', '_', 'M', 'M', 'R', '6', 0,
  /* 5627 */ 'J', 'A', 'L', 'R', 'C', '_', 'H', 'B', '_', 'M', 'M', 'R', '6', 0,
  /* 5641 */ 'L', 'B', '_', 'M', 'M', 'R', '6', 0,
  /* 5649 */ 'S', 'B', '_', 'M', 'M', 'R', '6', 0,
  /* 5657 */ 'S', 'U', 'B', '_', 'M', 'M', 'R', '6', 0,
  /* 5666 */ 'B', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5674 */ 'B', 'G', 'E', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5684 */ 'B', 'N', 'E', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5694 */ 'J', 'I', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5703 */ 'B', 'A', 'L', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5713 */ 'J', 'I', 'A', 'L', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5724 */ 'B', 'G', 'E', 'Z', 'A', 'L', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5737 */ 'B', 'L', 'E', 'Z', 'A', 'L', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5750 */ 'B', 'N', 'E', 'Z', 'A', 'L', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5763 */ 'B', 'E', 'Q', 'Z', 'A', 'L', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5776 */ 'B', 'G', 'T', 'Z', 'A', 'L', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5789 */ 'B', 'L', 'T', 'Z', 'A', 'L', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5802 */ 'E', 'R', 'E', 'T', 'N', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5814 */ 'S', 'Y', 'N', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5824 */ 'A', 'U', 'I', 'P', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5835 */ 'A', 'L', 'U', 'I', 'P', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5847 */ 'A', 'D', 'D', 'I', 'U', 'P', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5860 */ 'L', 'W', 'P', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5870 */ 'B', 'E', 'Q', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5880 */ 'J', 'A', 'L', 'R', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5891 */ 'S', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5899 */ 'B', 'L', 'T', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5909 */ 'B', 'G', 'E', 'U', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5920 */ 'B', 'L', 'T', 'U', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5931 */ 'B', 'N', 'V', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5941 */ 'B', 'O', 'V', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5951 */ 'B', 'G', 'E', 'Z', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5962 */ 'B', 'L', 'E', 'Z', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5973 */ 'B', 'C', '1', 'N', 'E', 'Z', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5986 */ 'B', 'C', '2', 'N', 'E', 'Z', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 5999 */ 'B', 'N', 'E', 'Z', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 6010 */ 'B', 'C', '1', 'E', 'Q', 'Z', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 6023 */ 'B', 'C', '2', 'E', 'Q', 'Z', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 6036 */ 'B', 'E', 'Q', 'Z', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 6047 */ 'B', 'G', 'T', 'Z', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 6058 */ 'B', 'L', 'T', 'Z', 'C', '_', 'M', 'M', 'R', '6', 0,
  /* 6069 */ 'A', 'D', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6078 */ 'A', 'N', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6087 */ 'M', 'O', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6096 */ 'M', 'I', 'N', 'A', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6108 */ 'M', 'A', 'X', 'A', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6120 */ 'C', 'M', 'P', '_', 'S', 'L', 'E', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6135 */ 'C', 'M', 'P', '_', 'S', 'U', 'L', 'E', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6151 */ 'C', 'M', 'P', '_', 'U', 'L', 'E', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6166 */ 'C', 'M', 'P', '_', 'L', 'E', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6180 */ 'C', 'M', 'P', '_', 'S', 'A', 'F', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6195 */ 'C', 'M', 'P', '_', 'A', 'F', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6209 */ 'M', 'S', 'U', 'B', 'F', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6222 */ 'M', 'A', 'D', 'D', 'F', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6235 */ 'S', 'E', 'L', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6246 */ 'T', 'R', 'U', 'N', 'C', '_', 'L', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6261 */ 'R', 'O', 'U', 'N', 'D', '_', 'L', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6276 */ 'C', 'E', 'I', 'L', '_', 'L', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6290 */ 'F', 'L', 'O', 'O', 'R', '_', 'L', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6305 */ 'C', 'V', 'T', '_', 'L', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6318 */ 'M', 'I', 'N', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6329 */ 'C', 'M', 'P', '_', 'S', 'U', 'N', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6344 */ 'C', 'M', 'P', '_', 'U', 'N', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6358 */ 'C', 'M', 'P', '_', 'S', 'E', 'Q', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6373 */ 'C', 'M', 'P', '_', 'S', 'U', 'E', 'Q', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6389 */ 'C', 'M', 'P', '_', 'U', 'E', 'Q', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6404 */ 'C', 'M', 'P', '_', 'E', 'Q', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6418 */ 'C', 'L', 'A', 'S', 'S', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6431 */ 'C', 'M', 'P', '_', 'S', 'L', 'T', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6446 */ 'C', 'M', 'P', '_', 'S', 'U', 'L', 'T', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6462 */ 'C', 'M', 'P', '_', 'U', 'L', 'T', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6477 */ 'C', 'M', 'P', '_', 'L', 'T', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6491 */ 'R', 'I', 'N', 'T', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6503 */ 'F', 'M', 'O', 'V', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6515 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6530 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6545 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6559 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6574 */ 'M', 'A', 'X', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6585 */ 'S', 'E', 'L', 'N', 'E', 'Z', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6599 */ 'S', 'E', 'L', 'E', 'Q', 'Z', '_', 'D', '_', 'M', 'M', 'R', '6', 0,
  /* 6613 */ 'C', 'A', 'C', 'H', 'E', '_', 'M', 'M', 'R', '6', 0,
  /* 6624 */ 'S', 'I', 'G', 'R', 'I', 'E', '_', 'M', 'M', 'R', '6', 0,
  /* 6636 */ 'P', 'A', 'U', 'S', 'E', '_', 'M', 'M', 'R', '6', 0,
  /* 6647 */ 'P', 'R', 'E', 'F', '_', 'M', 'M', 'R', '6', 0,
  /* 6657 */ 'T', 'L', 'B', 'I', 'N', 'V', 'F', '_', 'M', 'M', 'R', '6', 0,
  /* 6670 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', 'R', 'E', 'G', '_', 'M', 'M', 'R', '6', 0,
  /* 6687 */ 'W', 'S', 'B', 'H', '_', 'M', 'M', 'R', '6', 0,
  /* 6697 */ 'S', 'H', '_', 'M', 'M', 'R', '6', 0,
  /* 6705 */ 'M', 'U', 'H', '_', 'M', 'M', 'R', '6', 0,
  /* 6714 */ 'S', 'Y', 'N', 'C', 'I', '_', 'M', 'M', 'R', '6', 0,
  /* 6725 */ 'A', 'N', 'D', 'I', '_', 'M', 'M', 'R', '6', 0,
  /* 6735 */ 'E', 'I', '_', 'M', 'M', 'R', '6', 0,
  /* 6743 */ 'X', 'O', 'R', 'I', '_', 'M', 'M', 'R', '6', 0,
  /* 6753 */ 'A', 'U', 'I', '_', 'M', 'M', 'R', '6', 0,
  /* 6762 */ 'L', 'U', 'I', '_', 'M', 'M', 'R', '6', 0,
  /* 6771 */ 'G', 'I', 'N', 'V', 'I', '_', 'M', 'M', 'R', '6', 0,
  /* 6782 */ 'B', 'R', 'E', 'A', 'K', '_', 'M', 'M', 'R', '6', 0,
  /* 6793 */ 'J', 'A', 'L', '_', 'M', 'M', 'R', '6', 0,
  /* 6802 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', '_', 'M', 'M', 'R', '6', 0,
  /* 6816 */ 'S', 'L', 'L', '_', 'M', 'M', 'R', '6', 0,
  /* 6825 */ 'M', 'U', 'L', '_', 'M', 'M', 'R', '6', 0,
  /* 6834 */ 'C', 'V', 'T', '_', 'D', '_', 'L', '_', 'M', 'M', 'R', '6', 0,
  /* 6847 */ 'C', 'V', 'T', '_', 'S', '_', 'L', '_', 'M', 'M', 'R', '6', 0,
  /* 6860 */ 'A', 'L', 'I', 'G', 'N', '_', 'M', 'M', 'R', '6', 0,
  /* 6871 */ 'C', 'L', 'O', '_', 'M', 'M', 'R', '6', 0,
  /* 6880 */ 'B', 'I', 'T', 'S', 'W', 'A', 'P', '_', 'M', 'M', 'R', '6', 0,
  /* 6893 */ 'S', 'D', 'B', 'B', 'P', '_', 'M', 'M', 'R', '6', 0,
  /* 6904 */ 'M', 'O', 'V', 'E', 'P', '_', 'M', 'M', 'R', '6', 0,
  /* 6915 */ 'S', 'S', 'N', 'O', 'P', '_', 'M', 'M', 'R', '6', 0,
  /* 6926 */ 'J', 'R', 'C', 'A', 'D', 'D', 'I', 'U', 'S', 'P', '_', 'M', 'M', 'R', '6', 0,
  /* 6942 */ 'S', 'W', 'S', 'P', '_', 'M', 'M', 'R', '6', 0,
  /* 6952 */ 'D', 'V', 'P', '_', 'M', 'M', 'R', '6', 0,
  /* 6961 */ 'E', 'V', 'P', '_', 'M', 'M', 'R', '6', 0,
  /* 6970 */ 'N', 'O', 'R', '_', 'M', 'M', 'R', '6', 0,
  /* 6979 */ 'X', 'O', 'R', '_', 'M', 'M', 'R', '6', 0,
  /* 6988 */ 'R', 'D', 'P', 'G', 'P', 'R', '_', 'M', 'M', 'R', '6', 0,
  /* 7000 */ 'W', 'R', 'P', 'G', 'P', 'R', '_', 'M', 'M', 'R', '6', 0,
  /* 7012 */ 'R', 'D', 'H', 'W', 'R', '_', 'M', 'M', 'R', '6', 0,
  /* 7023 */ 'I', 'N', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7032 */ 'M', 'I', 'N', 'A', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7044 */ 'M', 'A', 'X', 'A', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7056 */ 'F', 'S', 'U', 'B', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7068 */ 'F', 'A', 'D', 'D', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7080 */ 'C', 'M', 'P', '_', 'S', 'L', 'E', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7095 */ 'C', 'M', 'P', '_', 'S', 'U', 'L', 'E', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7111 */ 'C', 'M', 'P', '_', 'U', 'L', 'E', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7126 */ 'C', 'M', 'P', '_', 'L', 'E', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7140 */ 'C', 'M', 'P', '_', 'S', 'A', 'F', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7155 */ 'C', 'M', 'P', '_', 'A', 'F', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7169 */ 'M', 'S', 'U', 'B', 'F', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7182 */ 'M', 'A', 'D', 'D', 'F', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7195 */ 'F', 'N', 'E', 'G', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7207 */ 'S', 'E', 'L', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7218 */ 'F', 'M', 'U', 'L', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7230 */ 'T', 'R', 'U', 'N', 'C', '_', 'L', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7245 */ 'R', 'O', 'U', 'N', 'D', '_', 'L', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7260 */ 'C', 'E', 'I', 'L', '_', 'L', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7274 */ 'F', 'L', 'O', 'O', 'R', '_', 'L', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7289 */ 'C', 'V', 'T', '_', 'L', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7302 */ 'M', 'I', 'N', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7313 */ 'C', 'M', 'P', '_', 'S', 'U', 'N', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7328 */ 'C', 'M', 'P', '_', 'U', 'N', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7342 */ 'C', 'M', 'P', '_', 'S', 'E', 'Q', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7357 */ 'C', 'M', 'P', '_', 'S', 'U', 'E', 'Q', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7373 */ 'C', 'M', 'P', '_', 'U', 'E', 'Q', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7388 */ 'C', 'M', 'P', '_', 'E', 'Q', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7402 */ 'C', 'L', 'A', 'S', 'S', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7415 */ 'C', 'M', 'P', '_', 'S', 'L', 'T', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7430 */ 'C', 'M', 'P', '_', 'S', 'U', 'L', 'T', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7446 */ 'C', 'M', 'P', '_', 'U', 'L', 'T', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7461 */ 'C', 'M', 'P', '_', 'L', 'T', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7475 */ 'R', 'I', 'N', 'T', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7487 */ 'F', 'D', 'I', 'V', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7499 */ 'F', 'M', 'O', 'V', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7511 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7526 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7541 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7555 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7570 */ 'C', 'V', 'T', '_', 'W', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7583 */ 'M', 'A', 'X', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7594 */ 'S', 'E', 'L', 'N', 'E', 'Z', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7608 */ 'S', 'E', 'L', 'E', 'Q', 'Z', '_', 'S', '_', 'M', 'M', 'R', '6', 0,
  /* 7622 */ 'D', 'E', 'R', 'E', 'T', '_', 'M', 'M', 'R', '6', 0,
  /* 7633 */ 'W', 'A', 'I', 'T', '_', 'M', 'M', 'R', '6', 0,
  /* 7643 */ 'G', 'I', 'N', 'V', 'T', '_', 'M', 'M', 'R', '6', 0,
  /* 7654 */ 'E', 'X', 'T', '_', 'M', 'M', 'R', '6', 0,
  /* 7663 */ 'L', 'B', 'U', '_', 'M', 'M', 'R', '6', 0,
  /* 7672 */ 'S', 'U', 'B', 'U', '_', 'M', 'M', 'R', '6', 0,
  /* 7682 */ 'A', 'D', 'D', 'U', '_', 'M', 'M', 'R', '6', 0,
  /* 7692 */ 'M', 'O', 'D', 'U', '_', 'M', 'M', 'R', '6', 0,
  /* 7702 */ 'M', 'U', 'H', 'U', '_', 'M', 'M', 'R', '6', 0,
  /* 7712 */ 'A', 'D', 'D', 'I', 'U', '_', 'M', 'M', 'R', '6', 0,
  /* 7723 */ 'M', 'U', 'L', 'U', '_', 'M', 'M', 'R', '6', 0,
  /* 7733 */ 'D', 'I', 'V', 'U', '_', 'M', 'M', 'R', '6', 0,
  /* 7743 */ 'D', 'I', 'V', '_', 'M', 'M', 'R', '6', 0,
  /* 7752 */ 'T', 'L', 'B', 'I', 'N', 'V', '_', 'M', 'M', 'R', '6', 0,
  /* 7764 */ 'L', 'W', '_', 'M', 'M', 'R', '6', 0,
  /* 7772 */ 'S', 'W', '_', 'M', 'M', 'R', '6', 0,
  /* 7780 */ 'C', 'V', 'T', '_', 'S', '_', 'W', '_', 'M', 'M', 'R', '6', 0,
  /* 7793 */ 'S', 'E', 'L', 'N', 'E', 'Z', '_', 'M', 'M', 'R', '6', 0,
  /* 7805 */ 'C', 'L', 'Z', '_', 'M', 'M', 'R', '6', 0,
  /* 7814 */ 'S', 'E', 'L', 'E', 'Q', 'Z', '_', 'M', 'M', 'R', '6', 0,
  /* 7826 */ 'P', 's', 'e', 'u', 'd', 'o', 'I', 'n', 'd', 'i', 'r', 'e', 'c', 't', 'B', 'r', 'a', 'n', 'c', 'h', '_', 'M', 'M', 'R', '6', 0,
  /* 7852 */ 'L', 'D', 'C', '2', '_', 'R', '6', 0,
  /* 7860 */ 'S', 'D', 'C', '2', '_', 'R', '6', 0,
  /* 7868 */ 'L', 'W', 'C', '2', '_', 'R', '6', 0,
  /* 7876 */ 'S', 'W', 'C', '2', '_', 'R', '6', 0,
  /* 7884 */ 'J', 'R', '_', 'H', 'B', '6', '4', '_', 'R', '6', 0,
  /* 7895 */ 'S', 'C', '6', '4', '_', 'R', '6', 0,
  /* 7903 */ 'L', 'L', '6', '4', '_', 'R', '6', 0,
  /* 7911 */ 'D', 'L', 'S', 'A', '_', 'R', '6', 0,
  /* 7919 */ 'J', 'R', '_', 'H', 'B', '_', 'R', '6', 0,
  /* 7928 */ 'S', 'C', '_', 'R', '6', 0,
  /* 7934 */ 'S', 'C', 'D', '_', 'R', '6', 0,
  /* 7941 */ 'L', 'L', 'D', '_', 'R', '6', 0,
  /* 7948 */ 'C', 'A', 'C', 'H', 'E', '_', 'R', '6', 0,
  /* 7957 */ 'P', 'R', 'E', 'F', '_', 'R', '6', 0,
  /* 7965 */ 'L', 'L', '_', 'R', '6', 0,
  /* 7971 */ 'D', 'M', 'U', 'L', '_', 'R', '6', 0,
  /* 7979 */ 'D', 'C', 'L', 'O', '_', 'R', '6', 0,
  /* 7987 */ 'S', 'D', 'B', 'B', 'P', '_', 'R', '6', 0,
  /* 7996 */ 'D', 'C', 'L', 'Z', '_', 'R', '6', 0,
  /* 8004 */ 'P', 's', 'e', 'u', 'd', 'o', 'I', 'n', 'd', 'r', 'e', 'c', 't', 'H', 'a', 'z', 'a', 'r', 'd', 'B', 'r', 'a', 'n', 'c', 'h', 'R', '6', 0,
  /* 8032 */ 'P', 's', 'e', 'u', 'd', 'o', 'I', 'n', 'd', 'i', 'r', 'e', 'c', 't', 'B', 'r', 'a', 'n', 'c', 'h', 'R', '6', 0,
  /* 8055 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', 'C', '1', '2', '8', 0,
  /* 8067 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', '1', '2', '8', 0,
  /* 8080 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 8099 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 8118 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 8138 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 8157 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 8177 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 8196 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 8211 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 8230 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 8249 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 8267 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 8287 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 8306 */ 'S', 'A', 'A', 0,
  /* 8310 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 'A', 0,
  /* 8325 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 'A', 0,
  /* 8341 */ 'G', '_', 'F', 'M', 'A', 0,
  /* 8347 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 'A', 0,
  /* 8362 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 'A', 0,
  /* 8378 */ 'D', 'S', 'R', 'A', 0,
  /* 8383 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8410 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8437 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8465 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8492 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '3', '2', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8520 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '3', '2', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8547 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8570 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8597 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8624 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8650 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '3', '2', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8678 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '3', '2', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8705 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8732 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8759 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8787 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8814 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '6', '4', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8842 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '6', '4', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8869 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8892 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8919 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8946 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 8972 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '6', '4', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9000 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '6', '4', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9027 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9054 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9081 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9109 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9136 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '1', '6', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9164 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '1', '6', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9191 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9214 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9241 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9268 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9294 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '1', '6', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9322 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '1', '6', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9349 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9375 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9401 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9428 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9454 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '8', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9481 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '8', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9507 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9529 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9555 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9581 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9606 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '8', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9633 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '8', '_', 'P', 'O', 'S', 'T', 'R', 'A', 0,
  /* 9659 */ 'R', 'e', 't', 'R', 'A', 0,
  /* 9665 */ 'D', 'L', 'S', 'A', 0,
  /* 9670 */ 'C', 'F', 'C', 'M', 'S', 'A', 0,
  /* 9677 */ 'C', 'T', 'C', 'M', 'S', 'A', 0,
  /* 9684 */ 'C', 'R', 'C', '3', '2', 'B', 0,
  /* 9691 */ 'C', 'R', 'C', '3', '2', 'C', 'B', 0,
  /* 9699 */ 'S', 'E', 'B', 0,
  /* 9703 */ 'E', 'H', 'B', 0,
  /* 9707 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', 'R', 'E', 'G', 'H', 'B', 0,
  /* 9721 */ 'J', 'R', '_', 'H', 'B', 0,
  /* 9727 */ 'J', 'A', 'L', 'R', '_', 'H', 'B', 0,
  /* 9735 */ 'L', 'B', 0,
  /* 9738 */ 'S', 'H', 'R', 'A', '_', 'Q', 'B', 0,
  /* 9746 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'L', 'E', '_', 'Q', 'B', 0,
  /* 9759 */ 'C', 'M', 'P', 'G', 'U', '_', 'L', 'E', '_', 'Q', 'B', 0,
  /* 9771 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', 'U', '_', 'L', 'E', '_', 'Q', 'B', 0,
  /* 9788 */ 'S', 'U', 'B', 'U', 'H', '_', 'Q', 'B', 0,
  /* 9797 */ 'A', 'D', 'D', 'U', 'H', '_', 'Q', 'B', 0,
  /* 9806 */ 'P', 's', 'e', 'u', 'd', 'o', 'P', 'I', 'C', 'K', '_', 'Q', 'B', 0,
  /* 9820 */ 'S', 'H', 'L', 'L', '_', 'Q', 'B', 0,
  /* 9828 */ 'R', 'E', 'P', 'L', '_', 'Q', 'B', 0,
  /* 9836 */ 'S', 'H', 'R', 'L', '_', 'Q', 'B', 0,
  /* 9844 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'E', 'Q', '_', 'Q', 'B', 0,
  /* 9857 */ 'C', 'M', 'P', 'G', 'U', '_', 'E', 'Q', '_', 'Q', 'B', 0,
  /* 9869 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', 'U', '_', 'E', 'Q', '_', 'Q', 'B', 0,
  /* 9886 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'Q', 'B', 0,
  /* 9896 */ 'S', 'U', 'B', 'U', 'H', '_', 'R', '_', 'Q', 'B', 0,
  /* 9907 */ 'A', 'D', 'D', 'U', 'H', '_', 'R', '_', 'Q', 'B', 0,
  /* 9918 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'Q', 'B', 0,
  /* 9929 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'Q', 'B', 0,
  /* 9939 */ 'S', 'U', 'B', 'U', '_', 'S', '_', 'Q', 'B', 0,
  /* 9949 */ 'A', 'D', 'D', 'U', '_', 'S', '_', 'Q', 'B', 0,
  /* 9959 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'L', 'T', '_', 'Q', 'B', 0,
  /* 9972 */ 'C', 'M', 'P', 'G', 'U', '_', 'L', 'T', '_', 'Q', 'B', 0,
  /* 9984 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', 'U', '_', 'L', 'T', '_', 'Q', 'B', 0,
  /* 10001 */ 'S', 'U', 'B', 'U', '_', 'Q', 'B', 0,
  /* 10009 */ 'A', 'D', 'D', 'U', '_', 'Q', 'B', 0,
  /* 10017 */ 'S', 'H', 'R', 'A', 'V', '_', 'Q', 'B', 0,
  /* 10026 */ 'S', 'H', 'L', 'L', 'V', '_', 'Q', 'B', 0,
  /* 10035 */ 'R', 'E', 'P', 'L', 'V', '_', 'Q', 'B', 0,
  /* 10044 */ 'S', 'H', 'R', 'L', 'V', '_', 'Q', 'B', 0,
  /* 10053 */ 'R', 'A', 'D', 'D', 'U', '_', 'W', '_', 'Q', 'B', 0,
  /* 10064 */ 'S', 'B', 0,
  /* 10067 */ 'M', 'O', 'D', 'S', 'U', 'B', 0,
  /* 10074 */ 'G', '_', 'F', 'S', 'U', 'B', 0,
  /* 10081 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'F', 'S', 'U', 'B', 0,
  /* 10098 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'S', 'U', 'B', 0,
  /* 10109 */ 'G', '_', 'S', 'U', 'B', 0,
  /* 10115 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'S', 'U', 'B', 0,
  /* 10131 */ 'S', 'R', 'A', '_', 'B', 0,
  /* 10137 */ 'A', 'D', 'D', '_', 'A', '_', 'B', 0,
  /* 10145 */ 'M', 'I', 'N', '_', 'A', '_', 'B', 0,
  /* 10153 */ 'A', 'D', 'D', 'S', '_', 'A', '_', 'B', 0,
  /* 10162 */ 'M', 'A', 'X', '_', 'A', '_', 'B', 0,
  /* 10170 */ 'N', 'L', 'O', 'C', '_', 'B', 0,
  /* 10177 */ 'N', 'L', 'Z', 'C', '_', 'B', 0,
  /* 10184 */ 'S', 'L', 'D', '_', 'B', 0,
  /* 10190 */ 'P', 'C', 'K', 'O', 'D', '_', 'B', 0,
  /* 10198 */ 'I', 'L', 'V', 'O', 'D', '_', 'B', 0,
  /* 10206 */ 'I', 'N', 'S', 'V', 'E', '_', 'B', 0,
  /* 10214 */ 'V', 'S', 'H', 'F', '_', 'B', 0,
  /* 10221 */ 'B', 'N', 'E', 'G', '_', 'B', 0,
  /* 10228 */ 'S', 'R', 'A', 'I', '_', 'B', 0,
  /* 10235 */ 'S', 'L', 'D', 'I', '_', 'B', 0,
  /* 10242 */ 'A', 'N', 'D', 'I', '_', 'B', 0,
  /* 10249 */ 'B', 'N', 'E', 'G', 'I', '_', 'B', 0,
  /* 10257 */ 'B', 'S', 'E', 'L', 'I', '_', 'B', 0,
  /* 10265 */ 'S', 'L', 'L', 'I', '_', 'B', 0,
  /* 10272 */ 'S', 'R', 'L', 'I', '_', 'B', 0,
  /* 10279 */ 'B', 'I', 'N', 'S', 'L', 'I', '_', 'B', 0,
  /* 10288 */ 'C', 'E', 'Q', 'I', '_', 'B', 0,
  /* 10295 */ 'S', 'R', 'A', 'R', 'I', '_', 'B', 0,
  /* 10303 */ 'B', 'C', 'L', 'R', 'I', '_', 'B', 0,
  /* 10311 */ 'S', 'R', 'L', 'R', 'I', '_', 'B', 0,
  /* 10319 */ 'N', 'O', 'R', 'I', '_', 'B', 0,
  /* 10326 */ 'X', 'O', 'R', 'I', '_', 'B', 0,
  /* 10333 */ 'B', 'I', 'N', 'S', 'R', 'I', '_', 'B', 0,
  /* 10342 */ 'S', 'P', 'L', 'A', 'T', 'I', '_', 'B', 0,
  /* 10351 */ 'B', 'S', 'E', 'T', 'I', '_', 'B', 0,
  /* 10359 */ 'S', 'U', 'B', 'V', 'I', '_', 'B', 0,
  /* 10367 */ 'A', 'D', 'D', 'V', 'I', '_', 'B', 0,
  /* 10375 */ 'B', 'M', 'Z', 'I', '_', 'B', 0,
  /* 10382 */ 'B', 'M', 'N', 'Z', 'I', '_', 'B', 0,
  /* 10390 */ 'F', 'I', 'L', 'L', '_', 'B', 0,
  /* 10397 */ 'S', 'L', 'L', '_', 'B', 0,
  /* 10403 */ 'S', 'R', 'L', '_', 'B', 0,
  /* 10409 */ 'B', 'I', 'N', 'S', 'L', '_', 'B', 0,
  /* 10417 */ 'I', 'L', 'V', 'L', '_', 'B', 0,
  /* 10424 */ 'C', 'E', 'Q', '_', 'B', 0,
  /* 10430 */ 'S', 'R', 'A', 'R', '_', 'B', 0,
  /* 10437 */ 'B', 'C', 'L', 'R', '_', 'B', 0,
  /* 10444 */ 'S', 'R', 'L', 'R', '_', 'B', 0,
  /* 10451 */ 'B', 'I', 'N', 'S', 'R', '_', 'B', 0,
  /* 10459 */ 'I', 'L', 'V', 'R', '_', 'B', 0,
  /* 10466 */ 'A', 'S', 'U', 'B', '_', 'S', '_', 'B', 0,
  /* 10475 */ 'M', 'O', 'D', '_', 'S', '_', 'B', 0,
  /* 10483 */ 'C', 'L', 'E', '_', 'S', '_', 'B', 0,
  /* 10491 */ 'A', 'V', 'E', '_', 'S', '_', 'B', 0,
  /* 10499 */ 'C', 'L', 'E', 'I', '_', 'S', '_', 'B', 0,
  /* 10508 */ 'M', 'I', 'N', 'I', '_', 'S', '_', 'B', 0,
  /* 10517 */ 'C', 'L', 'T', 'I', '_', 'S', '_', 'B', 0,
  /* 10526 */ 'M', 'A', 'X', 'I', '_', 'S', '_', 'B', 0,
  /* 10535 */ 'M', 'I', 'N', '_', 'S', '_', 'B', 0,
  /* 10543 */ 'A', 'V', 'E', 'R', '_', 'S', '_', 'B', 0,
  /* 10552 */ 'S', 'U', 'B', 'S', '_', 'S', '_', 'B', 0,
  /* 10561 */ 'A', 'D', 'D', 'S', '_', 'S', '_', 'B', 0,
  /* 10570 */ 'S', 'A', 'T', '_', 'S', '_', 'B', 0,
  /* 10578 */ 'C', 'L', 'T', '_', 'S', '_', 'B', 0,
  /* 10586 */ 'S', 'U', 'B', 'S', 'U', 'U', '_', 'S', '_', 'B', 0,
  /* 10597 */ 'D', 'I', 'V', '_', 'S', '_', 'B', 0,
  /* 10605 */ 'M', 'A', 'X', '_', 'S', '_', 'B', 0,
  /* 10613 */ 'C', 'O', 'P', 'Y', '_', 'S', '_', 'B', 0,
  /* 10622 */ 'S', 'P', 'L', 'A', 'T', '_', 'B', 0,
  /* 10630 */ 'B', 'S', 'E', 'T', '_', 'B', 0,
  /* 10637 */ 'P', 'C', 'N', 'T', '_', 'B', 0,
  /* 10644 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'B', 0,
  /* 10653 */ 'S', 'T', '_', 'B', 0,
  /* 10658 */ 'A', 'S', 'U', 'B', '_', 'U', '_', 'B', 0,
  /* 10667 */ 'M', 'O', 'D', '_', 'U', '_', 'B', 0,
  /* 10675 */ 'C', 'L', 'E', '_', 'U', '_', 'B', 0,
  /* 10683 */ 'A', 'V', 'E', '_', 'U', '_', 'B', 0,
  /* 10691 */ 'C', 'L', 'E', 'I', '_', 'U', '_', 'B', 0,
  /* 10700 */ 'M', 'I', 'N', 'I', '_', 'U', '_', 'B', 0,
  /* 10709 */ 'C', 'L', 'T', 'I', '_', 'U', '_', 'B', 0,
  /* 10718 */ 'M', 'A', 'X', 'I', '_', 'U', '_', 'B', 0,
  /* 10727 */ 'M', 'I', 'N', '_', 'U', '_', 'B', 0,
  /* 10735 */ 'A', 'V', 'E', 'R', '_', 'U', '_', 'B', 0,
  /* 10744 */ 'S', 'U', 'B', 'S', '_', 'U', '_', 'B', 0,
  /* 10753 */ 'A', 'D', 'D', 'S', '_', 'U', '_', 'B', 0,
  /* 10762 */ 'S', 'U', 'B', 'S', 'U', 'S', '_', 'U', '_', 'B', 0,
  /* 10773 */ 'S', 'A', 'T', '_', 'U', '_', 'B', 0,
  /* 10781 */ 'C', 'L', 'T', '_', 'U', '_', 'B', 0,
  /* 10789 */ 'D', 'I', 'V', '_', 'U', '_', 'B', 0,
  /* 10797 */ 'M', 'A', 'X', '_', 'U', '_', 'B', 0,
  /* 10805 */ 'C', 'O', 'P', 'Y', '_', 'U', '_', 'B', 0,
  /* 10814 */ 'M', 'S', 'U', 'B', 'V', '_', 'B', 0,
  /* 10822 */ 'M', 'A', 'D', 'D', 'V', '_', 'B', 0,
  /* 10830 */ 'P', 'C', 'K', 'E', 'V', '_', 'B', 0,
  /* 10838 */ 'I', 'L', 'V', 'E', 'V', '_', 'B', 0,
  /* 10846 */ 'M', 'U', 'L', 'V', '_', 'B', 0,
  /* 10853 */ 'B', 'Z', '_', 'B', 0,
  /* 10858 */ 'B', 'N', 'Z', '_', 'B', 0,
  /* 10864 */ 'B', 'C', 0,
  /* 10867 */ 'B', 'G', 'E', 'C', 0,
  /* 10872 */ 'B', 'N', 'E', 'C', 0,
  /* 10877 */ 'J', 'I', 'C', 0,
  /* 10881 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', 0,
  /* 10893 */ 'B', 'A', 'L', 'C', 0,
  /* 10898 */ 'J', 'I', 'A', 'L', 'C', 0,
  /* 10904 */ 'B', 'G', 'E', 'Z', 'A', 'L', 'C', 0,
  /* 10912 */ 'B', 'L', 'E', 'Z', 'A', 'L', 'C', 0,
  /* 10920 */ 'B', 'N', 'E', 'Z', 'A', 'L', 'C', 0,
  /* 10928 */ 'B', 'E', 'Q', 'Z', 'A', 'L', 'C', 0,
  /* 10936 */ 'B', 'G', 'T', 'Z', 'A', 'L', 'C', 0,
  /* 10944 */ 'B', 'L', 'T', 'Z', 'A', 'L', 'C', 0,
  /* 10952 */ 'E', 'R', 'E', 'T', 'N', 'C', 0,
  /* 10959 */ 'G', '_', 'F', 'P', 'T', 'R', 'U', 'N', 'C', 0,
  /* 10969 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 10987 */ 'G', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 10995 */ 'G', '_', 'B', 'U', 'I', 'L', 'D', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 11016 */ 'S', 'Y', 'N', 'C', 0,
  /* 11021 */ 'G', '_', 'D', 'Y', 'N', '_', 'S', 'T', 'A', 'C', 'K', 'A', 'L', 'L', 'O', 'C', 0,
  /* 11038 */ 'L', 'D', 'P', 'C', 0,
  /* 11043 */ 'A', 'U', 'I', 'P', 'C', 0,
  /* 11049 */ 'A', 'L', 'U', 'I', 'P', 'C', 0,
  /* 11056 */ 'A', 'D', 'D', 'I', 'U', 'P', 'C', 0,
  /* 11064 */ 'L', 'W', 'U', 'P', 'C', 0,
  /* 11070 */ 'L', 'W', 'P', 'C', 0,
  /* 11075 */ 'B', 'E', 'Q', 'C', 0,
  /* 11080 */ 'A', 'D', 'D', 'S', 'C', 0,
  /* 11086 */ 'B', 'L', 'T', 'C', 0,
  /* 11091 */ 'B', 'G', 'E', 'U', 'C', 0,
  /* 11097 */ 'B', 'L', 'T', 'U', 'C', 0,
  /* 11103 */ 'B', 'N', 'V', 'C', 0,
  /* 11108 */ 'B', 'O', 'V', 'C', 0,
  /* 11113 */ 'A', 'D', 'D', 'W', 'C', 0,
  /* 11119 */ 'B', 'G', 'E', 'Z', 'C', 0,
  /* 11125 */ 'B', 'L', 'E', 'Z', 'C', 0,
  /* 11131 */ 'B', 'N', 'E', 'Z', 'C', 0,
  /* 11137 */ 'B', 'E', 'Q', 'Z', 'C', 0,
  /* 11143 */ 'B', 'G', 'T', 'Z', 'C', 0,
  /* 11149 */ 'B', 'L', 'T', 'Z', 'C', 0,
  /* 11155 */ 'C', 'R', 'C', '3', '2', 'D', 0,
  /* 11162 */ 'S', 'A', 'A', 'D', 0,
  /* 11167 */ 'G', '_', 'F', 'M', 'A', 'D', 0,
  /* 11174 */ 'G', '_', 'I', 'N', 'D', 'E', 'X', 'E', 'D', '_', 'S', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 11193 */ 'G', '_', 'S', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 11204 */ 'G', '_', 'I', 'N', 'D', 'E', 'X', 'E', 'D', '_', 'Z', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 11223 */ 'G', '_', 'Z', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 11234 */ 'G', '_', 'I', 'N', 'D', 'E', 'X', 'E', 'D', '_', 'L', 'O', 'A', 'D', 0,
  /* 11249 */ 'G', '_', 'L', 'O', 'A', 'D', 0,
  /* 11256 */ 'C', 'R', 'C', '3', '2', 'C', 'D', 0,
  /* 11264 */ 'S', 'C', 'D', 0,
  /* 11268 */ 'D', 'A', 'D', 'D', 0,
  /* 11273 */ 'G', '_', 'F', 'A', 'D', 'D', 0,
  /* 11280 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'F', 'A', 'D', 'D', 0,
  /* 11297 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'A', 'D', 'D', 0,
  /* 11308 */ 'G', '_', 'A', 'D', 'D', 0,
  /* 11314 */ 'G', '_', 'P', 'T', 'R', '_', 'A', 'D', 'D', 0,
  /* 11324 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'A', 'D', 'D', 0,
  /* 11340 */ 'D', 'S', 'H', 'D', 0,
  /* 11345 */ 'Y', 'I', 'E', 'L', 'D', 0,
  /* 11351 */ 'L', 'L', 'D', 0,
  /* 11355 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'N', 'A', 'N', 'D', 0,
  /* 11372 */ 'G', '_', 'A', 'N', 'D', 0,
  /* 11378 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'A', 'N', 'D', 0,
  /* 11394 */ 'P', 'R', 'E', 'P', 'E', 'N', 'D', 0,
  /* 11402 */ 'A', 'P', 'P', 'E', 'N', 'D', 0,
  /* 11409 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 11422 */ 'G', '_', 'B', 'R', 'C', 'O', 'N', 'D', 0,
  /* 11431 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'R', 'O', 'U', 'N', 'D', 0,
  /* 11449 */ 'D', 'M', 'O', 'D', 0,
  /* 11454 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 11471 */ 'S', 'D', 0,
  /* 11474 */ 'F', 'L', 'O', 'G', '2', '_', 'D', 0,
  /* 11482 */ 'F', 'E', 'X', 'P', '2', '_', 'D', 0,
  /* 11490 */ 'M', 'I', 'N', 'A', '_', 'D', 0,
  /* 11497 */ 'S', 'R', 'A', '_', 'D', 0,
  /* 11503 */ 'M', 'A', 'X', 'A', '_', 'D', 0,
  /* 11510 */ 'A', 'D', 'D', '_', 'A', '_', 'D', 0,
  /* 11518 */ 'F', 'M', 'I', 'N', '_', 'A', '_', 'D', 0,
  /* 11527 */ 'A', 'D', 'D', 'S', '_', 'A', '_', 'D', 0,
  /* 11536 */ 'F', 'M', 'A', 'X', '_', 'A', '_', 'D', 0,
  /* 11545 */ 'F', 'S', 'U', 'B', '_', 'D', 0,
  /* 11552 */ 'F', 'M', 'S', 'U', 'B', '_', 'D', 0,
  /* 11560 */ 'N', 'L', 'O', 'C', '_', 'D', 0,
  /* 11567 */ 'N', 'L', 'Z', 'C', '_', 'D', 0,
  /* 11574 */ 'F', 'A', 'D', 'D', '_', 'D', 0,
  /* 11581 */ 'F', 'M', 'A', 'D', 'D', '_', 'D', 0,
  /* 11589 */ 'S', 'L', 'D', '_', 'D', 0,
  /* 11595 */ 'P', 'C', 'K', 'O', 'D', '_', 'D', 0,
  /* 11603 */ 'I', 'L', 'V', 'O', 'D', '_', 'D', 0,
  /* 11611 */ 'F', 'C', 'L', 'E', '_', 'D', 0,
  /* 11618 */ 'F', 'S', 'L', 'E', '_', 'D', 0,
  /* 11625 */ 'C', 'M', 'P', '_', 'S', 'L', 'E', '_', 'D', 0,
  /* 11635 */ 'F', 'C', 'U', 'L', 'E', '_', 'D', 0,
  /* 11643 */ 'F', 'S', 'U', 'L', 'E', '_', 'D', 0,
  /* 11651 */ 'C', 'M', 'P', '_', 'S', 'U', 'L', 'E', '_', 'D', 0,
  /* 11662 */ 'C', 'M', 'P', '_', 'U', 'L', 'E', '_', 'D', 0,
  /* 11672 */ 'C', 'M', 'P', '_', 'L', 'E', '_', 'D', 0,
  /* 11681 */ 'F', 'C', 'N', 'E', '_', 'D', 0,
  /* 11688 */ 'F', 'S', 'N', 'E', '_', 'D', 0,
  /* 11695 */ 'F', 'C', 'U', 'N', 'E', '_', 'D', 0,
  /* 11703 */ 'F', 'S', 'U', 'N', 'E', '_', 'D', 0,
  /* 11711 */ 'I', 'N', 'S', 'V', 'E', '_', 'D', 0,
  /* 11719 */ 'F', 'C', 'A', 'F', '_', 'D', 0,
  /* 11726 */ 'F', 'S', 'A', 'F', '_', 'D', 0,
  /* 11733 */ 'C', 'M', 'P', '_', 'S', 'A', 'F', '_', 'D', 0,
  /* 11743 */ 'M', 'S', 'U', 'B', 'F', '_', 'D', 0,
  /* 11751 */ 'M', 'A', 'D', 'D', 'F', '_', 'D', 0,
  /* 11759 */ 'V', 'S', 'H', 'F', '_', 'D', 0,
  /* 11766 */ 'C', 'M', 'P', '_', 'F', '_', 'D', 0,
  /* 11774 */ 'B', 'N', 'E', 'G', '_', 'D', 0,
  /* 11781 */ 'S', 'R', 'A', 'I', '_', 'D', 0,
  /* 11788 */ 'S', 'L', 'D', 'I', '_', 'D', 0,
  /* 11795 */ 'B', 'N', 'E', 'G', 'I', '_', 'D', 0,
  /* 11803 */ 'S', 'L', 'L', 'I', '_', 'D', 0,
  /* 11810 */ 'S', 'R', 'L', 'I', '_', 'D', 0,
  /* 11817 */ 'B', 'I', 'N', 'S', 'L', 'I', '_', 'D', 0,
  /* 11826 */ 'C', 'E', 'Q', 'I', '_', 'D', 0,
  /* 11833 */ 'S', 'R', 'A', 'R', 'I', '_', 'D', 0,
  /* 11841 */ 'B', 'C', 'L', 'R', 'I', '_', 'D', 0,
  /* 11849 */ 'S', 'R', 'L', 'R', 'I', '_', 'D', 0,
  /* 11857 */ 'B', 'I', 'N', 'S', 'R', 'I', '_', 'D', 0,
  /* 11866 */ 'S', 'P', 'L', 'A', 'T', 'I', '_', 'D', 0,
  /* 11875 */ 'B', 'S', 'E', 'T', 'I', '_', 'D', 0,
  /* 11883 */ 'S', 'U', 'B', 'V', 'I', '_', 'D', 0,
  /* 11891 */ 'A', 'D', 'D', 'V', 'I', '_', 'D', 0,
  /* 11899 */ 'S', 'E', 'L', '_', 'D', 0,
  /* 11905 */ 'F', 'I', 'L', 'L', '_', 'D', 0,
  /* 11912 */ 'S', 'L', 'L', '_', 'D', 0,
  /* 11918 */ 'F', 'E', 'X', 'U', 'P', 'L', '_', 'D', 0,
  /* 11927 */ 'F', 'F', 'Q', 'L', '_', 'D', 0,
  /* 11934 */ 'S', 'R', 'L', '_', 'D', 0,
  /* 11940 */ 'B', 'I', 'N', 'S', 'L', '_', 'D', 0,
  /* 11948 */ 'F', 'M', 'U', 'L', '_', 'D', 0,
  /* 11955 */ 'I', 'L', 'V', 'L', '_', 'D', 0,
  /* 11962 */ 'F', 'M', 'I', 'N', '_', 'D', 0,
  /* 11969 */ 'F', 'C', 'U', 'N', '_', 'D', 0,
  /* 11976 */ 'F', 'S', 'U', 'N', '_', 'D', 0,
  /* 11983 */ 'C', 'M', 'P', '_', 'S', 'U', 'N', '_', 'D', 0,
  /* 11993 */ 'C', 'M', 'P', '_', 'U', 'N', '_', 'D', 0,
  /* 12002 */ 'F', 'R', 'C', 'P', '_', 'D', 0,
  /* 12009 */ 'F', 'C', 'E', 'Q', '_', 'D', 0,
  /* 12016 */ 'F', 'S', 'E', 'Q', '_', 'D', 0,
  /* 12023 */ 'C', 'M', 'P', '_', 'S', 'E', 'Q', '_', 'D', 0,
  /* 12033 */ 'F', 'C', 'U', 'E', 'Q', '_', 'D', 0,
  /* 12041 */ 'F', 'S', 'U', 'E', 'Q', '_', 'D', 0,
  /* 12049 */ 'C', 'M', 'P', '_', 'S', 'U', 'E', 'Q', '_', 'D', 0,
  /* 12060 */ 'C', 'M', 'P', '_', 'U', 'E', 'Q', '_', 'D', 0,
  /* 12070 */ 'C', 'M', 'P', '_', 'E', 'Q', '_', 'D', 0,
  /* 12079 */ 'S', 'R', 'A', 'R', '_', 'D', 0,
  /* 12086 */ 'B', 'C', 'L', 'R', '_', 'D', 0,
  /* 12093 */ 'S', 'R', 'L', 'R', '_', 'D', 0,
  /* 12100 */ 'F', 'C', 'O', 'R', '_', 'D', 0,
  /* 12107 */ 'F', 'S', 'O', 'R', '_', 'D', 0,
  /* 12114 */ 'F', 'E', 'X', 'U', 'P', 'R', '_', 'D', 0,
  /* 12123 */ 'F', 'F', 'Q', 'R', '_', 'D', 0,
  /* 12130 */ 'B', 'I', 'N', 'S', 'R', '_', 'D', 0,
  /* 12138 */ 'I', 'L', 'V', 'R', '_', 'D', 0,
  /* 12145 */ 'F', 'A', 'B', 'S', '_', 'D', 0,
  /* 12152 */ 'F', 'C', 'L', 'A', 'S', 'S', '_', 'D', 0,
  /* 12161 */ 'A', 'S', 'U', 'B', '_', 'S', '_', 'D', 0,
  /* 12170 */ 'H', 'S', 'U', 'B', '_', 'S', '_', 'D', 0,
  /* 12179 */ 'D', 'P', 'S', 'U', 'B', '_', 'S', '_', 'D', 0,
  /* 12189 */ 'F', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'D', 0,
  /* 12200 */ 'H', 'A', 'D', 'D', '_', 'S', '_', 'D', 0,
  /* 12209 */ 'D', 'P', 'A', 'D', 'D', '_', 'S', '_', 'D', 0,
  /* 12219 */ 'M', 'O', 'D', '_', 'S', '_', 'D', 0,
  /* 12227 */ 'C', 'L', 'E', '_', 'S', '_', 'D', 0,
  /* 12235 */ 'A', 'V', 'E', '_', 'S', '_', 'D', 0,
  /* 12243 */ 'C', 'L', 'E', 'I', '_', 'S', '_', 'D', 0,
  /* 12252 */ 'M', 'I', 'N', 'I', '_', 'S', '_', 'D', 0,
  /* 12261 */ 'C', 'L', 'T', 'I', '_', 'S', '_', 'D', 0,
  /* 12270 */ 'M', 'A', 'X', 'I', '_', 'S', '_', 'D', 0,
  /* 12279 */ 'M', 'I', 'N', '_', 'S', '_', 'D', 0,
  /* 12287 */ 'D', 'O', 'T', 'P', '_', 'S', '_', 'D', 0,
  /* 12296 */ 'A', 'V', 'E', 'R', '_', 'S', '_', 'D', 0,
  /* 12305 */ 'S', 'U', 'B', 'S', '_', 'S', '_', 'D', 0,
  /* 12314 */ 'A', 'D', 'D', 'S', '_', 'S', '_', 'D', 0,
  /* 12323 */ 'S', 'A', 'T', '_', 'S', '_', 'D', 0,
  /* 12331 */ 'C', 'L', 'T', '_', 'S', '_', 'D', 0,
  /* 12339 */ 'F', 'F', 'I', 'N', 'T', '_', 'S', '_', 'D', 0,
  /* 12349 */ 'F', 'T', 'I', 'N', 'T', '_', 'S', '_', 'D', 0,
  /* 12359 */ 'S', 'U', 'B', 'S', 'U', 'U', '_', 'S', '_', 'D', 0,
  /* 12370 */ 'D', 'I', 'V', '_', 'S', '_', 'D', 0,
  /* 12378 */ 'M', 'A', 'X', '_', 'S', '_', 'D', 0,
  /* 12386 */ 'C', 'O', 'P', 'Y', '_', 'S', '_', 'D', 0,
  /* 12395 */ 'S', 'P', 'L', 'A', 'T', '_', 'D', 0,
  /* 12403 */ 'B', 'S', 'E', 'T', '_', 'D', 0,
  /* 12410 */ 'F', 'C', 'L', 'T', '_', 'D', 0,
  /* 12417 */ 'F', 'S', 'L', 'T', '_', 'D', 0,
  /* 12424 */ 'C', 'M', 'P', '_', 'S', 'L', 'T', '_', 'D', 0,
  /* 12434 */ 'F', 'C', 'U', 'L', 'T', '_', 'D', 0,
  /* 12442 */ 'F', 'S', 'U', 'L', 'T', '_', 'D', 0,
  /* 12450 */ 'C', 'M', 'P', '_', 'S', 'U', 'L', 'T', '_', 'D', 0,
  /* 12461 */ 'C', 'M', 'P', '_', 'U', 'L', 'T', '_', 'D', 0,
  /* 12471 */ 'C', 'M', 'P', '_', 'L', 'T', '_', 'D', 0,
  /* 12480 */ 'P', 'C', 'N', 'T', '_', 'D', 0,
  /* 12487 */ 'F', 'R', 'I', 'N', 'T', '_', 'D', 0,
  /* 12495 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'D', 0,
  /* 12504 */ 'F', 'S', 'Q', 'R', 'T', '_', 'D', 0,
  /* 12512 */ 'F', 'R', 'S', 'Q', 'R', 'T', '_', 'D', 0,
  /* 12521 */ 'S', 'T', '_', 'D', 0,
  /* 12526 */ 'A', 'S', 'U', 'B', '_', 'U', '_', 'D', 0,
  /* 12535 */ 'H', 'S', 'U', 'B', '_', 'U', '_', 'D', 0,
  /* 12544 */ 'D', 'P', 'S', 'U', 'B', '_', 'U', '_', 'D', 0,
  /* 12554 */ 'F', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'D', 0,
  /* 12565 */ 'H', 'A', 'D', 'D', '_', 'U', '_', 'D', 0,
  /* 12574 */ 'D', 'P', 'A', 'D', 'D', '_', 'U', '_', 'D', 0,
  /* 12584 */ 'M', 'O', 'D', '_', 'U', '_', 'D', 0,
  /* 12592 */ 'C', 'L', 'E', '_', 'U', '_', 'D', 0,
  /* 12600 */ 'A', 'V', 'E', '_', 'U', '_', 'D', 0,
  /* 12608 */ 'C', 'L', 'E', 'I', '_', 'U', '_', 'D', 0,
  /* 12617 */ 'M', 'I', 'N', 'I', '_', 'U', '_', 'D', 0,
  /* 12626 */ 'C', 'L', 'T', 'I', '_', 'U', '_', 'D', 0,
  /* 12635 */ 'M', 'A', 'X', 'I', '_', 'U', '_', 'D', 0,
  /* 12644 */ 'M', 'I', 'N', '_', 'U', '_', 'D', 0,
  /* 12652 */ 'D', 'O', 'T', 'P', '_', 'U', '_', 'D', 0,
  /* 12661 */ 'A', 'V', 'E', 'R', '_', 'U', '_', 'D', 0,
  /* 12670 */ 'S', 'U', 'B', 'S', '_', 'U', '_', 'D', 0,
  /* 12679 */ 'A', 'D', 'D', 'S', '_', 'U', '_', 'D', 0,
  /* 12688 */ 'S', 'U', 'B', 'S', 'U', 'S', '_', 'U', '_', 'D', 0,
  /* 12699 */ 'S', 'A', 'T', '_', 'U', '_', 'D', 0,
  /* 12707 */ 'C', 'L', 'T', '_', 'U', '_', 'D', 0,
  /* 12715 */ 'F', 'F', 'I', 'N', 'T', '_', 'U', '_', 'D', 0,
  /* 12725 */ 'F', 'T', 'I', 'N', 'T', '_', 'U', '_', 'D', 0,
  /* 12735 */ 'D', 'I', 'V', '_', 'U', '_', 'D', 0,
  /* 12743 */ 'M', 'A', 'X', '_', 'U', '_', 'D', 0,
  /* 12751 */ 'M', 'S', 'U', 'B', 'V', '_', 'D', 0,
  /* 12759 */ 'M', 'A', 'D', 'D', 'V', '_', 'D', 0,
  /* 12767 */ 'P', 'C', 'K', 'E', 'V', '_', 'D', 0,
  /* 12775 */ 'I', 'L', 'V', 'E', 'V', '_', 'D', 0,
  /* 12783 */ 'F', 'D', 'I', 'V', '_', 'D', 0,
  /* 12790 */ 'M', 'U', 'L', 'V', '_', 'D', 0,
  /* 12797 */ 'P', 's', 'e', 'u', 'd', 'o', 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'D', 0,
  /* 12813 */ 'F', 'M', 'A', 'X', '_', 'D', 0,
  /* 12820 */ 'B', 'Z', '_', 'D', 0,
  /* 12825 */ 'S', 'E', 'L', 'N', 'E', 'Z', '_', 'D', 0,
  /* 12834 */ 'B', 'N', 'Z', '_', 'D', 0,
  /* 12840 */ 'S', 'E', 'L', 'E', 'Q', 'Z', '_', 'D', 0,
  /* 12849 */ 'L', 'B', 'E', 0,
  /* 12853 */ 'S', 'B', 'E', 0,
  /* 12857 */ 'G', '_', 'S', 'S', 'U', 'B', 'E', 0,
  /* 12865 */ 'G', '_', 'U', 'S', 'U', 'B', 'E', 0,
  /* 12873 */ 'G', '_', 'F', 'E', 'N', 'C', 'E', 0,
  /* 12881 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 12894 */ 'S', 'C', 'E', 0,
  /* 12898 */ 'G', '_', 'S', 'A', 'D', 'D', 'E', 0,
  /* 12906 */ 'G', '_', 'U', 'A', 'D', 'D', 'E', 0,
  /* 12914 */ 'G', '_', 'F', 'M', 'I', 'N', 'N', 'U', 'M', '_', 'I', 'E', 'E', 'E', 0,
  /* 12929 */ 'G', '_', 'F', 'M', 'A', 'X', 'N', 'U', 'M', '_', 'I', 'E', 'E', 'E', 0,
  /* 12944 */ 'C', 'A', 'C', 'H', 'E', 'E', 0,
  /* 12951 */ 'P', 'R', 'E', 'F', 'E', 0,
  /* 12957 */ 'B', 'G', 'E', 0,
  /* 12961 */ 'S', 'G', 'E', 0,
  /* 12965 */ 'T', 'G', 'E', 0,
  /* 12969 */ 'C', 'A', 'C', 'H', 'E', 0,
  /* 12975 */ 'L', 'H', 'E', 0,
  /* 12979 */ 'S', 'H', 'E', 0,
  /* 12983 */ 'S', 'I', 'G', 'R', 'I', 'E', 0,
  /* 12990 */ 'G', '_', 'J', 'U', 'M', 'P', '_', 'T', 'A', 'B', 'L', 'E', 0,
  /* 13003 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 13010 */ 'L', 'L', 'E', 0,
  /* 13014 */ 'L', 'W', 'L', 'E', 0,
  /* 13019 */ 'S', 'W', 'L', 'E', 0,
  /* 13024 */ 'B', 'N', 'E', 0,
  /* 13028 */ 'S', 'N', 'E', 0,
  /* 13032 */ 'T', 'N', 'E', 0,
  /* 13036 */ 'L', 'O', 'C', 'A', 'L', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
  /* 13049 */ 'D', 'V', 'P', 'E', 0,
  /* 13054 */ 'E', 'V', 'P', 'E', 0,
  /* 13059 */ 'G', '_', 'I', 'N', 'D', 'E', 'X', 'E', 'D', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 13075 */ 'G', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 13083 */ 'L', 'W', 'R', 'E', 0,
  /* 13088 */ 'S', 'W', 'R', 'E', 0,
  /* 13093 */ 'G', '_', 'B', 'I', 'T', 'R', 'E', 'V', 'E', 'R', 'S', 'E', 0,
  /* 13106 */ 'P', 'A', 'U', 'S', 'E', 0,
  /* 13112 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 13122 */ 'G', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 13137 */ 'L', 'W', 'E', 0,
  /* 13141 */ 'S', 'W', 'E', 0,
  /* 13145 */ 'G', '_', 'F', 'C', 'A', 'N', 'O', 'N', 'I', 'C', 'A', 'L', 'I', 'Z', 'E', 0,
  /* 13161 */ 'L', 'B', 'u', 'E', 0,
  /* 13166 */ 'L', 'H', 'u', 'E', 0,
  /* 13171 */ 'B', 'C', '1', 'F', 0,
  /* 13176 */ 'G', '_', 'C', 'T', 'L', 'Z', '_', 'Z', 'E', 'R', 'O', '_', 'U', 'N', 'D', 'E', 'F', 0,
  /* 13194 */ 'G', '_', 'C', 'T', 'T', 'Z', '_', 'Z', 'E', 'R', 'O', '_', 'U', 'N', 'D', 'E', 'F', 0,
  /* 13212 */ 'G', '_', 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 13227 */ 'P', 'R', 'E', 'F', 0,
  /* 13232 */ 'T', 'L', 'B', 'I', 'N', 'V', 'F', 0,
  /* 13240 */ 'T', 'L', 'B', 'G', 'I', 'N', 'V', 'F', 0,
  /* 13249 */ 'G', '_', 'F', 'N', 'E', 'G', 0,
  /* 13256 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', 'H', 'B', '6', '4', 'R', '6', 'R', 'E', 'G', 0,
  /* 13274 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', '6', '4', 'R', '6', 'R', 'E', 'G', 0,
  /* 13290 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', 'H', 'B', 'R', '6', 'R', 'E', 'G', 0,
  /* 13306 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', 'R', '6', 'R', 'E', 'G', 0,
  /* 13320 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 13335 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 13349 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', 'R', 'E', 'G', 0,
  /* 13361 */ 'G', '_', 'S', 'E', 'X', 'T', '_', 'I', 'N', 'R', 'E', 'G', 0,
  /* 13374 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 13388 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', 0,
  /* 13405 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'X', 'C', 'H', 'G', 0,
  /* 13422 */ 'G', '_', 'F', 'L', 'O', 'G', 0,
  /* 13429 */ 'G', '_', 'V', 'A', 'A', 'R', 'G', 0,
  /* 13437 */ 'C', 'R', 'C', '3', '2', 'H', 0,
  /* 13444 */ 'D', 'S', 'B', 'H', 0,
  /* 13449 */ 'W', 'S', 'B', 'H', 0,
  /* 13454 */ 'C', 'R', 'C', '3', '2', 'C', 'H', 0,
  /* 13462 */ 'S', 'E', 'H', 0,
  /* 13466 */ 'G', '_', 'S', 'M', 'U', 'L', 'H', 0,
  /* 13474 */ 'G', '_', 'U', 'M', 'U', 'L', 'H', 0,
  /* 13482 */ 'S', 'H', 'R', 'A', '_', 'P', 'H', 0,
  /* 13490 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'Q', 'B', '_', 'P', 'H', 0,
  /* 13503 */ 'P', 'R', 'E', 'C', 'R', '_', 'Q', 'B', '_', 'P', 'H', 0,
  /* 13515 */ 'P', 'R', 'E', 'C', 'R', 'Q', 'U', '_', 'S', '_', 'Q', 'B', '_', 'P', 'H', 0,
  /* 13531 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', '_', 'L', 'E', '_', 'P', 'H', 0,
  /* 13547 */ 'S', 'U', 'B', 'Q', 'H', '_', 'P', 'H', 0,
  /* 13556 */ 'A', 'D', 'D', 'Q', 'H', '_', 'P', 'H', 0,
  /* 13565 */ 'P', 's', 'e', 'u', 'd', 'o', 'P', 'I', 'C', 'K', '_', 'P', 'H', 0,
  /* 13579 */ 'S', 'H', 'L', 'L', '_', 'P', 'H', 0,
  /* 13587 */ 'R', 'E', 'P', 'L', '_', 'P', 'H', 0,
  /* 13595 */ 'S', 'H', 'R', 'L', '_', 'P', 'H', 0,
  /* 13603 */ 'P', 'A', 'C', 'K', 'R', 'L', '_', 'P', 'H', 0,
  /* 13613 */ 'M', 'U', 'L', '_', 'P', 'H', 0,
  /* 13620 */ 'S', 'U', 'B', 'Q', '_', 'P', 'H', 0,
  /* 13628 */ 'A', 'D', 'D', 'Q', '_', 'P', 'H', 0,
  /* 13636 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', '_', 'E', 'Q', '_', 'P', 'H', 0,
  /* 13652 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'P', 'H', 0,
  /* 13662 */ 'S', 'U', 'B', 'Q', 'H', '_', 'R', '_', 'P', 'H', 0,
  /* 13673 */ 'A', 'D', 'D', 'Q', 'H', '_', 'R', '_', 'P', 'H', 0,
  /* 13684 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'P', 'H', 0,
  /* 13695 */ 'M', 'U', 'L', 'Q', '_', 'R', 'S', '_', 'P', 'H', 0,
  /* 13706 */ 'S', 'H', 'L', 'L', '_', 'S', '_', 'P', 'H', 0,
  /* 13716 */ 'M', 'U', 'L', '_', 'S', '_', 'P', 'H', 0,
  /* 13725 */ 'S', 'U', 'B', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 13735 */ 'A', 'D', 'D', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 13745 */ 'M', 'U', 'L', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 13755 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 13765 */ 'S', 'U', 'B', 'U', '_', 'S', '_', 'P', 'H', 0,
  /* 13775 */ 'A', 'D', 'D', 'U', '_', 'S', '_', 'P', 'H', 0,
  /* 13785 */ 'S', 'H', 'L', 'L', 'V', '_', 'S', '_', 'P', 'H', 0,
  /* 13796 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', '_', 'L', 'T', '_', 'P', 'H', 0,
  /* 13812 */ 'S', 'U', 'B', 'U', '_', 'P', 'H', 0,
  /* 13820 */ 'A', 'D', 'D', 'U', '_', 'P', 'H', 0,
  /* 13828 */ 'S', 'H', 'R', 'A', 'V', '_', 'P', 'H', 0,
  /* 13837 */ 'S', 'H', 'L', 'L', 'V', '_', 'P', 'H', 0,
  /* 13846 */ 'R', 'E', 'P', 'L', 'V', '_', 'P', 'H', 0,
  /* 13855 */ 'S', 'H', 'R', 'L', 'V', '_', 'P', 'H', 0,
  /* 13864 */ 'D', 'P', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 13873 */ 'M', 'U', 'L', 'S', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 13884 */ 'D', 'P', 'A', 'Q', 'X', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 13898 */ 'D', 'P', 'S', 'Q', 'X', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 13912 */ 'D', 'P', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 13921 */ 'D', 'P', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 13933 */ 'M', 'U', 'L', 'S', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 13947 */ 'D', 'P', 'S', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 13959 */ 'D', 'P', 'A', 'Q', 'X', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 13972 */ 'D', 'P', 'S', 'Q', 'X', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 13985 */ 'D', 'P', 'A', 'X', '_', 'W', '_', 'P', 'H', 0,
  /* 13995 */ 'D', 'P', 'S', 'X', '_', 'W', '_', 'P', 'H', 0,
  /* 14005 */ 'S', 'H', 0,
  /* 14008 */ 'D', 'M', 'U', 'H', 0,
  /* 14013 */ 'S', 'R', 'A', '_', 'H', 0,
  /* 14019 */ 'A', 'D', 'D', '_', 'A', '_', 'H', 0,
  /* 14027 */ 'M', 'I', 'N', '_', 'A', '_', 'H', 0,
  /* 14035 */ 'A', 'D', 'D', 'S', '_', 'A', '_', 'H', 0,
  /* 14044 */ 'M', 'A', 'X', '_', 'A', '_', 'H', 0,
  /* 14052 */ 'N', 'L', 'O', 'C', '_', 'H', 0,
  /* 14059 */ 'N', 'L', 'Z', 'C', '_', 'H', 0,
  /* 14066 */ 'S', 'L', 'D', '_', 'H', 0,
  /* 14072 */ 'P', 'C', 'K', 'O', 'D', '_', 'H', 0,
  /* 14080 */ 'I', 'L', 'V', 'O', 'D', '_', 'H', 0,
  /* 14088 */ 'I', 'N', 'S', 'V', 'E', '_', 'H', 0,
  /* 14096 */ 'V', 'S', 'H', 'F', '_', 'H', 0,
  /* 14103 */ 'B', 'N', 'E', 'G', '_', 'H', 0,
  /* 14110 */ 'S', 'R', 'A', 'I', '_', 'H', 0,
  /* 14117 */ 'S', 'L', 'D', 'I', '_', 'H', 0,
  /* 14124 */ 'B', 'N', 'E', 'G', 'I', '_', 'H', 0,
  /* 14132 */ 'S', 'L', 'L', 'I', '_', 'H', 0,
  /* 14139 */ 'S', 'R', 'L', 'I', '_', 'H', 0,
  /* 14146 */ 'B', 'I', 'N', 'S', 'L', 'I', '_', 'H', 0,
  /* 14155 */ 'C', 'E', 'Q', 'I', '_', 'H', 0,
  /* 14162 */ 'S', 'R', 'A', 'R', 'I', '_', 'H', 0,
  /* 14170 */ 'B', 'C', 'L', 'R', 'I', '_', 'H', 0,
  /* 14178 */ 'S', 'R', 'L', 'R', 'I', '_', 'H', 0,
  /* 14186 */ 'B', 'I', 'N', 'S', 'R', 'I', '_', 'H', 0,
  /* 14195 */ 'S', 'P', 'L', 'A', 'T', 'I', '_', 'H', 0,
  /* 14204 */ 'B', 'S', 'E', 'T', 'I', '_', 'H', 0,
  /* 14212 */ 'S', 'U', 'B', 'V', 'I', '_', 'H', 0,
  /* 14220 */ 'A', 'D', 'D', 'V', 'I', '_', 'H', 0,
  /* 14228 */ 'F', 'I', 'L', 'L', '_', 'H', 0,
  /* 14235 */ 'S', 'L', 'L', '_', 'H', 0,
  /* 14241 */ 'S', 'R', 'L', '_', 'H', 0,
  /* 14247 */ 'B', 'I', 'N', 'S', 'L', '_', 'H', 0,
  /* 14255 */ 'I', 'L', 'V', 'L', '_', 'H', 0,
  /* 14262 */ 'F', 'E', 'X', 'D', 'O', '_', 'H', 0,
  /* 14270 */ 'C', 'E', 'Q', '_', 'H', 0,
  /* 14276 */ 'F', 'T', 'Q', '_', 'H', 0,
  /* 14282 */ 'M', 'S', 'U', 'B', '_', 'Q', '_', 'H', 0,
  /* 14291 */ 'M', 'A', 'D', 'D', '_', 'Q', '_', 'H', 0,
  /* 14300 */ 'M', 'U', 'L', '_', 'Q', '_', 'H', 0,
  /* 14308 */ 'M', 'S', 'U', 'B', 'R', '_', 'Q', '_', 'H', 0,
  /* 14318 */ 'M', 'A', 'D', 'D', 'R', '_', 'Q', '_', 'H', 0,
  /* 14328 */ 'M', 'U', 'L', 'R', '_', 'Q', '_', 'H', 0,
  /* 14337 */ 'S', 'R', 'A', 'R', '_', 'H', 0,
  /* 14344 */ 'B', 'C', 'L', 'R', '_', 'H', 0,
  /* 14351 */ 'S', 'R', 'L', 'R', '_', 'H', 0,
  /* 14358 */ 'B', 'I', 'N', 'S', 'R', '_', 'H', 0,
  /* 14366 */ 'I', 'L', 'V', 'R', '_', 'H', 0,
  /* 14373 */ 'A', 'S', 'U', 'B', '_', 'S', '_', 'H', 0,
  /* 14382 */ 'H', 'S', 'U', 'B', '_', 'S', '_', 'H', 0,
  /* 14391 */ 'D', 'P', 'S', 'U', 'B', '_', 'S', '_', 'H', 0,
  /* 14401 */ 'H', 'A', 'D', 'D', '_', 'S', '_', 'H', 0,
  /* 14410 */ 'D', 'P', 'A', 'D', 'D', '_', 'S', '_', 'H', 0,
  /* 14420 */ 'M', 'O', 'D', '_', 'S', '_', 'H', 0,
  /* 14428 */ 'C', 'L', 'E', '_', 'S', '_', 'H', 0,
  /* 14436 */ 'A', 'V', 'E', '_', 'S', '_', 'H', 0,
  /* 14444 */ 'C', 'L', 'E', 'I', '_', 'S', '_', 'H', 0,
  /* 14453 */ 'M', 'I', 'N', 'I', '_', 'S', '_', 'H', 0,
  /* 14462 */ 'C', 'L', 'T', 'I', '_', 'S', '_', 'H', 0,
  /* 14471 */ 'M', 'A', 'X', 'I', '_', 'S', '_', 'H', 0,
  /* 14480 */ 'M', 'I', 'N', '_', 'S', '_', 'H', 0,
  /* 14488 */ 'D', 'O', 'T', 'P', '_', 'S', '_', 'H', 0,
  /* 14497 */ 'A', 'V', 'E', 'R', '_', 'S', '_', 'H', 0,
  /* 14506 */ 'E', 'X', 'T', 'R', '_', 'S', '_', 'H', 0,
  /* 14515 */ 'S', 'U', 'B', 'S', '_', 'S', '_', 'H', 0,
  /* 14524 */ 'A', 'D', 'D', 'S', '_', 'S', '_', 'H', 0,
  /* 14533 */ 'S', 'A', 'T', '_', 'S', '_', 'H', 0,
  /* 14541 */ 'C', 'L', 'T', '_', 'S', '_', 'H', 0,
  /* 14549 */ 'S', 'U', 'B', 'S', 'U', 'U', '_', 'S', '_', 'H', 0,
  /* 14560 */ 'D', 'I', 'V', '_', 'S', '_', 'H', 0,
  /* 14568 */ 'E', 'X', 'T', 'R', 'V', '_', 'S', '_', 'H', 0,
  /* 14578 */ 'M', 'A', 'X', '_', 'S', '_', 'H', 0,
  /* 14586 */ 'C', 'O', 'P', 'Y', '_', 'S', '_', 'H', 0,
  /* 14595 */ 'S', 'P', 'L', 'A', 'T', '_', 'H', 0,
  /* 14603 */ 'B', 'S', 'E', 'T', '_', 'H', 0,
  /* 14610 */ 'P', 'C', 'N', 'T', '_', 'H', 0,
  /* 14617 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'H', 0,
  /* 14626 */ 'S', 'T', '_', 'H', 0,
  /* 14631 */ 'A', 'S', 'U', 'B', '_', 'U', '_', 'H', 0,
  /* 14640 */ 'H', 'S', 'U', 'B', '_', 'U', '_', 'H', 0,
  /* 14649 */ 'D', 'P', 'S', 'U', 'B', '_', 'U', '_', 'H', 0,
  /* 14659 */ 'H', 'A', 'D', 'D', '_', 'U', '_', 'H', 0,
  /* 14668 */ 'D', 'P', 'A', 'D', 'D', '_', 'U', '_', 'H', 0,
  /* 14678 */ 'M', 'O', 'D', '_', 'U', '_', 'H', 0,
  /* 14686 */ 'C', 'L', 'E', '_', 'U', '_', 'H', 0,
  /* 14694 */ 'A', 'V', 'E', '_', 'U', '_', 'H', 0,
  /* 14702 */ 'C', 'L', 'E', 'I', '_', 'U', '_', 'H', 0,
  /* 14711 */ 'M', 'I', 'N', 'I', '_', 'U', '_', 'H', 0,
  /* 14720 */ 'C', 'L', 'T', 'I', '_', 'U', '_', 'H', 0,
  /* 14729 */ 'M', 'A', 'X', 'I', '_', 'U', '_', 'H', 0,
  /* 14738 */ 'M', 'I', 'N', '_', 'U', '_', 'H', 0,
  /* 14746 */ 'D', 'O', 'T', 'P', '_', 'U', '_', 'H', 0,
  /* 14755 */ 'A', 'V', 'E', 'R', '_', 'U', '_', 'H', 0,
  /* 14764 */ 'S', 'U', 'B', 'S', '_', 'U', '_', 'H', 0,
  /* 14773 */ 'A', 'D', 'D', 'S', '_', 'U', '_', 'H', 0,
  /* 14782 */ 'S', 'U', 'B', 'S', 'U', 'S', '_', 'U', '_', 'H', 0,
  /* 14793 */ 'S', 'A', 'T', '_', 'U', '_', 'H', 0,
  /* 14801 */ 'C', 'L', 'T', '_', 'U', '_', 'H', 0,
  /* 14809 */ 'D', 'I', 'V', '_', 'U', '_', 'H', 0,
  /* 14817 */ 'M', 'A', 'X', '_', 'U', '_', 'H', 0,
  /* 14825 */ 'C', 'O', 'P', 'Y', '_', 'U', '_', 'H', 0,
  /* 14834 */ 'M', 'S', 'U', 'B', 'V', '_', 'H', 0,
  /* 14842 */ 'M', 'A', 'D', 'D', 'V', '_', 'H', 0,
  /* 14850 */ 'P', 'C', 'K', 'E', 'V', '_', 'H', 0,
  /* 14858 */ 'I', 'L', 'V', 'E', 'V', '_', 'H', 0,
  /* 14866 */ 'M', 'U', 'L', 'V', '_', 'H', 0,
  /* 14873 */ 'B', 'Z', '_', 'H', 0,
  /* 14878 */ 'B', 'N', 'Z', '_', 'H', 0,
  /* 14884 */ 'S', 'Y', 'N', 'C', 'I', 0,
  /* 14890 */ 'D', 'I', 0,
  /* 14893 */ 'T', 'G', 'E', 'I', 0,
  /* 14898 */ 'T', 'N', 'E', 'I', 0,
  /* 14903 */ 'D', 'A', 'H', 'I', 0,
  /* 14908 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'F', 'H', 'I', 0,
  /* 14919 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'T', 'L', 'O', 'H', 'I', 0,
  /* 14932 */ 'G', '_', 'P', 'H', 'I', 0,
  /* 14938 */ 'M', 'F', 'T', 'H', 'I', 0,
  /* 14944 */ 'M', 'T', 'H', 'I', 0,
  /* 14949 */ 'M', 'T', 'T', 'H', 'I', 0,
  /* 14955 */ 'T', 'E', 'Q', 'I', 0,
  /* 14960 */ 'G', '_', 'F', 'P', 'T', 'O', 'S', 'I', 0,
  /* 14969 */ 'D', 'A', 'T', 'I', 0,
  /* 14974 */ 'T', 'L', 'T', 'I', 0,
  /* 14979 */ 'D', 'A', 'U', 'I', 0,
  /* 14984 */ 'G', '_', 'F', 'P', 'T', 'O', 'U', 'I', 0,
  /* 14993 */ 'G', 'I', 'N', 'V', 'I', 0,
  /* 14999 */ 'T', 'L', 'B', 'W', 'I', 0,
  /* 15005 */ 'T', 'L', 'B', 'G', 'W', 'I', 0,
  /* 15012 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'I', 0,
  /* 15023 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'I', 0,
  /* 15034 */ 'M', 'O', 'V', 'F', '_', 'I', 0,
  /* 15041 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', 'F', 'P', '_', 'F', '_', 'I', 0,
  /* 15060 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'I', 0,
  /* 15069 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'I', 0,
  /* 15078 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', '_', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', 0,
  /* 15095 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', 0,
  /* 15110 */ 'M', 'O', 'V', 'T', '_', 'I', 0,
  /* 15117 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', 'F', 'P', '_', 'T', '_', 'I', 0,
  /* 15136 */ 'J', 0,
  /* 15138 */ 'B', 'R', 'E', 'A', 'K', 0,
  /* 15144 */ 'F', 'O', 'R', 'K', 0,
  /* 15149 */ 'G', '_', 'P', 'T', 'R', '_', 'M', 'A', 'S', 'K', 0,
  /* 15160 */ 'B', 'A', 'L', 0,
  /* 15164 */ 'J', 'A', 'L', 0,
  /* 15168 */ 'B', 'G', 'E', 'Z', 'A', 'L', 0,
  /* 15175 */ 'B', 'L', 'T', 'Z', 'A', 'L', 0,
  /* 15182 */ 'M', 'U', 'L', 'E', 'U', '_', 'S', '_', 'P', 'H', '_', 'Q', 'B', 'L', 0,
  /* 15197 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 0,
  /* 15211 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 0,
  /* 15226 */ 'D', 'P', 'A', 'U', '_', 'H', '_', 'Q', 'B', 'L', 0,
  /* 15237 */ 'D', 'P', 'S', 'U', '_', 'H', '_', 'Q', 'B', 'L', 0,
  /* 15248 */ 'L', 'D', 'L', 0,
  /* 15252 */ 'S', 'D', 'L', 0,
  /* 15256 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 15265 */ 'D', 'B', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 15275 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 15284 */ 'A', 'N', 'N', 'O', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 15301 */ 'B', 'G', 'E', 'L', 0,
  /* 15306 */ 'B', 'L', 'E', 'L', 0,
  /* 15311 */ 'B', 'N', 'E', 'L', 0,
  /* 15316 */ 'I', 'C', 'A', 'L', 'L', '_', 'B', 'R', 'A', 'N', 'C', 'H', '_', 'F', 'U', 'N', 'N', 'E', 'L', 0,
  /* 15336 */ 'B', 'C', '1', 'F', 'L', 0,
  /* 15342 */ 'M', 'A', 'Q', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 15355 */ 'P', 'R', 'E', 'C', 'E', 'Q', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 15368 */ 'M', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 15380 */ 'M', 'U', 'L', 'E', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 15394 */ 'G', '_', 'S', 'H', 'L', 0,
  /* 15400 */ 'G', '_', 'F', 'C', 'E', 'I', 'L', 0,
  /* 15408 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', 0,
  /* 15417 */ 'H', 'Y', 'P', 'C', 'A', 'L', 'L', 0,
  /* 15425 */ 'S', 'Y', 'S', 'C', 'A', 'L', 'L', 0,
  /* 15433 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'A', 'I', 'L', '_', 'C', 'A', 'L', 'L', 0,
  /* 15453 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'Y', 'P', 'E', 'D', '_', 'E', 'V', 'E', 'N', 'T', '_', 'C', 'A', 'L', 'L', 0,
  /* 15480 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'E', 'V', 'E', 'N', 'T', '_', 'C', 'A', 'L', 'L', 0,
  /* 15501 */ 'F', 'E', 'N', 'T', 'R', 'Y', '_', 'C', 'A', 'L', 'L', 0,
  /* 15513 */ 'B', 'G', 'E', 'Z', 'A', 'L', 'L', 0,
  /* 15521 */ 'B', 'L', 'T', 'Z', 'A', 'L', 'L', 0,
  /* 15529 */ 'K', 'I', 'L', 'L', 0,
  /* 15534 */ 'D', 'S', 'L', 'L', 0,
  /* 15539 */ 'D', 'R', 'O', 'L', 0,
  /* 15544 */ 'B', 'E', 'Q', 'L', 0,
  /* 15549 */ 'D', 'S', 'R', 'L', 0,
  /* 15554 */ 'B', 'C', '1', 'T', 'L', 0,
  /* 15560 */ 'B', 'G', 'T', 'L', 0,
  /* 15565 */ 'B', 'L', 'T', 'L', 0,
  /* 15570 */ 'B', 'G', 'E', 'U', 'L', 0,
  /* 15576 */ 'B', 'L', 'E', 'U', 'L', 0,
  /* 15582 */ 'D', 'M', 'U', 'L', 0,
  /* 15587 */ 'G', '_', 'F', 'M', 'U', 'L', 0,
  /* 15594 */ 'G', '_', 'M', 'U', 'L', 0,
  /* 15600 */ 'B', 'G', 'T', 'U', 'L', 0,
  /* 15606 */ 'B', 'L', 'T', 'U', 'L', 0,
  /* 15612 */ 'L', 'W', 'L', 0,
  /* 15616 */ 'S', 'W', 'L', 0,
  /* 15620 */ 'B', 'G', 'E', 'Z', 'L', 0,
  /* 15626 */ 'B', 'L', 'E', 'Z', 'L', 0,
  /* 15632 */ 'B', 'G', 'T', 'Z', 'L', 0,
  /* 15638 */ 'B', 'L', 'T', 'Z', 'L', 0,
  /* 15644 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'L', 0,
  /* 15660 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'S', '_', 'L', 0,
  /* 15674 */ 'G', '_', 'F', 'R', 'E', 'M', 0,
  /* 15681 */ 'G', '_', 'S', 'R', 'E', 'M', 0,
  /* 15688 */ 'G', '_', 'U', 'R', 'E', 'M', 0,
  /* 15695 */ 'M', 'F', 'G', 'C', '0', '_', 'M', 'M', 0,
  /* 15704 */ 'M', 'F', 'H', 'G', 'C', '0', '_', 'M', 'M', 0,
  /* 15714 */ 'M', 'T', 'H', 'G', 'C', '0', '_', 'M', 'M', 0,
  /* 15724 */ 'M', 'T', 'G', 'C', '0', '_', 'M', 'M', 0,
  /* 15733 */ 'L', 'D', 'C', '1', '_', 'M', 'M', 0,
  /* 15741 */ 'S', 'D', 'C', '1', '_', 'M', 'M', 0,
  /* 15749 */ 'C', 'F', 'C', '1', '_', 'M', 'M', 0,
  /* 15757 */ 'M', 'F', 'C', '1', '_', 'M', 'M', 0,
  /* 15765 */ 'C', 'T', 'C', '1', '_', 'M', 'M', 0,
  /* 15773 */ 'M', 'T', 'C', '1', '_', 'M', 'M', 0,
  /* 15781 */ 'L', 'W', 'C', '1', '_', 'M', 'M', 0,
  /* 15789 */ 'S', 'W', 'C', '1', '_', 'M', 'M', 0,
  /* 15797 */ 'L', 'U', 'X', 'C', '1', '_', 'M', 'M', 0,
  /* 15806 */ 'S', 'U', 'X', 'C', '1', '_', 'M', 'M', 0,
  /* 15815 */ 'L', 'W', 'X', 'C', '1', '_', 'M', 'M', 0,
  /* 15824 */ 'S', 'W', 'X', 'C', '1', '_', 'M', 'M', 0,
  /* 15833 */ 'M', 'F', 'H', 'C', '1', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 15846 */ 'M', 'T', 'H', 'C', '1', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 15859 */ 'F', 'S', 'U', 'B', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 15871 */ 'N', 'M', 'S', 'U', 'B', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 15884 */ 'F', 'A', 'D', 'D', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 15896 */ 'N', 'M', 'A', 'D', 'D', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 15909 */ 'C', '_', 'N', 'G', 'E', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 15922 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 15936 */ 'C', '_', 'O', 'L', 'E', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 15949 */ 'C', '_', 'U', 'L', 'E', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 15962 */ 'C', '_', 'L', 'E', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 15974 */ 'C', '_', 'S', 'F', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 15986 */ 'M', 'O', 'V', 'F', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 15998 */ 'C', '_', 'F', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16009 */ 'F', 'N', 'E', 'G', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16021 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16035 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16049 */ 'C', '_', 'N', 'G', 'L', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16062 */ 'F', 'M', 'U', 'L', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16074 */ 'C', '_', 'U', 'N', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16086 */ 'R', 'E', 'C', 'I', 'P', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16099 */ 'F', 'C', 'M', 'P', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16111 */ 'C', '_', 'S', 'E', 'Q', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16124 */ 'C', '_', 'U', 'E', 'Q', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16137 */ 'C', '_', 'E', 'Q', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16149 */ 'F', 'A', 'B', 'S', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16161 */ 'C', 'V', 'T', '_', 'S', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16174 */ 'C', '_', 'N', 'G', 'T', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16187 */ 'C', '_', 'O', 'L', 'T', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16200 */ 'C', '_', 'U', 'L', 'T', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16213 */ 'C', '_', 'L', 'T', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16225 */ 'F', 'S', 'Q', 'R', 'T', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16238 */ 'R', 'S', 'Q', 'R', 'T', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16251 */ 'M', 'O', 'V', 'T', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16263 */ 'F', 'D', 'I', 'V', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16275 */ 'F', 'M', 'O', 'V', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16287 */ 'C', 'V', 'T', '_', 'W', '_', 'D', '3', '2', '_', 'M', 'M', 0,
  /* 16300 */ 'B', 'P', 'O', 'S', 'G', 'E', '3', '2', '_', 'M', 'M', 0,
  /* 16312 */ 'L', 'W', 'M', '3', '2', '_', 'M', 'M', 0,
  /* 16321 */ 'S', 'W', 'M', '3', '2', '_', 'M', 'M', 0,
  /* 16330 */ 'F', 'C', 'M', 'P', '_', 'S', '3', '2', '_', 'M', 'M', 0,
  /* 16342 */ 'C', 'F', 'C', '2', '_', 'M', 'M', 0,
  /* 16350 */ 'C', 'T', 'C', '2', '_', 'M', 'M', 0,
  /* 16358 */ 'A', 'D', 'D', 'I', 'U', 'R', '2', '_', 'M', 'M', 0,
  /* 16369 */ 'M', 'F', 'H', 'C', '1', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16382 */ 'M', 'T', 'H', 'C', '1', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16395 */ 'M', 'T', 'C', '1', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16407 */ 'F', 'S', 'U', 'B', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16419 */ 'F', 'A', 'D', 'D', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16431 */ 'C', '_', 'N', 'G', 'E', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16444 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16458 */ 'C', '_', 'O', 'L', 'E', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16471 */ 'C', '_', 'U', 'L', 'E', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16484 */ 'C', '_', 'L', 'E', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16496 */ 'C', '_', 'S', 'F', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16508 */ 'C', '_', 'F', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16519 */ 'F', 'N', 'E', 'G', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16531 */ 'C', '_', 'N', 'G', 'L', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16544 */ 'F', 'M', 'U', 'L', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16556 */ 'C', 'V', 'T', '_', 'L', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16569 */ 'C', '_', 'U', 'N', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16581 */ 'R', 'E', 'C', 'I', 'P', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16594 */ 'C', '_', 'S', 'E', 'Q', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16607 */ 'C', '_', 'U', 'E', 'Q', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16620 */ 'C', '_', 'E', 'Q', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16632 */ 'F', 'A', 'B', 'S', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16644 */ 'C', 'V', 'T', '_', 'S', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16657 */ 'C', '_', 'N', 'G', 'T', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16670 */ 'C', '_', 'O', 'L', 'T', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16683 */ 'C', '_', 'U', 'L', 'T', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16696 */ 'C', '_', 'L', 'T', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16708 */ 'F', 'S', 'Q', 'R', 'T', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16721 */ 'R', 'S', 'Q', 'R', 'T', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16734 */ 'F', 'D', 'I', 'V', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16746 */ 'F', 'M', 'O', 'V', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16758 */ 'C', 'V', 'T', '_', 'W', '_', 'D', '6', '4', '_', 'M', 'M', 0,
  /* 16771 */ 'A', 'D', 'D', 'I', 'U', 'S', '5', '_', 'M', 'M', 0,
  /* 16782 */ 'S', 'B', '1', '6', '_', 'M', 'M', 0,
  /* 16790 */ 'J', 'R', 'C', '1', '6', '_', 'M', 'M', 0,
  /* 16799 */ 'A', 'N', 'D', '1', '6', '_', 'M', 'M', 0,
  /* 16808 */ 'M', 'O', 'V', 'E', '1', '6', '_', 'M', 'M', 0,
  /* 16818 */ 'S', 'H', '1', '6', '_', 'M', 'M', 0,
  /* 16826 */ 'A', 'N', 'D', 'I', '1', '6', '_', 'M', 'M', 0,
  /* 16836 */ 'M', 'F', 'H', 'I', '1', '6', '_', 'M', 'M', 0,
  /* 16846 */ 'L', 'I', '1', '6', '_', 'M', 'M', 0,
  /* 16854 */ 'B', 'R', 'E', 'A', 'K', '1', '6', '_', 'M', 'M', 0,
  /* 16865 */ 'S', 'L', 'L', '1', '6', '_', 'M', 'M', 0,
  /* 16874 */ 'S', 'R', 'L', '1', '6', '_', 'M', 'M', 0,
  /* 16883 */ 'L', 'W', 'M', '1', '6', '_', 'M', 'M', 0,
  /* 16892 */ 'S', 'W', 'M', '1', '6', '_', 'M', 'M', 0,
  /* 16901 */ 'M', 'F', 'L', 'O', '1', '6', '_', 'M', 'M', 0,
  /* 16911 */ 'S', 'D', 'B', 'B', 'P', '1', '6', '_', 'M', 'M', 0,
  /* 16922 */ 'J', 'R', '1', '6', '_', 'M', 'M', 0,
  /* 16930 */ 'J', 'A', 'L', 'R', '1', '6', '_', 'M', 'M', 0,
  /* 16940 */ 'X', 'O', 'R', '1', '6', '_', 'M', 'M', 0,
  /* 16949 */ 'J', 'A', 'L', 'R', 'S', '1', '6', '_', 'M', 'M', 0,
  /* 16960 */ 'N', 'O', 'T', '1', '6', '_', 'M', 'M', 0,
  /* 16969 */ 'L', 'B', 'U', '1', '6', '_', 'M', 'M', 0,
  /* 16978 */ 'S', 'U', 'B', 'U', '1', '6', '_', 'M', 'M', 0,
  /* 16988 */ 'A', 'D', 'D', 'U', '1', '6', '_', 'M', 'M', 0,
  /* 16998 */ 'L', 'H', 'U', '1', '6', '_', 'M', 'M', 0,
  /* 17007 */ 'L', 'W', '1', '6', '_', 'M', 'M', 0,
  /* 17015 */ 'S', 'W', '1', '6', '_', 'M', 'M', 0,
  /* 17023 */ 'B', 'N', 'E', 'Z', '1', '6', '_', 'M', 'M', 0,
  /* 17033 */ 'B', 'E', 'Q', 'Z', '1', '6', '_', 'M', 'M', 0,
  /* 17043 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 'A', '_', 'M', 'M', 0,
  /* 17061 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 'A', '_', 'M', 'M', 0,
  /* 17080 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 'A', '_', 'M', 'M', 0,
  /* 17098 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 'A', '_', 'M', 'M', 0,
  /* 17117 */ 'S', 'R', 'A', '_', 'M', 'M', 0,
  /* 17124 */ 'S', 'E', 'B', '_', 'M', 'M', 0,
  /* 17131 */ 'E', 'H', 'B', '_', 'M', 'M', 0,
  /* 17138 */ 'L', 'B', '_', 'M', 'M', 0,
  /* 17144 */ 'C', 'M', 'P', 'G', 'U', '_', 'L', 'E', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17159 */ 'C', 'M', 'P', 'U', '_', 'L', 'E', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17173 */ 'P', 'I', 'C', 'K', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17184 */ 'S', 'H', 'L', 'L', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17195 */ 'R', 'E', 'P', 'L', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17206 */ 'S', 'H', 'R', 'L', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17217 */ 'C', 'M', 'P', 'G', 'U', '_', 'E', 'Q', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17232 */ 'C', 'M', 'P', 'U', '_', 'E', 'Q', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17246 */ 'S', 'U', 'B', 'U', '_', 'S', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17259 */ 'A', 'D', 'D', 'U', '_', 'S', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17272 */ 'C', 'M', 'P', 'G', 'U', '_', 'L', 'T', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17287 */ 'C', 'M', 'P', 'U', '_', 'L', 'T', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17301 */ 'S', 'U', 'B', 'U', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17312 */ 'A', 'D', 'D', 'U', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17323 */ 'S', 'H', 'L', 'L', 'V', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17335 */ 'R', 'E', 'P', 'L', 'V', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17347 */ 'S', 'H', 'R', 'L', 'V', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17359 */ 'R', 'A', 'D', 'D', 'U', '_', 'W', '_', 'Q', 'B', '_', 'M', 'M', 0,
  /* 17373 */ 'S', 'B', '_', 'M', 'M', 0,
  /* 17379 */ 'M', 'O', 'D', 'S', 'U', 'B', '_', 'M', 'M', 0,
  /* 17389 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'S', 'U', 'B', '_', 'M', 'M', 0,
  /* 17403 */ 'S', 'Y', 'N', 'C', '_', 'M', 'M', 0,
  /* 17411 */ 'A', 'D', 'D', 'I', 'U', 'P', 'C', '_', 'M', 'M', 0,
  /* 17422 */ 'A', 'D', 'D', 'S', 'C', '_', 'M', 'M', 0,
  /* 17431 */ 'A', 'D', 'D', 'W', 'C', '_', 'M', 'M', 0,
  /* 17440 */ 'B', 'N', 'E', 'Z', 'C', '_', 'M', 'M', 0,
  /* 17449 */ 'B', 'E', 'Q', 'Z', 'C', '_', 'M', 'M', 0,
  /* 17458 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'A', 'D', 'D', '_', 'M', 'M', 0,
  /* 17472 */ 'A', 'N', 'D', '_', 'M', 'M', 0,
  /* 17479 */ 'L', 'B', 'E', '_', 'M', 'M', 0,
  /* 17486 */ 'S', 'B', 'E', '_', 'M', 'M', 0,
  /* 17493 */ 'S', 'C', 'E', '_', 'M', 'M', 0,
  /* 17500 */ 'C', 'A', 'C', 'H', 'E', 'E', '_', 'M', 'M', 0,
  /* 17510 */ 'P', 'R', 'E', 'F', 'E', '_', 'M', 'M', 0,
  /* 17519 */ 'T', 'G', 'E', '_', 'M', 'M', 0,
  /* 17526 */ 'C', 'A', 'C', 'H', 'E', '_', 'M', 'M', 0,
  /* 17535 */ 'L', 'H', 'E', '_', 'M', 'M', 0,
  /* 17542 */ 'S', 'H', 'E', '_', 'M', 'M', 0,
  /* 17549 */ 'L', 'L', 'E', '_', 'M', 'M', 0,
  /* 17556 */ 'L', 'W', 'L', 'E', '_', 'M', 'M', 0,
  /* 17564 */ 'S', 'W', 'L', 'E', '_', 'M', 'M', 0,
  /* 17572 */ 'B', 'N', 'E', '_', 'M', 'M', 0,
  /* 17579 */ 'T', 'N', 'E', '_', 'M', 'M', 0,
  /* 17586 */ 'L', 'W', 'R', 'E', '_', 'M', 'M', 0,
  /* 17594 */ 'S', 'W', 'R', 'E', '_', 'M', 'M', 0,
  /* 17602 */ 'P', 'A', 'U', 'S', 'E', '_', 'M', 'M', 0,
  /* 17611 */ 'L', 'W', 'E', '_', 'M', 'M', 0,
  /* 17618 */ 'S', 'W', 'E', '_', 'M', 'M', 0,
  /* 17625 */ 'L', 'B', 'u', 'E', '_', 'M', 'M', 0,
  /* 17633 */ 'L', 'H', 'u', 'E', '_', 'M', 'M', 0,
  /* 17641 */ 'B', 'C', '1', 'F', '_', 'M', 'M', 0,
  /* 17649 */ 'P', 'R', 'E', 'F', '_', 'M', 'M', 0,
  /* 17657 */ 'T', 'L', 'B', 'G', 'I', 'N', 'V', 'F', '_', 'M', 'M', 0,
  /* 17669 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', 'R', 'E', 'G', '_', 'M', 'M', 0,
  /* 17684 */ 'W', 'S', 'B', 'H', '_', 'M', 'M', 0,
  /* 17692 */ 'S', 'E', 'H', '_', 'M', 'M', 0,
  /* 17699 */ 'L', 'H', '_', 'M', 'M', 0,
  /* 17705 */ 'S', 'H', 'R', 'A', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17716 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'Q', 'B', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17732 */ 'P', 'R', 'E', 'C', 'R', 'Q', 'U', '_', 'S', '_', 'Q', 'B', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17751 */ 'C', 'M', 'P', '_', 'L', 'E', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17764 */ 'P', 'I', 'C', 'K', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17775 */ 'S', 'H', 'L', 'L', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17786 */ 'R', 'E', 'P', 'L', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17797 */ 'P', 'A', 'C', 'K', 'R', 'L', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17810 */ 'S', 'U', 'B', 'Q', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17821 */ 'A', 'D', 'D', 'Q', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17832 */ 'C', 'M', 'P', '_', 'E', 'Q', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17845 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17858 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17872 */ 'M', 'U', 'L', 'Q', '_', 'R', 'S', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17886 */ 'S', 'H', 'L', 'L', '_', 'S', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17899 */ 'S', 'U', 'B', 'Q', '_', 'S', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17912 */ 'A', 'D', 'D', 'Q', '_', 'S', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17925 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17938 */ 'S', 'H', 'L', 'L', 'V', '_', 'S', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17952 */ 'C', 'M', 'P', '_', 'L', 'T', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17965 */ 'S', 'H', 'R', 'A', 'V', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17977 */ 'S', 'H', 'L', 'L', 'V', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 17989 */ 'R', 'E', 'P', 'L', 'V', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 18001 */ 'D', 'P', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 18016 */ 'M', 'U', 'L', 'S', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 18033 */ 'D', 'P', 'S', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', '_', 'M', 'M', 0,
  /* 18048 */ 'S', 'H', '_', 'M', 'M', 0,
  /* 18054 */ 'E', 'X', 'T', 'R', '_', 'S', '_', 'H', '_', 'M', 'M', 0,
  /* 18066 */ 'E', 'X', 'T', 'R', 'V', '_', 'S', '_', 'H', '_', 'M', 'M', 0,
  /* 18079 */ 'S', 'Y', 'N', 'C', 'I', '_', 'M', 'M', 0,
  /* 18088 */ 'D', 'I', '_', 'M', 'M', 0,
  /* 18094 */ 'T', 'G', 'E', 'I', '_', 'M', 'M', 0,
  /* 18102 */ 'T', 'N', 'E', 'I', '_', 'M', 'M', 0,
  /* 18110 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'F', 'H', 'I', '_', 'M', 'M', 0,
  /* 18124 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'T', 'L', 'O', 'H', 'I', '_', 'M', 'M', 0,
  /* 18140 */ 'M', 'T', 'H', 'I', '_', 'M', 'M', 0,
  /* 18148 */ 'T', 'E', 'Q', 'I', '_', 'M', 'M', 0,
  /* 18156 */ 'T', 'L', 'T', 'I', '_', 'M', 'M', 0,
  /* 18164 */ 'T', 'L', 'B', 'W', 'I', '_', 'M', 'M', 0,
  /* 18173 */ 'T', 'L', 'B', 'G', 'W', 'I', '_', 'M', 'M', 0,
  /* 18183 */ 'M', 'O', 'V', 'F', '_', 'I', '_', 'M', 'M', 0,
  /* 18193 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'M', 'M', 0,
  /* 18203 */ 'M', 'O', 'V', 'T', '_', 'I', '_', 'M', 'M', 0,
  /* 18213 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'M', 'M', 0,
  /* 18223 */ 'J', '_', 'M', 'M', 0,
  /* 18228 */ 'B', 'R', 'E', 'A', 'K', '_', 'M', 'M', 0,
  /* 18237 */ 'J', 'A', 'L', '_', 'M', 'M', 0,
  /* 18244 */ 'B', 'G', 'E', 'Z', 'A', 'L', '_', 'M', 'M', 0,
  /* 18254 */ 'B', 'L', 'T', 'Z', 'A', 'L', '_', 'M', 'M', 0,
  /* 18264 */ 'M', 'U', 'L', 'E', 'U', '_', 'S', '_', 'P', 'H', '_', 'Q', 'B', 'L', '_', 'M', 'M', 0,
  /* 18282 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', '_', 'M', 'M', 0,
  /* 18299 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', '_', 'M', 'M', 0,
  /* 18317 */ 'D', 'P', 'A', 'U', '_', 'H', '_', 'Q', 'B', 'L', '_', 'M', 'M', 0,
  /* 18331 */ 'D', 'P', 'S', 'U', '_', 'H', '_', 'Q', 'B', 'L', '_', 'M', 'M', 0,
  /* 18345 */ 'M', 'A', 'Q', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 'L', '_', 'M', 'M', 0,
  /* 18361 */ 'P', 'R', 'E', 'C', 'E', 'Q', '_', 'W', '_', 'P', 'H', 'L', '_', 'M', 'M', 0,
  /* 18377 */ 'M', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'L', '_', 'M', 'M', 0,
  /* 18392 */ 'M', 'U', 'L', 'E', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'L', '_', 'M', 'M', 0,
  /* 18409 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', '_', 'M', 'M', 0,
  /* 18421 */ 'H', 'Y', 'P', 'C', 'A', 'L', 'L', '_', 'M', 'M', 0,
  /* 18432 */ 'S', 'Y', 'S', 'C', 'A', 'L', 'L', '_', 'M', 'M', 0,
  /* 18443 */ 'S', 'L', 'L', '_', 'M', 'M', 0,
  /* 18450 */ 'S', 'R', 'L', '_', 'M', 'M', 0,
  /* 18457 */ 'M', 'U', 'L', '_', 'M', 'M', 0,
  /* 18464 */ 'L', 'W', 'L', '_', 'M', 'M', 0,
  /* 18471 */ 'S', 'W', 'L', '_', 'M', 'M', 0,
  /* 18478 */ 'L', 'W', 'M', '_', 'M', 'M', 0,
  /* 18485 */ 'S', 'W', 'M', '_', 'M', 'M', 0,
  /* 18492 */ 'C', 'L', 'O', '_', 'M', 'M', 0,
  /* 18499 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'F', 'L', 'O', '_', 'M', 'M', 0,
  /* 18513 */ 'S', 'H', 'I', 'L', 'O', '_', 'M', 'M', 0,
  /* 18522 */ 'M', 'T', 'L', 'O', '_', 'M', 'M', 0,
  /* 18530 */ 'T', 'R', 'A', 'P', '_', 'M', 'M', 0,
  /* 18538 */ 'S', 'D', 'B', 'B', 'P', '_', 'M', 'M', 0,
  /* 18547 */ 'T', 'L', 'B', 'P', '_', 'M', 'M', 0,
  /* 18555 */ 'E', 'X', 'T', 'P', 'D', 'P', '_', 'M', 'M', 0,
  /* 18565 */ 'M', 'O', 'V', 'E', 'P', '_', 'M', 'M', 0,
  /* 18574 */ 'T', 'L', 'B', 'G', 'P', '_', 'M', 'M', 0,
  /* 18583 */ 'L', 'W', 'G', 'P', '_', 'M', 'M', 0,
  /* 18591 */ 'M', 'T', 'H', 'L', 'I', 'P', '_', 'M', 'M', 0,
  /* 18601 */ 'S', 'S', 'N', 'O', 'P', '_', 'M', 'M', 0,
  /* 18610 */ 'A', 'D', 'D', 'I', 'U', 'R', '1', 'S', 'P', '_', 'M', 'M', 0,
  /* 18623 */ 'R', 'D', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18632 */ 'W', 'R', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18641 */ 'L', 'W', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18650 */ 'S', 'W', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18659 */ 'M', 'S', 'U', 'B', '_', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18671 */ 'M', 'A', 'D', 'D', '_', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18683 */ 'M', 'F', 'H', 'I', '_', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18695 */ 'M', 'T', 'H', 'I', '_', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18707 */ 'M', 'F', 'L', 'O', '_', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18719 */ 'M', 'T', 'L', 'O', '_', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18731 */ 'M', 'U', 'L', 'T', '_', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18743 */ 'M', 'S', 'U', 'B', 'U', '_', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18756 */ 'M', 'A', 'D', 'D', 'U', '_', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18769 */ 'M', 'U', 'L', 'T', 'U', '_', 'D', 'S', 'P', '_', 'M', 'M', 0,
  /* 18782 */ 'A', 'D', 'D', 'I', 'U', 'S', 'P', '_', 'M', 'M', 0,
  /* 18793 */ 'L', 'W', 'S', 'P', '_', 'M', 'M', 0,
  /* 18801 */ 'S', 'W', 'S', 'P', '_', 'M', 'M', 0,
  /* 18809 */ 'E', 'X', 'T', 'P', '_', 'M', 'M', 0,
  /* 18817 */ 'L', 'W', 'P', '_', 'M', 'M', 0,
  /* 18824 */ 'S', 'W', 'P', '_', 'M', 'M', 0,
  /* 18831 */ 'B', 'E', 'Q', '_', 'M', 'M', 0,
  /* 18838 */ 'T', 'E', 'Q', '_', 'M', 'M', 0,
  /* 18845 */ 'T', 'L', 'B', 'R', '_', 'M', 'M', 0,
  /* 18853 */ 'M', 'U', 'L', 'E', 'U', '_', 'S', '_', 'P', 'H', '_', 'Q', 'B', 'R', '_', 'M', 'M', 0,
  /* 18871 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', '_', 'M', 'M', 0,
  /* 18888 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', '_', 'M', 'M', 0,
  /* 18906 */ 'D', 'P', 'A', 'U', '_', 'H', '_', 'Q', 'B', 'R', '_', 'M', 'M', 0,
  /* 18920 */ 'D', 'P', 'S', 'U', '_', 'H', '_', 'Q', 'B', 'R', '_', 'M', 'M', 0,
  /* 18934 */ 'B', 'A', 'L', '_', 'B', 'R', '_', 'M', 'M', 0,
  /* 18944 */ 'T', 'L', 'B', 'G', 'R', '_', 'M', 'M', 0,
  /* 18953 */ 'M', 'A', 'Q', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 'R', '_', 'M', 'M', 0,
  /* 18969 */ 'P', 'R', 'E', 'C', 'E', 'Q', '_', 'W', '_', 'P', 'H', 'R', '_', 'M', 'M', 0,
  /* 18985 */ 'M', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'R', '_', 'M', 'M', 0,
  /* 19000 */ 'M', 'U', 'L', 'E', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'R', '_', 'M', 'M', 0,
  /* 19017 */ 'J', 'R', '_', 'M', 'M', 0,
  /* 19023 */ 'J', 'A', 'L', 'R', '_', 'M', 'M', 0,
  /* 19031 */ 'N', 'O', 'R', '_', 'M', 'M', 0,
  /* 19038 */ 'X', 'O', 'R', '_', 'M', 'M', 0,
  /* 19045 */ 'R', 'O', 'T', 'R', '_', 'M', 'M', 0,
  /* 19053 */ 'T', 'L', 'B', 'W', 'R', '_', 'M', 'M', 0,
  /* 19062 */ 'T', 'L', 'B', 'G', 'W', 'R', '_', 'M', 'M', 0,
  /* 19072 */ 'R', 'D', 'H', 'W', 'R', '_', 'M', 'M', 0,
  /* 19081 */ 'L', 'W', 'R', '_', 'M', 'M', 0,
  /* 19088 */ 'S', 'W', 'R', '_', 'M', 'M', 0,
  /* 19095 */ 'J', 'A', 'L', 'S', '_', 'M', 'M', 0,
  /* 19103 */ 'B', 'G', 'E', 'Z', 'A', 'L', 'S', '_', 'M', 'M', 0,
  /* 19114 */ 'B', 'L', 'T', 'Z', 'A', 'L', 'S', '_', 'M', 'M', 0,
  /* 19125 */ 'I', 'N', 'S', '_', 'M', 'M', 0,
  /* 19132 */ 'J', 'A', 'L', 'R', 'S', '_', 'M', 'M', 0,
  /* 19141 */ 'L', 'W', 'X', 'S', '_', 'M', 'M', 0,
  /* 19149 */ 'C', 'V', 'T', '_', 'D', '3', '2', '_', 'S', '_', 'M', 'M', 0,
  /* 19162 */ 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'S', '_', 'M', 'M', 0,
  /* 19175 */ 'F', 'S', 'U', 'B', '_', 'S', '_', 'M', 'M', 0,
  /* 19185 */ 'N', 'M', 'S', 'U', 'B', '_', 'S', '_', 'M', 'M', 0,
  /* 19196 */ 'F', 'A', 'D', 'D', '_', 'S', '_', 'M', 'M', 0,
  /* 19206 */ 'N', 'M', 'A', 'D', 'D', '_', 'S', '_', 'M', 'M', 0,
  /* 19217 */ 'C', '_', 'N', 'G', 'E', '_', 'S', '_', 'M', 'M', 0,
  /* 19228 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'S', '_', 'M', 'M', 0,
  /* 19240 */ 'C', '_', 'O', 'L', 'E', '_', 'S', '_', 'M', 'M', 0,
  /* 19251 */ 'C', '_', 'U', 'L', 'E', '_', 'S', '_', 'M', 'M', 0,
  /* 19262 */ 'C', '_', 'L', 'E', '_', 'S', '_', 'M', 'M', 0,
  /* 19272 */ 'C', '_', 'S', 'F', '_', 'S', '_', 'M', 'M', 0,
  /* 19282 */ 'M', 'O', 'V', 'F', '_', 'S', '_', 'M', 'M', 0,
  /* 19292 */ 'C', '_', 'F', '_', 'S', '_', 'M', 'M', 0,
  /* 19301 */ 'F', 'N', 'E', 'G', '_', 'S', '_', 'M', 'M', 0,
  /* 19311 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'S', '_', 'M', 'M', 0,
  /* 19323 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'S', '_', 'M', 'M', 0,
  /* 19335 */ 'C', '_', 'N', 'G', 'L', '_', 'S', '_', 'M', 'M', 0,
  /* 19346 */ 'F', 'M', 'U', 'L', '_', 'S', '_', 'M', 'M', 0,
  /* 19356 */ 'C', 'V', 'T', '_', 'L', '_', 'S', '_', 'M', 'M', 0,
  /* 19367 */ 'C', '_', 'U', 'N', '_', 'S', '_', 'M', 'M', 0,
  /* 19377 */ 'R', 'E', 'C', 'I', 'P', '_', 'S', '_', 'M', 'M', 0,
  /* 19388 */ 'C', '_', 'S', 'E', 'Q', '_', 'S', '_', 'M', 'M', 0,
  /* 19399 */ 'C', '_', 'U', 'E', 'Q', '_', 'S', '_', 'M', 'M', 0,
  /* 19410 */ 'C', '_', 'E', 'Q', '_', 'S', '_', 'M', 'M', 0,
  /* 19420 */ 'F', 'A', 'B', 'S', '_', 'S', '_', 'M', 'M', 0,
  /* 19430 */ 'C', '_', 'N', 'G', 'T', '_', 'S', '_', 'M', 'M', 0,
  /* 19441 */ 'C', '_', 'O', 'L', 'T', '_', 'S', '_', 'M', 'M', 0,
  /* 19452 */ 'C', '_', 'U', 'L', 'T', '_', 'S', '_', 'M', 'M', 0,
  /* 19463 */ 'C', '_', 'L', 'T', '_', 'S', '_', 'M', 'M', 0,
  /* 19473 */ 'F', 'S', 'Q', 'R', 'T', '_', 'S', '_', 'M', 'M', 0,
  /* 19484 */ 'R', 'S', 'Q', 'R', 'T', '_', 'S', '_', 'M', 'M', 0,
  /* 19495 */ 'M', 'O', 'V', 'T', '_', 'S', '_', 'M', 'M', 0,
  /* 19505 */ 'F', 'D', 'I', 'V', '_', 'S', '_', 'M', 'M', 0,
  /* 19515 */ 'F', 'M', 'O', 'V', '_', 'S', '_', 'M', 'M', 0,
  /* 19525 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'S', '_', 'M', 'M', 0,
  /* 19538 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'S', '_', 'M', 'M', 0,
  /* 19551 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'S', '_', 'M', 'M', 0,
  /* 19563 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'S', '_', 'M', 'M', 0,
  /* 19576 */ 'C', 'V', 'T', '_', 'W', '_', 'S', '_', 'M', 'M', 0,
  /* 19587 */ 'B', 'C', '1', 'T', '_', 'M', 'M', 0,
  /* 19595 */ 'D', 'E', 'R', 'E', 'T', '_', 'M', 'M', 0,
  /* 19604 */ 'W', 'A', 'I', 'T', '_', 'M', 'M', 0,
  /* 19612 */ 'S', 'L', 'T', '_', 'M', 'M', 0,
  /* 19619 */ 'T', 'L', 'T', '_', 'M', 'M', 0,
  /* 19626 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'U', 'L', 'T', '_', 'M', 'M', 0,
  /* 19640 */ 'E', 'X', 'T', '_', 'M', 'M', 0,
  /* 19647 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'S', 'U', 'B', 'U', '_', 'M', 'M', 0,
  /* 19662 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'A', 'D', 'D', 'U', '_', 'M', 'M', 0,
  /* 19677 */ 'T', 'G', 'E', 'U', '_', 'M', 'M', 0,
  /* 19685 */ 'T', 'G', 'E', 'I', 'U', '_', 'M', 'M', 0,
  /* 19694 */ 'T', 'L', 'T', 'I', 'U', '_', 'M', 'M', 0,
  /* 19703 */ 'T', 'L', 'T', 'U', '_', 'M', 'M', 0,
  /* 19711 */ 'L', 'W', 'U', '_', 'M', 'M', 0,
  /* 19718 */ 'S', 'R', 'A', 'V', '_', 'M', 'M', 0,
  /* 19726 */ 'B', 'I', 'T', 'R', 'E', 'V', '_', 'M', 'M', 0,
  /* 19736 */ 'S', 'D', 'I', 'V', '_', 'M', 'M', 0,
  /* 19744 */ 'U', 'D', 'I', 'V', '_', 'M', 'M', 0,
  /* 19752 */ 'S', 'L', 'L', 'V', '_', 'M', 'M', 0,
  /* 19760 */ 'S', 'R', 'L', 'V', '_', 'M', 'M', 0,
  /* 19768 */ 'T', 'L', 'B', 'G', 'I', 'N', 'V', '_', 'M', 'M', 0,
  /* 19779 */ 'S', 'H', 'I', 'L', 'O', 'V', '_', 'M', 'M', 0,
  /* 19789 */ 'E', 'X', 'T', 'P', 'D', 'P', 'V', '_', 'M', 'M', 0,
  /* 19800 */ 'E', 'X', 'T', 'P', 'V', '_', 'M', 'M', 0,
  /* 19809 */ 'R', 'O', 'T', 'R', 'V', '_', 'M', 'M', 0,
  /* 19818 */ 'I', 'N', 'S', 'V', '_', 'M', 'M', 0,
  /* 19826 */ 'L', 'W', '_', 'M', 'M', 0,
  /* 19832 */ 'S', 'W', '_', 'M', 'M', 0,
  /* 19838 */ 'C', 'V', 'T', '_', 'D', '3', '2', '_', 'W', '_', 'M', 'M', 0,
  /* 19851 */ 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'W', '_', 'M', 'M', 0,
  /* 19864 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'M', 'M', 0,
  /* 19875 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'M', 'M', 0,
  /* 19886 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'P', 'H', '_', 'W', '_', 'M', 'M', 0,
  /* 19901 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'R', 'S', '_', 'P', 'H', '_', 'W', '_', 'M', 'M', 0,
  /* 19919 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'M', 'M', 0,
  /* 19929 */ 'D', 'P', 'A', 'Q', '_', 'S', 'A', '_', 'L', '_', 'W', '_', 'M', 'M', 0,
  /* 19944 */ 'D', 'P', 'S', 'Q', '_', 'S', 'A', '_', 'L', '_', 'W', '_', 'M', 'M', 0,
  /* 19959 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'M', 'M', 0,
  /* 19970 */ 'E', 'X', 'T', 'R', '_', 'W', '_', 'M', 'M', 0,
  /* 19980 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'W', '_', 'M', 'M', 0,
  /* 19992 */ 'E', 'X', 'T', 'R', '_', 'R', '_', 'W', '_', 'M', 'M', 0,
  /* 20004 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'W', '_', 'M', 'M', 0,
  /* 20017 */ 'E', 'X', 'T', 'R', 'V', '_', 'R', '_', 'W', '_', 'M', 'M', 0,
  /* 20030 */ 'E', 'X', 'T', 'R', '_', 'R', 'S', '_', 'W', '_', 'M', 'M', 0,
  /* 20043 */ 'E', 'X', 'T', 'R', 'V', '_', 'R', 'S', '_', 'W', '_', 'M', 'M', 0,
  /* 20057 */ 'S', 'H', 'L', 'L', '_', 'S', '_', 'W', '_', 'M', 'M', 0,
  /* 20069 */ 'S', 'U', 'B', 'Q', '_', 'S', '_', 'W', '_', 'M', 'M', 0,
  /* 20081 */ 'A', 'D', 'D', 'Q', '_', 'S', '_', 'W', '_', 'M', 'M', 0,
  /* 20093 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'W', '_', 'M', 'M', 0,
  /* 20105 */ 'C', 'V', 'T', '_', 'S', '_', 'W', '_', 'M', 'M', 0,
  /* 20116 */ 'S', 'H', 'L', 'L', 'V', '_', 'S', '_', 'W', '_', 'M', 'M', 0,
  /* 20129 */ 'E', 'X', 'T', 'R', 'V', '_', 'W', '_', 'M', 'M', 0,
  /* 20140 */ 'P', 'R', 'E', 'F', 'X', '_', 'M', 'M', 0,
  /* 20149 */ 'L', 'H', 'X', '_', 'M', 'M', 0,
  /* 20156 */ 'J', 'A', 'L', 'X', '_', 'M', 'M', 0,
  /* 20164 */ 'L', 'B', 'U', 'X', '_', 'M', 'M', 0,
  /* 20172 */ 'L', 'W', 'X', '_', 'M', 'M', 0,
  /* 20179 */ 'B', 'G', 'E', 'Z', '_', 'M', 'M', 0,
  /* 20187 */ 'B', 'L', 'E', 'Z', '_', 'M', 'M', 0,
  /* 20195 */ 'C', 'L', 'Z', '_', 'M', 'M', 0,
  /* 20202 */ 'B', 'G', 'T', 'Z', '_', 'M', 'M', 0,
  /* 20210 */ 'B', 'L', 'T', 'Z', '_', 'M', 'M', 0,
  /* 20218 */ 'P', 's', 'e', 'u', 'd', 'o', 'I', 'n', 'd', 'i', 'r', 'e', 'c', 't', 'B', 'r', 'a', 'n', 'c', 'h', '_', 'M', 'M', 0,
  /* 20242 */ 'A', 'D', 'D', 'i', '_', 'M', 'M', 0,
  /* 20250 */ 'A', 'N', 'D', 'i', '_', 'M', 'M', 0,
  /* 20258 */ 'X', 'O', 'R', 'i', '_', 'M', 'M', 0,
  /* 20266 */ 'S', 'L', 'T', 'i', '_', 'M', 'M', 0,
  /* 20274 */ 'L', 'U', 'i', '_', 'M', 'M', 0,
  /* 20281 */ 'L', 'B', 'u', '_', 'M', 'M', 0,
  /* 20288 */ 'S', 'U', 'B', 'u', '_', 'M', 'M', 0,
  /* 20296 */ 'A', 'D', 'D', 'u', '_', 'M', 'M', 0,
  /* 20304 */ 'L', 'H', 'u', '_', 'M', 'M', 0,
  /* 20311 */ 'S', 'L', 'T', 'u', '_', 'M', 'M', 0,
  /* 20319 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'U', 'L', 'T', 'u', '_', 'M', 'M', 0,
  /* 20334 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'i', 'u', '_', 'M', 'M', 0,
  /* 20347 */ 'S', 'L', 'T', 'i', 'u', '_', 'M', 'M', 0,
  /* 20356 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 20366 */ 'D', 'I', 'N', 'S', 'M', 0,
  /* 20372 */ 'D', 'E', 'X', 'T', 'M', 0,
  /* 20378 */ 'G', '_', 'F', 'M', 'I', 'N', 'I', 'M', 'U', 'M', 0,
  /* 20389 */ 'G', '_', 'F', 'M', 'A', 'X', 'I', 'M', 'U', 'M', 0,
  /* 20400 */ 'G', '_', 'F', 'M', 'I', 'N', 'N', 'U', 'M', 0,
  /* 20410 */ 'G', '_', 'F', 'M', 'A', 'X', 'N', 'U', 'M', 0,
  /* 20420 */ 'B', 'A', 'L', 'I', 'G', 'N', 0,
  /* 20427 */ 'D', 'A', 'L', 'I', 'G', 'N', 0,
  /* 20434 */ 'G', '_', 'F', 'C', 'O', 'P', 'Y', 'S', 'I', 'G', 'N', 0,
  /* 20446 */ 'G', '_', 'S', 'M', 'I', 'N', 0,
  /* 20453 */ 'G', '_', 'U', 'M', 'I', 'N', 0,
  /* 20460 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'U', 'M', 'I', 'N', 0,
  /* 20477 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'M', 'I', 'N', 0,
  /* 20493 */ 'G', '_', 'F', 'S', 'I', 'N', 0,
  /* 20500 */ 'D', 'M', 'F', 'C', '2', '_', 'O', 'C', 'T', 'E', 'O', 'N', 0,
  /* 20513 */ 'D', 'M', 'T', 'C', '2', '_', 'O', 'C', 'T', 'E', 'O', 'N', 0,
  /* 20526 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 20542 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 20559 */ 'G', '_', 'S', 'S', 'U', 'B', 'O', 0,
  /* 20567 */ 'G', '_', 'U', 'S', 'U', 'B', 'O', 0,
  /* 20575 */ 'G', '_', 'S', 'A', 'D', 'D', 'O', 0,
  /* 20583 */ 'G', '_', 'U', 'A', 'D', 'D', 'O', 0,
  /* 20591 */ 'F', 'E', 'X', 'P', '2', '_', 'D', '_', '1', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20608 */ 'F', 'E', 'X', 'P', '2', '_', 'W', '_', '1', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20625 */ 'B', 'P', 'O', 'S', 'G', 'E', '3', '2', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20641 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'B', '_', 'V', 'I', 'D', 'X', '6', '4', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20664 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'F', 'D', '_', 'V', 'I', 'D', 'X', '6', '4', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20688 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'D', '_', 'V', 'I', 'D', 'X', '6', '4', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20711 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'H', '_', 'V', 'I', 'D', 'X', '6', '4', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20734 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'F', 'W', '_', 'V', 'I', 'D', 'X', '6', '4', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20758 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'W', '_', 'V', 'I', 'D', 'X', '6', '4', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20781 */ 'S', 'N', 'Z', '_', 'B', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20794 */ 'S', 'Z', '_', 'B', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20806 */ 'B', 'S', 'E', 'L', '_', 'F', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20821 */ 'F', 'I', 'L', 'L', '_', 'F', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20836 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'F', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20853 */ 'C', 'O', 'P', 'Y', '_', 'F', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20868 */ 'M', 'S', 'A', '_', 'F', 'P', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20891 */ 'M', 'S', 'A', '_', 'F', 'P', '_', 'R', 'O', 'U', 'N', 'D', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20913 */ 'B', 'S', 'E', 'L', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20927 */ 'A', 'N', 'D', '_', 'V', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20942 */ 'N', 'O', 'R', '_', 'V', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20957 */ 'X', 'O', 'R', '_', 'V', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20972 */ 'S', 'N', 'Z', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20985 */ 'S', 'Z', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 20997 */ 'B', 'S', 'E', 'L', '_', 'H', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21011 */ 'A', 'N', 'D', '_', 'V', '_', 'H', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21026 */ 'N', 'O', 'R', '_', 'V', '_', 'H', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21041 */ 'X', 'O', 'R', '_', 'V', '_', 'H', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21056 */ 'S', 'N', 'Z', '_', 'H', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21069 */ 'S', 'Z', '_', 'H', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21081 */ 'S', 'N', 'Z', '_', 'V', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21094 */ 'S', 'Z', '_', 'V', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21106 */ 'B', 'S', 'E', 'L', '_', 'F', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21121 */ 'F', 'I', 'L', 'L', '_', 'F', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21136 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'F', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21153 */ 'C', 'O', 'P', 'Y', '_', 'F', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21168 */ 'M', 'S', 'A', '_', 'F', 'P', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21191 */ 'M', 'S', 'A', '_', 'F', 'P', '_', 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21213 */ 'B', 'S', 'E', 'L', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21227 */ 'A', 'N', 'D', '_', 'V', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21242 */ 'N', 'O', 'R', '_', 'V', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21257 */ 'X', 'O', 'R', '_', 'V', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21272 */ 'S', 'N', 'Z', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21285 */ 'S', 'Z', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21297 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'B', '_', 'V', 'I', 'D', 'X', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21318 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'F', 'D', '_', 'V', 'I', 'D', 'X', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21340 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'D', '_', 'V', 'I', 'D', 'X', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21361 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'H', '_', 'V', 'I', 'D', 'X', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21382 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'F', 'W', '_', 'V', 'I', 'D', 'X', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21404 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'W', '_', 'V', 'I', 'D', 'X', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 21425 */ 'D', 'C', 'L', 'O', 0,
  /* 21430 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'F', 'L', 'O', 0,
  /* 21441 */ 'S', 'H', 'I', 'L', 'O', 0,
  /* 21447 */ 'M', 'F', 'T', 'L', 'O', 0,
  /* 21453 */ 'M', 'T', 'L', 'O', 0,
  /* 21458 */ 'M', 'T', 'T', 'L', 'O', 0,
  /* 21464 */ 'G', '_', 'S', 'M', 'U', 'L', 'O', 0,
  /* 21472 */ 'G', '_', 'U', 'M', 'U', 'L', 'O', 0,
  /* 21480 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 21489 */ 'T', 'R', 'A', 'P', 0,
  /* 21494 */ 'G', '_', 'B', 'S', 'W', 'A', 'P', 0,
  /* 21502 */ 'D', 'B', 'I', 'T', 'S', 'W', 'A', 'P', 0,
  /* 21511 */ 'S', 'D', 'B', 'B', 'P', 0,
  /* 21517 */ 'T', 'L', 'B', 'P', 0,
  /* 21522 */ 'E', 'X', 'T', 'P', 'D', 'P', 0,
  /* 21529 */ 'G', '_', 'S', 'I', 'T', 'O', 'F', 'P', 0,
  /* 21538 */ 'G', '_', 'U', 'I', 'T', 'O', 'F', 'P', 0,
  /* 21547 */ 'T', 'L', 'B', 'G', 'P', 0,
  /* 21553 */ 'M', 'T', 'H', 'L', 'I', 'P', 0,
  /* 21560 */ 'G', '_', 'F', 'C', 'M', 'P', 0,
  /* 21567 */ 'G', '_', 'I', 'C', 'M', 'P', 0,
  /* 21574 */ 'S', 'S', 'N', 'O', 'P', 0,
  /* 21580 */ 'D', 'P', 'O', 'P', 0,
  /* 21585 */ 'G', '_', 'C', 'T', 'P', 'O', 'P', 0,
  /* 21593 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'O', 'P', 0,
  /* 21606 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'O', 'P', 0,
  /* 21618 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', 'C', '6', '4', 'D', 'S', 'P', 0,
  /* 21632 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', '6', '4', 'D', 'S', 'P', 0,
  /* 21647 */ 'R', 'D', 'D', 'S', 'P', 0,
  /* 21653 */ 'W', 'R', 'D', 'S', 'P', 0,
  /* 21659 */ 'M', 'F', 'T', 'D', 'S', 'P', 0,
  /* 21666 */ 'M', 'T', 'T', 'D', 'S', 'P', 0,
  /* 21673 */ 'L', 'W', 'D', 'S', 'P', 0,
  /* 21679 */ 'S', 'W', 'D', 'S', 'P', 0,
  /* 21685 */ 'M', 'S', 'U', 'B', '_', 'D', 'S', 'P', 0,
  /* 21694 */ 'M', 'A', 'D', 'D', '_', 'D', 'S', 'P', 0,
  /* 21703 */ 'L', 'O', 'A', 'D', '_', 'C', 'C', 'O', 'N', 'D', '_', 'D', 'S', 'P', 0,
  /* 21718 */ 'S', 'T', 'O', 'R', 'E', '_', 'C', 'C', 'O', 'N', 'D', '_', 'D', 'S', 'P', 0,
  /* 21734 */ 'M', 'F', 'H', 'I', '_', 'D', 'S', 'P', 0,
  /* 21743 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'T', 'L', 'O', 'H', 'I', '_', 'D', 'S', 'P', 0,
  /* 21760 */ 'M', 'T', 'H', 'I', '_', 'D', 'S', 'P', 0,
  /* 21769 */ 'M', 'F', 'L', 'O', '_', 'D', 'S', 'P', 0,
  /* 21778 */ 'M', 'T', 'L', 'O', '_', 'D', 'S', 'P', 0,
  /* 21787 */ 'M', 'U', 'L', 'T', '_', 'D', 'S', 'P', 0,
  /* 21796 */ 'M', 'S', 'U', 'B', 'U', '_', 'D', 'S', 'P', 0,
  /* 21806 */ 'M', 'A', 'D', 'D', 'U', '_', 'D', 'S', 'P', 0,
  /* 21816 */ 'M', 'U', 'L', 'T', 'U', '_', 'D', 'S', 'P', 0,
  /* 21826 */ 'J', 'R', 'A', 'D', 'D', 'I', 'U', 'S', 'P', 0,
  /* 21836 */ 'E', 'X', 'T', 'P', 0,
  /* 21841 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 21856 */ 'D', 'V', 'P', 0,
  /* 21860 */ 'E', 'V', 'P', 0,
  /* 21864 */ 'G', '_', 'F', 'E', 'X', 'P', 0,
  /* 21871 */ 'B', 'E', 'Q', 0,
  /* 21875 */ 'S', 'E', 'Q', 0,
  /* 21879 */ 'T', 'E', 'Q', 0,
  /* 21883 */ 'T', 'L', 'B', 'R', 0,
  /* 21888 */ 'M', 'U', 'L', 'E', 'U', '_', 'S', '_', 'P', 'H', '_', 'Q', 'B', 'R', 0,
  /* 21903 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 0,
  /* 21917 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 0,
  /* 21932 */ 'D', 'P', 'A', 'U', '_', 'H', '_', 'Q', 'B', 'R', 0,
  /* 21943 */ 'D', 'P', 'S', 'U', '_', 'H', '_', 'Q', 'B', 'R', 0,
  /* 21954 */ 'G', '_', 'B', 'R', 0,
  /* 21959 */ 'B', 'A', 'L', '_', 'B', 'R', 0,
  /* 21966 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', '_', 'B', 'R', 0,
  /* 21979 */ 'G', '_', 'B', 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', 'R', 0,
  /* 21992 */ 'L', 'D', 'R', 0,
  /* 21996 */ 'S', 'D', 'R', 0,
  /* 22000 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'T', 'E', 'R', 0,
  /* 22025 */ 'G', '_', 'R', 'E', 'A', 'D', 'C', 'Y', 'C', 'L', 'E', 'C', 'O', 'U', 'N', 'T', 'E', 'R', 0,
  /* 22044 */ 'T', 'L', 'B', 'G', 'R', 0,
  /* 22050 */ 'L', 'o', 'a', 'd', 'I', 'm', 'm', 'D', 'o', 'u', 'b', 'l', 'e', 'F', 'G', 'R', 0,
  /* 22067 */ 'L', 'o', 'a', 'd', 'I', 'm', 'm', 'S', 'i', 'n', 'g', 'l', 'e', 'F', 'G', 'R', 0,
  /* 22084 */ 'M', 'A', 'Q', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 22097 */ 'P', 'R', 'E', 'C', 'E', 'Q', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 22110 */ 'M', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 22122 */ 'M', 'U', 'L', 'E', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 22136 */ 'G', '_', 'A', 'S', 'H', 'R', 0,
  /* 22143 */ 'G', '_', 'L', 'S', 'H', 'R', 0,
  /* 22150 */ 'J', 'R', 0,
  /* 22153 */ 'J', 'A', 'L', 'R', 0,
  /* 22158 */ 'N', 'O', 'R', 0,
  /* 22162 */ 'G', '_', 'F', 'F', 'L', 'O', 'O', 'R', 0,
  /* 22171 */ 'D', 'R', 'O', 'R', 0,
  /* 22176 */ 'G', '_', 'B', 'U', 'I', 'L', 'D', '_', 'V', 'E', 'C', 'T', 'O', 'R', 0,
  /* 22191 */ 'G', '_', 'S', 'H', 'U', 'F', 'F', 'L', 'E', '_', 'V', 'E', 'C', 'T', 'O', 'R', 0,
  /* 22208 */ 'G', '_', 'X', 'O', 'R', 0,
  /* 22214 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'X', 'O', 'R', 0,
  /* 22230 */ 'G', '_', 'O', 'R', 0,
  /* 22235 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'O', 'R', 0,
  /* 22250 */ 'M', 'F', 'T', 'G', 'P', 'R', 0,
  /* 22257 */ 'M', 'T', 'T', 'G', 'P', 'R', 0,
  /* 22264 */ 'L', 'o', 'a', 'd', 'I', 'm', 'm', 'D', 'o', 'u', 'b', 'l', 'e', 'G', 'P', 'R', 0,
  /* 22281 */ 'L', 'o', 'a', 'd', 'I', 'm', 'm', 'S', 'i', 'n', 'g', 'l', 'e', 'G', 'P', 'R', 0,
  /* 22298 */ 'M', 'F', 'T', 'R', 0,
  /* 22303 */ 'D', 'R', 'O', 'T', 'R', 0,
  /* 22309 */ 'G', '_', 'I', 'N', 'T', 'T', 'O', 'P', 'T', 'R', 0,
  /* 22320 */ 'M', 'T', 'T', 'R', 0,
  /* 22325 */ 'T', 'L', 'B', 'W', 'R', 0,
  /* 22331 */ 'T', 'L', 'B', 'G', 'W', 'R', 0,
  /* 22338 */ 'R', 'D', 'H', 'W', 'R', 0,
  /* 22344 */ 'L', 'W', 'R', 0,
  /* 22348 */ 'S', 'W', 'R', 0,
  /* 22352 */ 'G', '_', 'F', 'A', 'B', 'S', 0,
  /* 22359 */ 'G', '_', 'U', 'N', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 22376 */ 'G', '_', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 22391 */ 'C', 'I', 'N', 'S', 0,
  /* 22396 */ 'D', 'I', 'N', 'S', 0,
  /* 22401 */ 'G', '_', 'F', 'C', 'O', 'S', 0,
  /* 22408 */ 'G', '_', 'C', 'O', 'N', 'C', 'A', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', 'S', 0,
  /* 22425 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 22442 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'W', 'I', 'T', 'H', '_', 'S', 'U', 'C', 'C', 'E', 'S', 'S', 0,
  /* 22472 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'W', '_', 'S', 'I', 'D', 'E', '_', 'E', 'F', 'F', 'E', 'C', 'T', 'S', 0,
  /* 22499 */ 'E', 'X', 'T', 'S', 0,
  /* 22504 */ 'C', 'V', 'T', '_', 'D', '3', '2', '_', 'S', 0,
  /* 22514 */ 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'S', 0,
  /* 22524 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'S', 0,
  /* 22535 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'S', 0,
  /* 22546 */ 'M', 'I', 'N', 'A', '_', 'S', 0,
  /* 22553 */ 'M', 'A', 'X', 'A', '_', 'S', 0,
  /* 22560 */ 'F', 'S', 'U', 'B', '_', 'S', 0,
  /* 22567 */ 'N', 'M', 'S', 'U', 'B', '_', 'S', 0,
  /* 22575 */ 'F', 'A', 'D', 'D', '_', 'S', 0,
  /* 22582 */ 'N', 'M', 'A', 'D', 'D', '_', 'S', 0,
  /* 22590 */ 'C', '_', 'N', 'G', 'E', '_', 'S', 0,
  /* 22598 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'S', 0,
  /* 22607 */ 'C', '_', 'O', 'L', 'E', '_', 'S', 0,
  /* 22615 */ 'C', 'M', 'P', '_', 'S', 'L', 'E', '_', 'S', 0,
  /* 22625 */ 'C', 'M', 'P', '_', 'S', 'U', 'L', 'E', '_', 'S', 0,
  /* 22636 */ 'C', '_', 'U', 'L', 'E', '_', 'S', 0,
  /* 22644 */ 'C', 'M', 'P', '_', 'U', 'L', 'E', '_', 'S', 0,
  /* 22654 */ 'C', '_', 'L', 'E', '_', 'S', 0,
  /* 22661 */ 'C', 'M', 'P', '_', 'L', 'E', '_', 'S', 0,
  /* 22670 */ 'C', 'M', 'P', '_', 'S', 'A', 'F', '_', 'S', 0,
  /* 22680 */ 'M', 'S', 'U', 'B', 'F', '_', 'S', 0,
  /* 22688 */ 'M', 'A', 'D', 'D', 'F', '_', 'S', 0,
  /* 22696 */ 'C', '_', 'S', 'F', '_', 'S', 0,
  /* 22703 */ 'M', 'O', 'V', 'F', '_', 'S', 0,
  /* 22710 */ 'C', '_', 'F', '_', 'S', 0,
  /* 22716 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', 'F', 'P', '_', 'F', '_', 'S', 0,
  /* 22735 */ 'C', 'M', 'P', '_', 'F', '_', 'S', 0,
  /* 22743 */ 'F', 'N', 'E', 'G', '_', 'S', 0,
  /* 22750 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'S', 0,
  /* 22759 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'S', 0,
  /* 22768 */ 'S', 'E', 'L', '_', 'S', 0,
  /* 22774 */ 'C', '_', 'N', 'G', 'L', '_', 'S', 0,
  /* 22782 */ 'F', 'M', 'U', 'L', '_', 'S', 0,
  /* 22789 */ 'T', 'R', 'U', 'N', 'C', '_', 'L', '_', 'S', 0,
  /* 22799 */ 'R', 'O', 'U', 'N', 'D', '_', 'L', '_', 'S', 0,
  /* 22809 */ 'C', 'E', 'I', 'L', '_', 'L', '_', 'S', 0,
  /* 22818 */ 'F', 'L', 'O', 'O', 'R', '_', 'L', '_', 'S', 0,
  /* 22828 */ 'C', 'V', 'T', '_', 'L', '_', 'S', 0,
  /* 22836 */ 'M', 'I', 'N', '_', 'S', 0,
  /* 22842 */ 'C', 'M', 'P', '_', 'S', 'U', 'N', '_', 'S', 0,
  /* 22852 */ 'C', '_', 'U', 'N', '_', 'S', 0,
  /* 22859 */ 'C', 'M', 'P', '_', 'U', 'N', '_', 'S', 0,
  /* 22868 */ 'R', 'E', 'C', 'I', 'P', '_', 'S', 0,
  /* 22876 */ 'C', '_', 'S', 'E', 'Q', '_', 'S', 0,
  /* 22884 */ 'C', 'M', 'P', '_', 'S', 'E', 'Q', '_', 'S', 0,
  /* 22894 */ 'C', 'M', 'P', '_', 'S', 'U', 'E', 'Q', '_', 'S', 0,
  /* 22905 */ 'C', '_', 'U', 'E', 'Q', '_', 'S', 0,
  /* 22913 */ 'C', 'M', 'P', '_', 'U', 'E', 'Q', '_', 'S', 0,
  /* 22923 */ 'C', '_', 'E', 'Q', '_', 'S', 0,
  /* 22930 */ 'C', 'M', 'P', '_', 'E', 'Q', '_', 'S', 0,
  /* 22939 */ 'F', 'A', 'B', 'S', '_', 'S', 0,
  /* 22946 */ 'C', 'L', 'A', 'S', 'S', '_', 'S', 0,
  /* 22954 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'S', 0,
  /* 22969 */ 'C', '_', 'N', 'G', 'T', '_', 'S', 0,
  /* 22977 */ 'C', '_', 'O', 'L', 'T', '_', 'S', 0,
  /* 22985 */ 'C', 'M', 'P', '_', 'S', 'L', 'T', '_', 'S', 0,
  /* 22995 */ 'C', 'M', 'P', '_', 'S', 'U', 'L', 'T', '_', 'S', 0,
  /* 23006 */ 'C', '_', 'U', 'L', 'T', '_', 'S', 0,
  /* 23014 */ 'C', 'M', 'P', '_', 'U', 'L', 'T', '_', 'S', 0,
  /* 23024 */ 'C', '_', 'L', 'T', '_', 'S', 0,
  /* 23031 */ 'C', 'M', 'P', '_', 'L', 'T', '_', 'S', 0,
  /* 23040 */ 'R', 'I', 'N', 'T', '_', 'S', 0,
  /* 23047 */ 'F', 'S', 'Q', 'R', 'T', '_', 'S', 0,
  /* 23055 */ 'R', 'S', 'Q', 'R', 'T', '_', 'S', 0,
  /* 23063 */ 'M', 'O', 'V', 'T', '_', 'S', 0,
  /* 23070 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'E', 'L', 'E', 'C', 'T', 'F', 'P', '_', 'T', '_', 'S', 0,
  /* 23089 */ 'F', 'D', 'I', 'V', '_', 'S', 0,
  /* 23096 */ 'F', 'M', 'O', 'V', '_', 'S', 0,
  /* 23103 */ 'P', 's', 'e', 'u', 'd', 'o', 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'S', 0,
  /* 23119 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'S', 0,
  /* 23129 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'S', 0,
  /* 23138 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'S', 0,
  /* 23148 */ 'C', 'V', 'T', '_', 'W', '_', 'S', 0,
  /* 23156 */ 'M', 'A', 'X', '_', 'S', 0,
  /* 23162 */ 'S', 'E', 'L', 'N', 'E', 'Z', '_', 'S', 0,
  /* 23171 */ 'S', 'E', 'L', 'E', 'Q', 'Z', '_', 'S', 0,
  /* 23180 */ 'B', 'C', '1', 'T', 0,
  /* 23185 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 23195 */ 'G', '_', 'S', 'E', 'L', 'E', 'C', 'T', 0,
  /* 23204 */ 'G', '_', 'B', 'R', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', 0,
  /* 23217 */ 'D', 'E', 'R', 'E', 'T', 0,
  /* 23223 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'R', 'E', 'T', 0,
  /* 23237 */ 'B', 'G', 'T', 0,
  /* 23241 */ 'W', 'A', 'I', 'T', 0,
  /* 23246 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'X', 'I', 'T', 0,
  /* 23270 */ 'G', '_', 'B', 'R', 'J', 'T', 0,
  /* 23277 */ 'B', 'L', 'T', 0,
  /* 23281 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 23302 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 23322 */ 'S', 'L', 'T', 0,
  /* 23326 */ 'T', 'L', 'T', 0,
  /* 23330 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'M', 'U', 'L', 'T', 0,
  /* 23342 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'U', 'L', 'T', 0,
  /* 23353 */ 'D', 'M', 'T', 0,
  /* 23357 */ 'E', 'M', 'T', 0,
  /* 23361 */ 'G', '_', 'F', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 23373 */ 'G', '_', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 23384 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 23395 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 23406 */ 'G', '_', 'P', 'T', 'R', 'T', 'O', 'I', 'N', 'T', 0,
  /* 23417 */ 'G', '_', 'F', 'R', 'I', 'N', 'T', 0,
  /* 23425 */ 'G', '_', 'F', 'N', 'E', 'A', 'R', 'B', 'Y', 'I', 'N', 'T', 0,
  /* 23438 */ 'G', '_', 'V', 'A', 'S', 'T', 'A', 'R', 'T', 0,
  /* 23448 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 23463 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
  /* 23472 */ 'G', '_', 'F', 'S', 'Q', 'R', 'T', 0,
  /* 23480 */ 'G', '_', 'B', 'I', 'T', 'C', 'A', 'S', 'T', 0,
  /* 23490 */ 'G', '_', 'A', 'D', 'D', 'R', 'S', 'P', 'A', 'C', 'E', '_', 'C', 'A', 'S', 'T', 0,
  /* 23507 */ 'G', 'I', 'N', 'V', 'T', 0,
  /* 23513 */ 'D', 'E', 'X', 'T', 0,
  /* 23518 */ 'G', '_', 'F', 'P', 'E', 'X', 'T', 0,
  /* 23526 */ 'G', '_', 'S', 'E', 'X', 'T', 0,
  /* 23533 */ 'G', '_', 'A', 'N', 'Y', 'E', 'X', 'T', 0,
  /* 23542 */ 'G', '_', 'Z', 'E', 'X', 'T', 0,
  /* 23549 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'S', 'U', 'B', 'U', 0,
  /* 23561 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'A', 'D', 'D', 'U', 0,
  /* 23573 */ 'D', 'M', 'O', 'D', 'U', 0,
  /* 23579 */ 'B', 'G', 'E', 'U', 0,
  /* 23584 */ 'S', 'G', 'E', 'U', 0,
  /* 23589 */ 'T', 'G', 'E', 'U', 0,
  /* 23594 */ 'B', 'L', 'E', 'U', 0,
  /* 23599 */ 'D', 'M', 'U', 'H', 'U', 0,
  /* 23605 */ 'T', 'G', 'E', 'I', 'U', 0,
  /* 23611 */ 'T', 'T', 'L', 'T', 'I', 'U', 0,
  /* 23618 */ 'V', '3', 'M', 'U', 'L', 'U', 0,
  /* 23625 */ 'D', 'M', 'U', 'L', 'U', 0,
  /* 23631 */ 'V', 'M', 'U', 'L', 'U', 0,
  /* 23637 */ 'D', 'I', 'N', 'S', 'U', 0,
  /* 23643 */ 'B', 'G', 'T', 'U', 0,
  /* 23648 */ 'B', 'L', 'T', 'U', 0,
  /* 23653 */ 'T', 'L', 'T', 'U', 0,
  /* 23658 */ 'D', 'E', 'X', 'T', 'U', 0,
  /* 23664 */ 'D', 'D', 'I', 'V', 'U', 0,
  /* 23670 */ 'D', 'S', 'R', 'A', 'V', 0,
  /* 23676 */ 'B', 'I', 'T', 'R', 'E', 'V', 0,
  /* 23683 */ 'D', 'D', 'I', 'V', 0,
  /* 23688 */ 'G', '_', 'F', 'D', 'I', 'V', 0,
  /* 23695 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'S', 'D', 'I', 'V', 0,
  /* 23707 */ 'G', '_', 'S', 'D', 'I', 'V', 0,
  /* 23714 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'D', 'I', 'V', 0,
  /* 23725 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'U', 'D', 'I', 'V', 0,
  /* 23737 */ 'G', '_', 'U', 'D', 'I', 'V', 0,
  /* 23744 */ 'P', 's', 'e', 'u', 'd', 'o', 'U', 'D', 'I', 'V', 0,
  /* 23755 */ 'D', 'S', 'L', 'L', 'V', 0,
  /* 23761 */ 'D', 'S', 'R', 'L', 'V', 0,
  /* 23767 */ 'T', 'L', 'B', 'I', 'N', 'V', 0,
  /* 23774 */ 'T', 'L', 'B', 'G', 'I', 'N', 'V', 0,
  /* 23782 */ 'S', 'H', 'I', 'L', 'O', 'V', 0,
  /* 23789 */ 'E', 'X', 'T', 'P', 'D', 'P', 'V', 0,
  /* 23797 */ 'E', 'X', 'T', 'P', 'V', 0,
  /* 23803 */ 'D', 'R', 'O', 'T', 'R', 'V', 0,
  /* 23810 */ 'I', 'N', 'S', 'V', 0,
  /* 23815 */ 'A', 'N', 'D', '_', 'V', 0,
  /* 23821 */ 'M', 'O', 'V', 'E', '_', 'V', 0,
  /* 23828 */ 'B', 'S', 'E', 'L', '_', 'V', 0,
  /* 23835 */ 'N', 'O', 'R', '_', 'V', 0,
  /* 23841 */ 'X', 'O', 'R', '_', 'V', 0,
  /* 23847 */ 'B', 'Z', '_', 'V', 0,
  /* 23852 */ 'B', 'M', 'Z', '_', 'V', 0,
  /* 23858 */ 'B', 'N', 'Z', '_', 'V', 0,
  /* 23864 */ 'B', 'M', 'N', 'Z', '_', 'V', 0,
  /* 23871 */ 'C', 'R', 'C', '3', '2', 'W', 0,
  /* 23878 */ 'C', 'R', 'C', '3', '2', 'C', 'W', 0,
  /* 23886 */ 'L', 'W', 0,
  /* 23889 */ 'G', '_', 'F', 'P', 'O', 'W', 0,
  /* 23896 */ 'S', 'W', 0,
  /* 23899 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'D', '3', '2', '_', 'W', 0,
  /* 23915 */ 'F', 'L', 'O', 'G', '2', '_', 'W', 0,
  /* 23923 */ 'F', 'E', 'X', 'P', '2', '_', 'W', 0,
  /* 23931 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'W', 0,
  /* 23947 */ 'S', 'R', 'A', '_', 'W', 0,
  /* 23953 */ 'A', 'D', 'D', '_', 'A', '_', 'W', 0,
  /* 23961 */ 'F', 'M', 'I', 'N', '_', 'A', '_', 'W', 0,
  /* 23970 */ 'A', 'D', 'D', 'S', '_', 'A', '_', 'W', 0,
  /* 23979 */ 'F', 'M', 'A', 'X', '_', 'A', '_', 'W', 0,
  /* 23988 */ 'F', 'S', 'U', 'B', '_', 'W', 0,
  /* 23995 */ 'F', 'M', 'S', 'U', 'B', '_', 'W', 0,
  /* 24003 */ 'N', 'L', 'O', 'C', '_', 'W', 0,
  /* 24010 */ 'N', 'L', 'Z', 'C', '_', 'W', 0,
  /* 24017 */ 'F', 'A', 'D', 'D', '_', 'W', 0,
  /* 24024 */ 'F', 'M', 'A', 'D', 'D', '_', 'W', 0,
  /* 24032 */ 'S', 'L', 'D', '_', 'W', 0,
  /* 24038 */ 'P', 'C', 'K', 'O', 'D', '_', 'W', 0,
  /* 24046 */ 'I', 'L', 'V', 'O', 'D', '_', 'W', 0,
  /* 24054 */ 'F', 'C', 'L', 'E', '_', 'W', 0,
  /* 24061 */ 'F', 'S', 'L', 'E', '_', 'W', 0,
  /* 24068 */ 'F', 'C', 'U', 'L', 'E', '_', 'W', 0,
  /* 24076 */ 'F', 'S', 'U', 'L', 'E', '_', 'W', 0,
  /* 24084 */ 'F', 'C', 'N', 'E', '_', 'W', 0,
  /* 24091 */ 'F', 'S', 'N', 'E', '_', 'W', 0,
  /* 24098 */ 'F', 'C', 'U', 'N', 'E', '_', 'W', 0,
  /* 24106 */ 'F', 'S', 'U', 'N', 'E', '_', 'W', 0,
  /* 24114 */ 'I', 'N', 'S', 'V', 'E', '_', 'W', 0,
  /* 24122 */ 'F', 'C', 'A', 'F', '_', 'W', 0,
  /* 24129 */ 'F', 'S', 'A', 'F', '_', 'W', 0,
  /* 24136 */ 'V', 'S', 'H', 'F', '_', 'W', 0,
  /* 24143 */ 'B', 'N', 'E', 'G', '_', 'W', 0,
  /* 24150 */ 'P', 'R', 'E', 'C', 'R', '_', 'S', 'R', 'A', '_', 'P', 'H', '_', 'W', 0,
  /* 24165 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'P', 'H', '_', 'W', 0,
  /* 24177 */ 'P', 'R', 'E', 'C', 'R', '_', 'S', 'R', 'A', '_', 'R', '_', 'P', 'H', '_', 'W', 0,
  /* 24194 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'R', 'S', '_', 'P', 'H', '_', 'W', 0,
  /* 24209 */ 'S', 'U', 'B', 'Q', 'H', '_', 'W', 0,
  /* 24217 */ 'A', 'D', 'D', 'Q', 'H', '_', 'W', 0,
  /* 24225 */ 'S', 'R', 'A', 'I', '_', 'W', 0,
  /* 24232 */ 'S', 'L', 'D', 'I', '_', 'W', 0,
  /* 24239 */ 'B', 'N', 'E', 'G', 'I', '_', 'W', 0,
  /* 24247 */ 'S', 'L', 'L', 'I', '_', 'W', 0,
  /* 24254 */ 'S', 'R', 'L', 'I', '_', 'W', 0,
  /* 24261 */ 'B', 'I', 'N', 'S', 'L', 'I', '_', 'W', 0,
  /* 24270 */ 'C', 'E', 'Q', 'I', '_', 'W', 0,
  /* 24277 */ 'S', 'R', 'A', 'R', 'I', '_', 'W', 0,
  /* 24285 */ 'B', 'C', 'L', 'R', 'I', '_', 'W', 0,
  /* 24293 */ 'S', 'R', 'L', 'R', 'I', '_', 'W', 0,
  /* 24301 */ 'B', 'I', 'N', 'S', 'R', 'I', '_', 'W', 0,
  /* 24310 */ 'S', 'P', 'L', 'A', 'T', 'I', '_', 'W', 0,
  /* 24319 */ 'B', 'S', 'E', 'T', 'I', '_', 'W', 0,
  /* 24327 */ 'S', 'U', 'B', 'V', 'I', '_', 'W', 0,
  /* 24335 */ 'A', 'D', 'D', 'V', 'I', '_', 'W', 0,
  /* 24343 */ 'F', 'I', 'L', 'L', '_', 'W', 0,
  /* 24350 */ 'S', 'L', 'L', '_', 'W', 0,
  /* 24356 */ 'F', 'E', 'X', 'U', 'P', 'L', '_', 'W', 0,
  /* 24365 */ 'F', 'F', 'Q', 'L', '_', 'W', 0,
  /* 24372 */ 'S', 'R', 'L', '_', 'W', 0,
  /* 24378 */ 'B', 'I', 'N', 'S', 'L', '_', 'W', 0,
  /* 24386 */ 'F', 'M', 'U', 'L', '_', 'W', 0,
  /* 24393 */ 'I', 'L', 'V', 'L', '_', 'W', 0,
  /* 24400 */ 'D', 'P', 'A', 'Q', '_', 'S', 'A', '_', 'L', '_', 'W', 0,
  /* 24412 */ 'D', 'P', 'S', 'Q', '_', 'S', 'A', '_', 'L', '_', 'W', 0,
  /* 24424 */ 'F', 'M', 'I', 'N', '_', 'W', 0,
  /* 24431 */ 'F', 'C', 'U', 'N', '_', 'W', 0,
  /* 24438 */ 'F', 'S', 'U', 'N', '_', 'W', 0,
  /* 24445 */ 'F', 'E', 'X', 'D', 'O', '_', 'W', 0,
  /* 24453 */ 'F', 'R', 'C', 'P', '_', 'W', 0,
  /* 24460 */ 'F', 'C', 'E', 'Q', '_', 'W', 0,
  /* 24467 */ 'F', 'S', 'E', 'Q', '_', 'W', 0,
  /* 24474 */ 'F', 'C', 'U', 'E', 'Q', '_', 'W', 0,
  /* 24482 */ 'F', 'S', 'U', 'E', 'Q', '_', 'W', 0,
  /* 24490 */ 'F', 'T', 'Q', '_', 'W', 0,
  /* 24496 */ 'M', 'S', 'U', 'B', '_', 'Q', '_', 'W', 0,
  /* 24505 */ 'M', 'A', 'D', 'D', '_', 'Q', '_', 'W', 0,
  /* 24514 */ 'M', 'U', 'L', '_', 'Q', '_', 'W', 0,
  /* 24522 */ 'M', 'S', 'U', 'B', 'R', '_', 'Q', '_', 'W', 0,
  /* 24532 */ 'M', 'A', 'D', 'D', 'R', '_', 'Q', '_', 'W', 0,
  /* 24542 */ 'M', 'U', 'L', 'R', '_', 'Q', '_', 'W', 0,
  /* 24551 */ 'S', 'R', 'A', 'R', '_', 'W', 0,
  /* 24558 */ 'B', 'C', 'L', 'R', '_', 'W', 0,
  /* 24565 */ 'S', 'R', 'L', 'R', '_', 'W', 0,
  /* 24572 */ 'F', 'C', 'O', 'R', '_', 'W', 0,
  /* 24579 */ 'F', 'S', 'O', 'R', '_', 'W', 0,
  /* 24586 */ 'F', 'E', 'X', 'U', 'P', 'R', '_', 'W', 0,
  /* 24595 */ 'F', 'F', 'Q', 'R', '_', 'W', 0,
  /* 24602 */ 'B', 'I', 'N', 'S', 'R', '_', 'W', 0,
  /* 24610 */ 'E', 'X', 'T', 'R', '_', 'W', 0,
  /* 24617 */ 'I', 'L', 'V', 'R', '_', 'W', 0,
  /* 24624 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'W', 0,
  /* 24633 */ 'S', 'U', 'B', 'Q', 'H', '_', 'R', '_', 'W', 0,
  /* 24643 */ 'A', 'D', 'D', 'Q', 'H', '_', 'R', '_', 'W', 0,
  /* 24653 */ 'E', 'X', 'T', 'R', '_', 'R', '_', 'W', 0,
  /* 24662 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'W', 0,
  /* 24672 */ 'E', 'X', 'T', 'R', 'V', '_', 'R', '_', 'W', 0,
  /* 24682 */ 'F', 'A', 'B', 'S', '_', 'W', 0,
  /* 24689 */ 'M', 'U', 'L', 'Q', '_', 'R', 'S', '_', 'W', 0,
  /* 24699 */ 'E', 'X', 'T', 'R', '_', 'R', 'S', '_', 'W', 0,
  /* 24709 */ 'E', 'X', 'T', 'R', 'V', '_', 'R', 'S', '_', 'W', 0,
  /* 24720 */ 'F', 'C', 'L', 'A', 'S', 'S', '_', 'W', 0,
  /* 24729 */ 'A', 'S', 'U', 'B', '_', 'S', '_', 'W', 0,
  /* 24738 */ 'H', 'S', 'U', 'B', '_', 'S', '_', 'W', 0,
  /* 24747 */ 'D', 'P', 'S', 'U', 'B', '_', 'S', '_', 'W', 0,
  /* 24757 */ 'F', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'W', 0,
  /* 24768 */ 'H', 'A', 'D', 'D', '_', 'S', '_', 'W', 0,
  /* 24777 */ 'D', 'P', 'A', 'D', 'D', '_', 'S', '_', 'W', 0,
  /* 24787 */ 'M', 'O', 'D', '_', 'S', '_', 'W', 0,
  /* 24795 */ 'C', 'L', 'E', '_', 'S', '_', 'W', 0,
  /* 24803 */ 'A', 'V', 'E', '_', 'S', '_', 'W', 0,
  /* 24811 */ 'C', 'L', 'E', 'I', '_', 'S', '_', 'W', 0,
  /* 24820 */ 'M', 'I', 'N', 'I', '_', 'S', '_', 'W', 0,
  /* 24829 */ 'C', 'L', 'T', 'I', '_', 'S', '_', 'W', 0,
  /* 24838 */ 'M', 'A', 'X', 'I', '_', 'S', '_', 'W', 0,
  /* 24847 */ 'S', 'H', 'L', 'L', '_', 'S', '_', 'W', 0,
  /* 24856 */ 'M', 'I', 'N', '_', 'S', '_', 'W', 0,
  /* 24864 */ 'D', 'O', 'T', 'P', '_', 'S', '_', 'W', 0,
  /* 24873 */ 'S', 'U', 'B', 'Q', '_', 'S', '_', 'W', 0,
  /* 24882 */ 'A', 'D', 'D', 'Q', '_', 'S', '_', 'W', 0,
  /* 24891 */ 'M', 'U', 'L', 'Q', '_', 'S', '_', 'W', 0,
  /* 24900 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'W', 0,
  /* 24909 */ 'A', 'V', 'E', 'R', '_', 'S', '_', 'W', 0,
  /* 24918 */ 'S', 'U', 'B', 'S', '_', 'S', '_', 'W', 0,
  /* 24927 */ 'A', 'D', 'D', 'S', '_', 'S', '_', 'W', 0,
  /* 24936 */ 'S', 'A', 'T', '_', 'S', '_', 'W', 0,
  /* 24944 */ 'C', 'L', 'T', '_', 'S', '_', 'W', 0,
  /* 24952 */ 'F', 'F', 'I', 'N', 'T', '_', 'S', '_', 'W', 0,
  /* 24962 */ 'F', 'T', 'I', 'N', 'T', '_', 'S', '_', 'W', 0,
  /* 24972 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'S', '_', 'W', 0,
  /* 24986 */ 'S', 'U', 'B', 'S', 'U', 'U', '_', 'S', '_', 'W', 0,
  /* 24997 */ 'D', 'I', 'V', '_', 'S', '_', 'W', 0,
  /* 25005 */ 'S', 'H', 'L', 'L', 'V', '_', 'S', '_', 'W', 0,
  /* 25015 */ 'M', 'A', 'X', '_', 'S', '_', 'W', 0,
  /* 25023 */ 'C', 'O', 'P', 'Y', '_', 'S', '_', 'W', 0,
  /* 25032 */ 'S', 'P', 'L', 'A', 'T', '_', 'W', 0,
  /* 25040 */ 'B', 'S', 'E', 'T', '_', 'W', 0,
  /* 25047 */ 'F', 'C', 'L', 'T', '_', 'W', 0,
  /* 25054 */ 'F', 'S', 'L', 'T', '_', 'W', 0,
  /* 25061 */ 'F', 'C', 'U', 'L', 'T', '_', 'W', 0,
  /* 25069 */ 'F', 'S', 'U', 'L', 'T', '_', 'W', 0,
  /* 25077 */ 'P', 'C', 'N', 'T', '_', 'W', 0,
  /* 25084 */ 'F', 'R', 'I', 'N', 'T', '_', 'W', 0,
  /* 25092 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'W', 0,
  /* 25101 */ 'F', 'S', 'Q', 'R', 'T', '_', 'W', 0,
  /* 25109 */ 'F', 'R', 'S', 'Q', 'R', 'T', '_', 'W', 0,
  /* 25118 */ 'S', 'T', '_', 'W', 0,
  /* 25123 */ 'A', 'S', 'U', 'B', '_', 'U', '_', 'W', 0,
  /* 25132 */ 'H', 'S', 'U', 'B', '_', 'U', '_', 'W', 0,
  /* 25141 */ 'D', 'P', 'S', 'U', 'B', '_', 'U', '_', 'W', 0,
  /* 25151 */ 'F', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'W', 0,
  /* 25162 */ 'H', 'A', 'D', 'D', '_', 'U', '_', 'W', 0,
  /* 25171 */ 'D', 'P', 'A', 'D', 'D', '_', 'U', '_', 'W', 0,
  /* 25181 */ 'M', 'O', 'D', '_', 'U', '_', 'W', 0,
  /* 25189 */ 'C', 'L', 'E', '_', 'U', '_', 'W', 0,
  /* 25197 */ 'A', 'V', 'E', '_', 'U', '_', 'W', 0,
  /* 25205 */ 'C', 'L', 'E', 'I', '_', 'U', '_', 'W', 0,
  /* 25214 */ 'M', 'I', 'N', 'I', '_', 'U', '_', 'W', 0,
  /* 25223 */ 'C', 'L', 'T', 'I', '_', 'U', '_', 'W', 0,
  /* 25232 */ 'M', 'A', 'X', 'I', '_', 'U', '_', 'W', 0,
  /* 25241 */ 'M', 'I', 'N', '_', 'U', '_', 'W', 0,
  /* 25249 */ 'D', 'O', 'T', 'P', '_', 'U', '_', 'W', 0,
  /* 25258 */ 'A', 'V', 'E', 'R', '_', 'U', '_', 'W', 0,
  /* 25267 */ 'S', 'U', 'B', 'S', '_', 'U', '_', 'W', 0,
  /* 25276 */ 'A', 'D', 'D', 'S', '_', 'U', '_', 'W', 0,
  /* 25285 */ 'S', 'U', 'B', 'S', 'U', 'S', '_', 'U', '_', 'W', 0,
  /* 25296 */ 'S', 'A', 'T', '_', 'U', '_', 'W', 0,
  /* 25304 */ 'C', 'L', 'T', '_', 'U', '_', 'W', 0,
  /* 25312 */ 'F', 'F', 'I', 'N', 'T', '_', 'U', '_', 'W', 0,
  /* 25322 */ 'F', 'T', 'I', 'N', 'T', '_', 'U', '_', 'W', 0,
  /* 25332 */ 'D', 'I', 'V', '_', 'U', '_', 'W', 0,
  /* 25340 */ 'M', 'A', 'X', '_', 'U', '_', 'W', 0,
  /* 25348 */ 'C', 'O', 'P', 'Y', '_', 'U', '_', 'W', 0,
  /* 25357 */ 'M', 'S', 'U', 'B', 'V', '_', 'W', 0,
  /* 25365 */ 'M', 'A', 'D', 'D', 'V', '_', 'W', 0,
  /* 25373 */ 'P', 'C', 'K', 'E', 'V', '_', 'W', 0,
  /* 25381 */ 'I', 'L', 'V', 'E', 'V', '_', 'W', 0,
  /* 25389 */ 'F', 'D', 'I', 'V', '_', 'W', 0,
  /* 25396 */ 'M', 'U', 'L', 'V', '_', 'W', 0,
  /* 25403 */ 'E', 'X', 'T', 'R', 'V', '_', 'W', 0,
  /* 25411 */ 'F', 'M', 'A', 'X', '_', 'W', 0,
  /* 25418 */ 'B', 'Z', '_', 'W', 0,
  /* 25423 */ 'B', 'N', 'Z', '_', 'W', 0,
  /* 25429 */ 'G', '_', 'S', 'M', 'A', 'X', 0,
  /* 25436 */ 'G', '_', 'U', 'M', 'A', 'X', 0,
  /* 25443 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'U', 'M', 'A', 'X', 0,
  /* 25460 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'M', 'A', 'X', 0,
  /* 25476 */ 'M', 'F', 'T', 'A', 'C', 'X', 0,
  /* 25483 */ 'M', 'T', 'T', 'A', 'C', 'X', 0,
  /* 25490 */ 'G', '_', 'F', 'R', 'A', 'M', 'E', '_', 'I', 'N', 'D', 'E', 'X', 0,
  /* 25504 */ 'L', 'H', 'X', 0,
  /* 25508 */ 'J', 'A', 'L', 'X', 0,
  /* 25513 */ 'L', 'B', 'U', 'X', 0,
  /* 25518 */ 'L', 'W', 'X', 0,
  /* 25522 */ 'C', 'O', 'P', 'Y', 0,
  /* 25527 */ 'C', 'O', 'N', 'S', 'T', 'P', 'O', 'O', 'L', '_', 'E', 'N', 'T', 'R', 'Y', 0,
  /* 25543 */ 'B', 'G', 'E', 'Z', 0,
  /* 25548 */ 'B', 'L', 'E', 'Z', 0,
  /* 25553 */ 'B', 'C', '1', 'N', 'E', 'Z', 0,
  /* 25560 */ 'B', 'C', '2', 'N', 'E', 'Z', 0,
  /* 25567 */ 'S', 'E', 'L', 'N', 'E', 'Z', 0,
  /* 25574 */ 'D', 'C', 'L', 'Z', 0,
  /* 25579 */ 'G', '_', 'C', 'T', 'L', 'Z', 0,
  /* 25586 */ 'B', 'C', '1', 'E', 'Q', 'Z', 0,
  /* 25593 */ 'B', 'C', '2', 'E', 'Q', 'Z', 0,
  /* 25600 */ 'S', 'E', 'L', 'E', 'Q', 'Z', 0,
  /* 25607 */ 'B', 'G', 'T', 'Z', 0,
  /* 25612 */ 'B', 'L', 'T', 'Z', 0,
  /* 25617 */ 'G', '_', 'C', 'T', 'T', 'Z', 0,
  /* 25624 */ 'S', 'e', 'l', 'B', 'n', 'e', 'Z', 0,
  /* 25632 */ 'S', 'e', 'l', 'B', 'e', 'q', 'Z', 0,
  /* 25640 */ 'J', 'a', 'l', 'O', 'n', 'e', 'R', 'e', 'g', 0,
  /* 25650 */ 'J', 'a', 'l', 'T', 'w', 'o', 'R', 'e', 'g', 0,
  /* 25660 */ 'P', 's', 'e', 'u', 'd', 'o', 'I', 'n', 'd', 'i', 'r', 'e', 'c', 't', 'H', 'a', 'z', 'a', 'r', 'd', 'B', 'r', 'a', 'n', 'c', 'h', 0,
  /* 25687 */ 'P', 's', 'e', 'u', 'd', 'o', 'I', 'n', 'd', 'i', 'r', 'e', 'c', 't', 'B', 'r', 'a', 'n', 'c', 'h', 0,
  /* 25708 */ 'U', 'l', 'h', 0,
  /* 25712 */ 'U', 's', 'h', 0,
  /* 25716 */ 'D', 'A', 'D', 'D', 'i', 0,
  /* 25722 */ 'A', 'N', 'D', 'i', 0,
  /* 25727 */ 'S', 'N', 'E', 'i', 0,
  /* 25732 */ 'S', 'E', 'Q', 'i', 0,
  /* 25737 */ 'X', 'O', 'R', 'i', 0,
  /* 25742 */ 'S', 'L', 'T', 'i', 0,
  /* 25747 */ 'L', 'O', 'N', 'G', '_', 'B', 'R', 'A', 'N', 'C', 'H', '_', 'L', 'U', 'i', 0,
  /* 25763 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'C', 'm', 'p', 'i', 0,
  /* 25777 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'C', 'm', 'p', 'i', 0,
  /* 25791 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 'i', 0,
  /* 25805 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 'i', 0,
  /* 25819 */ 'S', 'G', 'E', 'I', 'm', 'm', 0,
  /* 25826 */ 'D', 'R', 'O', 'L', 'I', 'm', 'm', 0,
  /* 25834 */ 'N', 'O', 'R', 'I', 'm', 'm', 0,
  /* 25841 */ 'D', 'R', 'O', 'R', 'I', 'm', 'm', 0,
  /* 25849 */ 'S', 'G', 'T', 'I', 'm', 'm', 0,
  /* 25856 */ 'S', 'G', 'E', 'U', 'I', 'm', 'm', 0,
  /* 25864 */ 'S', 'G', 'T', 'U', 'I', 'm', 'm', 0,
  /* 25872 */ 'B', 'n', 'e', 'I', 'm', 'm', 0,
  /* 25879 */ 'B', 'e', 'q', 'I', 'm', 'm', 0,
  /* 25886 */ 'P', 's', 'e', 'u', 'd', 'o', 'R', 'e', 't', 'u', 'r', 'n', 0,
  /* 25899 */ 'J', 'A', 'L', 'R', 'H', 'B', '6', '4', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 25914 */ 'J', 'A', 'L', 'R', '6', '4', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 25927 */ 'J', 'A', 'L', 'R', 'H', 'B', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 25940 */ 'J', 'A', 'L', 'R', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 25951 */ 'B', '_', 'M', 'M', 'R', '6', '_', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 25965 */ 'B', '_', 'M', 'M', '_', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 25977 */ 'S', 'D', 'I', 'V', '_', 'M', 'M', '_', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 25992 */ 'U', 'D', 'I', 'V', '_', 'M', 'M', '_', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 26007 */ 'L', 'D', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26015 */ 'S', 'D', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26023 */ 'S', 'E', 'Q', 'I', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26033 */ 'D', 'S', 'R', 'e', 'm', 'I', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26045 */ 'D', 'U', 'R', 'e', 'm', 'I', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26057 */ 'D', 'S', 'D', 'i', 'v', 'I', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26069 */ 'D', 'U', 'D', 'i', 'v', 'I', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26081 */ 'D', 'M', 'U', 'L', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26091 */ 'D', 'M', 'U', 'L', 'O', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26102 */ 'S', 'E', 'Q', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26111 */ 'A', 'B', 'S', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26120 */ 'D', 'M', 'U', 'L', 'O', 'U', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26132 */ 'D', 'S', 'R', 'e', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26143 */ 'D', 'U', 'R', 'e', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26154 */ 'B', 'G', 'E', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26166 */ 'B', 'L', 'E', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26178 */ 'B', 'G', 'E', 'L', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26191 */ 'B', 'L', 'E', 'L', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26204 */ 'B', 'N', 'E', 'L', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26217 */ 'B', 'E', 'Q', 'L', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26230 */ 'B', 'G', 'T', 'L', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26243 */ 'B', 'L', 'T', 'L', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26256 */ 'B', 'G', 'E', 'U', 'L', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26270 */ 'B', 'L', 'E', 'U', 'L', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26284 */ 'D', 'M', 'U', 'L', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26297 */ 'B', 'G', 'T', 'U', 'L', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26311 */ 'B', 'L', 'T', 'U', 'L', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26325 */ 'B', 'G', 'T', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26337 */ 'B', 'L', 'T', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26349 */ 'B', 'G', 'E', 'U', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26362 */ 'B', 'L', 'E', 'U', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26375 */ 'B', 'G', 'T', 'U', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26388 */ 'B', 'L', 'T', 'U', 'I', 'm', 'm', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26401 */ 'D', 'S', 'D', 'i', 'v', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26412 */ 'D', 'U', 'D', 'i', 'v', 'M', 'a', 'c', 'r', 'o', 0,
  /* 26423 */ 'L', 'O', 'N', 'G', '_', 'B', 'R', 'A', 'N', 'C', 'H', '_', 'L', 'U', 'i', '2', 'O', 'p', 0,
  /* 26442 */ 'L', 'O', 'N', 'G', '_', 'B', 'R', 'A', 'N', 'C', 'H', '_', 'D', 'A', 'D', 'D', 'i', 'u', '2', 'O', 'p', 0,
  /* 26464 */ 'L', 'O', 'N', 'G', '_', 'B', 'R', 'A', 'N', 'C', 'H', '_', 'A', 'D', 'D', 'i', 'u', '2', 'O', 'p', 0,
  /* 26485 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'C', 'm', 'p', 0,
  /* 26498 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'C', 'm', 'p', 0,
  /* 26511 */ 'S', 'a', 'a', 'A', 'd', 'd', 'r', 0,
  /* 26519 */ 'S', 'a', 'a', 'd', 'A', 'd', 'd', 'r', 0,
  /* 26528 */ 'E', 'R', 'e', 't', 0,
  /* 26533 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 0,
  /* 26546 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 0,
  /* 26559 */ 'L', 'B', 'u', 0,
  /* 26563 */ 'D', 'S', 'U', 'B', 'u', 0,
  /* 26569 */ 'B', 'A', 'D', 'D', 'u', 0,
  /* 26575 */ 'D', 'A', 'D', 'D', 'u', 0,
  /* 26581 */ 'L', 'H', 'u', 0,
  /* 26585 */ 'S', 'L', 'T', 'u', 0,
  /* 26590 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'M', 'U', 'L', 'T', 'u', 0,
  /* 26603 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'U', 'L', 'T', 'u', 0,
  /* 26615 */ 'L', 'W', 'u', 0,
  /* 26619 */ 'U', 'l', 'h', 'u', 0,
  /* 26624 */ 'L', 'O', 'N', 'G', '_', 'B', 'R', 'A', 'N', 'C', 'H', '_', 'D', 'A', 'D', 'D', 'i', 'u', 0,
  /* 26643 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'i', 'u', 0,
  /* 26653 */ 'L', 'O', 'N', 'G', '_', 'B', 'R', 'A', 'N', 'C', 'H', '_', 'A', 'D', 'D', 'i', 'u', 0,
  /* 26671 */ 'S', 'L', 'T', 'i', 'u', 0,
  /* 26677 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 'i', 'u', 0,
  /* 26692 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 'i', 'u', 0,
  /* 26707 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 'u', 0,
  /* 26721 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 'u', 0,
  /* 26735 */ 'U', 'l', 'w', 0,
  /* 26739 */ 'U', 's', 'w', 0,
};

extern const unsigned MipsInstrNameIndices[] = {
    14934U, 20356U, 21966U, 20526U, 15275U, 15256U, 15284U, 15529U, 
    13320U, 13335U, 13214U, 13374U, 22425U, 13112U, 15265U, 12881U, 
    25522U, 13003U, 23448U, 11409U, 21480U, 15501U, 23395U, 11454U, 
    23384U, 13036U, 21606U, 21593U, 22000U, 23223U, 23246U, 15433U, 
    15480U, 15453U, 15316U, 11308U, 10109U, 15594U, 23707U, 23737U, 
    15681U, 15688U, 11372U, 22230U, 22208U, 13212U, 14932U, 25490U, 
    13122U, 23185U, 22359U, 23463U, 22376U, 22176U, 10995U, 22408U, 
    23406U, 22309U, 23480U, 10969U, 11431U, 22025U, 11249U, 11193U, 
    11223U, 11234U, 11174U, 11204U, 13075U, 13059U, 22442U, 13388U, 
    13405U, 11324U, 10115U, 11378U, 11355U, 22235U, 22214U, 25460U, 
    20477U, 25443U, 20460U, 11280U, 10081U, 12873U, 11422U, 23204U, 
    10881U, 22472U, 23533U, 10987U, 23373U, 23361U, 23438U, 13429U, 
    23526U, 13361U, 23542U, 15394U, 22143U, 22136U, 21567U, 21560U, 
    23195U, 20583U, 12906U, 20567U, 12865U, 20575U, 12898U, 20559U, 
    12857U, 21472U, 21464U, 13474U, 13466U, 11273U, 10074U, 15587U, 
    8341U, 11167U, 23688U, 15674U, 23889U, 21864U, 1181U, 13422U, 
    1163U, 0U, 13249U, 23518U, 10959U, 14960U, 14984U, 21529U, 
    21538U, 22352U, 20434U, 13145U, 20400U, 20410U, 12914U, 12929U, 
    20378U, 20389U, 11314U, 15149U, 20446U, 25429U, 20453U, 25436U, 
    21954U, 23270U, 23302U, 23281U, 22191U, 25617U, 13194U, 25579U, 
    13176U, 21585U, 21494U, 13093U, 15400U, 22401U, 20493U, 23472U, 
    22162U, 23417U, 23425U, 23490U, 21979U, 12990U, 11021U, 26111U, 
    20542U, 21841U, 20927U, 21011U, 21227U, 3905U, 9214U, 860U, 
    8570U, 3041U, 8892U, 8211U, 9529U, 3787U, 9054U, 742U, 
    8410U, 2871U, 8732U, 8099U, 9375U, 3828U, 9109U, 783U, 
    8465U, 2912U, 8787U, 8138U, 9428U, 3985U, 9322U, 940U, 
    8678U, 3187U, 9000U, 8287U, 9633U, 3869U, 9164U, 824U, 
    8520U, 3005U, 8842U, 8177U, 9481U, 3807U, 9081U, 762U, 
    8437U, 2891U, 8759U, 8118U, 9401U, 3945U, 9268U, 900U, 
    8624U, 3081U, 8946U, 8249U, 9581U, 3767U, 9027U, 722U, 
    8383U, 2851U, 8705U, 8080U, 9349U, 3964U, 9294U, 919U, 
    8650U, 3166U, 8972U, 8267U, 9606U, 3848U, 9136U, 803U, 
    8492U, 2984U, 8814U, 8157U, 9454U, 3925U, 9241U, 880U, 
    8597U, 3061U, 8919U, 8230U, 9555U, 3889U, 9191U, 844U, 
    8547U, 3025U, 8869U, 8196U, 9507U, 9689U, 21959U, 18934U, 
    26217U, 12957U, 26154U, 15301U, 26178U, 23579U, 26349U, 15570U, 
    26256U, 23237U, 26325U, 15560U, 26230U, 23643U, 26375U, 15600U, 
    26297U, 12999U, 26166U, 15306U, 26191U, 23594U, 26362U, 15576U, 
    26270U, 23277U, 26337U, 15565U, 26243U, 23648U, 26388U, 15606U, 
    26311U, 26204U, 20625U, 20913U, 20806U, 21106U, 20997U, 21213U, 
    17126U, 25951U, 25965U, 25879U, 25872U, 4509U, 4056U, 4537U, 
    4086U, 4567U, 4598U, 4495U, 4041U, 4523U, 4071U, 4551U, 
    4583U, 2729U, 3407U, 122U, 25527U, 20853U, 21153U, 140U, 
    1120U, 26284U, 26081U, 26091U, 26120U, 15539U, 25826U, 22171U, 
    25841U, 26057U, 26401U, 26033U, 26132U, 26069U, 26412U, 26045U, 
    26143U, 26528U, 2742U, 3423U, 12145U, 24682U, 20591U, 20608U, 
    20821U, 21121U, 4656U, 20641U, 21297U, 20688U, 21340U, 20836U, 
    20664U, 21318U, 21136U, 20734U, 21382U, 20711U, 21361U, 20758U, 
    21404U, 25914U, 25899U, 25927U, 25940U, 6793U, 25640U, 25650U, 
    26007U, 3753U, 8055U, 2020U, 21618U, 21703U, 26653U, 26464U, 
    26624U, 26442U, 25747U, 26423U, 3453U, 18478U, 1088U, 3644U, 
    1055U, 3475U, 1078U, 3634U, 22050U, 1035U, 22264U, 22067U, 
    22281U, 1118U, 25476U, 43U, 128U, 21659U, 22250U, 103U, 
    14938U, 21447U, 1102U, 3673U, 20868U, 21168U, 20891U, 21191U, 
    25483U, 55U, 146U, 21666U, 22257U, 110U, 14949U, 21458U, 
    26285U, 26092U, 26121U, 4916U, 5049U, 4948U, 5101U, 21576U, 
    25834U, 3577U, 20942U, 21026U, 21242U, 20943U, 21027U, 21243U, 
    9869U, 9771U, 9984U, 13636U, 13531U, 13796U, 23899U, 15644U, 
    23931U, 15660U, 24972U, 23330U, 26590U, 23695U, 23725U, 15078U, 
    3100U, 25687U, 3518U, 5161U, 8032U, 20218U, 7826U, 25660U, 
    3489U, 5131U, 8004U, 11297U, 23561U, 19662U, 17458U, 14908U, 
    2790U, 18110U, 21430U, 3235U, 18499U, 10098U, 23549U, 19647U, 
    17389U, 14919U, 2803U, 21743U, 18124U, 23342U, 19626U, 26603U, 
    20319U, 13565U, 9806U, 25886U, 3658U, 23714U, 379U, 2338U, 
    15041U, 2941U, 22716U, 611U, 2627U, 15117U, 3145U, 23070U, 
    526U, 2542U, 15095U, 3119U, 22954U, 12797U, 650U, 23103U, 
    23744U, 15540U, 25827U, 22172U, 25842U, 9659U, 3738U, 203U, 
    25977U, 26015U, 26058U, 26402U, 26023U, 26102U, 12961U, 25819U, 
    3568U, 23584U, 25856U, 3604U, 25849U, 3586U, 25864U, 3614U, 
    3595U, 3624U, 20781U, 20972U, 21056U, 21081U, 21272U, 26034U, 
    26133U, 8067U, 2031U, 21632U, 21718U, 3760U, 18485U, 20794U, 
    20985U, 21069U, 21094U, 21285U, 26511U, 26519U, 25632U, 25624U, 
    26498U, 25777U, 26546U, 25805U, 26692U, 26721U, 26485U, 25763U, 
    26533U, 25791U, 26677U, 26707U, 4861U, 4320U, 4335U, 4873U, 
    5088U, 15408U, 13274U, 13256U, 13290U, 13306U, 13349U, 2760U, 
    9707U, 1976U, 17669U, 6670U, 18409U, 6802U, 21489U, 18530U, 
    25992U, 26070U, 26413U, 26046U, 26144U, 25708U, 26619U, 26735U, 
    25712U, 26739U, 20957U, 21041U, 21257U, 13755U, 17925U, 9929U, 
    1329U, 24900U, 20093U, 11269U, 11056U, 17411U, 5847U, 18610U, 
    16358U, 16771U, 18782U, 7712U, 13556U, 1432U, 13673U, 1487U, 
    24643U, 1845U, 24217U, 1817U, 13628U, 17821U, 13735U, 17912U, 
    24882U, 20081U, 11080U, 17422U, 10153U, 11527U, 14035U, 23970U, 
    10561U, 12314U, 14524U, 24927U, 10753U, 12679U, 14773U, 25276U, 
    16988U, 5587U, 9797U, 1234U, 9907U, 1297U, 7682U, 13820U, 
    1575U, 10009U, 17312U, 13775U, 1547U, 9949U, 17259U, 10367U, 
    11891U, 14220U, 24335U, 10823U, 12760U, 14843U, 25366U, 11113U, 
    17431U, 10137U, 11510U, 14019U, 23953U, 17465U, 6069U, 25717U, 
    20242U, 26637U, 20338U, 26570U, 20296U, 20421U, 6860U, 11049U, 
    5835U, 11368U, 16799U, 5428U, 2154U, 16826U, 5461U, 10242U, 
    6725U, 17472U, 6078U, 23815U, 25722U, 3541U, 20250U, 11402U, 
    1389U, 10466U, 12161U, 14373U, 24729U, 10658U, 12526U, 14631U, 
    25123U, 14980U, 11043U, 5824U, 6753U, 10543U, 12296U, 14497U, 
    24909U, 10735U, 12661U, 14755U, 25258U, 10491U, 12235U, 14436U, 
    24803U, 10683U, 12600U, 14694U, 25197U, 4388U, 4264U, 4772U, 
    4416U, 4213U, 4712U, 4280U, 5075U, 5014U, 16783U, 26569U, 
    15160U, 10893U, 5703U, 20420U, 1750U, 76U, 222U, 216U, 
    230U, 10864U, 5368U, 25586U, 6010U, 13171U, 15336U, 17641U, 
    25553U, 5973U, 23180U, 15554U, 19587U, 25593U, 6023U, 25560U, 
    5986U, 10303U, 11841U, 14170U, 24285U, 10437U, 12086U, 14344U, 
    24558U, 5666U, 21871U, 3255U, 11075U, 2071U, 5870U, 15544U, 
    17033U, 10928U, 5763U, 11137U, 5415U, 2130U, 17449U, 6036U, 
    18831U, 10867U, 2043U, 5674U, 11091U, 2090U, 5909U, 25543U, 
    3361U, 15168U, 10904U, 5724U, 15513U, 19103U, 18244U, 11119U, 
    2106U, 5951U, 15620U, 20179U, 25607U, 3393U, 10936U, 5776U, 
    11143U, 2138U, 6047U, 15632U, 20202U, 10279U, 11817U, 14146U, 
    24261U, 10409U, 11940U, 14247U, 24378U, 10333U, 11857U, 14186U, 
    24301U, 10451U, 12130U, 14358U, 24602U, 23676U, 19726U, 21503U, 
    6880U, 25548U, 3368U, 10912U, 5737U, 11125U, 2114U, 5962U, 
    15626U, 20187U, 11086U, 2083U, 5899U, 11097U, 2098U, 5920U, 
    25612U, 3400U, 15175U, 10944U, 5789U, 15521U, 19114U, 18254U, 
    11149U, 2146U, 6058U, 15638U, 20210U, 10382U, 23864U, 10375U, 
    23852U, 13024U, 2723U, 10872U, 2050U, 5684U, 10249U, 11795U, 
    14124U, 24239U, 10221U, 11774U, 14103U, 24143U, 15311U, 17023U, 
    10920U, 5750U, 11131U, 5402U, 2122U, 17440U, 5999U, 17572U, 
    11103U, 5931U, 10858U, 12834U, 14878U, 23858U, 25423U, 11108U, 
    5941U, 713U, 1909U, 16300U, 15138U, 16854U, 5483U, 18228U, 
    6782U, 10257U, 23828U, 10351U, 11875U, 14204U, 24319U, 10630U, 
    12403U, 14603U, 25040U, 10853U, 12820U, 14873U, 23847U, 25418U, 
    4799U, 4445U, 4811U, 4458U, 4787U, 4432U, 4698U, 5123U, 
    4622U, 5115U, 4613U, 12969U, 12944U, 17500U, 17526U, 6613U, 
    7948U, 2433U, 6276U, 22809U, 7260U, 680U, 2690U, 6545U, 
    19919U, 23129U, 19551U, 7541U, 10288U, 11826U, 14155U, 24270U, 
    10424U, 12010U, 14270U, 24461U, 92U, 15749U, 16342U, 9670U, 
    22391U, 982U, 1015U, 1069U, 12153U, 6418U, 22946U, 7402U, 
    10499U, 12243U, 14444U, 24811U, 10691U, 12608U, 14702U, 25205U, 
    10483U, 12227U, 14428U, 24795U, 10675U, 12592U, 14686U, 25189U, 
    21426U, 18492U, 6871U, 7980U, 10517U, 12261U, 14462U, 24829U, 
    10709U, 12626U, 14720U, 25223U, 10578U, 12331U, 14541U, 24944U, 
    10781U, 12707U, 14801U, 25304U, 25575U, 20195U, 7805U, 7997U, 
    9844U, 1248U, 9746U, 1202U, 9959U, 1344U, 9857U, 17217U, 
    9759U, 17144U, 9972U, 17272U, 9875U, 17232U, 9777U, 17159U, 
    9990U, 17287U, 6195U, 7155U, 12070U, 6404U, 13642U, 17832U, 
    22930U, 7388U, 11766U, 22735U, 11672U, 6166U, 13537U, 17751U, 
    22661U, 7126U, 12471U, 6477U, 13802U, 17952U, 23031U, 7461U, 
    11733U, 6180U, 22670U, 7140U, 12023U, 6358U, 22884U, 7342U, 
    11625U, 6120U, 22615U, 7080U, 12424U, 6431U, 22985U, 7415U, 
    12049U, 6373U, 22894U, 7357U, 11651U, 6135U, 22625U, 7095U, 
    12450U, 6446U, 22995U, 7430U, 11983U, 6329U, 22842U, 7313U, 
    12060U, 6389U, 22913U, 7373U, 11662U, 6151U, 22644U, 7111U, 
    12461U, 6462U, 23014U, 7446U, 11993U, 6344U, 22859U, 7328U, 
    10613U, 12386U, 14586U, 25023U, 10805U, 14825U, 25348U, 9684U, 
    9691U, 11256U, 13454U, 23878U, 11155U, 13437U, 23871U, 117U, 
    15765U, 16350U, 9677U, 22504U, 19149U, 23905U, 19838U, 15650U, 
    22514U, 19162U, 23937U, 19851U, 6834U, 2456U, 16556U, 6305U, 
    22828U, 19356U, 7289U, 3323U, 516U, 16161U, 2532U, 16644U, 
    15666U, 6847U, 3212U, 3340U, 24978U, 20105U, 7780U, 703U, 
    16287U, 2713U, 16758U, 23148U, 19576U, 7570U, 498U, 16137U, 
    2514U, 16620U, 22923U, 19410U, 371U, 15998U, 2330U, 16508U, 
    22710U, 19292U, 344U, 15962U, 2303U, 16484U, 22654U, 19262U, 
    573U, 16213U, 2589U, 16696U, 23024U, 19463U, 303U, 15909U, 
    2262U, 16431U, 22590U, 19217U, 313U, 15922U, 2272U, 16444U, 
    22598U, 19228U, 431U, 16049U, 2390U, 16531U, 22774U, 19335U, 
    543U, 16174U, 2559U, 16657U, 22969U, 19430U, 324U, 15936U, 
    2283U, 16458U, 22607U, 19240U, 553U, 16187U, 2569U, 16670U, 
    22977U, 19441U, 478U, 16111U, 2494U, 16594U, 22876U, 19388U, 
    353U, 15974U, 2312U, 16496U, 22696U, 19272U, 488U, 16124U, 
    2504U, 16607U, 22905U, 19399U, 334U, 15949U, 2293U, 16471U, 
    22636U, 19251U, 563U, 16200U, 2579U, 16683U, 23006U, 19452U, 
    450U, 16074U, 2466U, 16569U, 22852U, 19367U, 4896U, 4735U, 
    4362U, 11268U, 25716U, 26636U, 26575U, 14903U, 20427U, 14969U, 
    14979U, 21502U, 21425U, 7979U, 25574U, 7996U, 23683U, 23664U, 
    23217U, 19595U, 7622U, 23513U, 1025U, 20372U, 23658U, 14890U, 
    22396U, 20366U, 23637U, 23684U, 23665U, 7733U, 7743U, 10597U, 
    12370U, 14560U, 24997U, 10789U, 12735U, 14809U, 25332U, 18088U, 
    6727U, 9665U, 7911U, 9U, 97U, 1141U, 20500U, 15U, 
    11449U, 23573U, 23353U, 49U, 134U, 1147U, 20513U, 36U, 
    14008U, 23599U, 15582U, 23336U, 26596U, 23625U, 7971U, 12287U, 
    14488U, 24864U, 12652U, 14746U, 25249U, 12209U, 14410U, 24777U, 
    12574U, 14668U, 25171U, 13884U, 1632U, 13959U, 1684U, 24400U, 
    19929U, 13921U, 18001U, 15226U, 18317U, 21932U, 18906U, 13985U, 
    1720U, 13864U, 1602U, 21580U, 13898U, 1651U, 13972U, 1702U, 
    24412U, 19944U, 13947U, 18033U, 12179U, 14391U, 24747U, 12544U, 
    14649U, 25141U, 15237U, 18331U, 21943U, 18920U, 13995U, 1735U, 
    13912U, 1670U, 22303U, 974U, 23803U, 13444U, 23701U, 11340U, 
    15534U, 960U, 1005U, 23755U, 8378U, 238U, 23670U, 15549U, 
    967U, 23761U, 10069U, 26563U, 23731U, 21856U, 13049U, 6952U, 
    4982U, 4960U, 9703U, 17131U, 5618U, 14895U, 18096U, 6735U, 
    23357U, 23218U, 10952U, 5802U, 19596U, 7623U, 21860U, 13054U, 
    6961U, 23514U, 21836U, 21522U, 23789U, 19789U, 18555U, 23797U, 
    19800U, 18809U, 24709U, 20043U, 24672U, 20017U, 14568U, 18066U, 
    25403U, 20129U, 24699U, 20030U, 24653U, 19992U, 14506U, 18054U, 
    24610U, 19970U, 22499U, 989U, 19640U, 7654U, 507U, 16149U, 
    2523U, 16632U, 22939U, 19420U, 11574U, 284U, 15884U, 2243U, 
    16419U, 22575U, 19196U, 7068U, 24017U, 11719U, 24122U, 12009U, 
    24460U, 12152U, 24720U, 11611U, 24054U, 12410U, 25047U, 469U, 
    16099U, 2485U, 996U, 16330U, 11681U, 24084U, 12100U, 24572U, 
    12033U, 24474U, 11635U, 24068U, 12434U, 25061U, 11695U, 24098U, 
    11969U, 24431U, 12783U, 632U, 16263U, 2648U, 16734U, 23089U, 
    19505U, 7487U, 25389U, 14262U, 24445U, 11482U, 23923U, 11918U, 
    24356U, 12114U, 24586U, 12339U, 24952U, 12715U, 25312U, 11927U, 
    24365U, 12123U, 24595U, 10390U, 11905U, 14228U, 24343U, 11474U, 
    23915U, 2444U, 6290U, 22818U, 7274U, 691U, 2701U, 6559U, 
    19959U, 23138U, 19563U, 7555U, 11581U, 24024U, 11536U, 23979U, 
    12813U, 25411U, 11518U, 23961U, 11962U, 24424U, 641U, 16275U, 
    2657U, 16746U, 6503U, 23096U, 19515U, 7499U, 11552U, 23995U, 
    11948U, 441U, 16062U, 2400U, 16544U, 22782U, 19346U, 7218U, 
    24386U, 400U, 16009U, 2359U, 16519U, 22743U, 19301U, 7195U, 
    15144U, 12002U, 24453U, 12487U, 25084U, 12512U, 25109U, 11726U, 
    24129U, 12016U, 24467U, 11618U, 24061U, 12417U, 25054U, 11688U, 
    24091U, 12107U, 24579U, 12504U, 582U, 16225U, 2598U, 16708U, 
    23047U, 19473U, 25101U, 11545U, 265U, 15859U, 2224U, 16407U, 
    22560U, 19175U, 7056U, 23988U, 12041U, 24482U, 11643U, 24076U, 
    12442U, 25069U, 11703U, 24106U, 11976U, 24438U, 12349U, 24962U, 
    12725U, 25322U, 14276U, 24490U, 12189U, 24757U, 12554U, 25151U, 
    14993U, 6771U, 23507U, 7643U, 12200U, 14401U, 24768U, 12565U, 
    14659U, 25162U, 12170U, 14382U, 24738U, 12535U, 14640U, 25132U, 
    15417U, 18421U, 10838U, 12775U, 14858U, 25381U, 10417U, 11955U, 
    14255U, 24393U, 10198U, 11603U, 14080U, 24046U, 10459U, 12138U, 
    14366U, 24617U, 22392U, 10644U, 12495U, 14617U, 25092U, 23810U, 
    10206U, 11711U, 14088U, 24114U, 19818U, 19125U, 7023U, 15136U, 
    15164U, 22153U, 16930U, 3266U, 5389U, 5627U, 5880U, 16949U, 
    19132U, 9727U, 2000U, 19023U, 19095U, 25508U, 20156U, 18237U, 
    10898U, 2063U, 5713U, 10877U, 2057U, 5694U, 22150U, 16922U, 
    3261U, 21826U, 16790U, 5378U, 6926U, 9721U, 1992U, 7884U, 
    7919U, 19017U, 18223U, 4706U, 3746U, 4639U, 4631U, 4845U, 
    4677U, 9735U, 2010U, 12849U, 17479U, 16969U, 25513U, 20164U, 
    7663U, 17138U, 5641U, 26559U, 3689U, 13161U, 17625U, 20281U, 
    11348U, 82U, 1924U, 5330U, 15733U, 1131U, 5248U, 7852U, 
    1889U, 10236U, 11789U, 14118U, 24233U, 15248U, 11038U, 21992U, 
    162U, 1938U, 10185U, 11590U, 14067U, 24033U, 26643U, 3708U, 
    20334U, 13471U, 2780U, 12975U, 17535U, 16998U, 25504U, 20149U, 
    17699U, 26581U, 3695U, 13166U, 17633U, 20304U, 16846U, 5473U, 
    15414U, 3207U, 7903U, 11351U, 7941U, 13010U, 17549U, 18415U, 
    6808U, 7965U, 9666U, 5609U, 7912U, 6762U, 174U, 1954U, 
    15797U, 25759U, 3562U, 20274U, 23886U, 17007U, 3351U, 152U, 
    15781U, 1153U, 5310U, 7868U, 1899U, 21673U, 18641U, 13137U, 
    17611U, 18583U, 15612U, 3223U, 13014U, 17556U, 18464U, 16883U, 
    5518U, 16312U, 11070U, 5860U, 18817U, 22344U, 3293U, 13083U, 
    17586U, 19081U, 18793U, 11064U, 19711U, 25518U, 186U, 15815U, 
    19141U, 20172U, 19826U, 7764U, 26615U, 4115U, 4179U, 4147U, 
    4196U, 4725U, 4466U, 4351U, 4825U, 4482U, 4232U, 4294U, 
    11303U, 11751U, 6222U, 22688U, 7182U, 14318U, 24532U, 23567U, 
    21806U, 18756U, 19668U, 10822U, 12759U, 14842U, 25365U, 294U, 
    15897U, 2253U, 21694U, 18671U, 17464U, 14291U, 24505U, 22583U, 
    19207U, 15342U, 18345U, 22084U, 18953U, 15368U, 18377U, 22110U, 
    18985U, 11503U, 6108U, 22553U, 7044U, 10526U, 12270U, 14471U, 
    24838U, 10718U, 12635U, 14729U, 25232U, 10162U, 11537U, 14044U, 
    23980U, 12814U, 6574U, 23156U, 10605U, 12378U, 14578U, 7583U, 
    25015U, 10797U, 12743U, 14817U, 25340U, 10U, 5186U, 98U, 
    2160U, 15757U, 5228U, 1142U, 5268U, 16U, 15695U, 5196U, 
    245U, 15833U, 2169U, 16369U, 5278U, 22U, 15704U, 14914U, 
    16836U, 2796U, 21734U, 18683U, 18116U, 21436U, 16901U, 3241U, 
    21769U, 18707U, 18505U, 22298U, 11490U, 6096U, 22546U, 7032U, 
    10508U, 12252U, 14453U, 24820U, 10700U, 12617U, 14711U, 25214U, 
    10145U, 11519U, 14027U, 23962U, 11963U, 6318U, 22836U, 10535U, 
    12279U, 14480U, 7302U, 24856U, 10727U, 12644U, 14738U, 25241U, 
    11450U, 10067U, 17379U, 23574U, 7692U, 6087U, 10475U, 12219U, 
    14420U, 24787U, 10667U, 12584U, 14678U, 25181U, 16808U, 5439U, 
    18565U, 6904U, 23821U, 362U, 15986U, 2321U, 15034U, 2932U, 
    18183U, 22703U, 19282U, 2198U, 15012U, 2825U, 22524U, 409U, 
    16021U, 2368U, 15060U, 2962U, 18193U, 22750U, 19311U, 602U, 
    16251U, 2618U, 15110U, 3136U, 18203U, 23063U, 19495U, 2211U, 
    15023U, 2838U, 22535U, 420U, 16035U, 2379U, 15069U, 2973U, 
    18213U, 22759U, 19323U, 10104U, 11743U, 6209U, 22680U, 7169U, 
    14308U, 24522U, 23555U, 21796U, 18743U, 19653U, 10814U, 12751U, 
    14834U, 25357U, 275U, 15872U, 2234U, 21685U, 18659U, 17395U, 
    14282U, 24496U, 22568U, 19186U, 50U, 5218U, 135U, 2189U, 
    16395U, 15773U, 5238U, 1148U, 5300U, 37U, 15724U, 5207U, 
    255U, 15846U, 2179U, 16382U, 5289U, 29U, 15714U, 14944U, 
    2818U, 21760U, 18695U, 18140U, 21553U, 18591U, 21453U, 3248U, 
    21778U, 18719U, 18522U, 66U, 198U, 1171U, 71U, 211U, 
    1176U, 22320U, 14009U, 23600U, 7702U, 6705U, 15583U, 15380U, 
    18392U, 22122U, 19000U, 15182U, 18264U, 21888U, 18853U, 13695U, 
    17872U, 24689U, 1860U, 13745U, 1517U, 24891U, 1875U, 14328U, 
    24542U, 13933U, 18016U, 13873U, 1616U, 23337U, 21816U, 18769U, 
    21787U, 18731U, 19632U, 26597U, 20325U, 23620U, 7723U, 10846U, 
    12790U, 14866U, 25396U, 18457U, 6825U, 13613U, 1459U, 14300U, 
    24514U, 7972U, 13716U, 1503U, 4691U, 4818U, 4005U, 3728U, 
    10170U, 11560U, 14052U, 24003U, 10177U, 11567U, 14059U, 24010U, 
    293U, 15896U, 2252U, 22582U, 19206U, 274U, 15871U, 2233U, 
    22567U, 19185U, 22158U, 3273U, 10319U, 19031U, 6970U, 23835U, 
    16960U, 5564U, 4886U, 4927U, 22159U, 16941U, 5554U, 3274U, 
    10320U, 6744U, 19032U, 6971U, 23836U, 25738U, 3549U, 20259U, 
    5026U, 13603U, 17797U, 13106U, 17602U, 6636U, 10830U, 12767U, 
    14850U, 25373U, 10190U, 11595U, 14072U, 24038U, 10637U, 12480U, 
    14610U, 25077U, 13571U, 17764U, 9812U, 17173U, 3305U, 3314U, 
    21581U, 15211U, 8325U, 17061U, 18299U, 21917U, 8362U, 17098U, 
    18888U, 15355U, 18361U, 22097U, 18969U, 15197U, 8310U, 17043U, 
    18282U, 21903U, 8347U, 17080U, 18871U, 13515U, 17732U, 24165U, 
    19886U, 13490U, 17716U, 24194U, 19901U, 13503U, 1401U, 24150U, 
    1762U, 24177U, 1782U, 13227U, 12951U, 17510U, 20140U, 17649U, 
    6647U, 7957U, 11394U, 1376U, 10053U, 17359U, 21647U, 18623U, 
    22338U, 3285U, 19072U, 7012U, 6988U, 459U, 16086U, 2475U, 
    16581U, 22868U, 19377U, 13846U, 17989U, 10035U, 17335U, 13587U, 
    17786U, 9828U, 17195U, 12488U, 6491U, 23040U, 7475U, 22304U, 
    23804U, 19809U, 19045U, 2421U, 6261U, 22799U, 7245U, 668U, 
    2678U, 6530U, 19875U, 23119U, 19538U, 7526U, 592U, 16238U, 
    2608U, 16721U, 23055U, 19484U, 4646U, 4022U, 8306U, 11162U, 
    10570U, 12323U, 14533U, 24936U, 10773U, 12699U, 14793U, 25296U, 
    10064U, 16782U, 5358U, 2015U, 12853U, 17486U, 17373U, 5649U, 
    11083U, 2078U, 7895U, 11264U, 7934U, 12894U, 17493U, 17425U, 
    5891U, 7928U, 11471U, 21511U, 16911U, 5540U, 18538U, 6893U, 
    7987U, 87U, 1931U, 5344U, 15741U, 1136U, 5258U, 7860U, 
    1894U, 23702U, 19736U, 15252U, 21996U, 168U, 1946U, 9699U, 
    1970U, 17124U, 13462U, 2774U, 17692U, 25600U, 3384U, 12840U, 
    6599U, 7814U, 23171U, 7608U, 25567U, 3375U, 12825U, 6585U, 
    7793U, 23162U, 7594U, 11899U, 6235U, 22768U, 7207U, 21875U, 
    25732U, 14005U, 16818U, 5451U, 2785U, 12979U, 17542U, 10215U, 
    14097U, 24137U, 21441U, 23782U, 19779U, 18513U, 13837U, 17977U, 
    10026U, 17323U, 13785U, 17938U, 25005U, 20116U, 13579U, 17775U, 
    9820U, 17184U, 13706U, 17886U, 24847U, 20057U, 13828U, 17965U, 
    10017U, 1362U, 13684U, 17858U, 9918U, 1313U, 24662U, 20004U, 
    13482U, 17705U, 9738U, 1189U, 13652U, 17845U, 9886U, 1266U, 
    24624U, 19980U, 13855U, 1588U, 10044U, 17347U, 13595U, 1446U, 
    9836U, 17206U, 18048U, 6697U, 12983U, 6624U, 10235U, 11788U, 
    14117U, 24232U, 10184U, 11589U, 14066U, 24032U, 15535U, 16865U, 
    5496U, 1006U, 3444U, 10265U, 11803U, 14132U, 24247U, 23756U, 
    19752U, 10397U, 11912U, 14235U, 18443U, 6816U, 24350U, 23322U, 
    3334U, 19612U, 25742U, 3555U, 20266U, 26671U, 3720U, 20347U, 
    26585U, 3701U, 20311U, 13028U, 25727U, 10342U, 11866U, 14195U, 
    24310U, 10622U, 12395U, 14595U, 25032U, 8379U, 10228U, 11781U, 
    14110U, 24225U, 10295U, 11833U, 14162U, 24277U, 10430U, 12079U, 
    14337U, 24551U, 23671U, 19718U, 10131U, 11497U, 14013U, 17117U, 
    23947U, 15550U, 16874U, 5507U, 10272U, 11810U, 14139U, 24254U, 
    10311U, 11849U, 14178U, 24293U, 10444U, 12093U, 14351U, 24565U, 
    23762U, 19760U, 10403U, 11934U, 14241U, 18450U, 24372U, 21574U, 
    18601U, 6915U, 10653U, 12521U, 14626U, 25118U, 10070U, 13547U, 
    1418U, 13662U, 1471U, 24633U, 1830U, 24209U, 1804U, 13620U, 
    17810U, 13725U, 17899U, 24873U, 20069U, 10762U, 12688U, 14782U, 
    25285U, 10586U, 12359U, 14549U, 24986U, 10552U, 12305U, 14515U, 
    24918U, 10744U, 12670U, 14764U, 25267U, 16978U, 5575U, 9788U, 
    1220U, 9896U, 1281U, 7672U, 13812U, 1562U, 10001U, 17301U, 
    13765U, 1532U, 9939U, 17246U, 10359U, 11883U, 14212U, 24327U, 
    10815U, 12752U, 14835U, 25358U, 17382U, 5657U, 26564U, 20288U, 
    180U, 1962U, 15806U, 23896U, 17015U, 5599U, 3356U, 157U, 
    15789U, 1158U, 5320U, 7876U, 1904U, 21679U, 18650U, 13141U, 
    17618U, 15616U, 3229U, 13019U, 17564U, 18471U, 16892U, 5529U, 
    16321U, 18824U, 22348U, 3299U, 13088U, 17594U, 19088U, 18801U, 
    6942U, 192U, 15824U, 19832U, 7772U, 11016U, 14884U, 18079U, 
    6714U, 17403U, 5814U, 15425U, 18432U, 4670U, 4033U, 4131U, 
    4837U, 4853U, 4163U, 4101U, 4992U, 4906U, 4747U, 4375U, 
    4759U, 4402U, 4937U, 4015U, 4971U, 4108U, 5003U, 5062U, 
    4248U, 4307U, 21879U, 14955U, 18148U, 18838U, 12965U, 14893U, 
    23605U, 19685U, 18094U, 23589U, 19677U, 17519U, 23774U, 13240U, 
    17657U, 19768U, 21547U, 18574U, 22044U, 18944U, 15005U, 18173U, 
    22331U, 19062U, 23767U, 13232U, 6657U, 7752U, 21517U, 18547U, 
    21883U, 18845U, 14999U, 18164U, 22325U, 19053U, 23326U, 14974U, 
    19694U, 18156U, 23653U, 19703U, 19619U, 13032U, 14898U, 18102U, 
    17579U, 2409U, 6246U, 22789U, 7230U, 656U, 2666U, 6515U, 
    19864U, 23109U, 19525U, 7511U, 23611U, 23732U, 19744U, 23618U, 
    61U, 23631U, 10214U, 11759U, 14096U, 24136U, 23241U, 19604U, 
    7633U, 21653U, 18632U, 7000U, 13449U, 17684U, 6687U, 22210U, 
    16940U, 5553U, 3279U, 10326U, 6743U, 19038U, 6979U, 23841U, 
    25737U, 3548U, 20258U, 5037U, 11345U, 
};

static inline void InitMipsMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(MipsInsts, MipsInstrNameIndices, MipsInstrNameData, 2749);
}

} // end namespace llvm
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct MipsGenInstrInfo : public TargetInstrInfo {
  explicit MipsGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~MipsGenInstrInfo() override = default;

};
} // end namespace llvm
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_HELPER_DECLS
#undef GET_INSTRINFO_HELPER_DECLS


#endif // GET_INSTRINFO_HELPER_DECLS

#ifdef GET_INSTRINFO_HELPERS
#undef GET_INSTRINFO_HELPERS

#endif // GET_INSTRINFO_HELPERS

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc MipsInsts[];
extern const unsigned MipsInstrNameIndices[];
extern const char MipsInstrNameData[];
MipsGenInstrInfo::MipsGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(MipsInsts, MipsInstrNameIndices, MipsInstrNameData, 2749);
}
} // end namespace llvm
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace Mips {
namespace OpName {
enum {
OPERAND_LAST
};
} // end namespace OpName
} // end namespace Mips
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace Mips {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace Mips
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace Mips {
namespace OpTypes {
enum OperandType {
  InvertedImOperand = 0,
  InvertedImOperand64 = 1,
  PtrRC = 2,
  brtarget = 3,
  brtarget10_mm = 4,
  brtarget1SImm16 = 5,
  brtarget21 = 6,
  brtarget21_mm = 7,
  brtarget26 = 8,
  brtarget26_mm = 9,
  brtarget7_mm = 10,
  brtarget_lsl2_mm = 11,
  brtarget_mm = 12,
  brtargetr6 = 13,
  calloffset16 = 14,
  calltarget = 15,
  calltarget_mm = 16,
  condcode = 17,
  cpinst_operand = 18,
  f32imm = 19,
  f64imm = 20,
  i16imm = 21,
  i1imm = 22,
  i32imm = 23,
  i64imm = 24,
  i8imm = 25,
  imm64 = 26,
  jmpoffset16 = 27,
  jmptarget = 28,
  jmptarget_mm = 29,
  li16_imm = 30,
  mem = 31,
  mem16 = 32,
  mem16_ea = 33,
  mem16sp = 34,
  mem_ea = 35,
  mem_mm_11 = 36,
  mem_mm_12 = 37,
  mem_mm_16 = 38,
  mem_mm_4 = 39,
  mem_mm_4_lsl1 = 40,
  mem_mm_4_lsl2 = 41,
  mem_mm_4sp = 42,
  mem_mm_9 = 43,
  mem_mm_gp_simm7_lsl2 = 44,
  mem_mm_sp_imm5_lsl2 = 45,
  mem_msa = 46,
  mem_simm10 = 47,
  mem_simm10_lsl1 = 48,
  mem_simm10_lsl2 = 49,
  mem_simm10_lsl3 = 50,
  mem_simm11 = 51,
  mem_simm12 = 52,
  mem_simm16 = 53,
  mem_simm9 = 54,
  mem_simm9_exp = 55,
  mem_simmptr = 56,
  pcrel16 = 57,
  ptype0 = 58,
  ptype1 = 59,
  ptype2 = 60,
  ptype3 = 61,
  ptype4 = 62,
  ptype5 = 63,
  reglist = 64,
  reglist16 = 65,
  simm10 = 66,
  simm10_64 = 67,
  simm10_lsl1 = 68,
  simm10_lsl2 = 69,
  simm10_lsl3 = 70,
  simm11 = 71,
  simm12 = 72,
  simm16 = 73,
  simm16_64 = 74,
  simm16_relaxed = 75,
  simm18_lsl3 = 76,
  simm19_lsl2 = 77,
  simm23_lsl2 = 78,
  simm32 = 79,
  simm32_relaxed = 80,
  simm3_lsa2 = 81,
  simm4 = 82,
  simm5 = 83,
  simm6 = 84,
  simm7_lsl2 = 85,
  simm9 = 86,
  simm9_addiusp = 87,
  size_ins = 88,
  type0 = 89,
  type1 = 90,
  type2 = 91,
  type3 = 92,
  type4 = 93,
  type5 = 94,
  uimm1 = 95,
  uimm10 = 96,
  uimm16 = 97,
  uimm16_64 = 98,
  uimm16_64_relaxed = 99,
  uimm16_altrelaxed = 100,
  uimm16_relaxed = 101,
  uimm1_ptr = 102,
  uimm2 = 103,
  uimm20 = 104,
  uimm26 = 105,
  uimm2_plus1 = 106,
  uimm2_ptr = 107,
  uimm3 = 108,
  uimm32_coerced = 109,
  uimm3_ptr = 110,
  uimm3_shift = 111,
  uimm4 = 112,
  uimm4_andi = 113,
  uimm4_ptr = 114,
  uimm5 = 115,
  uimm5_64 = 116,
  uimm5_64_report_uimm6 = 117,
  uimm5_inssize_plus1 = 118,
  uimm5_lsl2 = 119,
  uimm5_plus1 = 120,
  uimm5_plus1_report_uimm6 = 121,
  uimm5_plus32 = 122,
  uimm5_plus32_normalize = 123,
  uimm5_plus32_normalize_64 = 124,
  uimm5_plus33 = 125,
  uimm5_report_uimm6 = 126,
  uimm6 = 127,
  uimm6_lsl2 = 128,
  uimm7 = 129,
  uimm8 = 130,
  uimm_range_2_64 = 131,
  uimmz = 132,
  untyped_imm_0 = 133,
  vsplat_simm10 = 134,
  vsplat_simm5 = 135,
  vsplat_uimm1 = 136,
  vsplat_uimm2 = 137,
  vsplat_uimm3 = 138,
  vsplat_uimm4 = 139,
  vsplat_uimm5 = 140,
  vsplat_uimm6 = 141,
  vsplat_uimm8 = 142,
  ACC64DSPOpnd = 143,
  AFGR64Opnd = 144,
  CCROpnd = 145,
  COP0Opnd = 146,
  COP2Opnd = 147,
  COP3Opnd = 148,
  DSPROpnd = 149,
  FCCRegsOpnd = 150,
  FGR32Opnd = 151,
  FGR64Opnd = 152,
  FGRCCOpnd = 153,
  GPR32NonZeroOpnd = 154,
  GPR32Opnd = 155,
  GPR32ZeroOpnd = 156,
  GPR64Opnd = 157,
  GPRMM16Opnd = 158,
  GPRMM16OpndMoveP = 159,
  GPRMM16OpndMovePPairFirst = 160,
  GPRMM16OpndMovePPairSecond = 161,
  GPRMM16OpndZero = 162,
  HI32DSPOpnd = 163,
  HWRegsOpnd = 164,
  LO32DSPOpnd = 165,
  MSA128BOpnd = 166,
  MSA128CROpnd = 167,
  MSA128DOpnd = 168,
  MSA128F16Opnd = 169,
  MSA128HOpnd = 170,
  MSA128WOpnd = 171,
  StrictlyAFGR64Opnd = 172,
  StrictlyFGR32Opnd = 173,
  StrictlyFGR64Opnd = 174,
  ACC128 = 175,
  ACC64 = 176,
  ACC64DSP = 177,
  AFGR64 = 178,
  CCR = 179,
  COP0 = 180,
  COP2 = 181,
  COP3 = 182,
  CPU16Regs = 183,
  CPU16RegsPlusSP = 184,
  CPURAReg = 185,
  CPUSPReg = 186,
  DSPCC = 187,
  DSPR = 188,
  FCC = 189,
  FGR32 = 190,
  FGR64 = 191,
  FGRCC = 192,
  GP32 = 193,
  GP64 = 194,
  GPR32 = 195,
  GPR32NONZERO = 196,
  GPR32ZERO = 197,
  GPR64 = 198,
  GPRMM16 = 199,
  GPRMM16MoveP = 200,
  GPRMM16MovePPairFirst = 201,
  GPRMM16MovePPairSecond = 202,
  GPRMM16Zero = 203,
  HI32 = 204,
  HI32DSP = 205,
  HI64 = 206,
  HWRegs = 207,
  LO32 = 208,
  LO32DSP = 209,
  LO64 = 210,
  MSA128B = 211,
  MSA128D = 212,
  MSA128F16 = 213,
  MSA128H = 214,
  MSA128W = 215,
  MSA128WEvens = 216,
  MSACtrl = 217,
  OCTEON_MPL = 218,
  OCTEON_P = 219,
  SP32 = 220,
  SP64 = 221,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace Mips
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

#ifdef GET_INSTRINFO_OPERAND_TYPE
#undef GET_INSTRINFO_OPERAND_TYPE
namespace llvm {
namespace Mips {
LLVM_READONLY
static int getOperandType(uint16_t Opcode, uint16_t OpIdx) {
  const int Offsets[] = {
    0,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    5,
    8,
    12,
    13,
    17,
    20,
    20,
    21,
    23,
    25,
    25,
    26,
    27,
    29,
    29,
    35,
    36,
    36,
    38,
    39,
    39,
    39,
    39,
    39,
    39,
    41,
    44,
    44,
    47,
    50,
    53,
    56,
    59,
    62,
    65,
    68,
    71,
    74,
    75,
    76,
    78,
    80,
    83,
    85,
    89,
    91,
    93,
    95,
    97,
    99,
    101,
    103,
    105,
    107,
    108,
    110,
    112,
    114,
    119,
    124,
    129,
    131,
    136,
    141,
    145,
    148,
    151,
    154,
    157,
    160,
    163,
    166,
    169,
    172,
    175,
    178,
    181,
    184,
    186,
    188,
    189,
    190,
    191,
    193,
    195,
    197,
    199,
    200,
    203,
    205,
    208,
    210,
    213,
    216,
    219,
    223,
    227,
    231,
    235,
    240,
    244,
    249,
    253,
    258,
    262,
    267,
    271,
    275,
    278,
    281,
    284,
    287,
    290,
    294,
    298,
    301,
    304,
    307,
    309,
    311,
    313,
    315,
    317,
    319,
    321,
    323,
    325,
    327,
    329,
    331,
    333,
    336,
    338,
    341,
    344,
    347,
    350,
    353,
    356,
    359,
    362,
    365,
    368,
    371,
    374,
    375,
    378,
    382,
    385,
    389,
    391,
    393,
    395,
    397,
    399,
    401,
    403,
    405,
    407,
    409,
    411,
    413,
    415,
    417,
    419,
    421,
    423,
    426,
    428,
    430,
    432,
    435,
    438,
    441,
    445,
    452,
    456,
    460,
    464,
    468,
    472,
    479,
    482,
    488,
    491,
    494,
    497,
    500,
    503,
    509,
    512,
    518,
    521,
    524,
    527,
    530,
    533,
    539,
    542,
    548,
    551,
    554,
    557,
    560,
    563,
    569,
    572,
    578,
    581,
    584,
    587,
    590,
    593,
    599,
    602,
    608,
    611,
    614,
    617,
    620,
    623,
    629,
    632,
    638,
    641,
    644,
    647,
    650,
    653,
    659,
    662,
    668,
    671,
    674,
    677,
    680,
    683,
    689,
    692,
    698,
    701,
    704,
    707,
    710,
    713,
    719,
    722,
    728,
    731,
    734,
    737,
    740,
    743,
    749,
    752,
    758,
    761,
    764,
    767,
    770,
    773,
    779,
    782,
    788,
    791,
    794,
    797,
    800,
    803,
    809,
    810,
    811,
    812,
    815,
    818,
    821,
    824,
    827,
    830,
    833,
    836,
    839,
    842,
    845,
    848,
    851,
    854,
    857,
    860,
    863,
    866,
    869,
    872,
    875,
    878,
    881,
    884,
    887,
    890,
    893,
    896,
    899,
    902,
    905,
    908,
    911,
    914,
    915,
    919,
    923,
    927,
    931,
    935,
    936,
    937,
    938,
    941,
    944,
    947,
    950,
    953,
    956,
    959,
    962,
    965,
    968,
    971,
    974,
    977,
    980,
    983,
    986,
    988,
    991,
    994,
    997,
    999,
    1000,
    1003,
    1006,
    1009,
    1012,
    1015,
    1018,
    1021,
    1024,
    1027,
    1030,
    1033,
    1036,
    1039,
    1042,
    1045,
    1048,
    1048,
    1051,
    1054,
    1056,
    1058,
    1060,
    1062,
    1064,
    1066,
    1070,
    1074,
    1078,
    1082,
    1086,
    1090,
    1094,
    1098,
    1102,
    1106,
    1110,
    1114,
    1118,
    1122,
    1126,
    1127,
    1128,
    1129,
    1130,
    1131,
    1132,
    1134,
    1137,
    1140,
    1143,
    1146,
    1149,
    1152,
    1156,
    1159,
    1163,
    1166,
    1169,
    1171,
    1173,
    1176,
    1178,
    1180,
    1183,
    1186,
    1188,
    1190,
    1192,
    1194,
    1196,
    1198,
    1200,
    1203,
    1205,
    1208,
    1210,
    1211,
    1214,
    1216,
    1218,
    1220,
    1222,
    1224,
    1226,
    1228,
    1230,
    1232,
    1234,
    1237,
    1239,
    1240,
    1242,
    1244,
    1246,
    1248,
    1251,
    1254,
    1257,
    1259,
    1262,
    1264,
    1267,
    1267,
    1270,
    1273,
    1276,
    1279,
    1282,
    1285,
    1288,
    1291,
    1294,
    1297,
    1300,
    1303,
    1306,
    1309,
    1311,
    1313,
    1315,
    1317,
    1319,
    1322,
    1325,
    1328,
    1331,
    1338,
    1345,
    1346,
    1347,
    1348,
    1349,
    1350,
    1351,
    1352,
    1353,
    1354,
    1355,
    1359,
    1363,
    1367,
    1371,
    1373,
    1375,
    1377,
    1379,
    1381,
    1383,
    1387,
    1391,
    1395,
    1399,
    1402,
    1405,
    1408,
    1411,
    1414,
    1417,
    1420,
    1423,
    1427,
    1431,
    1432,
    1433,
    1436,
    1440,
    1444,
    1448,
    1452,
    1456,
    1460,
    1464,
    1468,
    1472,
    1476,
    1480,
    1484,
    1488,
    1492,
    1496,
    1499,
    1502,
    1505,
    1508,
    1511,
    1514,
    1517,
    1520,
    1520,
    1520,
    1523,
    1526,
    1529,
    1532,
    1535,
    1538,
    1541,
    1544,
    1547,
    1550,
    1553,
    1556,
    1559,
    1562,
    1565,
    1568,
    1571,
    1574,
    1577,
    1579,
    1581,
    1583,
    1585,
    1587,
    1590,
    1593,
    1596,
    1599,
    1602,
    1605,
    1608,
    1611,
    1613,
    1615,
    1617,
    1619,
    1621,
    1624,
    1627,
    1631,
    1635,
    1640,
    1645,
    1650,
    1655,
    1660,
    1665,
    1670,
    1675,
    1680,
    1685,
    1690,
    1695,
    1698,
    1701,
    1704,
    1707,
    1710,
    1711,
    1712,
    1713,
    1714,
    1715,
    1716,
    1717,
    1718,
    1719,
    1720,
    1721,
    1722,
    1723,
    1723,
    1723,
    1726,
    1729,
    1732,
    1735,
    1738,
    1741,
    1744,
    1747,
    1750,
    1753,
    1756,
    1759,
    1762,
    1764,
    1766,
    1768,
    1770,
    1772,
    1774,
    1777,
    1779,
    1781,
    1783,
    1785,
    1788,
    1791,
    1792,
    1795,
    1798,
    1801,
    1804,
    1807,
    1810,
    1813,
    1816,
    1819,
    1822,
    1825,
    1828,
    1831,
    1834,
    1837,
    1840,
    1843,
    1846,
    1849,
    1852,
    1855,
    1858,
    1861,
    1864,
    1867,
    1870,
    1873,
    1876,
    1879,
    1882,
    1885,
    1888,
    1891,
    1894,
    1897,
    1900,
    1903,
    1906,
    1909,
    1912,
    1915,
    1918,
    1921,
    1924,
    1927,
    1930,
    1933,
    1936,
    1939,
    1942,
    1945,
    1948,
    1951,
    1954,
    1957,
    1960,
    1963,
    1966,
    1969,
    1972,
    1975,
    1978,
    1981,
    1984,
    1987,
    1990,
    1994,
    1998,
    2000,
    2002,
    2005,
    2008,
    2011,
    2014,
    2017,
    2020,
    2023,
    2026,
    2029,
    2032,
    2035,
    2038,
    2041,
    2044,
    2048,
    2052,
    2055,
    2058,
    2061,
    2064,
    2067,
    2070,
    2073,
    2076,
    2079,
    2081,
    2083,
    2086,
    2089,
    2092,
    2095,
    2098,
    2101,
    2104,
    2107,
    2110,
    2113,
    2116,
    2119,
    2122,
    2125,
    2128,
    2131,
    2134,
    2136,
    2138,
    2141,
    2144,
    2147,
    2148,
    2149,
    2152,
    2155,
    2156,
    2159,
    2160,
    2161,
    2162,
    2166,
    2170,
    2173,
    2176,
    2179,
    2182,
    2183,
    2184,
    2186,
    2188,
    2190,
    2192,
    2194,
    2196,
    2198,
    2200,
    2202,
    2204,
    2206,
    2208,
    2210,
    2212,
    2215,
    2218,
    2221,
    2224,
    2227,
    2230,
    2233,
    2236,
    2237,
    2240,
    2243,
    2246,
    2249,
    2252,
    2255,
    2257,
    2259,
    2261,
    2263,
    2265,
    2267,
    2269,
    2271,
    2274,
    2277,
    2280,
    2283,
    2286,
    2289,
    2292,
    2294,
    2296,
    2298,
    2300,
    2302,
    2304,
    2306,
    2308,
    2310,
    2312,
    2314,
    2316,
    2318,
    2320,
    2322,
    2324,
    2326,
    2328,
    2330,
    2332,
    2334,
    2336,
    2340,
    2344,
    2348,
    2352,
    2356,
    2360,
    2364,
    2368,
    2372,
    2376,
    2380,
    2384,
    2388,
    2392,
    2396,
    2400,
    2402,
    2404,
    2406,
    2408,
    2410,
    2412,
    2414,
    2416,
    2418,
    2420,
    2422,
    2424,
    2426,
    2429,
    2432,
    2435,
    2438,
    2441,
    2444,
    2446,
    2448,
    2450,
    2452,
    2454,
    2456,
    2458,
    2460,
    2462,
    2464,
    2466,
    2468,
    2470,
    2474,
    2478,
    2482,
    2486,
    2489,
    2492,
    2495,
    2498,
    2501,
    2504,
    2507,
    2510,
    2513,
    2516,
    2519,
    2522,
    2525,
    2528,
    2530,
    2532,
    2534,
    2536,
    2538,
    2540,
    2542,
    2544,
    2547,
    2550,
    2553,
    2555,
    2557,
    2559,
    2561,
    2563,
    2566,
    2569,
    2570,
    2571,
    2572,
    2574,
    2575,
    2576,
    2578,
    2580,
    2584,
    2588,
    2591,
    2594,
    2597,
    2600,
    2603,
    2606,
    2609,
    2612,
    2614,
    2616,
    2618,
    2620,
    2622,
    2624,
    2626,
    2627,
    2628,
    2630,
    2632,
    2632,
    2633,
    2634,
    2635,
    2636,
    2639,
    2642,
    2645,
    2648,
    2651,
    2654,
    2656,
    2658,
    2660,
    2662,
    2664,
    2666,
    2668,
    2670,
    2672,
    2674,
    2676,
    2679,
    2682,
    2685,
    2688,
    2691,
    2694,
    2697,
    2700,
    2702,
    2704,
    2706,
    2708,
    2712,
    2716,
    2720,
    2724,
    2726,
    2728,
    2730,
    2732,
    2735,
    2738,
    2741,
    2744,
    2747,
    2750,
    2753,
    2756,
    2759,
    2762,
    2765,
    2768,
    2771,
    2774,
    2777,
    2780,
    2782,
    2784,
    2786,
    2788,
    2791,
    2794,
    2797,
    2800,
    2803,
    2806,
    2809,
    2812,
    2815,
    2818,
    2821,
    2824,
    2827,
    2830,
    2833,
    2836,
    2838,
    2840,
    2842,
    2844,
    2847,
    2850,
    2853,
    2856,
    2859,
    2862,
    2865,
    2868,
    2871,
    2874,
    2877,
    2880,
    2882,
    2884,
    2886,
    2888,
    2890,
    2892,
    2895,
    2898,
    2901,
    2904,
    2906,
    2908,
    2911,
    2914,
    2917,
    2920,
    2923,
    2926,
    2928,
    2930,
    2933,
    2936,
    2939,
    2942,
    2944,
    2946,
    2949,
    2952,
    2955,
    2958,
    2961,
    2964,
    2967,
    2970,
    2973,
    2976,
    2979,
    2982,
    2985,
    2988,
    2991,
    2994,
    2997,
    3000,
    3003,
    3006,
    3009,
    3012,
    3015,
    3018,
    3021,
    3024,
    3027,
    3030,
    3033,
    3036,
    3039,
    3042,
    3045,
    3048,
    3051,
    3054,
    3057,
    3060,
    3063,
    3066,
    3069,
    3072,
    3075,
    3078,
    3081,
    3084,
    3087,
    3090,
    3093,
    3096,
    3099,
    3102,
    3105,
    3108,
    3111,
    3114,
    3117,
    3120,
    3123,
    3126,
    3129,
    3132,
    3135,
    3138,
    3141,
    3143,
    3145,
    3147,
    3149,
    3151,
    3153,
    3155,
    3157,
    3159,
    3161,
    3163,
    3165,
    3167,
    3169,
    3171,
    3173,
    3175,
    3177,
    3179,
    3181,
    3184,
    3186,
    3188,
    3190,
    3192,
    3194,
    3196,
    3198,
    3200,
    3202,
    3204,
    3206,
    3208,
    3210,
    3212,
    3214,
    3216,
    3218,
    3220,
    3223,
    3226,
    3229,
    3232,
    3235,
    3238,
    3241,
    3244,
    3247,
    3250,
    3253,
    3256,
    3259,
    3262,
    3265,
    3268,
    3271,
    3274,
    3277,
    3280,
    3283,
    3286,
    3289,
    3292,
    3295,
    3298,
    3301,
    3304,
    3307,
    3310,
    3313,
    3316,
    3319,
    3322,
    3325,
    3328,
    3331,
    3334,
    3337,
    3340,
    3343,
    3346,
    3349,
    3352,
    3355,
    3358,
    3361,
    3364,
    3367,
    3370,
    3373,
    3376,
    3379,
    3382,
    3385,
    3388,
    3391,
    3394,
    3397,
    3400,
    3403,
    3406,
    3409,
    3412,
    3415,
    3418,
    3421,
    3424,
    3427,
    3430,
    3433,
    3436,
    3439,
    3442,
    3445,
    3448,
    3451,
    3454,
    3457,
    3460,
    3463,
    3466,
    3469,
    3472,
    3475,
    3478,
    3481,
    3484,
    3487,
    3490,
    3493,
    3496,
    3499,
    3502,
    3505,
    3508,
    3510,
    3512,
    3514,
    3517,
    3520,
    3523,
    3526,
    3529,
    3533,
    3536,
    3539,
    3541,
    3543,
    3545,
    3547,
    3549,
    3552,
    3555,
    3555,
    3555,
    3555,
    3559,
    3563,
    3567,
    3571,
    3572,
    3577,
    3582,
    3587,
    3590,
    3593,
    3596,
    3599,
    3602,
    3605,
    3608,
    3611,
    3614,
    3617,
    3620,
    3623,
    3624,
    3625,
    3629,
    3633,
    3636,
    3638,
    3641,
    3643,
    3646,
    3649,
    3652,
    3653,
    3656,
    3658,
    3661,
    3663,
    3666,
    3669,
    3672,
    3675,
    3677,
    3679,
    3682,
    3685,
    3688,
    3691,
    3694,
    3697,
    3700,
    3703,
    3707,
    3711,
    3715,
    3719,
    3723,
    3727,
    3731,
    3735,
    3739,
    3743,
    3747,
    3751,
    3755,
    3759,
    3763,
    3767,
    3771,
    3775,
    3779,
    3783,
    3787,
    3791,
    3793,
    3797,
    3801,
    3805,
    3809,
    3813,
    3817,
    3821,
    3825,
    3829,
    3833,
    3837,
    3841,
    3845,
    3849,
    3853,
    3857,
    3861,
    3865,
    3869,
    3873,
    3877,
    3881,
    3884,
    3887,
    3890,
    3892,
    3894,
    3896,
    3899,
    3902,
    3904,
    3907,
    3910,
    3913,
    3916,
    3919,
    3922,
    3925,
    3928,
    3931,
    3933,
    3934,
    3935,
    3936,
    3938,
    3940,
    3940,
    3940,
    3940,
    3941,
    3942,
    3943,
    3944,
    3944,
    3944,
    3944,
    3944,
    3944,
    3945,
    3946,
    3947,
    3951,
    3954,
    3957,
    3960,
    3963,
    3966,
    3969,
    3972,
    3975,
    3978,
    3981,
    3984,
    3987,
    3990,
    3993,
    3996,
    3999,
    4002,
    4005,
    4008,
    4011,
    4014,
    4017,
    4020,
    4023,
    4027,
    4031,
    4035,
    4039,
    4041,
    4043,
    4045,
    4047,
    4049,
    4051,
    4054,
    4057,
    4060,
    4063,
    4066,
    4069,
    4072,
    4075,
    4078,
    4081,
    4084,
    4087,
    4090,
    4092,
    4094,
    4097,
    4100,
    4103,
    4106,
    4109,
    4112,
    4115,
    4118,
    4121,
    4124,
    4127,
    4130,
    4133,
    4136,
    4139,
    4142,
    4145,
    4148,
    4151,
    4154,
    4157,
    4160,
    4163,
    4166,
    4169,
    4172,
    4175,
    4178,
    4181,
    4184,
    4187,
    4190,
    4193,
    4196,
    4199,
    4202,
    4204,
    4206,
    4208,
    4210,
    4212,
    4214,
    4216,
    4218,
    4220,
    4222,
    4224,
    4226,
    4228,
    4230,
    4232,
    4234,
    4236,
    4238,
    4240,
    4242,
    4244,
    4246,
    4248,
    4250,
    4252,
    4254,
    4256,
    4258,
    4260,
    4264,
    4268,
    4271,
    4274,
    4277,
    4280,
    4283,
    4286,
    4289,
    4292,
    4294,
    4296,
    4298,
    4300,
    4302,
    4304,
    4306,
    4308,
    4312,
    4316,
    4319,
    4322,
    4325,
    4328,
    4331,
    4334,
    4337,
    4340,
    4343,
    4345,
    4347,
    4349,
    4351,
    4353,
    4355,
    4357,
    4360,
    4362,
    4364,
    4366,
    4368,
    4370,
    4372,
    4375,
    4378,
    4381,
    4384,
    4387,
    4390,
    4393,
    4396,
    4399,
    4402,
    4405,
    4408,
    4410,
    4412,
    4414,
    4416,
    4418,
    4420,
    4422,
    4424,
    4427,
    4430,
    4433,
    4436,
    4439,
    4442,
    4445,
    4448,
    4451,
    4454,
    4457,
    4460,
    4463,
    4466,
    4469,
    4472,
    4475,
    4478,
    4481,
    4483,
    4485,
    4487,
    4489,
    4492,
    4495,
    4497,
    4499,
    4501,
    4503,
    4504,
    4505,
    4507,
    4509,
    4512,
    4515,
    4518,
    4521,
    4524,
    4527,
    4530,
    4533,
    4536,
    4539,
    4542,
    4545,
    4546,
    4547,
    4550,
    4553,
    4556,
    4559,
    4562,
    4565,
    4568,
    4571,
    4574,
    4577,
    4580,
    4583,
    4586,
    4589,
    4592,
    4595,
    4600,
    4604,
    4608,
    4612,
    4616,
    4619,
    4624,
    4629,
    4634,
    4639,
    4642,
    4647,
    4652,
    4653,
    4654,
    4656,
    4657,
    4659,
    4660,
    4662,
    4664,
    4665,
    4667,
    4669,
    4671,
    4673,
    4674,
    4675,
    4676,
    4677,
    4679,
    4681,
    4683,
    4685,
    4687,
    4689,
    4690,
    4691,
    4692,
    4693,
    4694,
    4695,
    4696,
    4697,
    4698,
    4699,
    4700,
    4701,
    4702,
    4703,
    4704,
    4704,
    4704,
    4705,
    4706,
    4709,
    4712,
    4715,
    4718,
    4721,
    4724,
    4727,
    4730,
    4733,
    4736,
    4739,
    4742,
    4745,
    4748,
    4751,
    4754,
    4757,
    4760,
    4763,
    4766,
    4769,
    4772,
    4775,
    4778,
    4780,
    4782,
    4784,
    4786,
    4790,
    4792,
    4796,
    4799,
    4802,
    4805,
    4808,
    4811,
    4814,
    4817,
    4820,
    4823,
    4826,
    4829,
    4832,
    4835,
    4838,
    4841,
    4844,
    4847,
    4850,
    4853,
    4856,
    4859,
    4862,
    4864,
    4866,
    4869,
    4872,
    4875,
    4878,
    4881,
    4884,
    4887,
    4890,
    4893,
    4896,
    4900,
    4904,
    4908,
    4910,
    4913,
    4916,
    4919,
    4921,
    4923,
    4925,
    4928,
    4931,
    4934,
    4937,
    4940,
    4943,
    4946,
    4949,
    4952,
    4955,
    4958,
    4961,
    4964,
    4967,
    4971,
    4975,
    4979,
    4983,
    4987,
    4990,
    4993,
    4996,
    4998,
    5000,
    5004,
    5008,
    5012,
    5016,
    5020,
    5024,
    5027,
    5029,
    5032,
    5035,
    5038,
    5041,
    5044,
    5047,
    5050,
    5053,
    5056,
    5059,
    5062,
    5065,
    5068,
    5070,
    5072,
    5074,
    5077,
    5080,
    5083,
    5086,
    5088,
    5092,
    5096,
    5100,
    5104,
    5108,
    5112,
    5114,
    5118,
    5122,
    5124,
    5128,
    5132,
    5136,
    5140,
    5144,
    5148,
    5152,
    5156,
    5160,
    5162,
    5166,
    5170,
    5174,
    5178,
    5182,
    5186,
    5190,
    5194,
    5198,
    5202,
    5206,
    5210,
    5213,
    5216,
    5219,
    5222,
    5225,
    5228,
    5231,
    5234,
    5237,
    5240,
    5243,
    5246,
    5249,
    5252,
    5255,
    5258,
    5261,
    5264,
    5267,
    5270,
    5273,
    5276,
    5279,
    5282,
    5285,
    5288,
    5291,
    5294,
    5297,
    5300,
    5302,
    5304,
    5306,
    5308,
    5311,
    5313,
    5316,
    5319,
    5322,
    5324,
    5326,
    5328,
    5330,
    5332,
    5335,
    5338,
    5339,
    5340,
    5341,
    5343,
    5345,
    5346,
    5347,
    5348,
    5349,
    5351,
    5353,
    5354,
    5359,
    5362,
    5365,
    5368,
    5371,
    5374,
    5377,
    5380,
    5383,
    5386,
    5389,
    5392,
    5395,
    5398,
    5401,
    5404,
    5407,
    5410,
    5413,
    5416,
    5419,
    5422,
    5425,
    5428,
    5431,
    5434,
    5437,
    5440,
    5443,
    5446,
    5449,
    5452,
    5455,
    5458,
    5461,
    5464,
    5467,
    5470,
    5473,
    5476,
    5479,
    5482,
    5485,
    5487,
    5489,
    5493,
    5497,
    5499,
    5503,
    5507,
    5511,
    5515,
    5519,
    5523,
    5527,
    5531,
    5535,
    5539,
    5543,
    5547,
    5551,
    5555,
    5559,
    5563,
    5567,
    5571,
    5575,
    5579,
    5583,
    5587,
    5591,
    5595,
    5599,
    5603,
    5607,
    5611,
    5615,
    5619,
    5623,
    5627,
    5631,
    5635,
    5639,
    5643,
    5647,
    5651,
    5655,
    5659,
    5661,
    5665,
    5669,
    5673,
    5677,
    5681,
    5685,
    5687,
    5691,
    5695,
    5697,
    5701,
    5705,
    5709,
    5713,
    5717,
    5721,
    5725,
    5729,
    5733,
    5735,
    5739,
    5743,
    5747,
    5751,
    5754,
    5757,
    5759,
    5761,
    5763,
    5765,
    5767,
    5770,
    5772,
    5775,
    5778,
    5781,
    5784,
    5787,
    5790,
    5793,
    5795,
    5798,
    5801,
    5802,
    5803,
    5805,
    5807,
    5808,
    5811,
    5814,
    5815,
    5816,
    5818,
    5820,
    5821,
    5822,
    5823,
    5824,
    5825,
    5826,
    5827,
    5832,
    5835,
    5838,
    5841,
    5844,
    5847,
    5850,
    5853,
    5856,
    5859,
    5862,
    5865,
    5868,
    5871,
    5874,
    5877,
    5880,
    5883,
    5886,
    5889,
    5892,
    5895,
    5898,
    5901,
    5905,
    5909,
    5913,
    5917,
    5919,
    5922,
    5925,
    5928,
    5931,
    5933,
    5935,
    5937,
    5940,
    5943,
    5946,
    5949,
    5952,
    5955,
    5958,
    5961,
    5964,
    5967,
    5970,
    5973,
    5976,
    5979,
    5982,
    5983,
    5984,
    5986,
    5988,
    5990,
    5992,
    5994,
    5996,
    5998,
    6000,
    6002,
    6004,
    6008,
    6012,
    6016,
    6020,
    6024,
    6028,
    6032,
    6036,
    6040,
    6044,
    6047,
    6050,
    6053,
    6056,
    6059,
    6062,
    6064,
    6066,
    6068,
    6070,
    6073,
    6076,
    6079,
    6082,
    6085,
    6088,
    6091,
    6094,
    6097,
    6100,
    6103,
    6106,
    6109,
    6112,
    6115,
    6115,
    6115,
    6115,
    6118,
    6121,
    6124,
    6127,
    6130,
    6133,
    6136,
    6139,
    6141,
    6143,
    6145,
    6147,
    6150,
    6153,
    6156,
    6159,
    6162,
    6165,
    6167,
    6169,
    6171,
    6173,
    6175,
    6177,
    6179,
    6181,
    6183,
    6185,
    6187,
    6189,
    6191,
    6193,
    6195,
    6197,
    6199,
    6201,
    6203,
    6205,
    6207,
    6210,
    6213,
    6216,
    6219,
    6222,
    6225,
    6228,
    6231,
    6234,
    6237,
    6241,
    6245,
    6249,
    6253,
    6256,
    6259,
    6262,
    6265,
    6268,
    6271,
    6274,
    6278,
    6282,
    6284,
    6286,
    6288,
    6290,
    6293,
    6296,
    6299,
    6302,
    6304,
    6306,
    6308,
    6310,
    6312,
    6314,
    6316,
    6318,
    6320,
    6322,
    6324,
    6326,
    6328,
    6330,
    6332,
    6334,
    6336,
    6338,
    6340,
    6343,
    6346,
    6349,
    6352,
    6354,
    6356,
    6358,
    6360,
    6362,
    6364,
    6366,
    6368,
    6370,
    6372,
    6374,
    6376,
    6378,
    6380,
    6382,
    6384,
    6386,
    6386,
    6386,
    6388,
    6390,
    6393,
    6396,
    6399,
    6402,
    6405,
    6408,
    6411,
    6414,
    6417,
    6420,
    6423,
    6426,
    6429,
    6432,
    6435,
    6438,
    6442,
    6446,
    6450,
    6454,
    6458,
    6462,
    6466,
    6470,
    6474,
    6478,
    6481,
    6482,
    6483,
    6484,
    6485,
    6486,
    6487,
    6490,
    6493,
    6496,
    6499,
    6502,
    6505,
    6508,
    6511,
    6513,
    6515,
    6518,
    6521,
    6524,
    6527,
    6529,
    6531,
    6533,
    6535,
    6537,
    6539,
    6542,
    6545,
    6548,
    6551,
    6554,
    6557,
    6560,
    6563,
    6566,
    6569,
    6572,
    6575,
    6578,
    6581,
    6585,
    6589,
    6593,
    6597,
    6600,
    6603,
    6606,
    6609,
    6612,
    6615,
    6618,
    6621,
    6624,
    6627,
    6630,
    6633,
    6636,
    6639,
    6642,
    6645,
    6648,
    6651,
    6654,
    6657,
    6660,
    6663,
    6666,
    6669,
    6672,
    6675,
    6678,
    6681,
    6684,
    6687,
    6690,
    6693,
    6696,
    6699,
    6702,
    6705,
    6708,
    6711,
    6714,
    6717,
    6720,
    6723,
    6726,
    6729,
    6732,
    6735,
    6738,
    6741,
    6744,
    6747,
    6750,
    6753,
    6756,
    6759,
    6762,
    6765,
    6768,
    6771,
    6774,
    6777,
    6780,
    6781,
    6782,
    6786,
    6790,
    6794,
    6798,
    6802,
    6806,
    6810,
    6814,
    6817,
    6820,
    6823,
    6825,
    6827,
    6830,
    6833,
    6836,
    6839,
    6842,
    6845,
    6848,
    6851,
    6854,
    6857,
    6860,
    6863,
    6866,
    6869,
    6872,
    6875,
    6878,
    6881,
    6884,
    6887,
    6890,
    6893,
    6896,
    6899,
    6902,
    6905,
    6908,
    6911,
    6914,
    6917,
    6920,
    6923,
    6926,
    6929,
    6932,
    6935,
    6938,
    6941,
    6944,
    6947,
    6950,
    6953,
    6956,
    6959,
    6962,
    6965,
    6968,
    6971,
    6974,
    6977,
    6980,
    6983,
    6986,
    6989,
    6992,
    6995,
    6998,
    7001,
    7004,
    7007,
    7010,
    7013,
    7016,
    7019,
    7022,
    7025,
    7028,
    7031,
    7034,
    7037,
    7040,
    7043,
    7046,
    7049,
    7052,
    7055,
    7055,
    7055,
    7055,
    7058,
    7061,
    7064,
    7067,
    7070,
    7073,
    7076,
    7079,
    7082,
    7085,
    7088,
    7091,
    7094,
    7097,
    7100,
    7103,
    7106,
    7109,
    7112,
    7115,
    7118,
    7121,
    7124,
    7127,
    7130,
    7133,
    7136,
    7139,
    7142,
    7145,
    7148,
    7151,
    7154,
    7157,
    7160,
    7163,
    7166,
    7169,
    7172,
    7175,
    7178,
    7181,
    7184,
    7187,
    7190,
    7193,
    7196,
    7199,
    7202,
    7205,
    7208,
    7211,
    7214,
    7217,
    7220,
    7223,
    7226,
    7229,
    7232,
    7235,
    7238,
    7241,
    7244,
    7247,
    7250,
    7253,
    7256,
    7259,
    7262,
    7265,
    7268,
    7271,
    7274,
    7277,
    7280,
    7283,
    7286,
    7289,
    7292,
    7295,
    7298,
    7301,
    7304,
    7307,
    7310,
    7313,
    7316,
    7320,
    7323,
    7326,
    7329,
    7332,
    7335,
    7338,
    7341,
    7344,
    7347,
    7350,
    7353,
    7354,
    7356,
    7358,
    7360,
    7361,
    7362,
    7363,
    7364,
    7364,
    7364,
    7367,
    7369,
    7371,
    7374,
    7377,
    7380,
    7382,
    7384,
    7386,
    7388,
    7390,
    7392,
    7395,
    7398,
    7401,
    7404,
    7407,
    7410,
    7413,
    7416,
    7418,
    7420,
    7423,
    7426,
    7428,
    7430,
    7432,
    7434,
    7437,
    7440,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7443,
    7446,
    7448,
    7450,
    7452,
    7455,
    7458,
    7461,
    7464,
    7466,
    7468,
    7471,
    7473,
    7475,
    7477,
    7479,
    7481,
    7483,
    7485,
    7487,
    7489,
    7491,
    7493,
    7495,
    7497,
    7499,
    7502,
    7505,
    7508,
    7512,
    7516,
    7520,
    7524,
    7524,
    7525,
    7526,
    7528,
    7530,
    7532,
    7534,
    7536,
    7538,
    7541,
    7544,
    7547,
    7550,
    7553,
    7556,
    7559,
    7562,
    7565,
    7568,
    7571,
    7574,
    7577,
  };
  const int OpcodeOperandTypes[] = {
    -1, 
    /**/
    /**/
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    /**/
    -1, -1, OpTypes::i32imm, 
    -1, -1, -1, OpTypes::i32imm, 
    -1, 
    -1, -1, -1, OpTypes::i32imm, 
    -1, -1, OpTypes::i32imm, 
    /**/
    -1, 
    -1, -1, 
    -1, -1, 
    /**/
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::i64imm, OpTypes::i32imm, 
    /**/
    -1, OpTypes::i64imm, OpTypes::i32imm, -1, OpTypes::i32imm, OpTypes::i32imm, 
    -1, 
    /**/
    -1, OpTypes::i32imm, 
    -1, 
    /**/
    /**/
    /**/
    /**/
    /**/
    -1, -1, 
    -1, -1, -1, 
    /**/
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, 
    OpTypes::type0, 
    OpTypes::type0, -1, 
    OpTypes::type0, -1, 
    OpTypes::type0, OpTypes::type1, -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::ptype1, OpTypes::type2, -1, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::ptype1, OpTypes::type2, -1, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::ptype1, OpTypes::type2, -1, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::ptype0, OpTypes::type1, OpTypes::ptype0, OpTypes::ptype2, -1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::type0, -1, 
    OpTypes::type0, 
    -1, 
    -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, -1, 
    OpTypes::type0, -1, 
    OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, -1, OpTypes::type1, OpTypes::type1, 
    OpTypes::type0, -1, OpTypes::type1, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, -1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    -1, 
    OpTypes::ptype0, -1, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, OpTypes::type1, -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, -1, 
    OpTypes::type0, -1, 
    OpTypes::ptype0, OpTypes::type1, OpTypes::i32imm, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR64, -1, OpTypes::GPR64, OpTypes::GPR64, 
    OpTypes::GPR64, -1, OpTypes::GPR64, OpTypes::GPR64, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR64, -1, OpTypes::GPR64, 
    OpTypes::GPR32, -1, OpTypes::GPR32, 
    OpTypes::GPR32, -1, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::brtarget, 
    OpTypes::brtarget, 
    OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::brtarget, 
    OpTypes::brtarget_mm, 
    OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::imm64, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::simm16, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::simm16, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::simm16, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::simm16, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::simm16, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::simm16, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::brtarget, 
    OpTypes::AFGR64Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::FGRCCOpnd, 
    OpTypes::cpinst_operand, OpTypes::cpinst_operand, OpTypes::i32imm, 
    OpTypes::FGR64, OpTypes::MSA128D, OpTypes::uimm1_ptr, 
    OpTypes::FGR32, OpTypes::MSA128W, OpTypes::uimm2_ptr, 
    OpTypes::FGRCCOpnd, OpTypes::GPR32Opnd, 
    OpTypes::simm32, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::simm32_relaxed, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::imm64, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::simm32_relaxed, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::imm64, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::simm32_relaxed, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    /**/
    OpTypes::GPR32Opnd, OpTypes::AFGR64Opnd, OpTypes::i32imm, 
    OpTypes::GPR32Opnd, OpTypes::FGR64Opnd, OpTypes::i32imm, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128D, OpTypes::MSA128D, 
    OpTypes::MSA128W, OpTypes::MSA128W, 
    OpTypes::MSA128D, OpTypes::FGR64, 
    OpTypes::MSA128W, OpTypes::FGR32, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, OpTypes::simm16, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::GPR32Opnd, OpTypes::GPR64Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::uimm1, OpTypes::FGR64Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::GPR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::GPR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::uimm2, OpTypes::FGR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::GPR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::GPR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::calltarget, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::MSA128F16, -1, OpTypes::simm10, 
    OpTypes::ACC128, -1, OpTypes::simm16, 
    OpTypes::ACC64, -1, OpTypes::simm16, 
    OpTypes::ACC64DSPOpnd, -1, OpTypes::simm16, 
    OpTypes::DSPCC, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::brtarget, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::reglist, -1, OpTypes::simm12, 
    OpTypes::GPR32Opnd, OpTypes::i32imm, 
    OpTypes::GPR64Opnd, OpTypes::imm64, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::uimm32_coerced, 
    OpTypes::GPR64Opnd, OpTypes::imm64, 
    OpTypes::StrictlyFGR64Opnd, OpTypes::imm64, 
    OpTypes::StrictlyAFGR64Opnd, OpTypes::imm64, 
    OpTypes::GPR32Opnd, OpTypes::imm64, 
    OpTypes::StrictlyFGR32Opnd, OpTypes::imm64, 
    OpTypes::GPR32Opnd, OpTypes::imm64, 
    OpTypes::CPU16Regs, OpTypes::simm32, OpTypes::simm32, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR32Opnd, OpTypes::COP0Opnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::GPR64, OpTypes::GPR64, 
    OpTypes::FGR64Opnd, OpTypes::MSA128F16, 
    OpTypes::FGR32Opnd, OpTypes::MSA128F16, 
    OpTypes::MSA128F16, OpTypes::FGR64Opnd, 
    OpTypes::MSA128F16, OpTypes::FGR32Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::COP0Opnd, OpTypes::GPR32Opnd, OpTypes::uimm3, 
    OpTypes::FGR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm32_relaxed, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    /**/
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm32_relaxed, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::imm64, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::DSPCC, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPCC, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPCC, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPCC, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPCC, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPCC, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::AFGR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC128, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::ACC128, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::ACC128, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::ACC128, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64, 
    OpTypes::GPR32, OpTypes::ACC64, 
    OpTypes::GPR64, OpTypes::ACC128, 
    OpTypes::GPR32, OpTypes::ACC64, 
    OpTypes::GPR32, OpTypes::ACC64, 
    OpTypes::GPR64, OpTypes::ACC128, 
    OpTypes::GPR32, OpTypes::ACC64, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64, 
    OpTypes::ACC64, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::ACC128, OpTypes::GPR64, OpTypes::GPR64, 
    OpTypes::ACC64DSP, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::ACC64, OpTypes::GPR32, OpTypes::GPR32, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPCC, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPCC, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::FCCRegsOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::FCCRegsOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::GPR32Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::GPR32Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::GPR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm16, 
    /**/
    /**/
    OpTypes::AFGR64Opnd, -1, OpTypes::simm16, 
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm32, 
    OpTypes::GPR32NonZeroOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm32_relaxed, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm32, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::imm64, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm32_coerced, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::imm64, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm32, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::imm64, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm32_coerced, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::imm64, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::imm64, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::imm64, 
    OpTypes::GPR32, OpTypes::MSA128B, 
    OpTypes::GPR32, OpTypes::MSA128D, 
    OpTypes::GPR32, OpTypes::MSA128H, 
    OpTypes::GPR32, OpTypes::MSA128B, 
    OpTypes::GPR32, OpTypes::MSA128W, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm32_relaxed, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC128, -1, OpTypes::simm16, 
    OpTypes::ACC64, -1, OpTypes::simm16, 
    OpTypes::ACC64DSPOpnd, -1, OpTypes::simm16, 
    OpTypes::DSPCC, -1, OpTypes::simm16, 
    OpTypes::MSA128F16, -1, OpTypes::simm10, 
    OpTypes::reglist, -1, OpTypes::simm12, 
    OpTypes::GPR32, OpTypes::MSA128B, 
    OpTypes::GPR32, OpTypes::MSA128D, 
    OpTypes::GPR32, OpTypes::MSA128H, 
    OpTypes::GPR32, OpTypes::MSA128B, 
    OpTypes::GPR32, OpTypes::MSA128W, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::calltarget, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::calltarget, 
    OpTypes::calltarget, 
    /**/
    /**/
    OpTypes::ACC64, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm32, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm32_relaxed, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::simm19_lsl2, 
    OpTypes::GPRMM16Opnd, OpTypes::simm23_lsl2, 
    OpTypes::GPR32Opnd, OpTypes::simm19_lsl2, 
    OpTypes::GPRMM16Opnd, OpTypes::uimm6_lsl2, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::simm3_lsa2, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm4, 
    OpTypes::simm9_addiusp, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm16_relaxed, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm16_relaxed, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm2, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm2, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::uimm4_andi, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::uimm4_andi, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm8, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm16, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm16_64, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm16, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm16, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16RegsPlusSP, OpTypes::simm16, 
    OpTypes::simm16, 
    OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::brtarget10_mm, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::brtarget, 
    OpTypes::brtarget26, 
    OpTypes::brtarget26_mm, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm2, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm2, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::uimm5_64_report_uimm6, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::uimm5_64, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::uimm5_64_report_uimm6, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::uimm5_64, OpTypes::brtarget, 
    OpTypes::brtarget26, 
    OpTypes::brtarget10_mm, 
    OpTypes::FGR64Opnd, OpTypes::brtarget, 
    OpTypes::FGR64Opnd, OpTypes::brtarget_mm, 
    OpTypes::FCCRegsOpnd, OpTypes::brtarget, 
    OpTypes::FCCRegsOpnd, OpTypes::brtarget, 
    OpTypes::FCCRegsOpnd, OpTypes::brtarget_mm, 
    OpTypes::FGR64Opnd, OpTypes::brtarget, 
    OpTypes::FGR64Opnd, OpTypes::brtarget_mm, 
    OpTypes::FCCRegsOpnd, OpTypes::brtarget, 
    OpTypes::FCCRegsOpnd, OpTypes::brtarget, 
    OpTypes::FCCRegsOpnd, OpTypes::brtarget_mm, 
    OpTypes::COP2Opnd, OpTypes::brtarget, 
    OpTypes::COP2Opnd, OpTypes::brtarget_mm, 
    OpTypes::COP2Opnd, OpTypes::brtarget, 
    OpTypes::COP2Opnd, OpTypes::brtarget_mm, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm3, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm6, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm4, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::brtarget26_mm, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget_lsl2_mm, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPRMM16Opnd, OpTypes::brtarget7_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget21, 
    OpTypes::GPRMM16Opnd, OpTypes::brtarget7_mm, 
    OpTypes::GPR64Opnd, OpTypes::brtarget21, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget21_mm, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget_lsl2_mm, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget_lsl2_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_lsl2_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_lsl2_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm3, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm6, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm4, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm3, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm6, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm4, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_lsl2_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget_lsl2_mm, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget_lsl2_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_lsl2_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm8, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm8, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget_lsl2_mm, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm3, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm6, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm4, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPRMM16Opnd, OpTypes::brtarget7_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget21, 
    OpTypes::GPRMM16Opnd, OpTypes::brtarget7_mm, 
    OpTypes::GPR64Opnd, OpTypes::brtarget21, 
    OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::brtarget21_mm, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtargetr6, 
    OpTypes::MSA128BOpnd, OpTypes::brtarget, 
    OpTypes::MSA128DOpnd, OpTypes::brtarget, 
    OpTypes::MSA128HOpnd, OpTypes::brtarget, 
    OpTypes::MSA128BOpnd, OpTypes::brtarget, 
    OpTypes::MSA128WOpnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::brtargetr6, 
    OpTypes::brtarget, 
    OpTypes::brtarget1SImm16, 
    OpTypes::brtarget_mm, 
    OpTypes::uimm10, OpTypes::uimm10, 
    OpTypes::uimm4, 
    OpTypes::uimm4, 
    OpTypes::uimm10, OpTypes::uimm10, 
    OpTypes::uimm10, OpTypes::uimm10, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm8, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm3, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm6, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm4, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::brtarget, 
    OpTypes::MSA128DOpnd, OpTypes::brtarget, 
    OpTypes::MSA128HOpnd, OpTypes::brtarget, 
    OpTypes::MSA128BOpnd, OpTypes::brtarget, 
    OpTypes::MSA128WOpnd, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::brtarget, 
    OpTypes::brtarget, 
    OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::brtarget, 
    OpTypes::CPU16Regs, OpTypes::brtarget, 
    /**/
    OpTypes::simm16, 
    OpTypes::simm16, 
    OpTypes::simm16, 
    OpTypes::simm16, 
    -1, OpTypes::simm16, OpTypes::uimm5, 
    -1, OpTypes::simm9, OpTypes::uimm5, 
    -1, OpTypes::simm9, OpTypes::uimm5, 
    -1, OpTypes::simm12, OpTypes::uimm5, 
    -1, OpTypes::simm12, OpTypes::uimm5, 
    -1, OpTypes::simm9, OpTypes::uimm5, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::CCROpnd, 
    OpTypes::GPR32Opnd, OpTypes::CCROpnd, 
    OpTypes::GPR32Opnd, OpTypes::COP2Opnd, 
    OpTypes::GPR32Opnd, OpTypes::MSA128CROpnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm5, OpTypes::uimm5, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm5, OpTypes::uimm5, 
    OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::uimm5, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::MSA128BOpnd, OpTypes::uimm4_ptr, 
    OpTypes::GPR64Opnd, OpTypes::MSA128DOpnd, OpTypes::uimm1_ptr, 
    OpTypes::GPR32Opnd, OpTypes::MSA128HOpnd, OpTypes::uimm3_ptr, 
    OpTypes::GPR32Opnd, OpTypes::MSA128WOpnd, OpTypes::uimm2_ptr, 
    OpTypes::GPR32Opnd, OpTypes::MSA128BOpnd, OpTypes::uimm4_ptr, 
    OpTypes::GPR32Opnd, OpTypes::MSA128HOpnd, OpTypes::uimm3_ptr, 
    OpTypes::GPR32Opnd, OpTypes::MSA128WOpnd, OpTypes::uimm2_ptr, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::CCROpnd, OpTypes::GPR32Opnd, 
    OpTypes::CCROpnd, OpTypes::GPR32Opnd, 
    OpTypes::COP2Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128CROpnd, OpTypes::GPR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::simm16_64, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::simm16_64, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm16_altrelaxed, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm3, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm16_altrelaxed, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm16, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    /**/
    /**/
    /**/
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm5_report_uimm6, OpTypes::uimm5_plus1_report_uimm6, 
    OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5_report_uimm6, OpTypes::uimm5_plus1, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm5, OpTypes::uimm5_plus33, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm5_plus32, OpTypes::uimm5_plus1, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm6, OpTypes::uimm5_inssize_plus1, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm5, OpTypes::uimm_range_2_64, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm5_plus32, OpTypes::uimm5_inssize_plus1, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm2_plus1, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm2_plus1, 
    OpTypes::GPR64Opnd, OpTypes::COP0Opnd, OpTypes::uimm3, 
    OpTypes::GPR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::COP2Opnd, OpTypes::uimm3, 
    OpTypes::GPR64Opnd, OpTypes::uimm16, 
    OpTypes::GPR64Opnd, OpTypes::COP0Opnd, OpTypes::uimm3, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::COP0Opnd, OpTypes::GPR64Opnd, OpTypes::uimm3, 
    OpTypes::FGR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::COP2Opnd, OpTypes::GPR64Opnd, OpTypes::uimm3, 
    OpTypes::GPR64Opnd, OpTypes::uimm16, 
    OpTypes::COP0Opnd, OpTypes::GPR64Opnd, OpTypes::uimm3, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm6, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm5, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm6, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm5, 
    OpTypes::GPR64, OpTypes::GPR32, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm6, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm5, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm6, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm5, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    /**/
    /**/
    /**/
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    /**/
    /**/
    /**/
    /**/
    /**/
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::uimm5_plus1, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, OpTypes::uimm5, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm5, OpTypes::uimm5, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm5, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::uimm5_plus1, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::uimm5_plus1, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::AFGR64, OpTypes::AFGR64, OpTypes::condcode, 
    OpTypes::AFGR64, OpTypes::AFGR64, OpTypes::condcode, 
    OpTypes::FGR64, OpTypes::FGR64, OpTypes::condcode, 
    OpTypes::FGR32, OpTypes::FGR32, OpTypes::condcode, 
    OpTypes::FGR32, OpTypes::FGR32, OpTypes::condcode, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::GPR64Opnd, 
    OpTypes::MSA128HOpnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::uimm2, 
    OpTypes::GPR32Opnd, OpTypes::uimm2, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::uimm10, 
    OpTypes::uimm10, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::uimm5_inssize_plus1, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::GPR32Opnd, OpTypes::uimm4, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::GPR64Opnd, OpTypes::uimm1, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::GPR32Opnd, OpTypes::uimm3, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::GPR32Opnd, OpTypes::uimm2, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::uimm4, OpTypes::MSA128BOpnd, OpTypes::uimmz, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::uimm1, OpTypes::MSA128DOpnd, OpTypes::uimmz, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::uimm3, OpTypes::MSA128HOpnd, OpTypes::uimmz, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::uimm2, OpTypes::MSA128WOpnd, OpTypes::uimmz, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::uimm5_inssize_plus1, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::uimm5_inssize_plus1, OpTypes::GPR32Opnd, 
    OpTypes::jmptarget, 
    OpTypes::calltarget, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::calltarget_mm, 
    OpTypes::calltarget, 
    OpTypes::calltarget, 
    OpTypes::calltarget_mm, 
    OpTypes::GPR32Opnd, OpTypes::calloffset16, 
    OpTypes::GPR64Opnd, OpTypes::calloffset16, 
    OpTypes::GPR32Opnd, OpTypes::calloffset16, 
    OpTypes::GPR32Opnd, OpTypes::jmpoffset16, 
    OpTypes::GPR64Opnd, OpTypes::jmpoffset16, 
    OpTypes::GPR32Opnd, OpTypes::jmpoffset16, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::uimm5_lsl2, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::uimm5_lsl2, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::jmptarget_mm, 
    OpTypes::uimm26, 
    OpTypes::uimm26, 
    /**/
    /**/
    OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPRMM16Opnd, -1, OpTypes::simm4, 
    OpTypes::GPR32Opnd, -1, -1, 
    OpTypes::GPR32Opnd, -1, -1, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::AFGR64Opnd, -1, OpTypes::simm16, 
    OpTypes::FGR64Opnd, -1, OpTypes::simm16, 
    OpTypes::FGR64Opnd, -1, OpTypes::simm16, 
    OpTypes::AFGR64Opnd, -1, OpTypes::simm16, 
    OpTypes::COP2Opnd, -1, OpTypes::simm16, 
    OpTypes::COP2Opnd, OpTypes::GPR32, OpTypes::simm11, 
    OpTypes::COP2Opnd, -1, OpTypes::simm11, 
    OpTypes::COP3Opnd, -1, OpTypes::simm16, 
    OpTypes::MSA128BOpnd, OpTypes::vsplat_simm10, 
    OpTypes::MSA128DOpnd, OpTypes::vsplat_simm10, 
    OpTypes::MSA128HOpnd, OpTypes::vsplat_simm10, 
    OpTypes::MSA128WOpnd, OpTypes::vsplat_simm10, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::simm18_lsl3, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, OpTypes::GPR64Opnd, 
    OpTypes::AFGR64Opnd, -1, -1, 
    OpTypes::FGR64Opnd, -1, -1, 
    OpTypes::MSA128BOpnd, -1, OpTypes::simm10, 
    OpTypes::MSA128DOpnd, -1, OpTypes::simm10_lsl3, 
    OpTypes::MSA128HOpnd, -1, OpTypes::simm10_lsl1, 
    OpTypes::MSA128WOpnd, -1, OpTypes::simm10_lsl2, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPRMM16Opnd, -1, OpTypes::simm4, 
    OpTypes::GPR32Opnd, -1, -1, 
    OpTypes::GPR32Opnd, -1, -1, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPRMM16Opnd, OpTypes::li16_imm, 
    OpTypes::GPRMM16Opnd, OpTypes::li16_imm, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm12, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm2_plus1, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm2_plus1, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm2_plus1, 
    OpTypes::GPR32Opnd, OpTypes::uimm16, 
    OpTypes::AFGR64Opnd, -1, -1, 
    OpTypes::FGR64Opnd, -1, -1, 
    OpTypes::FGR64Opnd, -1, -1, 
    OpTypes::GPR32Opnd, OpTypes::uimm16_relaxed, 
    OpTypes::GPR64Opnd, OpTypes::uimm16_64_relaxed, 
    OpTypes::GPR32Opnd, OpTypes::uimm16_relaxed, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPRMM16Opnd, -1, OpTypes::simm4, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::FGR32Opnd, -1, OpTypes::simm16, 
    OpTypes::FGR32Opnd, -1, OpTypes::simm16, 
    OpTypes::COP2Opnd, -1, OpTypes::simm16, 
    OpTypes::COP2Opnd, OpTypes::GPR32, OpTypes::simm11, 
    OpTypes::COP2Opnd, -1, OpTypes::simm11, 
    OpTypes::COP3Opnd, -1, OpTypes::simm16, 
    OpTypes::DSPROpnd, -1, OpTypes::simm16, 
    OpTypes::DSPROpnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPRMM16Opnd, -1, OpTypes::simm7_lsl2, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm12, OpTypes::GPR32Opnd, 
    OpTypes::reglist16, -1, OpTypes::uimm8, 
    OpTypes::reglist16, -1, OpTypes::uimm8, 
    OpTypes::reglist, -1, OpTypes::simm12, 
    OpTypes::GPR32Opnd, OpTypes::simm19_lsl2, 
    OpTypes::GPR32Opnd, OpTypes::simm19_lsl2, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, -1, OpTypes::simm12, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm12, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm5, 
    OpTypes::GPR32Opnd, OpTypes::simm19_lsl2, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm12, 
    OpTypes::GPR32Opnd, -1, -1, 
    OpTypes::FGR32Opnd, -1, -1, 
    OpTypes::FGR32Opnd, -1, -1, 
    OpTypes::GPR32Opnd, -1, -1, 
    OpTypes::GPR32Opnd, -1, -1, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::pcrel16, OpTypes::i32imm, 
    OpTypes::CPU16Regs, OpTypes::pcrel16, OpTypes::i32imm, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16RegsPlusSP, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::COP0Opnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, OpTypes::COP0Opnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::COP2Opnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, OpTypes::COP2Opnd, 
    OpTypes::GPR32Opnd, OpTypes::COP0Opnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, OpTypes::COP0Opnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, OpTypes::COP0Opnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::COP2Opnd, 
    OpTypes::GPR32Opnd, OpTypes::COP0Opnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, OpTypes::COP0Opnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm1, OpTypes::uimm3, OpTypes::uimm1, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_simm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPRMM16OpndMovePPairFirst, OpTypes::GPRMM16OpndMovePPairSecond, OpTypes::GPRMM16OpndMoveP, OpTypes::GPRMM16OpndMoveP, 
    OpTypes::GPRMM16OpndMovePPairFirst, OpTypes::GPRMM16OpndMovePPairSecond, OpTypes::GPRMM16OpndMoveP, OpTypes::GPRMM16OpndMoveP, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::FCCRegsOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::FCCRegsOpnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::GPR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::GPR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::GPR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::GPR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::GPR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::GPR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::GPR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::FCCRegsOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::FCCRegsOpnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::FCCRegsOpnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FCCRegsOpnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::GPR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::GPR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::GPR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::GPR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::GPR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR32Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::GPR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::GPR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::COP0Opnd, OpTypes::GPR32Opnd, OpTypes::uimm3, 
    OpTypes::COP0Opnd, OpTypes::GPR32Opnd, OpTypes::uimm3, 
    OpTypes::FGR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::COP2Opnd, OpTypes::GPR32Opnd, OpTypes::uimm3, 
    OpTypes::COP2Opnd, OpTypes::GPR32Opnd, 
    OpTypes::COP0Opnd, OpTypes::GPR32Opnd, OpTypes::uimm3, 
    OpTypes::COP0Opnd, OpTypes::GPR32Opnd, OpTypes::uimm3, 
    OpTypes::COP0Opnd, OpTypes::GPR32Opnd, OpTypes::uimm3, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::GPR32Opnd, 
    OpTypes::COP2Opnd, OpTypes::GPR32Opnd, 
    OpTypes::COP0Opnd, OpTypes::GPR32Opnd, OpTypes::uimm3, 
    OpTypes::COP0Opnd, OpTypes::GPR32Opnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::HI32DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::HI32DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::LO32DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::LO32DSPOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm1, OpTypes::uimm3, OpTypes::uimm1, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, 
    OpTypes::GPR32, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::GPR32, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm8, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm8, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm16, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm16_64, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    /**/
    /**/
    /**/
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::GPR32Opnd, 
    -1, OpTypes::simm16, OpTypes::uimm5, 
    -1, OpTypes::simm9, OpTypes::uimm5, 
    -1, OpTypes::simm9, OpTypes::uimm5, 
    -1, -1, OpTypes::uimm5, 
    -1, OpTypes::simm12, OpTypes::uimm5, 
    -1, OpTypes::simm12, OpTypes::uimm5, 
    -1, OpTypes::simm9, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::uimm10, 
    OpTypes::GPR32Opnd, OpTypes::uimm7, 
    OpTypes::GPR32Opnd, OpTypes::HWRegsOpnd, OpTypes::uimm8, 
    OpTypes::GPR64Opnd, OpTypes::HWRegsOpnd, OpTypes::uimm8, 
    OpTypes::GPR32Opnd, OpTypes::HWRegsOpnd, OpTypes::uimm8, 
    OpTypes::GPR32Opnd, OpTypes::HWRegsOpnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::simm10, 
    OpTypes::DSPROpnd, OpTypes::simm10, 
    OpTypes::DSPROpnd, OpTypes::uimm8, 
    OpTypes::DSPROpnd, OpTypes::uimm8, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::AFGR64Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    /**/
    /**/
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::uimm3, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::uimm6, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::uimm4, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::uimm3, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::uimm6, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::uimm4, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPRMM16OpndZero, -1, OpTypes::simm4, 
    OpTypes::GPRMM16OpndZero, -1, OpTypes::simm4, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, -1, OpTypes::simm12, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::uimm20, 
    OpTypes::uimm4, 
    OpTypes::uimm4, 
    OpTypes::uimm10, 
    OpTypes::uimm20, 
    OpTypes::uimm20, 
    OpTypes::AFGR64Opnd, -1, OpTypes::simm16, 
    OpTypes::FGR64Opnd, -1, OpTypes::simm16, 
    OpTypes::FGR64Opnd, -1, OpTypes::simm16, 
    OpTypes::AFGR64Opnd, -1, OpTypes::simm16, 
    OpTypes::COP2Opnd, -1, OpTypes::simm16, 
    OpTypes::COP2Opnd, OpTypes::GPR32, OpTypes::simm11, 
    OpTypes::COP2Opnd, -1, OpTypes::simm11, 
    OpTypes::COP3Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::AFGR64Opnd, -1, -1, 
    OpTypes::FGR64Opnd, -1, -1, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGRCCOpnd, OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::simm10_64, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPRMM16OpndZero, -1, OpTypes::simm4, 
    OpTypes::GPRMM16OpndZero, -1, OpTypes::simm4, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::uimm8, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::uimm8, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::uimm8, 
    OpTypes::ACC64DSPOpnd, OpTypes::simm6, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::GPR32Opnd, OpTypes::ACC64DSPOpnd, 
    OpTypes::ACC64DSPOpnd, OpTypes::simm6, OpTypes::ACC64DSPOpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm4, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm4, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm3, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm3, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm4, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm4, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm4, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm4, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm3, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm3, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm4, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm4, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm3, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm4, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm4, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm3, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::uimm3, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::uimm16, 
    OpTypes::uimm16, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::uimm4, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::uimm1, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::uimm3, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::uimm2, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::uimm3_shift, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::uimm3_shift, 
    OpTypes::GPR64, OpTypes::GPR32, 
    OpTypes::GPR64, OpTypes::GPR64, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm3, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm6, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm4, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR64Opnd, OpTypes::simm16_64, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR64Opnd, OpTypes::simm16_64, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::simm10_64, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm4, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm1, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm3, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm2, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm3, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm6, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm4, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::uimm3, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::uimm6, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::uimm4, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::uimm3_shift, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::uimm3_shift, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm3, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm6, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm4, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::uimm3, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::uimm6, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::uimm4, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    /**/
    /**/
    /**/
    OpTypes::MSA128BOpnd, -1, OpTypes::simm10, 
    OpTypes::MSA128DOpnd, -1, OpTypes::simm10_lsl3, 
    OpTypes::MSA128HOpnd, -1, OpTypes::simm10_lsl1, 
    OpTypes::MSA128WOpnd, -1, OpTypes::simm10_lsl2, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::DSPROpnd, OpTypes::DSPROpnd, OpTypes::DSPROpnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::vsplat_uimm5, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::AFGR64Opnd, -1, -1, 
    OpTypes::FGR64Opnd, -1, -1, 
    OpTypes::FGR64Opnd, -1, -1, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPRMM16OpndZero, -1, OpTypes::simm4, 
    OpTypes::GPRMM16OpndZero, -1, OpTypes::simm4, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::FGR32Opnd, -1, OpTypes::simm16, 
    OpTypes::FGR32Opnd, -1, OpTypes::simm16, 
    OpTypes::COP2Opnd, -1, OpTypes::simm16, 
    OpTypes::COP2Opnd, OpTypes::GPR32, OpTypes::simm11, 
    OpTypes::COP2Opnd, -1, OpTypes::simm11, 
    OpTypes::COP3Opnd, -1, OpTypes::simm16, 
    OpTypes::DSPROpnd, -1, OpTypes::simm16, 
    OpTypes::DSPROpnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm12, 
    OpTypes::reglist16, -1, OpTypes::uimm8, 
    OpTypes::reglist16, -1, OpTypes::uimm8, 
    OpTypes::reglist, -1, OpTypes::simm12, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, -1, OpTypes::simm12, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR64Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm9, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm12, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm5, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm5, 
    OpTypes::FGR32Opnd, -1, -1, 
    OpTypes::FGR32Opnd, -1, -1, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::GPR32Opnd, -1, OpTypes::simm16, 
    OpTypes::uimm5, 
    -1, OpTypes::simm16, 
    -1, OpTypes::simm16, 
    -1, OpTypes::simm16, 
    OpTypes::uimm5, 
    OpTypes::uimm5, 
    OpTypes::uimm20, 
    OpTypes::uimm10, 
    /**/
    /**/
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::uimm5, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::uimm5, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::uimm5, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::simm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16RegsPlusSP, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm10, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm4, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm10, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm10, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm4, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm4, 
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm10, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm10, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm4, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm4, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm10, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm4, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR64Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::AFGR64Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::FGR32Opnd, OpTypes::FGR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::simm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, OpTypes::MSA128DOpnd, 
    OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, OpTypes::MSA128HOpnd, 
    OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, OpTypes::MSA128WOpnd, 
    /**/
    OpTypes::uimm10, 
    OpTypes::uimm10, 
    OpTypes::GPR32Opnd, OpTypes::uimm10, 
    OpTypes::GPR32Opnd, OpTypes::uimm7, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, 
    OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, OpTypes::GPRMM16Opnd, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::vsplat_uimm8, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm16, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
    OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, OpTypes::MSA128BOpnd, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm16, 
    OpTypes::GPR64Opnd, OpTypes::GPR64Opnd, OpTypes::uimm16_64, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, OpTypes::uimm16, 
    OpTypes::CPU16Regs, OpTypes::CPU16Regs, OpTypes::CPU16Regs, 
    OpTypes::GPR32Opnd, OpTypes::GPR32Opnd, 
  };
  return OpcodeOperandTypes[Offsets[Opcode] + OpIdx];
}
} // end namespace Mips
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPE

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace Mips {

enum Arch {
	Arch_dsp,
	Arch_mmdsp,
	Arch_mipsr6,
	Arch_micromipsr6,
	Arch_se,
	Arch_micromips
};

// Dsp2MicroMips
LLVM_READONLY
int Dsp2MicroMips(uint16_t Opcode, enum Arch inArch) {
static const uint16_t Dsp2MicroMipsTable[][3] = {
  { Mips::ABSQ_S_PH, Mips::ABSQ_S_PH, Mips::ABSQ_S_PH_MM },
  { Mips::ABSQ_S_QB, Mips::ABSQ_S_QB, Mips::ABSQ_S_QB_MMR2 },
  { Mips::ABSQ_S_W, Mips::ABSQ_S_W, Mips::ABSQ_S_W_MM },
  { Mips::ADDQH_PH, Mips::ADDQH_PH, Mips::ADDQH_PH_MMR2 },
  { Mips::ADDQH_R_PH, Mips::ADDQH_R_PH, Mips::ADDQH_R_PH_MMR2 },
  { Mips::ADDQH_R_W, Mips::ADDQH_R_W, Mips::ADDQH_R_W_MMR2 },
  { Mips::ADDQH_W, Mips::ADDQH_W, Mips::ADDQH_W_MMR2 },
  { Mips::ADDQ_PH, Mips::ADDQ_PH, Mips::ADDQ_PH_MM },
  { Mips::ADDQ_S_PH, Mips::ADDQ_S_PH, Mips::ADDQ_S_PH_MM },
  { Mips::ADDQ_S_W, Mips::ADDQ_S_W, Mips::ADDQ_S_W_MM },
  { Mips::ADDSC, Mips::ADDSC, Mips::ADDSC_MM },
  { Mips::ADDUH_QB, Mips::ADDUH_QB, Mips::ADDUH_QB_MMR2 },
  { Mips::ADDUH_R_QB, Mips::ADDUH_R_QB, Mips::ADDUH_R_QB_MMR2 },
  { Mips::ADDU_PH, Mips::ADDU_PH, Mips::ADDU_PH_MMR2 },
  { Mips::ADDU_QB, Mips::ADDU_QB, Mips::ADDU_QB_MM },
  { Mips::ADDU_S_PH, Mips::ADDU_S_PH, Mips::ADDU_S_PH_MMR2 },
  { Mips::ADDU_S_QB, Mips::ADDU_S_QB, Mips::ADDU_S_QB_MM },
  { Mips::ADDWC, Mips::ADDWC, Mips::ADDWC_MM },
  { Mips::APPEND, Mips::APPEND, Mips::APPEND_MMR2 },
  { Mips::BALIGN, Mips::BALIGN, Mips::BALIGN_MMR2 },
  { Mips::BITREV, Mips::BITREV, Mips::BITREV_MM },
  { Mips::BPOSGE32, Mips::BPOSGE32, Mips::BPOSGE32_MM },
  { Mips::CMPGDU_EQ_QB, Mips::CMPGDU_EQ_QB, Mips::CMPGDU_EQ_QB_MMR2 },
  { Mips::CMPGDU_LE_QB, Mips::CMPGDU_LE_QB, Mips::CMPGDU_LE_QB_MMR2 },
  { Mips::CMPGDU_LT_QB, Mips::CMPGDU_LT_QB, Mips::CMPGDU_LT_QB_MMR2 },
  { Mips::CMPGU_EQ_QB, Mips::CMPGU_EQ_QB, Mips::CMPGU_EQ_QB_MM },
  { Mips::CMPGU_LE_QB, Mips::CMPGU_LE_QB, Mips::CMPGU_LE_QB_MM },
  { Mips::CMPGU_LT_QB, Mips::CMPGU_LT_QB, Mips::CMPGU_LT_QB_MM },
  { Mips::CMPU_EQ_QB, Mips::CMPU_EQ_QB, Mips::CMPU_EQ_QB_MM },
  { Mips::CMPU_LE_QB, Mips::CMPU_LE_QB, Mips::CMPU_LE_QB_MM },
  { Mips::CMPU_LT_QB, Mips::CMPU_LT_QB, Mips::CMPU_LT_QB_MM },
  { Mips::CMP_EQ_PH, Mips::CMP_EQ_PH, Mips::CMP_EQ_PH_MM },
  { Mips::CMP_LE_PH, Mips::CMP_LE_PH, Mips::CMP_LE_PH_MM },
  { Mips::CMP_LT_PH, Mips::CMP_LT_PH, Mips::CMP_LT_PH_MM },
  { Mips::DPAQX_SA_W_PH, Mips::DPAQX_SA_W_PH, Mips::DPAQX_SA_W_PH_MMR2 },
  { Mips::DPAQX_S_W_PH, Mips::DPAQX_S_W_PH, Mips::DPAQX_S_W_PH_MMR2 },
  { Mips::DPAQ_SA_L_W, Mips::DPAQ_SA_L_W, Mips::DPAQ_SA_L_W_MM },
  { Mips::DPAQ_S_W_PH, Mips::DPAQ_S_W_PH, Mips::DPAQ_S_W_PH_MM },
  { Mips::DPAU_H_QBL, Mips::DPAU_H_QBL, Mips::DPAU_H_QBL_MM },
  { Mips::DPAU_H_QBR, Mips::DPAU_H_QBR, Mips::DPAU_H_QBR_MM },
  { Mips::DPAX_W_PH, Mips::DPAX_W_PH, Mips::DPAX_W_PH_MMR2 },
  { Mips::DPA_W_PH, Mips::DPA_W_PH, Mips::DPA_W_PH_MMR2 },
  { Mips::DPSQX_SA_W_PH, Mips::DPSQX_SA_W_PH, Mips::DPSQX_SA_W_PH_MMR2 },
  { Mips::DPSQX_S_W_PH, Mips::DPSQX_S_W_PH, Mips::DPSQX_S_W_PH_MMR2 },
  { Mips::DPSQ_SA_L_W, Mips::DPSQ_SA_L_W, Mips::DPSQ_SA_L_W_MM },
  { Mips::DPSQ_S_W_PH, Mips::DPSQ_S_W_PH, Mips::DPSQ_S_W_PH_MM },
  { Mips::DPSU_H_QBL, Mips::DPSU_H_QBL, Mips::DPSU_H_QBL_MM },
  { Mips::DPSU_H_QBR, Mips::DPSU_H_QBR, Mips::DPSU_H_QBR_MM },
  { Mips::DPSX_W_PH, Mips::DPSX_W_PH, Mips::DPSX_W_PH_MMR2 },
  { Mips::DPS_W_PH, Mips::DPS_W_PH, Mips::DPS_W_PH_MMR2 },
  { Mips::EXTP, Mips::EXTP, Mips::EXTP_MM },
  { Mips::EXTPDP, Mips::EXTPDP, Mips::EXTPDP_MM },
  { Mips::EXTPDPV, Mips::EXTPDPV, Mips::EXTPDPV_MM },
  { Mips::EXTPV, Mips::EXTPV, Mips::EXTPV_MM },
  { Mips::EXTRV_RS_W, Mips::EXTRV_RS_W, Mips::EXTRV_RS_W_MM },
  { Mips::EXTRV_R_W, Mips::EXTRV_R_W, Mips::EXTRV_R_W_MM },
  { Mips::EXTRV_S_H, Mips::EXTRV_S_H, Mips::EXTRV_S_H_MM },
  { Mips::EXTRV_W, Mips::EXTRV_W, Mips::EXTRV_W_MM },
  { Mips::EXTR_RS_W, Mips::EXTR_RS_W, Mips::EXTR_RS_W_MM },
  { Mips::EXTR_R_W, Mips::EXTR_R_W, Mips::EXTR_R_W_MM },
  { Mips::EXTR_S_H, Mips::EXTR_S_H, Mips::EXTR_S_H_MM },
  { Mips::EXTR_W, Mips::EXTR_W, Mips::EXTR_W_MM },
  { Mips::INSV, Mips::INSV, Mips::INSV_MM },
  { Mips::LBUX, Mips::LBUX, Mips::LBUX_MM },
  { Mips::LHX, Mips::LHX, Mips::LHX_MM },
  { Mips::LWDSP, Mips::LWDSP, Mips::LWDSP_MM },
  { Mips::LWX, Mips::LWX, Mips::LWX_MM },
  { Mips::MADDU_DSP, Mips::MADDU_DSP, Mips::MADDU_DSP_MM },
  { Mips::MADD_DSP, Mips::MADD_DSP, Mips::MADD_DSP_MM },
  { Mips::MAQ_SA_W_PHL, Mips::MAQ_SA_W_PHL, Mips::MAQ_SA_W_PHL_MM },
  { Mips::MAQ_SA_W_PHR, Mips::MAQ_SA_W_PHR, Mips::MAQ_SA_W_PHR_MM },
  { Mips::MAQ_S_W_PHL, Mips::MAQ_S_W_PHL, Mips::MAQ_S_W_PHL_MM },
  { Mips::MAQ_S_W_PHR, Mips::MAQ_S_W_PHR, Mips::MAQ_S_W_PHR_MM },
  { Mips::MFHI_DSP, Mips::MFHI_DSP, Mips::MFHI_DSP_MM },
  { Mips::MFLO_DSP, Mips::MFLO_DSP, Mips::MFLO_DSP_MM },
  { Mips::MODSUB, Mips::MODSUB, Mips::MODSUB_MM },
  { Mips::MSUBU_DSP, Mips::MSUBU_DSP, Mips::MSUBU_DSP_MM },
  { Mips::MSUB_DSP, Mips::MSUB_DSP, Mips::MSUB_DSP_MM },
  { Mips::MTHI_DSP, Mips::MTHI_DSP, Mips::MTHI_DSP_MM },
  { Mips::MTHLIP, Mips::MTHLIP, Mips::MTHLIP_MM },
  { Mips::MTLO_DSP, Mips::MTLO_DSP, Mips::MTLO_DSP_MM },
  { Mips::MULEQ_S_W_PHL, Mips::MULEQ_S_W_PHL, Mips::MULEQ_S_W_PHL_MM },
  { Mips::MULEQ_S_W_PHR, Mips::MULEQ_S_W_PHR, Mips::MULEQ_S_W_PHR_MM },
  { Mips::MULEU_S_PH_QBL, Mips::MULEU_S_PH_QBL, Mips::MULEU_S_PH_QBL_MM },
  { Mips::MULEU_S_PH_QBR, Mips::MULEU_S_PH_QBR, Mips::MULEU_S_PH_QBR_MM },
  { Mips::MULQ_RS_PH, Mips::MULQ_RS_PH, Mips::MULQ_RS_PH_MM },
  { Mips::MULQ_RS_W, Mips::MULQ_RS_W, Mips::MULQ_RS_W_MMR2 },
  { Mips::MULQ_S_PH, Mips::MULQ_S_PH, Mips::MULQ_S_PH_MMR2 },
  { Mips::MULQ_S_W, Mips::MULQ_S_W, Mips::MULQ_S_W_MMR2 },
  { Mips::MULSAQ_S_W_PH, Mips::MULSAQ_S_W_PH, Mips::MULSAQ_S_W_PH_MM },
  { Mips::MULSA_W_PH, Mips::MULSA_W_PH, Mips::MULSA_W_PH_MMR2 },
  { Mips::MULTU_DSP, Mips::MULTU_DSP, Mips::MULTU_DSP_MM },
  { Mips::MULT_DSP, Mips::MULT_DSP, Mips::MULT_DSP_MM },
  { Mips::MUL_PH, Mips::MUL_PH, Mips::MUL_PH_MMR2 },
  { Mips::MUL_S_PH, Mips::MUL_S_PH, Mips::MUL_S_PH_MMR2 },
  { Mips::PACKRL_PH, Mips::PACKRL_PH, Mips::PACKRL_PH_MM },
  { Mips::PICK_PH, Mips::PICK_PH, Mips::PICK_PH_MM },
  { Mips::PICK_QB, Mips::PICK_QB, Mips::PICK_QB_MM },
  { Mips::PRECEQU_PH_QBL, Mips::PRECEQU_PH_QBL, Mips::PRECEQU_PH_QBL_MM },
  { Mips::PRECEQU_PH_QBLA, Mips::PRECEQU_PH_QBLA, Mips::PRECEQU_PH_QBLA_MM },
  { Mips::PRECEQU_PH_QBR, Mips::PRECEQU_PH_QBR, Mips::PRECEQU_PH_QBR_MM },
  { Mips::PRECEQU_PH_QBRA, Mips::PRECEQU_PH_QBRA, Mips::PRECEQU_PH_QBRA_MM },
  { Mips::PRECEQ_W_PHL, Mips::PRECEQ_W_PHL, Mips::PRECEQ_W_PHL_MM },
  { Mips::PRECEQ_W_PHR, Mips::PRECEQ_W_PHR, Mips::PRECEQ_W_PHR_MM },
  { Mips::PRECEU_PH_QBL, Mips::PRECEU_PH_QBL, Mips::PRECEU_PH_QBL_MM },
  { Mips::PRECEU_PH_QBLA, Mips::PRECEU_PH_QBLA, Mips::PRECEU_PH_QBLA_MM },
  { Mips::PRECEU_PH_QBR, Mips::PRECEU_PH_QBR, Mips::PRECEU_PH_QBR_MM },
  { Mips::PRECEU_PH_QBRA, Mips::PRECEU_PH_QBRA, Mips::PRECEU_PH_QBRA_MM },
  { Mips::PRECRQU_S_QB_PH, Mips::PRECRQU_S_QB_PH, Mips::PRECRQU_S_QB_PH_MM },
  { Mips::PRECRQ_PH_W, Mips::PRECRQ_PH_W, Mips::PRECRQ_PH_W_MM },
  { Mips::PRECRQ_QB_PH, Mips::PRECRQ_QB_PH, Mips::PRECRQ_QB_PH_MM },
  { Mips::PRECRQ_RS_PH_W, Mips::PRECRQ_RS_PH_W, Mips::PRECRQ_RS_PH_W_MM },
  { Mips::PRECR_QB_PH, Mips::PRECR_QB_PH, Mips::PRECR_QB_PH_MMR2 },
  { Mips::PRECR_SRA_PH_W, Mips::PRECR_SRA_PH_W, Mips::PRECR_SRA_PH_W_MMR2 },
  { Mips::PRECR_SRA_R_PH_W, Mips::PRECR_SRA_R_PH_W, Mips::PRECR_SRA_R_PH_W_MMR2 },
  { Mips::PREPEND, Mips::PREPEND, Mips::PREPEND_MMR2 },
  { Mips::RADDU_W_QB, Mips::RADDU_W_QB, Mips::RADDU_W_QB_MM },
  { Mips::RDDSP, Mips::RDDSP, Mips::RDDSP_MM },
  { Mips::REPLV_PH, Mips::REPLV_PH, Mips::REPLV_PH_MM },
  { Mips::REPLV_QB, Mips::REPLV_QB, Mips::REPLV_QB_MM },
  { Mips::REPL_PH, Mips::REPL_PH, Mips::REPL_PH_MM },
  { Mips::REPL_QB, Mips::REPL_QB, Mips::REPL_QB_MM },
  { Mips::SHILO, Mips::SHILO, Mips::SHILO_MM },
  { Mips::SHILOV, Mips::SHILOV, Mips::SHILOV_MM },
  { Mips::SHLLV_PH, Mips::SHLLV_PH, Mips::SHLLV_PH_MM },
  { Mips::SHLLV_QB, Mips::SHLLV_QB, Mips::SHLLV_QB_MM },
  { Mips::SHLLV_S_PH, Mips::SHLLV_S_PH, Mips::SHLLV_S_PH_MM },
  { Mips::SHLLV_S_W, Mips::SHLLV_S_W, Mips::SHLLV_S_W_MM },
  { Mips::SHLL_PH, Mips::SHLL_PH, Mips::SHLL_PH_MM },
  { Mips::SHLL_QB, Mips::SHLL_QB, Mips::SHLL_QB_MM },
  { Mips::SHLL_S_PH, Mips::SHLL_S_PH, Mips::SHLL_S_PH_MM },
  { Mips::SHLL_S_W, Mips::SHLL_S_W, Mips::SHLL_S_W_MM },
  { Mips::SHRAV_PH, Mips::SHRAV_PH, Mips::SHRAV_PH_MM },
  { Mips::SHRAV_QB, Mips::SHRAV_QB, Mips::SHRAV_QB_MMR2 },
  { Mips::SHRAV_R_PH, Mips::SHRAV_R_PH, Mips::SHRAV_R_PH_MM },
  { Mips::SHRAV_R_QB, Mips::SHRAV_R_QB, Mips::SHRAV_R_QB_MMR2 },
  { Mips::SHRAV_R_W, Mips::SHRAV_R_W, Mips::SHRAV_R_W_MM },
  { Mips::SHRA_PH, Mips::SHRA_PH, Mips::SHRA_PH_MM },
  { Mips::SHRA_QB, Mips::SHRA_QB, Mips::SHRA_QB_MMR2 },
  { Mips::SHRA_R_PH, Mips::SHRA_R_PH, Mips::SHRA_R_PH_MM },
  { Mips::SHRA_R_QB, Mips::SHRA_R_QB, Mips::SHRA_R_QB_MMR2 },
  { Mips::SHRA_R_W, Mips::SHRA_R_W, Mips::SHRA_R_W_MM },
  { Mips::SHRLV_PH, Mips::SHRLV_PH, Mips::SHRLV_PH_MMR2 },
  { Mips::SHRLV_QB, Mips::SHRLV_QB, Mips::SHRLV_QB_MM },
  { Mips::SHRL_PH, Mips::SHRL_PH, Mips::SHRL_PH_MMR2 },
  { Mips::SHRL_QB, Mips::SHRL_QB, Mips::SHRL_QB_MM },
  { Mips::SUBQH_PH, Mips::SUBQH_PH, Mips::SUBQH_PH_MMR2 },
  { Mips::SUBQH_R_PH, Mips::SUBQH_R_PH, Mips::SUBQH_R_PH_MMR2 },
  { Mips::SUBQH_R_W, Mips::SUBQH_R_W, Mips::SUBQH_R_W_MMR2 },
  { Mips::SUBQH_W, Mips::SUBQH_W, Mips::SUBQH_W_MMR2 },
  { Mips::SUBQ_PH, Mips::SUBQ_PH, Mips::SUBQ_PH_MM },
  { Mips::SUBQ_S_PH, Mips::SUBQ_S_PH, Mips::SUBQ_S_PH_MM },
  { Mips::SUBQ_S_W, Mips::SUBQ_S_W, Mips::SUBQ_S_W_MM },
  { Mips::SUBUH_QB, Mips::SUBUH_QB, Mips::SUBUH_QB_MMR2 },
  { Mips::SUBUH_R_QB, Mips::SUBUH_R_QB, Mips::SUBUH_R_QB_MMR2 },
  { Mips::SUBU_PH, Mips::SUBU_PH, Mips::SUBU_PH_MMR2 },
  { Mips::SUBU_QB, Mips::SUBU_QB, Mips::SUBU_QB_MM },
  { Mips::SUBU_S_PH, Mips::SUBU_S_PH, Mips::SUBU_S_PH_MMR2 },
  { Mips::SUBU_S_QB, Mips::SUBU_S_QB, Mips::SUBU_S_QB_MM },
  { Mips::SWDSP, Mips::SWDSP, Mips::SWDSP_MM },
}; // End of Dsp2MicroMipsTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 160;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == Dsp2MicroMipsTable[mid][0]) {
      break;
    }
    if (Opcode < Dsp2MicroMipsTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inArch == Arch_dsp)
    return Dsp2MicroMipsTable[mid][1];
  if (inArch == Arch_mmdsp)
    return Dsp2MicroMipsTable[mid][2];
  return -1;}

// MipsR62MicroMipsR6
LLVM_READONLY
int MipsR62MicroMipsR6(uint16_t Opcode, enum Arch inArch) {
static const uint16_t MipsR62MicroMipsR6Table[][3] = {
  { Mips::ADDIUPC, Mips::ADDIUPC, Mips::ADDIUPC_MMR6 },
  { Mips::ALIGN, Mips::ALIGN, Mips::ALIGN_MMR6 },
  { Mips::ALUIPC, Mips::ALUIPC, Mips::ALUIPC_MMR6 },
  { Mips::AUI, Mips::AUI, Mips::AUI_MMR6 },
  { Mips::AUIPC, Mips::AUIPC, Mips::AUIPC_MMR6 },
  { Mips::BALC, Mips::BALC, Mips::BALC_MMR6 },
  { Mips::BC, Mips::BC, Mips::BC_MMR6 },
  { Mips::BEQC, Mips::BEQC, Mips::BEQC_MMR6 },
  { Mips::BEQZALC, Mips::BEQZALC, Mips::BEQZALC_MMR6 },
  { Mips::BEQZC, Mips::BEQZC, Mips::BEQZC_MMR6 },
  { Mips::BGEC, Mips::BGEC, Mips::BGEC_MMR6 },
  { Mips::BGEUC, Mips::BGEUC, Mips::BGEUC_MMR6 },
  { Mips::BGEZALC, Mips::BGEZALC, Mips::BGEZALC_MMR6 },
  { Mips::BGEZC, Mips::BGEZC, Mips::BGEZC_MMR6 },
  { Mips::BGTZALC, Mips::BGTZALC, Mips::BGTZALC_MMR6 },
  { Mips::BGTZC, Mips::BGTZC, Mips::BGTZC_MMR6 },
  { Mips::BITSWAP, Mips::BITSWAP, Mips::BITSWAP_MMR6 },
  { Mips::BLEZALC, Mips::BLEZALC, Mips::BLEZALC_MMR6 },
  { Mips::BLEZC, Mips::BLEZC, Mips::BLEZC_MMR6 },
  { Mips::BLTC, Mips::BLTC, Mips::BLTC_MMR6 },
  { Mips::BLTUC, Mips::BLTUC, Mips::BLTUC_MMR6 },
  { Mips::BLTZALC, Mips::BLTZALC, Mips::BLTZALC_MMR6 },
  { Mips::BLTZC, Mips::BLTZC, Mips::BLTZC_MMR6 },
  { Mips::BNEC, Mips::BNEC, Mips::BNEC_MMR6 },
  { Mips::BNEZALC, Mips::BNEZALC, Mips::BNEZALC_MMR6 },
  { Mips::BNEZC, Mips::BNEZC, Mips::BNEZC_MMR6 },
  { Mips::BNVC, Mips::BNVC, Mips::BNVC_MMR6 },
  { Mips::BOVC, Mips::BOVC, Mips::BOVC_MMR6 },
  { Mips::CACHE_R6, Mips::CACHE_R6, Mips::CACHE_MMR6 },
  { Mips::CLO_R6, Mips::CLO_R6, Mips::CLO_MMR6 },
  { Mips::CLZ_R6, Mips::CLZ_R6, Mips::CLZ_MMR6 },
  { Mips::CMP_EQ_D, Mips::CMP_EQ_D, Mips::CMP_EQ_D_MMR6 },
  { Mips::CMP_EQ_S, Mips::CMP_EQ_S, Mips::CMP_EQ_S_MMR6 },
  { Mips::CMP_F_D, Mips::CMP_F_D, Mips::CMP_AF_D_MMR6 },
  { Mips::CMP_F_S, Mips::CMP_F_S, Mips::CMP_AF_S_MMR6 },
  { Mips::CMP_LE_D, Mips::CMP_LE_D, Mips::CMP_LE_D_MMR6 },
  { Mips::CMP_LE_S, Mips::CMP_LE_S, Mips::CMP_LE_S_MMR6 },
  { Mips::CMP_LT_D, Mips::CMP_LT_D, Mips::CMP_LT_D_MMR6 },
  { Mips::CMP_LT_S, Mips::CMP_LT_S, Mips::CMP_LT_S_MMR6 },
  { Mips::CMP_SAF_D, Mips::CMP_SAF_D, Mips::CMP_SAF_D_MMR6 },
  { Mips::CMP_SAF_S, Mips::CMP_SAF_S, Mips::CMP_SAF_S_MMR6 },
  { Mips::CMP_SEQ_D, Mips::CMP_SEQ_D, Mips::CMP_SEQ_D_MMR6 },
  { Mips::CMP_SEQ_S, Mips::CMP_SEQ_S, Mips::CMP_SEQ_S_MMR6 },
  { Mips::CMP_SLE_D, Mips::CMP_SLE_D, Mips::CMP_SLE_D_MMR6 },
  { Mips::CMP_SLE_S, Mips::CMP_SLE_S, Mips::CMP_SLE_S_MMR6 },
  { Mips::CMP_SLT_D, Mips::CMP_SLT_D, Mips::CMP_SLT_D_MMR6 },
  { Mips::CMP_SLT_S, Mips::CMP_SLT_S, Mips::CMP_SLT_S_MMR6 },
  { Mips::CMP_SUEQ_D, Mips::CMP_SUEQ_D, Mips::CMP_SUEQ_D_MMR6 },
  { Mips::CMP_SUEQ_S, Mips::CMP_SUEQ_S, Mips::CMP_SUEQ_S_MMR6 },
  { Mips::CMP_SULE_D, Mips::CMP_SULE_D, Mips::CMP_SULE_D_MMR6 },
  { Mips::CMP_SULE_S, Mips::CMP_SULE_S, Mips::CMP_SULE_S_MMR6 },
  { Mips::CMP_SULT_D, Mips::CMP_SULT_D, Mips::CMP_SULT_D_MMR6 },
  { Mips::CMP_SULT_S, Mips::CMP_SULT_S, Mips::CMP_SULT_S_MMR6 },
  { Mips::CMP_SUN_D, Mips::CMP_SUN_D, Mips::CMP_SUN_D_MMR6 },
  { Mips::CMP_SUN_S, Mips::CMP_SUN_S, Mips::CMP_SUN_S_MMR6 },
  { Mips::CMP_UEQ_D, Mips::CMP_UEQ_D, Mips::CMP_UEQ_D_MMR6 },
  { Mips::CMP_UEQ_S, Mips::CMP_UEQ_S, Mips::CMP_UEQ_S_MMR6 },
  { Mips::CMP_ULE_D, Mips::CMP_ULE_D, Mips::CMP_ULE_D_MMR6 },
  { Mips::CMP_ULE_S, Mips::CMP_ULE_S, Mips::CMP_ULE_S_MMR6 },
  { Mips::CMP_ULT_D, Mips::CMP_ULT_D, Mips::CMP_ULT_D_MMR6 },
  { Mips::CMP_ULT_S, Mips::CMP_ULT_S, Mips::CMP_ULT_S_MMR6 },
  { Mips::CMP_UN_D, Mips::CMP_UN_D, Mips::CMP_UN_D_MMR6 },
  { Mips::CMP_UN_S, Mips::CMP_UN_S, Mips::CMP_UN_S_MMR6 },
  { Mips::CRC32B, Mips::CRC32B, (uint16_t)-1U },
  { Mips::CRC32CB, Mips::CRC32CB, (uint16_t)-1U },
  { Mips::CRC32CD, Mips::CRC32CD, (uint16_t)-1U },
  { Mips::CRC32CH, Mips::CRC32CH, (uint16_t)-1U },
  { Mips::CRC32CW, Mips::CRC32CW, (uint16_t)-1U },
  { Mips::CRC32D, Mips::CRC32D, (uint16_t)-1U },
  { Mips::CRC32H, Mips::CRC32H, (uint16_t)-1U },
  { Mips::CRC32W, Mips::CRC32W, (uint16_t)-1U },
  { Mips::DIV, Mips::DIV, Mips::DIV_MMR6 },
  { Mips::DIVU, Mips::DIVU, Mips::DIVU_MMR6 },
  { Mips::DVP, Mips::DVP, Mips::DVP_MMR6 },
  { Mips::EVP, Mips::EVP, Mips::EVP_MMR6 },
  { Mips::GINVI, Mips::GINVI, Mips::GINVI_MMR6 },
  { Mips::GINVT, Mips::GINVT, Mips::GINVT_MMR6 },
  { Mips::JIALC, Mips::JIALC, Mips::JIALC_MMR6 },
  { Mips::JIC, Mips::JIC, Mips::JIC_MMR6 },
  { Mips::LSA_R6, Mips::LSA_R6, Mips::LSA_MMR6 },
  { Mips::LWPC, Mips::LWPC, Mips::LWPC_MMR6 },
  { Mips::MOD, Mips::MOD, Mips::MOD_MMR6 },
  { Mips::MODU, Mips::MODU, Mips::MODU_MMR6 },
  { Mips::MUH, Mips::MUH, Mips::MUH_MMR6 },
  { Mips::MUHU, Mips::MUHU, Mips::MUHU_MMR6 },
  { Mips::MULU, Mips::MULU, Mips::MULU_MMR6 },
  { Mips::MUL_R6, Mips::MUL_R6, Mips::MUL_MMR6 },
  { Mips::PREF_R6, Mips::PREF_R6, Mips::PREF_MMR6 },
  { Mips::SELEQZ, Mips::SELEQZ, Mips::SELEQZ_MMR6 },
  { Mips::SELEQZ_D, Mips::SELEQZ_D, Mips::SELEQZ_D_MMR6 },
  { Mips::SELEQZ_S, Mips::SELEQZ_S, Mips::SELEQZ_S_MMR6 },
  { Mips::SELNEZ, Mips::SELNEZ, Mips::SELNEZ_MMR6 },
  { Mips::SELNEZ_D, Mips::SELNEZ_D, Mips::SELNEZ_D_MMR6 },
  { Mips::SELNEZ_S, Mips::SELNEZ_S, Mips::SELNEZ_S_MMR6 },
  { Mips::SEL_D, Mips::SEL_D, Mips::SEL_D_MMR6 },
  { Mips::SEL_S, Mips::SEL_S, Mips::SEL_S_MMR6 },
}; // End of MipsR62MicroMipsR6Table

  unsigned mid;
  unsigned start = 0;
  unsigned end = 96;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == MipsR62MicroMipsR6Table[mid][0]) {
      break;
    }
    if (Opcode < MipsR62MicroMipsR6Table[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inArch == Arch_mipsr6)
    return MipsR62MicroMipsR6Table[mid][1];
  if (inArch == Arch_micromipsr6)
    return MipsR62MicroMipsR6Table[mid][2];
  return -1;}

// Std2MicroMips
LLVM_READONLY
int Std2MicroMips(uint16_t Opcode, enum Arch inArch) {
static const uint16_t Std2MicroMipsTable[][3] = {
  { Mips::ADD, Mips::ADD, Mips::ADD_MM },
  { Mips::ADDi, Mips::ADDi, Mips::ADDi_MM },
  { Mips::ADDiu, Mips::ADDiu, Mips::ADDiu_MM },
  { Mips::ADDu, Mips::ADDu, Mips::ADDu_MM },
  { Mips::AND, Mips::AND, Mips::AND_MM },
  { Mips::ANDi, Mips::ANDi, Mips::ANDi_MM },
  { Mips::BC1F, Mips::BC1F, Mips::BC1F_MM },
  { Mips::BC1FL, Mips::BC1FL, (uint16_t)-1U },
  { Mips::BC1T, Mips::BC1T, Mips::BC1T_MM },
  { Mips::BC1TL, Mips::BC1TL, (uint16_t)-1U },
  { Mips::BEQ, Mips::BEQ, Mips::BEQ_MM },
  { Mips::BEQL, Mips::BEQL, (uint16_t)-1U },
  { Mips::BGEZ, Mips::BGEZ, Mips::BGEZ_MM },
  { Mips::BGEZAL, Mips::BGEZAL, Mips::BGEZAL_MM },
  { Mips::BGEZALL, Mips::BGEZALL, (uint16_t)-1U },
  { Mips::BGEZL, Mips::BGEZL, (uint16_t)-1U },
  { Mips::BGTZ, Mips::BGTZ, Mips::BGTZ_MM },
  { Mips::BGTZL, Mips::BGTZL, (uint16_t)-1U },
  { Mips::BLEZ, Mips::BLEZ, Mips::BLEZ_MM },
  { Mips::BLEZL, Mips::BLEZL, (uint16_t)-1U },
  { Mips::BLTZ, Mips::BLTZ, Mips::BLTZ_MM },
  { Mips::BLTZAL, Mips::BLTZAL, Mips::BLTZAL_MM },
  { Mips::BLTZALL, Mips::BLTZALL, (uint16_t)-1U },
  { Mips::BLTZL, Mips::BLTZL, (uint16_t)-1U },
  { Mips::BNE, Mips::BNE, Mips::BNE_MM },
  { Mips::BNEL, Mips::BNEL, (uint16_t)-1U },
  { Mips::BREAK, Mips::BREAK, Mips::BREAK_MM },
  { Mips::CACHE, Mips::CACHE, Mips::CACHE_MM },
  { Mips::CACHEE, Mips::CACHEE, Mips::CACHEE_MM },
  { Mips::CEIL_W_D32, Mips::CEIL_W_D32, Mips::CEIL_W_MM },
  { Mips::CEIL_W_S, Mips::CEIL_W_S, Mips::CEIL_W_S_MM },
  { Mips::CFC1, Mips::CFC1, Mips::CFC1_MM },
  { Mips::CLO, Mips::CLO, Mips::CLO_MM },
  { Mips::CLZ, Mips::CLZ, Mips::CLZ_MM },
  { Mips::CTC1, Mips::CTC1, Mips::CTC1_MM },
  { Mips::CVT_D32_S, Mips::CVT_D32_S, Mips::CVT_D32_S_MM },
  { Mips::CVT_D32_W, Mips::CVT_D32_W, Mips::CVT_D32_W_MM },
  { Mips::CVT_L_D64, Mips::CVT_L_D64, Mips::CVT_L_D64_MM },
  { Mips::CVT_L_S, Mips::CVT_L_S, Mips::CVT_L_S_MM },
  { Mips::CVT_S_D32, Mips::CVT_S_D32, Mips::CVT_S_D32_MM },
  { Mips::CVT_S_W, Mips::CVT_S_W, Mips::CVT_S_W_MM },
  { Mips::CVT_W_D32, Mips::CVT_W_D32, Mips::CVT_W_D32_MM },
  { Mips::CVT_W_S, Mips::CVT_W_S, Mips::CVT_W_S_MM },
  { Mips::C_EQ_D32, Mips::C_EQ_D32, Mips::C_EQ_D32_MM },
  { Mips::C_EQ_D64, Mips::C_EQ_D64, Mips::C_EQ_D64_MM },
  { Mips::C_EQ_S, Mips::C_EQ_S, Mips::C_EQ_S_MM },
  { Mips::C_F_D32, Mips::C_F_D32, Mips::C_F_D32_MM },
  { Mips::C_F_D64, Mips::C_F_D64, Mips::C_F_D64_MM },
  { Mips::C_F_S, Mips::C_F_S, Mips::C_F_S_MM },
  { Mips::C_LE_D32, Mips::C_LE_D32, Mips::C_LE_D32_MM },
  { Mips::C_LE_D64, Mips::C_LE_D64, Mips::C_LE_D64_MM },
  { Mips::C_LE_S, Mips::C_LE_S, Mips::C_LE_S_MM },
  { Mips::C_LT_D32, Mips::C_LT_D32, Mips::C_LT_D32_MM },
  { Mips::C_LT_D64, Mips::C_LT_D64, Mips::C_LT_D64_MM },
  { Mips::C_LT_S, Mips::C_LT_S, Mips::C_LT_S_MM },
  { Mips::C_NGE_D32, Mips::C_NGE_D32, Mips::C_NGE_D32_MM },
  { Mips::C_NGE_D64, Mips::C_NGE_D64, Mips::C_NGE_D64_MM },
  { Mips::C_NGE_S, Mips::C_NGE_S, Mips::C_NGE_S_MM },
  { Mips::C_NGLE_D32, Mips::C_NGLE_D32, Mips::C_NGLE_D32_MM },
  { Mips::C_NGLE_D64, Mips::C_NGLE_D64, Mips::C_NGLE_D64_MM },
  { Mips::C_NGLE_S, Mips::C_NGLE_S, Mips::C_NGLE_S_MM },
  { Mips::C_NGL_D32, Mips::C_NGL_D32, Mips::C_NGL_D32_MM },
  { Mips::C_NGL_D64, Mips::C_NGL_D64, Mips::C_NGL_D64_MM },
  { Mips::C_NGL_S, Mips::C_NGL_S, Mips::C_NGL_S_MM },
  { Mips::C_NGT_D32, Mips::C_NGT_D32, Mips::C_NGT_D32_MM },
  { Mips::C_NGT_D64, Mips::C_NGT_D64, Mips::C_NGT_D64_MM },
  { Mips::C_NGT_S, Mips::C_NGT_S, Mips::C_NGT_S_MM },
  { Mips::C_OLE_D32, Mips::C_OLE_D32, Mips::C_OLE_D32_MM },
  { Mips::C_OLE_D64, Mips::C_OLE_D64, Mips::C_OLE_D64_MM },
  { Mips::C_OLE_S, Mips::C_OLE_S, Mips::C_OLE_S_MM },
  { Mips::C_OLT_D32, Mips::C_OLT_D32, Mips::C_OLT_D32_MM },
  { Mips::C_OLT_D64, Mips::C_OLT_D64, Mips::C_OLT_D64_MM },
  { Mips::C_OLT_S, Mips::C_OLT_S, Mips::C_OLT_S_MM },
  { Mips::C_SEQ_D32, Mips::C_SEQ_D32, Mips::C_SEQ_D32_MM },
  { Mips::C_SEQ_D64, Mips::C_SEQ_D64, Mips::C_SEQ_D64_MM },
  { Mips::C_SEQ_S, Mips::C_SEQ_S, Mips::C_SEQ_S_MM },
  { Mips::C_SF_D32, Mips::C_SF_D32, Mips::C_SF_D32_MM },
  { Mips::C_SF_D64, Mips::C_SF_D64, Mips::C_SF_D64_MM },
  { Mips::C_SF_S, Mips::C_SF_S, Mips::C_SF_S_MM },
  { Mips::C_UEQ_D32, Mips::C_UEQ_D32, Mips::C_UEQ_D32_MM },
  { Mips::C_UEQ_D64, Mips::C_UEQ_D64, Mips::C_UEQ_D64_MM },
  { Mips::C_UEQ_S, Mips::C_UEQ_S, Mips::C_UEQ_S_MM },
  { Mips::C_ULE_D32, Mips::C_ULE_D32, Mips::C_ULE_D32_MM },
  { Mips::C_ULE_D64, Mips::C_ULE_D64, Mips::C_ULE_D64_MM },
  { Mips::C_ULE_S, Mips::C_ULE_S, Mips::C_ULE_S_MM },
  { Mips::C_ULT_D32, Mips::C_ULT_D32, Mips::C_ULT_D32_MM },
  { Mips::C_ULT_D64, Mips::C_ULT_D64, Mips::C_ULT_D64_MM },
  { Mips::C_ULT_S, Mips::C_ULT_S, Mips::C_ULT_S_MM },
  { Mips::C_UN_D32, Mips::C_UN_D32, Mips::C_UN_D32_MM },
  { Mips::C_UN_D64, Mips::C_UN_D64, Mips::C_UN_D64_MM },
  { Mips::C_UN_S, Mips::C_UN_S, Mips::C_UN_S_MM },
  { Mips::DERET, Mips::DERET, Mips::DERET_MM },
  { Mips::DI, Mips::DI, Mips::DI_MM },
  { Mips::EHB, Mips::EHB, Mips::EHB_MM },
  { Mips::EI, Mips::EI, Mips::EI_MM },
  { Mips::ERET, Mips::ERET, Mips::ERET_MM },
  { Mips::ERETNC, Mips::ERETNC, (uint16_t)-1U },
  { Mips::EXT, Mips::EXT, Mips::EXT_MM },
  { Mips::FABS_D32, Mips::FABS_D32, Mips::FABS_D32_MM },
  { Mips::FABS_S, Mips::FABS_S, Mips::FABS_S_MM },
  { Mips::FADD_D32, Mips::FADD_D32, Mips::FADD_D32_MM },
  { Mips::FADD_S, Mips::FADD_S, Mips::FADD_S_MM },
  { Mips::FCMP_D32, Mips::FCMP_D32, Mips::FCMP_D32_MM },
  { Mips::FCMP_S32, Mips::FCMP_S32, Mips::FCMP_S32_MM },
  { Mips::FDIV_D32, Mips::FDIV_D32, Mips::FDIV_D32_MM },
  { Mips::FDIV_S, Mips::FDIV_S, Mips::FDIV_S_MM },
  { Mips::FLOOR_W_D32, Mips::FLOOR_W_D32, Mips::FLOOR_W_MM },
  { Mips::FLOOR_W_S, Mips::FLOOR_W_S, Mips::FLOOR_W_S_MM },
  { Mips::FMOV_D32, Mips::FMOV_D32, Mips::FMOV_D32_MM },
  { Mips::FMOV_S, Mips::FMOV_S, Mips::FMOV_S_MM },
  { Mips::FMUL_D32, Mips::FMUL_D32, Mips::FMUL_D32_MM },
  { Mips::FMUL_S, Mips::FMUL_S, Mips::FMUL_S_MM },
  { Mips::FNEG_D32, Mips::FNEG_D32, Mips::FNEG_D32_MM },
  { Mips::FNEG_S, Mips::FNEG_S, Mips::FNEG_S_MM },
  { Mips::FSQRT_D32, Mips::FSQRT_D32, Mips::FSQRT_D32_MM },
  { Mips::FSQRT_S, Mips::FSQRT_S, Mips::FSQRT_S_MM },
  { Mips::FSUB_D32, Mips::FSUB_D32, Mips::FSUB_D32_MM },
  { Mips::FSUB_S, Mips::FSUB_S, Mips::FSUB_S_MM },
  { Mips::HYPCALL, Mips::HYPCALL, Mips::HYPCALL_MM },
  { Mips::INS, Mips::INS, Mips::INS_MM },
  { Mips::J, Mips::J, Mips::J_MM },
  { Mips::JAL, Mips::JAL, Mips::JAL_MM },
  { Mips::JALX, Mips::JALX, Mips::JALX_MM },
  { Mips::JR, Mips::JR, Mips::JR_MM },
  { Mips::LB, Mips::LB, Mips::LB_MM },
  { Mips::LBE, Mips::LBE, Mips::LBE_MM },
  { Mips::LBu, Mips::LBu, Mips::LBu_MM },
  { Mips::LBuE, Mips::LBuE, Mips::LBuE_MM },
  { Mips::LDC1, Mips::LDC1, Mips::LDC1_MM },
  { Mips::LEA_ADDiu, Mips::LEA_ADDiu, Mips::LEA_ADDiu_MM },
  { Mips::LH, Mips::LH, Mips::LH_MM },
  { Mips::LHE, Mips::LHE, Mips::LHE_MM },
  { Mips::LHu, Mips::LHu, Mips::LHu_MM },
  { Mips::LHuE, Mips::LHuE, Mips::LHuE_MM },
  { Mips::LLE, Mips::LLE, Mips::LLE_MM },
  { Mips::LUXC1, Mips::LUXC1, Mips::LUXC1_MM },
  { Mips::LUi, Mips::LUi, Mips::LUi_MM },
  { Mips::LW, Mips::LW, Mips::LW_MM },
  { Mips::LWC1, Mips::LWC1, Mips::LWC1_MM },
  { Mips::LWE, Mips::LWE, Mips::LWE_MM },
  { Mips::LWL, Mips::LWL, Mips::LWL_MM },
  { Mips::LWLE, Mips::LWLE, Mips::LWLE_MM },
  { Mips::LWR, Mips::LWR, Mips::LWR_MM },
  { Mips::LWRE, Mips::LWRE, Mips::LWRE_MM },
  { Mips::LWXC1, Mips::LWXC1, Mips::LWXC1_MM },
  { Mips::LWu, Mips::LWu, Mips::LWU_MM },
  { Mips::MADD, Mips::MADD, Mips::MADD_MM },
  { Mips::MADDU, Mips::MADDU, Mips::MADDU_MM },
  { Mips::MADD_D32, Mips::MADD_D32, Mips::MADD_D32_MM },
  { Mips::MADD_S, Mips::MADD_S, Mips::MADD_S_MM },
  { Mips::MFC1, Mips::MFC1, Mips::MFC1_MM },
  { Mips::MFGC0, Mips::MFGC0, Mips::MFGC0_MM },
  { Mips::MFHC1_D32, Mips::MFHC1_D32, Mips::MFHC1_D32_MM },
  { Mips::MFHGC0, Mips::MFHGC0, Mips::MFHGC0_MM },
  { Mips::MFHI, Mips::MFHI, Mips::MFHI_MM },
  { Mips::MFLO, Mips::MFLO, Mips::MFLO_MM },
  { Mips::MOVF_D32, Mips::MOVF_D32, Mips::MOVF_D32_MM },
  { Mips::MOVF_I, Mips::MOVF_I, Mips::MOVF_I_MM },
  { Mips::MOVF_S, Mips::MOVF_S, Mips::MOVF_S_MM },
  { Mips::MOVN_I_D32, Mips::MOVN_I_D32, Mips::MOVN_I_D32_MM },
  { Mips::MOVN_I_I, Mips::MOVN_I_I, Mips::MOVN_I_MM },
  { Mips::MOVN_I_S, Mips::MOVN_I_S, Mips::MOVN_I_S_MM },
  { Mips::MOVT_D32, Mips::MOVT_D32, Mips::MOVT_D32_MM },
  { Mips::MOVT_I, Mips::MOVT_I, Mips::MOVT_I_MM },
  { Mips::MOVT_S, Mips::MOVT_S, Mips::MOVT_S_MM },
  { Mips::MOVZ_I_D32, Mips::MOVZ_I_D32, Mips::MOVZ_I_D32_MM },
  { Mips::MOVZ_I_I, Mips::MOVZ_I_I, Mips::MOVZ_I_MM },
  { Mips::MOVZ_I_S, Mips::MOVZ_I_S, Mips::MOVZ_I_S_MM },
  { Mips::MSUB, Mips::MSUB, Mips::MSUB_MM },
  { Mips::MSUBU, Mips::MSUBU, Mips::MSUBU_MM },
  { Mips::MSUB_D32, Mips::MSUB_D32, Mips::MSUB_D32_MM },
  { Mips::MSUB_S, Mips::MSUB_S, Mips::MSUB_S_MM },
  { Mips::MTC1, Mips::MTC1, Mips::MTC1_MM },
  { Mips::MTGC0, Mips::MTGC0, Mips::MTGC0_MM },
  { Mips::MTHC1_D32, Mips::MTHC1_D32, Mips::MTHC1_D32_MM },
  { Mips::MTHGC0, Mips::MTHGC0, Mips::MTHGC0_MM },
  { Mips::MTHI, Mips::MTHI, Mips::MTHI_MM },
  { Mips::MTLO, Mips::MTLO, Mips::MTLO_MM },
  { Mips::MUL, Mips::MUL, Mips::MUL_MM },
  { Mips::MULT, Mips::MULT, Mips::MULT_MM },
  { Mips::MULTu, Mips::MULTu, Mips::MULTu_MM },
  { Mips::NMADD_D32, Mips::NMADD_D32, Mips::NMADD_D32_MM },
  { Mips::NMADD_S, Mips::NMADD_S, Mips::NMADD_S_MM },
  { Mips::NMSUB_D32, Mips::NMSUB_D32, Mips::NMSUB_D32_MM },
  { Mips::NMSUB_S, Mips::NMSUB_S, Mips::NMSUB_S_MM },
  { Mips::NOR, Mips::NOR, Mips::NOR_MM },
  { Mips::OR, Mips::OR, Mips::OR_MM },
  { Mips::ORi, Mips::ORi, Mips::ORi_MM },
  { Mips::PAUSE, Mips::PAUSE, Mips::PAUSE_MM },
  { Mips::PREF, Mips::PREF, Mips::PREF_MM },
  { Mips::PREFE, Mips::PREFE, Mips::PREFE_MM },
  { Mips::RDHWR, Mips::RDHWR, Mips::RDHWR_MM },
  { Mips::RECIP_D32, Mips::RECIP_D32, Mips::RECIP_D32_MM },
  { Mips::RECIP_D64, Mips::RECIP_D64, Mips::RECIP_D64_MM },
  { Mips::RECIP_S, Mips::RECIP_S, Mips::RECIP_S_MM },
  { Mips::ROTR, Mips::ROTR, Mips::ROTR_MM },
  { Mips::ROTRV, Mips::ROTRV, Mips::ROTRV_MM },
  { Mips::ROUND_W_D32, Mips::ROUND_W_D32, Mips::ROUND_W_MM },
  { Mips::ROUND_W_S, Mips::ROUND_W_S, Mips::ROUND_W_S_MM },
  { Mips::RSQRT_D32, Mips::RSQRT_D32, Mips::RSQRT_D32_MM },
  { Mips::RSQRT_D64, Mips::RSQRT_D64, Mips::RSQRT_D64_MM },
  { Mips::RSQRT_S, Mips::RSQRT_S, Mips::RSQRT_S_MM },
  { Mips::SB, Mips::SB, Mips::SB_MM },
  { Mips::SBE, Mips::SBE, Mips::SBE_MM },
  { Mips::SCE, Mips::SCE, Mips::SCE_MM },
  { Mips::SDBBP, Mips::SDBBP, Mips::SDBBP_MM },
  { Mips::SDC1, Mips::SDC1, Mips::SDC1_MM },
  { Mips::SDIV, Mips::SDIV, Mips::SDIV_MM },
  { Mips::SEB, Mips::SEB, Mips::SEB_MM },
  { Mips::SEH, Mips::SEH, Mips::SEH_MM },
  { Mips::SH, Mips::SH, Mips::SH_MM },
  { Mips::SHE, Mips::SHE, Mips::SHE_MM },
  { Mips::SLL, Mips::SLL, Mips::SLL_MM },
  { Mips::SLLV, Mips::SLLV, Mips::SLLV_MM },
  { Mips::SLT, Mips::SLT, Mips::SLT_MM },
  { Mips::SLTi, Mips::SLTi, Mips::SLTi_MM },
  { Mips::SLTiu, Mips::SLTiu, Mips::SLTiu_MM },
  { Mips::SLTu, Mips::SLTu, Mips::SLTu_MM },
  { Mips::SRA, Mips::SRA, Mips::SRA_MM },
  { Mips::SRAV, Mips::SRAV, Mips::SRAV_MM },
  { Mips::SRL, Mips::SRL, Mips::SRL_MM },
  { Mips::SRLV, Mips::SRLV, Mips::SRLV_MM },
  { Mips::SSNOP, Mips::SSNOP, Mips::SSNOP_MM },
  { Mips::SUB, Mips::SUB, Mips::SUB_MM },
  { Mips::SUBu, Mips::SUBu, Mips::SUBu_MM },
  { Mips::SUXC1, Mips::SUXC1, Mips::SUXC1_MM },
  { Mips::SW, Mips::SW, Mips::SW_MM },
  { Mips::SWC1, Mips::SWC1, Mips::SWC1_MM },
  { Mips::SWE, Mips::SWE, Mips::SWE_MM },
  { Mips::SWL, Mips::SWL, Mips::SWL_MM },
  { Mips::SWLE, Mips::SWLE, Mips::SWLE_MM },
  { Mips::SWR, Mips::SWR, Mips::SWR_MM },
  { Mips::SWRE, Mips::SWRE, Mips::SWRE_MM },
  { Mips::SWXC1, Mips::SWXC1, Mips::SWXC1_MM },
  { Mips::SYNC, Mips::SYNC, Mips::SYNC_MM },
  { Mips::SYNCI, Mips::SYNCI, Mips::SYNCI_MM },
  { Mips::SYSCALL, Mips::SYSCALL, Mips::SYSCALL_MM },
  { Mips::TEQ, Mips::TEQ, Mips::TEQ_MM },
  { Mips::TEQI, Mips::TEQI, Mips::TEQI_MM },
  { Mips::TGE, Mips::TGE, Mips::TGE_MM },
  { Mips::TGEI, Mips::TGEI, Mips::TGEI_MM },
  { Mips::TGEIU, Mips::TGEIU, Mips::TGEIU_MM },
  { Mips::TGEU, Mips::TGEU, Mips::TGEU_MM },
  { Mips::TLBGINV, Mips::TLBGINV, Mips::TLBGINV_MM },
  { Mips::TLBGINVF, Mips::TLBGINVF, Mips::TLBGINVF_MM },
  { Mips::TLBGP, Mips::TLBGP, Mips::TLBGP_MM },
  { Mips::TLBGR, Mips::TLBGR, Mips::TLBGR_MM },
  { Mips::TLBGWI, Mips::TLBGWI, Mips::TLBGWI_MM },
  { Mips::TLBGWR, Mips::TLBGWR, Mips::TLBGWR_MM },
  { Mips::TLBP, Mips::TLBP, Mips::TLBP_MM },
  { Mips::TLBR, Mips::TLBR, Mips::TLBR_MM },
  { Mips::TLBWI, Mips::TLBWI, Mips::TLBWI_MM },
  { Mips::TLBWR, Mips::TLBWR, Mips::TLBWR_MM },
  { Mips::TLT, Mips::TLT, Mips::TLT_MM },
  { Mips::TLTI, Mips::TLTI, Mips::TLTI_MM },
  { Mips::TLTU, Mips::TLTU, Mips::TLTU_MM },
  { Mips::TNE, Mips::TNE, Mips::TNE_MM },
  { Mips::TNEI, Mips::TNEI, Mips::TNEI_MM },
  { Mips::TRUNC_W_D32, Mips::TRUNC_W_D32, Mips::TRUNC_W_MM },
  { Mips::TRUNC_W_S, Mips::TRUNC_W_S, Mips::TRUNC_W_S_MM },
  { Mips::TTLTIU, Mips::TTLTIU, Mips::TLTIU_MM },
  { Mips::UDIV, Mips::UDIV, Mips::UDIV_MM },
  { Mips::WAIT, Mips::WAIT, Mips::WAIT_MM },
  { Mips::WSBH, Mips::WSBH, Mips::WSBH_MM },
  { Mips::XOR, Mips::XOR, Mips::XOR_MM },
  { Mips::XORi, Mips::XORi, Mips::XORi_MM },
}; // End of Std2MicroMipsTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 266;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == Std2MicroMipsTable[mid][0]) {
      break;
    }
    if (Opcode < Std2MicroMipsTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inArch == Arch_se)
    return Std2MicroMipsTable[mid][1];
  if (inArch == Arch_micromips)
    return Std2MicroMipsTable[mid][2];
  return -1;}

// Std2MicroMipsR6
LLVM_READONLY
int Std2MicroMipsR6(uint16_t Opcode, enum Arch inArch) {
static const uint16_t Std2MicroMipsR6Table[][3] = {
  { Mips::ADD, Mips::ADD, Mips::ADD_MMR6 },
  { Mips::ADDiu, Mips::ADDiu, Mips::ADDIU_MMR6 },
  { Mips::ADDu, Mips::ADDu, Mips::ADDU_MMR6 },
  { Mips::AND, Mips::AND, Mips::AND_MMR6 },
  { Mips::ANDi, Mips::ANDi, Mips::ANDI_MMR6 },
  { Mips::BREAK, Mips::BREAK, Mips::BREAK_MMR6 },
  { Mips::CEIL_W_D64, Mips::CEIL_W_D64, Mips::CEIL_W_D_MMR6 },
  { Mips::CEIL_W_S, Mips::CEIL_W_S, Mips::CEIL_W_S_MMR6 },
  { Mips::CVT_W_D64, Mips::CVT_W_D64, (uint16_t)-1U },
  { Mips::DI, Mips::DI, Mips::DI_MMR6 },
  { Mips::EI, Mips::EI, Mips::EI_MMR6 },
  { Mips::EXT, Mips::EXT, Mips::EXT_MMR6 },
  { Mips::FABS_D64, Mips::FABS_D64, (uint16_t)-1U },
  { Mips::FLOOR_W_D64, Mips::FLOOR_W_D64, Mips::FLOOR_W_D_MMR6 },
  { Mips::FLOOR_W_S, Mips::FLOOR_W_S, Mips::FLOOR_W_S_MMR6 },
  { Mips::FMOV_D64, Mips::FMOV_D64, Mips::FMOV_D_MMR6 },
  { Mips::FNEG_D64, Mips::FNEG_D64, (uint16_t)-1U },
  { Mips::FSQRT_D64, Mips::FSQRT_D64, (uint16_t)-1U },
  { Mips::FSQRT_S, Mips::FSQRT_S, (uint16_t)-1U },
  { Mips::INS, Mips::INS, Mips::INS_MMR6 },
  { Mips::LDC1, Mips::LDC1, (uint16_t)-1U },
  { Mips::LDC164, Mips::LDC164, Mips::LDC1_D64_MMR6 },
  { Mips::LDC2, Mips::LDC2, Mips::LDC2_MMR6 },
  { Mips::LW, Mips::LW, Mips::LW_MMR6 },
  { Mips::LWC2, Mips::LWC2, Mips::LWC2_MMR6 },
  { Mips::MFC1, Mips::MFC1, Mips::MFC1_MMR6 },
  { Mips::MTC1, Mips::MTC1, Mips::MTC1_MMR6 },
  { Mips::MTHC1_D32, Mips::MTHC1_D32, (uint16_t)-1U },
  { Mips::NOR, Mips::NOR, Mips::NOR_MMR6 },
  { Mips::OR, Mips::OR, Mips::OR_MMR6 },
  { Mips::ORi, Mips::ORi, Mips::ORI_MMR6 },
  { Mips::PAUSE, Mips::PAUSE, Mips::PAUSE_MMR6 },
  { Mips::ROUND_W_D64, Mips::ROUND_W_D64, Mips::ROUND_W_D_MMR6 },
  { Mips::ROUND_W_S, Mips::ROUND_W_S, Mips::ROUND_W_S_MMR6 },
  { Mips::SB, Mips::SB, Mips::SB_MMR6 },
  { Mips::SDC164, Mips::SDC164, Mips::SDC1_D64_MMR6 },
  { Mips::SDC2, Mips::SDC2, Mips::SDC2_MMR6 },
  { Mips::SEB, Mips::SEB, (uint16_t)-1U },
  { Mips::SEH, Mips::SEH, (uint16_t)-1U },
  { Mips::SSNOP, Mips::SSNOP, Mips::SSNOP_MMR6 },
  { Mips::SUB, Mips::SUB, Mips::SUB_MMR6 },
  { Mips::SUBu, Mips::SUBu, Mips::SUBU_MMR6 },
  { Mips::SW, Mips::SW, Mips::SW_MMR6 },
  { Mips::SWC2, Mips::SWC2, Mips::SWC2_MMR6 },
  { Mips::SYNC, Mips::SYNC, Mips::SYNC_MMR6 },
  { Mips::SYNCI, Mips::SYNCI, Mips::SYNCI_MMR6 },
  { Mips::TRUNC_W_D64, Mips::TRUNC_W_D64, Mips::TRUNC_W_D_MMR6 },
  { Mips::TRUNC_W_S, Mips::TRUNC_W_S, Mips::TRUNC_W_S_MMR6 },
  { Mips::WAIT, Mips::WAIT, Mips::WAIT_MMR6 },
  { Mips::XOR, Mips::XOR, Mips::XOR_MMR6 },
  { Mips::XORi, Mips::XORi, Mips::XORI_MMR6 },
}; // End of Std2MicroMipsR6Table

  unsigned mid;
  unsigned start = 0;
  unsigned end = 51;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == Std2MicroMipsR6Table[mid][0]) {
      break;
    }
    if (Opcode < Std2MicroMipsR6Table[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inArch == Arch_se)
    return Std2MicroMipsR6Table[mid][1];
  if (inArch == Arch_micromipsr6)
    return Std2MicroMipsR6Table[mid][2];
  return -1;}

} // end namespace Mips
} // end namespace llvm
#endif // GET_INSTRMAP_INFO

